02/17/2017  pointer_info, pin

Syntax as a command:  pin virtual_pointer {-control_args}


Syntax as an active function:  [pin virtual_pointer {-control_args}]


Function: displays information about a pointer value -

  reference_name$entryname pointed to;
  objectname$entryname or objectname$offset within a bound segment;
  ring_0_segment|offset for an inner-ring pointer.

Additional information about the pointer value may be displayed with
the pointer_info command.


Arguments:
virtual_ptr
   is a character string representing the pointer value to be
   interpreted.  For a list of accepted character representations,
   see: virtual_pointers.gi.info.
-location virtual_ptr, -loc virtual_ptr
   is a character string representing the location of the pointer
   storage to be interpreted.  This form is useful when you know
   where the pointer is stored, rather than its value.  For example,
   when interpreting an unsnapped link in the linkage section of an
   object segment, giving the location of this link provides clues to
   obtaining its link definition.


Control arguments:
-all, -a
   the command displays additional information returned by the
   interpret_ptr_ subroutine regarding the pointer.  Normally, only
   a brief interpretation of the pointer is displayed by the command,
   or returned by the active function.


Notes:
The pointer value must reside at an even-word location, and include
either an ITS modifier (octal 43) or a Fault_Tag_2 (unsnapped link,
octal 46) modifier ending the first word of the pointer word pair.
The interpret_ptr_ subroutine verifies these requirements before
interpreting the pointer value.


List of examples:
When dumping contents of an object segment, you wish to investigate a
pair of words that looks like an unsnapped link points, to learn what
the snapped link would reference.

 dump_segment <tests>hello 100 20
 000100 000000000000 000000000000 000000000000 000045000000
 000104 000000000000 000000000000 000000000000 000000000000
 000110 000010000014 000000000000 777770000046 000021000000
 000114 777766000046 000027000000 000000000001 163171155142
 r 21:41 0.057 0


Offset 114 in this file is a word ending with the unsnapped link
modifier (octal 46).  To ask for information about this possible
pointer.

 pin -loc <tests>hello|114
  For pointer: 77766|27
    information:     ioa_$nnl
 r 21:42 0.031 0


Use -all to obtain more information.

 pin -loc <tests>hello|114 -all
  For pointer: 77766|27
    information:     ioa_$nnl

    octal pointer:   777766000046 000027000000
    comment:         (unsnapped link)
    segment:         ioa_
    entryn:          $nnl
 r 21:42 0.051 0


Obtain information about segment 75.

 pin 75|0
  For pointer: 75|0
    information:     restart_fault$0 (ring 0)
 r 21:57 0.053 0


Obtain information about the fault_vector segment.

 pin fault_vector$0
  For pointer: 4|0
    information:     fault_vector$0 (ring 0)
 r 21:59 0.053 0
