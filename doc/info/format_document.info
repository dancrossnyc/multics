10/20/86  format_document, fdoc

Syntax as a command:  fdoc path {-control_args}


Function:  formats text segments.


Arguments:
path
   is the pathname of an input segment or multisegment file.  The
   suffix fdocin must be the last component of the entryname; however
   the suffix need not be supplied in the command line.


Control arguments:
-hyphenate {n}, -hph {n}
   changes the hyphenate mode from off to on.  N is the length of the
   smallest separated word part; its default value is 2.  (Default is
   off)
-indent {n}, -ind {n}
   indents the output n spaces from the left margin.  This space is in
   addition to any indention established by the usage of the indent
   control line within the text of the input file.
-no_hyphenate, -nph
   changes the hyphenate mode to off.  (Default)


-output_file {path}, -of {path}
   directs the output to a file instead of to the user's terminal.  If
   path is not given, then the output is written to an output file
   whose name is formed by replacing the fdocin suffix of the input
   file entry name with the fdocout suffix.  (Default is off.)
-page_numbers, -pgno
   ends each page with two blank lines and a centered page number.
   (Default is off.)


List of control lines:
   .alb; align-both, format break
      align the text at both the left and right margins as adjusted by
      the indention values.  Filling must be enabled for this alignment
      to operate.  If filling is disabled, .alb has the effect of .all.
      This is the default alignment mode.
   .all; align-left, format break
      align the text on the left margin as adjusted by the left
      indention value.  Filling has no effect on this alignment.
   .brf; break-format, format break
      finish the current output line by formatting any pending text as
      a short line.
   .brp; break-page, page break
      finish the current page, formatting any pending text as a short
      line.


   .fif; fill-off, format break
      disable filling and retain lines in the output file as they are
      in the input file no matter how long or short.
   .fin; fill-on, format break
      enable filling and restructure the input file lines to the
      current line length for the output file by taking a word or words
      from the next line in order to fill the line as close as possible
      to the current line length.  If a line in the input file is
      longer than the current line length, move a word or words to the
      next line, etc.  (See the description of the .alb and .all
      control lines.)  (Default)


   .hy; hyphenate-default, no break
      enable hyphenation according to the initial default and syllable
      size as set with the -hyphenate control argument for this
      invocation of the Formatter.  If no syllable size is given with
      the control argument, then the default size is used.  If the
      control argument is not given, then the initial default is off.
      (The default syllable size is 2.)
   .hyf; hyphenate-off, no break
      disable hyphenation.


   .hyn {#}; hyphenate-on, no break
      enable hyphenation and set the syllable size according to the
      given parameter.  The parameter is given as an unsigned integer
      and specifies the number of characters in the smallest allowed
      hyphenated syllable.  If the parameter is not given, then the
      default syllable size is used.  The default syllable size is the
      size given with the -hyphenate control argument for this
      invocation of the Formatter.  (If no size is given with the
      control argument or the control argument is not given, the
      default syllable size is 2.)


   .in {n}, .inl {n}; indent-left, format break
      set the indention for the left margin according to the value of
      the parameter.  The default value is 0.
      If it is given as an unsigned number, set the indention to the
      value given.
      If it is given as a signed number, change the indention by the
      amount given.


   .pdl {n}; page-define-length, no break
      sets the page length.  If n is given with a plus or minus sign,
      then n is added to or subtracted from the current page length.
      If n is given without a plus or minus sign, the page length is
      changed to n.  The format_document command inserts blank lines at
      the top and bottom of each page, so be careful not to set the
      page length to a value less than 13 (or less than 14 if you are
      having page numbers printed.)  An error message is displayed if a
      page length of less than the required lines is given.  (The
      default page length is 66 lines.)


   .pdw {n}; page-define-width, no break
      sets the page width (line length).  If n is given with a plus or
      minus sign, then n is added to or subtracted from the current
      line length.  If n is given without a plus or minus sign, the
      line length is changed to n.  An error message is displayed if
      the set line length does not accommodate the input file.  (The
      default page width is 65 characters.)  Finish the current output
      line and then add the given amount of white space to the current
      block.  The default value for the parameter is 1.  If the white
      space is at the beginning of the text block and the text block is
      placed at the top of the page or column, then the space is
      trimmed.


   .spf {#}; space-format, format break
      finish the current output line and then add the given amount of
      white space to the current block.  The default value for the
      parameter is 1.  If the white space is at the beginning of the
      text block and the text block is placed at the top of the page or
      column, then the space is trimmed.
   .un {n}, .unl {n}; undent-left, format break
      adjust the indention for the left margin for the next output line
      only according to the value of the parameter.  The default value
      for the parameter is the current value of the left indention.
      Positive or unsigned values of the parameter move the text
      outward; negative values move it inward.


Notes:  This command takes an input file that you have created using a
text editor, formats that file, and either displays it on your terminal
or writes it to a new file with a unique name.  To direct
format_document to perform certain actions, place special control lines
in the input file.  All control lines begin with a period and must be
on a line by themselves.  This command makes two assumptions about how
the document is to be formatted:  it assumes that the output is to be
on standard-sized paper with 66 lines per page and lines 65 characters
wide (these values represent an 8 1/2 by 11 inch page with one-inch
margins all around) and that both the left and right margins are
justified.


Output lines are built by the embedded control lines within the input
file being formatted; these input control lines do not appear in the
output.
