03/12/84  archive, ac

Syntax:  ac operation archive_path paths


Function:	 combines an arbitrary number of separate segments into one
single segment.


Arguments:
operation
   is one of the functions listed below under "List of operations."
archive_path
   is the pathname of the archive segment to be created or used.  The
   archive suffix is added if you do not supply it.  The star
   convention can be used with extraction and table of contents
   operations.
paths
   are the components to be operated on by table of contents and delete
   operations.  The star and equal conventions cannot be used.


List of table of contents operations:
t
   prints the entire table of contents if no components are named by
   the path arguments; otherwise prints information about the named
   components only.	 Title and column headings are printed at the top.
tl
   prints the table of contents in long form; operates like t, printing
   more information for each component.
tb
   prints the table of contents, briefly; operates like t, except that
   the title and column headings are suppressed.
tlb
   operates like tl, but suppresses the column headings and the time
   portion of dates.


List of append operations:
a
   appends named components to the archive segment.  If a named
   component is already in the archive, a diagnostic is issued and
   the component is not replaced.  At least one component must be
   named by the path arguments.
ad
   appends and deletes; operates like a and then deletes all segments
   that have been appended to the archive.
adf
   appends and forces deletion; operates like a and then forces
   deletion of all segments that have been appended to the archive.


ca
   copies and appends; operates like a, appending components to a copy
   of the new archive segment created in your working directory.
cad
   copies, appends, and deletes; operates like ad, appending components
   to a copy of the archive segment and deleting the appended segments.
cadf
   copies, appends, and forces deletion; operates like adf, appending
   components to a copy of the archive segment and forcibly deleting
   the segments requested for appending.


List of replace operations:
r
   replaces components in or adds components to the archive segment.
   When no components are named in the command line, all components of
   the archive for which segments by the same name are found in your
   working directory are replaced.  When a component is named, it is
   either replaced or added.
rd
   replaces and deletes; operates like r, replacing or adding
   components, then deletes all segments that have been replaced or
   added.
rdf
   replaces and forces deletion; operates like r and forces deletion of
   all replaced or added segments.


cr
   copies and replaces; operates like r, placing an updated copy of the
   archive segment in your working directory instead of changing the
   original archive segment.
crd
   copies, replaces and deletes; operates like rd, placing an updated
   copy of the archive segment in your working directory.
crdf
   copies, replaces, and forces deletion; operates like rdf, placing an
   updated copy of the archive segment in your working directory.


List of update operations:
u
   updates; operates like r except that it replaces only those
   components for which the corresponding segment has a
   date-time-modified later than that associated with the component in
   the archive.
ud
   updates and deletes; operates like u and deletes all updated
   segments after the archive has been updated.
udf
   updates and forces deletion; operates like u and forces deletion of
   all updated segments.
cu
   copies and updates; operates like u, placing an updated copy of the
   archive segment in your working directory.


cud
   copies, update, and deletes; operates like ud, placing an updated
   copy of the archive segment in your working directory.
cudf
   copies, updates, and forces deletion; operates like udf, placing an
   updated copy of the archive segment in your working directory.


List of delete operations:
d
   deletes from the archive those components named by the path
   arguments.
cd
   copies and deletes; operates like d, placing an updated copy of the
   archive segment in the working directory.


List of extract operations:
x
   extracts from the archive those components named by the path
   arguments, placing them in segments in the storage system.  The
   directory where a segment is placed is the directory portion of the
   path argument.  The access mode stored with the archive component is
   placed on the segment for you.  If no component names are given, all
   components are extracted and placed in segments in the working
   directory.  The archive segment is not modified.
xd
   operates like x but deletes the component from the archive if it
   is extracted successfully.


xf
   extracts and forces deletion; operates like x, forcing deletion of
   any duplicate names or segments found where the new segment is to be
   created.
xdf
   operates like xd, forcing deletion of any duplicate names or
   segments found where the new segment is to be created.


Notes: The table of contents and extract operations use the existing
contents of an archive segment; the other operations change the
contents of an archive segment.  A new archive segment can be created
with either the append or replace operation.  In each of the
operations that add to or replace components of the archive, the
original segment is copied and the copy is written into the archive,
leaving the original segment untouched unless deletion is specified as
part of the operation.

The star convention can be used in the archive segment pathname during
extract and table of contents operations; it cannot be used during
append, replace, update, and delete operations.


Each component of an archive segment retains certain attributes of
the segment from which it was copied.  These consist of one name, the
effective mode of the user who placed the component in the archive,
the date-time last modified, the bit count, and the date-time placed
in the archive.
