02/06/84  release_temp_segment_


Entry points in release_temp_segment_:
   (List is generated by the help command)


:Entry: release_temp_segment_: 09/25/86  release_temp_segment_

Function: returns a temporary segment (acquired with the
get_temp_segment_ or the get_temp_segments_ subroutine) to the free
pool of temporary segments associated with the process.  Through the
pool concept, temporary segments can be used more than once during the
life of a process.  Since the process does not have to create a new
segment each time one is needed, overhead costs are decreased.


Syntax:
declare release_temp_segment_ entry (char(*), ptr, fixed bin(35));
call release_temp_segment_ (program, temp_seg_ptr, code);


Arguments:
program
   is a 32-character field identifying the program on whose behalf the
   temporary segment is to be used.  This field is displayed by the
   list_temp_segments command.  Besides giving the name of the command
   or subroutine invoked by the user, it can also briefly describe how
   the temporary segment is used; for example, "sort_seg (sort
   indexes)."  (Input)
temp_seg_ptr
   is a pointer to the temporary segment being released. (Input/Output)
   It is set to null after the segment is successfully returned to the
   free pool.  This fact can be used by callers to determine if a given
   temporary segment has been released.  A null input value is not
   treated as an error; no action is performed.
code
   is a standard status code.  (Output)


Notes:  A nonzero status code is returned if the segment being released
was not assigned to the given program.  See the description of the
get_temp_segment_ or the get_temp_segments_ subroutine for a
description of how to acquire a temporary segment.
