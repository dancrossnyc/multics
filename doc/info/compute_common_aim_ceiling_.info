01/24/83  compute_common_aim_ceiling_


Entry points in compute_common_aim_ceiling_:
   (List is generated by the help command)


:Entry: compute_common_aim_ceiling_: 01/19/83  compute_common_aim_ceiling_


Function: computes the maximum authorization or access class which is
in common between two Multics systems given the definitions of their
AIM attributes.


Syntax:
declare compute_common_aim_ceiling_ entry (ptr, bit(72) aligned, ptr,
     bit(72) aligned, fixed bin(35));
call compute_common_aim_ceiling_ (aim_attributes_1_ptr,
     common_ceiling_1, aim_attributes_2_ptr, common_ceiling_2, code);


Arguments:
aim_attributes_1_ptr
   is a pointer to the aim_attributes structure defining the AIM
   attributes of the first system.  (Input) This structure is declared
   in aim_attributes.incl.pl1.
common_ceiling_1
   is set to the maximum authorization or access class in common
   between the two systems in terms of the AIM attributes of the first
   system.  (Output)
aim_attributes_2_ptr
   is a pointer to the aim_attributes structure defining the AIM
   attributes of the second system.  (Input)


common_ceiling_1
   is set to the maximum authorization or access class in common
   between the two systems in terms of the AIM attributes of the second
   system.  (Output)
code
   is a standard system status code.  (Output) It can be one of the
   following:
   0
      the common access ceiling was successfully computed.
   error_table_$unimplemented_version
      one of the aim_attributes structures supplied by the caller was
      of a version not supported by this procedure.
   error_table_$ai_no_common_max
      there is no set of AIM attributes in common between the two
      systems.


Notes: See the description of the get_system_aim_attributes_
subroutine for a definition of the aim_attributes structure.

See the Programmers' Reference Manual for a definition of common access
ceiling.
