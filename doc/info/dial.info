:Info: access_requests: 12/05/84  access_requests

The following is a list of the preaccess requests--
   access_class, acc     modes
   dial, d	     noecho
   echo		     slave
   hangup		     terminal_id, tid
   hello		     terminal_type, ttp
   help, HELP	     029 and 963
   MAP

The following is a list of the access requests--
   enter, e *
   login, l *
   logout

* Have separate info segs.

For information of any of these topics, type
   help TOPIC_NAME


:Info: access_class: acc: 09/20/84  access_class, acc

Syntax:  acc


Function: prints the current terminal channel access class on your
terminal.


:Info: dial: d: 07/20/87  dial, d

Syntax:  d dial_id {User_id} {-control_args}


Function: connects an additional terminal to an existing process.  It
requests the answering service to connect and notifies your process of
the connection.


Arguments:
dial_id
   is the identifying keyword, supplied by a logged-in process, that
   uniquely specifies that process that is accepting dial connections.
User_id
   is the Person_id.Project_id of the process that you wish to connect
   to.  This argument is required only if the dial_id is not registered
   with the system.  A registered alias can be given for the Person_id
   and Project_id.

Control arguments:
-authorization ACCESS_CLASS, -auth ACCESS_CLASS
   specifies the AIM level and category, or categories, of the data
   that will be transmitted to and from the system in this session.  If
   you don't provide it, the default authorization from the PNT is
   used.  You can only supply it with -user.
-no_print_off, -npf
   overtypes a string of characters providing a black area for you to
   type the password.  You can only give it with -user.  (Default:
   depends on the terminal type)


-print_off, -pf
   tells the system that the terminal can stop printing while a
   password is being entered.  No password mask is printed.
-user Own_person_id, -user Own_user_id
   specifies a User_id to give when validating access to the
   communications channel.  Own_person_id is your registered personal
   identifier; Own_user_id is your Person_id.Project_id.  If you supply
   no Project_id, the default project associated with the Own_person_id
   is used.  A registered alias can be given for the Person_id and
   Project_id.

Notes: When you invoke dial, the answering service searches for a
logged-in process accepting dial connections using the dial_id you
provided.  If not found, the message "Dial line not active."  is
printed and you can try again, with a different dial_id; if found, a
one-line message verifying the connection is printed.  All further
messages printed on the terminal are from your process.

This request is administratively restricted.  The project administrator
must register you and your project if you want dialed terminals.  The
system administrator must register the dial_id if you want dialed
terminals without Own_user_id and can restrict your access to a login
service communications channel.  Give -user with your User_id.  This
request then asks for your password ensuring its nonvisibility.  When
your identification and permission to use the channel are verified the
dial request is processed.


All arguments must be supplied in the correct order.

If your process terminates or logs out, a message is printed and
control of the terminal is returned to the answering service.


:Info: echo: 09/27/84  echo

Syntax:  echo


Function: used to set the terminal into echoplex mode before login.


Notes: This command is equivalent to
   modes echoplex


:Info: hangup: 09/27/84  hangup

Syntax:  hangup


Function: terminates communication between the terminal and the
Multics system.  If the communication is via a dial-up phone line, the
line is hung up.  If unable to log in, you can issue this request as
an alternative to manually hanging up the phone.


:Info: hello: 09/27/84  hello

Syntax:  hello


Function: repeats the greeting message that is printed whenever a
terminal is first connected to the system.  It is particularly useful
after a 963 or 029 request since the greeting message is then printed
in the proper code.


:Info: help: HELP: 09/27/84  help

Syntax: help


Function: provides online assistance for logging in by giving examples
of correct login and the phone number of the system administrator to
call for more help.  HELP is for use with those terminals whose
keyboards generate only uppercase characters.


:Info: logout: 09/26/84  logout

Syntax:  logout {-control_args}


Function: terminates your session and ends communication with the
Multics system.  It is used from a terminal that is logged in but not
connected to a process.  (See "Notes on disconnected processes" in
login.info.) It informs the answering service that the user who gave a
correct Person_id-password combination is no longer using the
terminal.


Control arguments:
-brief, -bf
   prints neither the logout message nor, if you give -hold, the login
   message.
-hold, -hd
   terminates your session but not communication with the system:  you
   can immediately log in without redialing.


Notes: If your site is security conscious, it may have disabled
"logout -hold"; in this case if you wish to change authorization, do
this:
   1. log out
   2. verify, using terminal/modem indications, that the terminal has
      dropped DTR and that the system acknowledged by dropping DSR
   3. log in at the new authorization.

This procedure is the only way to guarantee that you are communicating
with the answering service and not with a Trojan horse.


:Info: MAP: 09/27/84  MAP

Syntax:  MAP


Function: tells the system that you are attempting to gain access from
a terminal whose keyboard generates only uppercase characters.


Notes: Once you have issued MAP, the system changes the translation
tables used by the terminal control software so that all uppercase
alphabetic characters are translated to lowercase.  You still need to
use the special escape conventions to represent the ASCII graphics
that are not on the uppercase-only terminal keyboard.  Uppercase
alphabetic characters also require the escape conventions.  (See
"Escape Conventions on Various Terminals" in the Programmer's
Reference Manual, AG91.) After you give the MAP request, you can log
in normally.

Use MAP for 150-, 300-, and 1200-baud terminals if their keyboards can
transmit only uppercase characters; for any other terminal type, it is
ignored.


:Info: modes: 03/06/85  modes

Syntax:  modes {mode_string}


Function: sets the terminal modes before login.  Accepts the same
mode_string as the set_tty -modes control argument.  Without
arguments, it gives the current modes.  (For a list of valid modes,
type "help tty_modes.gi".)


Arguments:
mode_string
   is a list of modes to be set.


:Info: noecho: 09/27/84  noecho

Syntax:  noecho


Function: allows you to turn off the echoplex mode that may be on by
default.  This request is equivalent to the "modes ^echoplex"
preaccess command line.


:Info: slave: 09/27/84  slave

Syntax:  slave {-control_args}


Function: changes the service type of the channel from login to slave
for the duration of the connection.


Control arguments:
-authorization ACCESS_CLASS, -auth ACCESS_CLASS
   specifies the AIM level and category, or categories, of the data
   that will be transmitted to and from the system in this session.  If
   you don't provide it, the default authorization from the PNT is
   used.  You can only supply it with -user.
-no_print_off, -npf
   overtypes a string of characters providing a black area for you to
   type the password.  You can only give it with -user.  (Default:
   depends on the terminal type)


-print_off, -pf
   suppresses the overtyping of the password.  You can only provide it
   with -user.  (Default: depends on the terminal type)
-user Own_person_id, -user Own_user_id
   specifies a User_id to give when validating access to the
   communications channel.  Own_person_id is your registered personal
   identifier; Own_user_id is your Person_id.Project_id.  If you supply
   no Project_id, the default project associated with the Own_person_id
   is used.


Notes: The slave command enables a privileged process to request the
answering service to assign the channel to it, and then attach it (see
the dial_manager_ subroutine for an explanation of the mechanism for
requesting channels from the answering service).

This request is administratively restricted.  The project administrator
must register you and your project if you want dialed terminals.  The
system administrator must register the dial_id if you want dialed
terminals without Own_user_id and can restrict your access to a login
service communications channel.  Give -user with your User_id.  This
request then asks for your password ensuring its nonvisibility.  When
your identification and permission to use the channel are verified the
dial request is processed.


:Info: terminal_id: tid: 03/06/85  terminal_id, tid

Syntax:  tid {STR}


Function: sets your terminal identification to STR.  Without arguments
it gives the current terminal_id.  This command is illegal if your
site has specified answerback checking.


:Info: terminal_type: ttp: 03/06/85  terminal_type, ttp

Syntax:  ttp {terminal_type_name}


Function: sets the terminal type prior to login.  Without arguments
it gives the current terminal_type.


Arguments:
terminal_type_name
   is the name of a system-defined terminal type.


:Info:029:  963:  09/27/84  029 and 963

Syntax:  029
    or:  963


Function: tells the system whether you are attempting to gain access
from a device similar to an EBCDIC or Correspondence code IBM Model
2741.


Notes: If you attempt to log in from a device similar to an EBCDIC or
Correspondence code IBM Model 2741, the system returns a "Type 'help'
for instructions" message accompanied by a partially readable line.
You should respond to this message by typing the specified request.

Once the request has been issued, the system changes the translation
tables used by the terminal control software so that all input/output
is readable.  You can then log in normally.

These requests are valid for 134-baud devices similar to an IBM Model
2741 only; for any other terminal type, they are ignored.
