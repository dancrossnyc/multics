05/10/84  hunt

Syntax as a command:  hunt name {path} {-control_args}


Syntax as an active function:  [hunt name {path} {-control_args}]


Function:  searches a specified subtree of the hierarchy for all
occurrences of a named segment that is either freestanding or included
in an archive file.


Arguments:
name
   is the name of a segment for which hunt is to search.  The star
   convention is allowed.
path
   is the pathname of a directory to be interpreted as the root of the
   subtree in which to search for the specified segment(s).  If you
   don't supply path, the subtree rooted at the current working
   directory is searched.


Control arguments:
-all, -a
   reports on finding links, directories, and segments.
-archive, -ac
   looks inside archives for components whose names match the name
   argument.  (Default)
-first
   stops searching as soon as the first occurrence of the selected
   segment is found.  The default is to return all occurrences.
-no_archive, -nac
   does not look inside archives and is therefore faster.


Notes:  This command displays the type of entry found (segment,
directory, or link), followed by the entry itself, and a total of the
number of occurrences found.

If archive components are being examined, the matching components are
reported before added names on the archive segment.


Notes on active function:  As an active function, hunt returns a string
of pathnames separated by spaces.  Archive components are returned as
archive_path::component_name.
