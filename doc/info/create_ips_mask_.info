03/05/85  create_ips_mask_


The create_ips_mask_ subroutine returns a bit string that can be used
to disable specified ips (interprocess signal) interrupts (also known
as ips signals).


Entry points in create_ips_mask_:
   (List is generated by the help command)


:Entry:  create_ips_mask_:  03/05/85  create_ips_mask_


Function:
returns a bit string that can be used to disable specified ips
interrupts.


Syntax:
declare create_ips_mask_ entry (ptr, fixed bin, bit(36) aligned);
call create_ips_mask_ (array_ptr, lng, mask);


Arguments:
array_ptr
   is a pointer to an array of ips names that are declared as char(32)
   aligned.  (Input)
lng
   is the number of elements in the array pointed to by array_ptr.
   (Input)
mask
   is a mask that disables all of the ips signals named in the array.
   (See "Notes" below.)


Notes:  If any of the names are not valid ips signal names, the
condition create_ips_mask_err is signalled.  Currently, the allowed ips
names are:

     quit
     cput
     alrm
     neti
     sus_
     trm_
     wkp_
     pgt_
     system_shutdown_scheduled_
     dm_shutdown_scheduled_


If the first name in the array is -all, then a mask is returned that
masks all interrupts.

The returned mask contains a "0"b in the bit position corresponding to
each ips name in the array and a "1"b in all other bit positions.  The
bit positions are ordered as in the above list.  It should be noted
that it is necessary to complement this mask (using a statement of the
form "mask = ^mask") in cases where the requirement is for a mask with
"1" bits corresponding to specified interrupts.  An ips mask is used as
an argument to the hcs_$reset_ips_mask and hcs_$set_ips_mask entry
points.
