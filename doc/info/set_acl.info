

06/20/87 set_acl, sa


Syntax as a command:  sa path mode1 {User_id1...modeN User_idN}
{-control_args}


Function:  manipulates the access control lists (ACLs) of nonlink
entries in a directory (see the Programmer's Reference Manual for a
discussion of ACLs).


Arguments:
path
   If it is -working_directory (-wd), the user's working directory is
   assumed.  You can use the star convention, which applies to types of
   entries, depending on the type of mode specified in modeN.
modeN
   is a valid access mode.  For segments it can consist of any or all
   the letters rew; for multisegment files, it can consist of the
   letters rw.  Note that the letter e is not available to multisegment
   files.  For directories, of any or all the letters sma except that
   if you give m, you must supply s also.  Use null (n, "") to specify
   null access.  To obtain a list of modes for extended types, see the
   describe_entry_type command.


User_idN
   is an access control name of the form Person_id.Project_id.tag.  All
   ACL entries with matching names receive modeN.  (For a description
   of the matching strategy, see "Examples" below.)  If no match is
   found and you give the three components, an entry is added to the
   ACL.  If you omit the last User_id, your Person_id and Project_id
   are assumed.


Control arguments:
-brief, -bf
   suppresses error messages of the form "No match for User_id on ACL
   of <path>", where User_id omits components.
-chase
   chases links matching a star name.  Links are always chased when
   path is not a star name.
-no_chase
   does not chase links when using the star convention.  (Default)
-no_sysdaemon, -nsd
   does not add "rw *.SysDaemon.*" when using -replace.


-replace, -rp
   deletes all ACL terms--with the exception of the default
   *.SysDaemon.* term unless you supplied -no_sysdaemon--before adding
   the terms specified on the command line.  (Default:  to add to and
   modify the existing ACL)
-sysdaemon, -sd
   adds, with -replace, a "rw *.SysDaemon.*" ACL term before adding the
   terms specified on the command line.  (Default)


Select either of the following control arguments to avoid the ambiguity
that occurs only when modeN is null and you use the star convention in
path:

-directory, -dr
   affects directories only.
-interpret_as_extended_entry, -inaee
   interpret the selected entry as an extended entry type.
-interpret_as_standard_entry, -inase
   interpret the selected entry as a standard entry type.
-segment, -sm
   affects segments and multisegment files only.  (Default)
-select_entry_type STR, -slet STR
   affects only entries of the entry type selected by STR, which is a
   comma-delimited list of file system entry types.  Use the
   list_entry_types command to obtain a list of valid entry type
   values.


Access required:  You require modify permission on the containing
directory.


Notes:  The arguments are processed from left to right; therefore the
effect of a particular pair of arguments can be changed by a later
pair.  When you use the star convention to specify the last component
of an entryname, extended entries are excluded from any matches.


The strategy for matching an access control name argument is defined by
three rules:


   1) A literal component, including "*", matches only a component of
      the same name.


   2) A missing component not delimited by a period is treated the same
      as a literal "*" (e.g., "*.Multics" is treated as "*.Multics.*").
      Missing components on the left must be delimited by periods.


   3) A missing component delimited by a period matches any component.



