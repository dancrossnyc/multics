08/16/84	tune_disk, td

Syntax:	tune_disk drive_name io_type {-load | -ld} n
	     {-response | -rsp} m
	tune_disk reset_max
	tune_disk reset_sys
	tune_disk stagnate seconds
	tune_disk system io_type {-max n} {-map io_type}

Function:  Permits a user with hphcs_ access to alter disk tuning
parameters.


Arguments: 
io_type
   An  io_type  is the name of a type of IO tunable by tune_disk.
   If  tune_disk  is  envoked  without  arguments it will print a
   usage message which includes the valid io_type names.

drive_name
   Is  the  name  of  a disk drive to be tuned.  Drive names must
   begin  with  the three characters "dsk", followed by a letter,
   an underline and one or two numeric digits.

-load n, -ld n
   This  argument  pair  defines  the  optimization maximum queue
   loadpoint  for  the  specified  drive.   It  is one of the two
   points  which  define  the  optimization  line.  If -load 1 is
   specified,  the  initial  response  value  is  the  optimizing
   multiplier and no load optimization is performed.


-response m, -rsp m
   This  argument  pair defines the optimization maximum response
   value, which is the multiplier to be used for an IO type queue
   load of a single request.

reset_max
   This  argument requests that all queue maximum depth meters be
   reset  in  the  disk_seg database.  The time and date at which
   the meters were last reset is also maintained in the database.
   This  argument is useful to permit a new/lower max depth to be
   seen  after altering tuning parameters, or after an Allocation
   Lock has occurred.


reset_sys
   This argument requests that all system depth counters be reset
   to  0.   This  is  useful  after altering system depth counter
   mapping.   If  counter mapping has been changed while requests
   were in the queue, the counter which had been used may be left
   artificially  high.   Resetting  back  to  0  lets  the system
   correct the value.

stagnate seconds
   This  argument  pair  specifies  a  change  of the system wide
   stagnation  time  period  to  the specified number of seconds.
   Tune_disk sets a maximum stagnation time period of 6 minutes.


system
   This   argument   indicates   modification  of  a  system-wide
   optimization factor.  The maximum depth and/or mapping for the
   specified io_type will be altered.  If neither a maximum depth
   value, nor a mapping is altered an error message is issued.

-map io_type
   This  argument  specifies  that the current depth counting for
   the  specified  system-wide  optimization entry should be done
   using the counter for io_type.  For example:

      tune_disk system PageRead -map PageWrite

   Would  have the depth counter for PageWrite used to accumulate
   the number of PageRead IO's currently outstanding.


-max n
   This  argument  pair  indicates that the maximum depth for the
   specified  system-wide  optimization entry should be set to n.
   If  this  depth  is  reached then full optimization of this IO
   type will be done system wide for all drives.


Notes:
   Optimization  is  performed  by determining a multiplier to be
   used  to  convert  a  Phsical  Seek Length into a Logical Seek
   Length,  for  the  purposes of determining the Nearest Logical
   Seek   to  perform  on  a  disk  drive.   The  Response  Point
   determines  what  this  multiplier  is  for a situation with a
   single  request  of  that  IO  type  in  the queue, and is the
   multiplier required to produce best system response.  The Load
   Point  specifies the number of requests permitted in the queue
   of  the  specified  IO  type  before full optimization occurs,
   Logical  Seek Length = Physical Seek Length.  These two values
   define the two endpoints of a straight line.  The optimization
   multiplier  is determined by the current load of the queue and
   its corresponding position on the straight line.


   System-wide   queue  loading  optimization  is  determined  by
   looking  at the system-wide load of an IO type and the maximum
   depth  it should be permitted before becoming fully optimized.
   The fraction produced by:

      fraction = max (0.0, (max_depth - depth)/max_depth)

   is  used to alter the individual drive's IO type multiplier to
   determine  the  system-wide queue loading effect on individual
   drive optimization.


   The  system-wide  optimization  utilizes a max_depth specified
   for  the  IO  type,  and  a  counter  of  the current depth to
   determine   the   system-wide   loading  optimization.   Depth
   counters   can   be  mapped  together  to  form  an  aggregate
   system-wide queue loading effect.  When decrementing, counters
   are  not  permitted to become negative, but if re-mapped while
   non-zero  they  may remain > 0 with no load.  The tuning tools
   permit  resetting  the  current depth counters for system-wide
   optimization  back  to  0, to let the system correct them to a
   true load indication.

   All  queues  have  a high-water-mark accumulator.  This can be
   reset through the tuning tools to permit a new high-water-mark
   to be determined.
