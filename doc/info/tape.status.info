
09/21/87  tape 
Known errors in the current release of tape.
#	Associated TR's
Description

75  phx20701
tape_ansi_lrec_io [investigating]
         Bad padding with ANSI tape in EBCDIC mode.  .

 As time and resources permit this problem will be evaluated and better
defined at a future date.

74  phx20643
tape_archive [investigating]
         "Loads" an incorrect table, which it is then happy to use if the
               tape cannot be mounted.  .

 As time and resources permit this problem will be evaluated and better
defined at a future date.

73  phx18295
Tape Subsytem [investigating]
         Since installing release 10.2 we have been receiving excessive
               Reready messages when mounting tapes.  .

As time and resources permit this problem will be evaluated and better
defined at a future date.

72  phx17261
reorder_archive.pl1 [error] Linked TRs:  phx19390
         references the undefined name-
               error_table_$record_quota_overflow .

As time and resources permit this problem will be evaluated and better
defined at a future date.

69  phx16969
tape_archive (non-mtape_ version) [investigating]
         error about a missing argument when trying to write the online
               table to tape .

As time and resources permit this problem will be evaluated and better
defined at a future date.

68  phx15996
tape_archive [verified]
         tape_archive returns the wrong error message following an RCP
               failure.  .

As time and resources permit this problem will be evaluated and better
defined at a future date.

67  phx14836
tape software [verified]
         Asks reready of reel without indication that a write ring is
               necessary.  .

As time and resources permit this problem will be evaluated and better
defined at a future date.

65  phx20531
mtape_ / ansi_tape_io_ [investigating]
          The authentication code written to the tape header by the ANSI             PFM is incorrect in certain cases..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

62  phx19297
tape utilities [investigating]
          should force detach tape after abort.

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

60  phx18913
tape_ibm_, tdcm_ [error]
          Bad results when the user must enter a new tape number, and                there is an error in mounting the tape..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

57  phx18325
tape_in [investigating]
          The tape_in command seems to mishandle the "storage_extend"              local statement..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

55  phx16647
tape_ibm_ [error]
          invalid record structure using VBS format for output.

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

53  phx16030
tape_out [verified] Linked TRs:  phx14584 phx17140 phx17480 phx19533
          Bad formline_ control string in tape_io_interpret_.pl1 causes              conversion error..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

50  phx15547
tape_archive [verified]
          problems using tape_archive when the volume name doesn't match             the external label.

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

49  phx15545
tape_archive [verified]
          misleading message about no table found when tape could not be             mounted.

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

48  phx15544
tape_archive [verified]
          can't tell which tape took an error on a compact operation.

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

47  phx15543
tape_archive [verified]
          poor error message when only one drive is available for a        compaction.

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

36  phx15087
tape_mult_ tends to return obscure error codes and not be very
description when diagnosing problems while handling tapes.

I am considering this a limitation of the tape_mult_ system.
Hopefully, the problem will be corrected when the Multics standard tape
format is added to the mtape_ set of per-format-modules.

31  phx12545
The data_security_erase control order to tape_nstd_ is a no-op.

27  phx14374
An extra blank record is written by tape_out in format fb and the
record is exactly amrl long.

26  phx13999
Both a Block and Record statment are required when a Format statement
is present for labeled tapes, but not stated in the documentation.

22  phx17930
tape_ioi_ declares certain types of tape errors to be fatal.  Although
normally correct, the declaraing of such errors as fatal prevents
tape_ioi_'s callers from attempting their own resyncing (by skipping
data).  In particular, the reloader's recovery mechanisms are currently
broken.

20  phx17176
When tape_ibm_ extracts record information from a tape, instead of from
attachment arguments, it enforces the old 8192 char block size.

19  phx01050
When a tape is attached using -retain all with tape_ansi_/ibm_,
detached and then reattached using -clear, these modules forget that
the tape is assigned and screw up when trying to re-assign.

18  phx02634
When the spooler runs out of initial tapes, it dies after requesting
more tapes.

17  phx03153
tape_ansi_ should allow density change for a volume if, and only if,
the attach specifies the creation of a new file set beginning with file
1.

16  phx03656
The "-retain all" option to tape_ansi_/ibm_, when using more than one
tape (different attachments) can cause the module to force all tapes
onto that one drive.

14  phx04667
tape_ibm_ refuses to mount for unlabeled operations a tape whose first
file contains zero records.

13  phx05091
After reporting a tape error, tape_ansi_ sometimes throws away the
error status, which wasn't explained in the first place.

12  phx06346
tape_ansi_ should call com_err_ when the com_err switch is on and when
the switch to be attached is already attached.

11  phx08363
The file_status control order to tape_ansi_, from command level,
produces a null pointer fault.

10  phx08977
tape_ansi_ can return a zero error code upon attach when a tape was
unreadable even though it printed a message stating it knows the tape
is unreadable.

9  phx09549
Some cleanup handlers in tape_ibm_ and tape_ansi_ have non-local gotos,
thus aborting unwinding upon a release.

Another manifestation of this is obstinate behavior when hitting QUIT
and release while tape_ansi_/ibm_ are waiting for a second tape in a
volume set to be mounted.

8  phx10157
When opened in vb format, tape_ibm_ sometimes makes the last record in
a block, upon writing, to be longer than the lrecl.

7  phx10167
The default lrecl for s type records in tape_ansi_ should be 1044480,
not 0.

5  phx14863
tape_ansi_ does not properly handle tape blocks > 8192 or blocks of
length ^= 0 mod 4.

4  phx15029
A bug exists in tdcm_ workspace management if an error occurs when
switching to another tape volume.

3  phx15903
tape_nstd_ should allow block sizes not 0 mod 4.

2  phx15904
The write_record operation of tape modules should sense when a tape
error occured in nine mode because of a non zero high bit in a byte and
produce a corresponding message.

1  
Various tape I/O modules (e.g., ntape_, tape_ansi_, tape_ibm_) do not
support the FORTRAN backspace statement.

Although this remains a limitation for the referenced I/O modules, the
limitation has been partially removed by the introduction of the mtape_
tape I/O module in MR10.2, which supports ANSI and IBM tape formats.
The mtape_ I/O module fully supports all iox_$positioning modes for
sequential_input openings.  If I understand the stated limitation
correctly, mtape_ should be able to support the FORTRAN backspace as
well as the rewind statements.
