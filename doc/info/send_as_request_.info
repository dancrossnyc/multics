03/21/85  send_as_request_


The send_as_request_ subroutine contains entry points that send
messages to the system Answer Service Request server.


Entry points in send_as_request_:
   (List is generated by the help command)


:Entry:  block:  03/21/85 send_as_request_$block


Function:  sends an as_request, and blocks to await the system's reply.


Syntax:
declare send_as_request_$block entry (ptr, bit(72) aligned, fixed
     bin(35));
call send_as_request_$block (as_request_ptr, as_request_reply, code);


Arguments:
as_request_ptr
   is a pointer to standard as_request structure.  (Input)
   as_request_structures begin with a header declared in
   as_request_header.incl.pl1.  Declarations for most as request info
   structures are found in as_requests.incl.pl1.  It is not recommended
   that any application code send as_requests.  Subroutine interfaces
   are available for all the supported as_request facilities.
as_request_reply
   is the event message returned by the system in reply to the request.
   (Output)
code
   is a standard system status code.  (Output)


:Entry:  no_block:  03/21/85 send_as_request_$no_block


Function:  This entry point sends an as request message to the system
as request server, and does not block to await a reply.


Syntax:
declare send_as_request_$no_block entry (ptr, fixed bin (35));
call send_as_request_$no_block (as_request_ptr, code);


Arguments:
as_request_ptr
   is a pointer to standard as_request structure.  (Input)
   as_request_structures begin with a header declared in
   as_request_header.incl.pl1.  Declarations for most as request info
   structures are found in as_requests.incl.pl1.  It is not recommended
   that any application code send as_requests.  Subroutine interfaces
   are available for all the supported as_request facilities.
code
   is a standard system status code.  (Output)
