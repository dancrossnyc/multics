04/24/86  acquire_resource, aqr

Syntax as a command:  aqr type STR1 {...STRN} {-control_args}
	       or:  aqr type -number N {-control_args}


Function: selects a resource of a given type from a free pool of all
such resources and makes you the accounting owner of the resource.  You
are given full control over the access rights for all users of the
resource, as well as control over many parameters of the resource.
Ownership of the resource is terminated via the release_resource
command.


Arguments:
type
   is a resource type defined in the resource type description table
   (RTDT).
STRi
   is the unique identifying name of the particular resource being
   acquired.  If STR looks like a control argument, precede it by -name
   (-nm).  If you give no -name, a resource is chosen to satisfy the
   constraints imposed by the control arguments given (if any).


Control arguments:
-access_class accr, -acc accr
   sets the initial AIM access class parameters, where accr is an
   access class range.  Users at any authorization within the access
   class range inclusive are allowed to read and write to the resource
   (provided they also meet other access requirements).  This control
   argument requires that you also provide -priv.
-acs_path path
   specifies the pathname of the access control segment (ACS) for this
   resource.  You must create the ACS and set the desired access
   control list.  If the ACS doesn't exist or you don't specify it, the
   default access is rew to the accounting owner and null to all
   others.  If path is a null string, the existing ACS, if any, is
   disassociated from the resource.


-alloc STR
   sets the allocation state of the resource to free or allocated,
   where STR must be either "on" or "off": on sets the allocation
   state to allocated; off, to free.  If you supply no -alloc, the
   allocation state is free.  (The allocation state flag is a
   convenience to you and is largely ignored by resource management.)
-attributes STR, -attr STR
   searches for resources possessing the attributes specified in STR.
   If you give -attributes in conjunction with -name, then the resource
   specified by the explicit name is searched for, and, when found, its
   attributes are set to those specified with -attr.
-comment STR, -com STR
   specifies the desired value of the comment string for this resource,
   where STR can be an arbitrary comment string with a maximum length
   of 168 characters.


-lock STR
   locks or unlocks the resource, preventing or allowing use of that
   resource, where STR must be either "on" or "off": on prevents any
   of the resource; off allows use of the resource.  (Default: off)
-number N, -nb N
   specifies that the number of such resources to be acquired is N.  If
   you select no -number, 1 is assumed.  You can choose -number only if
   you don't provide a name.


-owner STR, -ow STR
   specifies that this is an acquisition on behalf of the user
   specified by STR.  If STR is given as "system", then the resource is
   assigned to the system pool; if given as "free", then the resource
   is acquired to the free pool (effectively the same as no -owner).
   If STR is of the form Person_id.Project_id (where neither Person_id
   nor Project_id can be a star), the user specified has all the rights
   of ownership to the resource, as if he had acquired it personally
   except that if you give "-release_lock on", the owner can't release
   (give up ownership of) the resource voluntarily.  This control
   argument requires that you also specify -priv.
-priv
   specifies that a privileged call is to be made to obtain the status
   of this resource (see "Access Required" below).


-release_lock STR, -rll STR
   specifies whether this resource can be released by the owner or only
   by a privileged process (see "Access Required" below), where STR
   must be either "on" or "off".  If you provide no -release_lock, the
   resource can be released by the owner.  This control argument
   requires that you use -priv.


Access required: You need execute access to the rcp_admin_ gate to use
-access_class, -owner, or -release_lock.


Notes: This command acquires a resource for either you (requestor) or
the user specified by -owner.  If you are registered on more than one
project and need corresponding access or other users (on any project)
need access to acquire a resource, you must create or modify the ACS.
You must then specify the new/modified ACS by issuing this command
using -acs_path.  The User_id, a Person_id.Project_id pair, specifies
the user to be added to or deleted from the ACS.
