11/22/83	Summary of APL features

This document summarizes the features available in Multics APL.  APL
characters are represented here using the same typing conventions as
for ASCII terminals.  See the "ASCII character set" section for more
information.


Terminals supported: All EBCDIC terminals at 134.5 baud, all
Correspondence terminals at 134.5 baud, all bit-paired APL/ASCII
terminals at any baud, all typewriter-paired APL/ASCII terminals at
any baud, all full ASCII terminals at any baud (using a special
character set).  Uppercase-only ASCII terminals are not supported.


ASCII character set: On full (96 character) ASCII terminals, APL uses
a special mapping between ASCII characters and APL characters.
Uppercase alphabetic letters represent APL letters, underscored
uppercase alphabetic letters represent underscored APL letters, digits
represent themselves, a circumflex (^) represents the negative sign,
and a single quote (') represents the APL quote character.  Lowercase
alphabetic letters, and punctuation characters, represent APL
operators.  All APL characters can be formed by one or two
(overstruck) ASCII characters.  See the following sections for a
complete list of operators.


Correction of typing errors: On EBCDIC and Correspondence terminals,
the "backspace-attention" convention can be used.  On all terminals,
the regular Multics erase-kill convention can be used.  The kill
character is the alpha ("a" on ASCII terminals), and the erase
character is the omega ("w" on ASCII terminals).  On ASCII terminals,
at-sign (@) and number sign (#) can also be used.  The escape
character is the dieresis (double-quote on ASCII terminals).


Monadic scalar operators:
+ (no operation)		* (power of e)
- (negate)		*o (logarithm base e)
x (signum)		| (absolute value)
-: (invert)		! (factorial)
c (ceiling)		o (pi times)
f (floor)


Dyadic scalar operators:
+ (plus)			o (trigonometric)
- (minus)			& (and)
x (times)			v (or)
-: (divide)		&~ (nand)
c (max)			v~ (nor)
f (min)			/= (not equal)
* (exponentiate)		= (equal)
*o (logarithm)		<_ (less or equal)
| (residue)		> (greater)
! (combinations)		>_ (greater or equal)


Monadic mixed operators:
~ (not)			-o (reverse-first)
p (shape)			\o (transpose)
, (ravel)			b (i-beam)
i (iota)			? (roll)
d| (grade up)		m (matrix invert)
g| (grade down)		_f (format)
o| (reverse-last)


Dyadic mixed operators:
p (reshape)		o| (rotate-last)
, (catenate/laminate)	-o (rotate-first)
,- (catenate-first)		\o (transpose)
i (index)			e (membership)
^| (take)			_| (decode)
v| (drop)			t (encode)
/ (compress-last)		? (deal)
-/ (compress-first)		m (domino)
\ (expand-last)		_f (format)
-\ (expand-first)


Primitive operations:
+/ (reduction-last)
+-/ (reduction-first)
+\ (scan-last)
+-\ (scan-first)
+.x (inner product)
_o.+ (outer product)

Any of the scalar operators may participate in these operations
including the trigonometric operator.


Pseudo-operations:
-> (branch)
-< (assignment)
A[...] (subscripting)
A[...]-< (subscripted assignment)
_e (execute)
SdFCN (stop control)
TdFCN (trace control)
q (quad)
'q (quote-quad)


Editor requests:
g	del character
g~	locked del character
gZ-<A FCN B;C;D   typical function header for new function
gFCN	typical editor invocation for old function
[q]	list whole function
[Nq]	list line N
[qN]	list from line N to end
[N]	retype line N
[NqM]	detailed-edit line N starting in column M
[dN]	delete line N
TEXT...	enter text for prompted line


When a function is closed, a syntax check is made of the entire function.  If
any errors are discovered, they are printed, and the user remains in the
editor.  If the function was locked, it is unlocked.  The user can immediately
type another "g" to exit (the editing will be lost), or may fix the errors and
type "g" to have it checked again.


System variables:
qCT (comparison tolerance)	qLC (line counter)
qIO (index origin)		qTS (time stamp)
qLX (latent expression)	qTT (terminal type)
qPP (printing precision)	qUL (user load)
qPW (printing width)	qWA (workspace avail)
qRL (random link)		qCS (character set)
qAI (accounting info)	qWU (workspace used)
qIT (integer tolerance)


System functions:
qAF (evaluate active function)	qEX (expunge)
qCR (canonical representation)	qFX (fix)
qCALL (external call)		qNC (name count)
qDL (delay)			qNL (name list)
qEC (execute command)


File system functions:
qFADDACL		qFLIB		qFRENAME 
qFAPPEND		qFLIM		qFREPLACE
qFCREATE		qFLISTACL		qFSETACL
qFDELETEACL	qFNAMES		qFSIZE
qFDROP		qFNUMS 		qFSTIE
qFERASE		qFRDCI 		qFTIE
qFHOLD		qFREAD  		qFUNTIE


System commands:
)R   	   prints Multics ready message
)Q, )QUIT    leaves apl
)E, )EXEC    executes rest of line as Multics command
)ERRS	   prints state of error mode
)ERRS LONG   changes error mode to long
)ERRS BRIEF  changes error mode to brief (default)
)DEBUG	   prints state of debug mode
)DEBUG ON    changes debug mode to on
)DEBUG OFF   changes debug mode to off (default)
)VARS	   lists global variables
)GRPS	   lists groups
)FNS	   lists functions
)DIGITS	   prints printing precision setting
)DIGITS N    changes printing precision setting to N


)ORIGIN	   prints index origin
)ORIGIN N    changes origin setting to N (default is 1)
)WIDTH	   prints printing width
)WIDTH N	   changes printing width to N (default is line length of terminal)
)CLEAR	   clears workspace
)SINL, )SIV  lists state indicator and local variables
)SI	   lists state indicator
)SAVE	   saves active workspace
)SAVE WSID   save active workspace as WSID
)LOAD	   loads workspace of same name as active workspace
)LOAD WSID   loads workspace named WSID
)WSID	   prints workspace identifier
)WSID ID	   changes workspace identifier to ID (default is CLEAR WS)


)CHECK	   prints state of compatibility check mode
)CHECK ON    changes compatibility check mode to on
)CHECK OFF   changes compatibility check mode to off (default)
)HELP XXX    calls Multics help command with rest of line
)HUH	   reprints last error message in long error mode
)OFF	   exits from apl
)OFF HOLD    exits from apl, does not logout in subsystem environment
)CONTINUE    saves a continue workspace (User_id.sv.apl) and exits 
	   from apl
)ERASE X	   erases the current value of the name X
)COPY WSID   copies the variables, functions, and groups in WSID into 
	   active workspace
)COPY WSID X...   copies the named objects into active workspace
)PCOPY	   like copy, but does not overwrite objects of same name in 
	   active workspace


)GROUP G A...   forms new group G from names on rest of line
)GRP G	   lists members of group G
)MSG, )MSG ON   calls immediate_messages
)MSG OFF	   calls defer_messages
)MSG XXX	   passes rest of line to send_message
)LIB	   lists workspaces in working directory
)LIB N	   lists workspaces in library N
)LIB PATH    lists workspaces in directory named by PATH
)ZFN FN RN   defines FN to be a niladic external function, RN is the
	   reference name of the program to call
)MFN FN RN   defines FN to be a monadic external function, RN is the 
	   reference name of the program to call
)DFN FN RN   defines FN to be a dyadic external function, RN is the 
	   reference name of the program to call
)EFNS        lists functions previously defined by )ZFN, )MFN, or )DFN


)LIBD	   like )LIB, but include date-time saved and date-time used
)DROP WSID   delete workspace named by WSID
)PORTS	   calls who
)METER	   prints state of metering mode
)METER ON    changes metering mode to on
)METER OFF   changes metering mode to off (default)
)V1DROP	   like )DROP, but for version 1 apl workspaces
)V1COPY	   like )COPY, but for version 1 apl workspaces
)V1PCOPY	   like )PCOPY, but for version 1 apl workspaces
)V1LIB	   like )LIB, but for version 1 apl workspaces
)TABS	   prints current tab width (default is 10)
)TABS N	   changes tab width to N
)SYMBOLS	   prints number of symbols in active workspace
)VERSION	   prints version number of apl
)?	   prints the names of all of the system commands
