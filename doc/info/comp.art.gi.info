08/06/84    Artwork constructs in compose.

This file provides explanations and short examples of the artwork
constructs available within compose.  Artwork of a more general nature
than discussed here must be constructed with the Multics Graphics
System (MGS).

In the following sections, dollar signs ($) represent the ASCII
backspace character (octal value 010) to indicate that the characters
adjoining are overstruck, that is, are in the same column (e.g.,
"X$X").


A user can insert certain conventional overstruck character patterns
into an input file and have them displayed as fabricated symbols and
line art diagrams.  The detection and expansion of the artwork
constructs is controlled with the block-begin-art and block-end-art
formatting controls (see Wordpro Reference Manual, AZ98).  All examples
are shown as they appear on an ASCII, type 11, terminal (overstriking
of characters is inappropriate for video terminals).

Use of the word "rule" below means a typographic rule, that is, a line
of given length, thickness, and orientation.


Artwork conventions:
Members of the line art set are syntactically significant if overstruck
with another character from the set, whereas members of the math symbol
set are syntactically significant if they are overstruck with a valid
size character (described below).  The characters in a construct may be
given in any order.

 Line   Math
  Art  Symbol   Meaning

   -            element of a horizontal rule
   |     |      element of a vertical rule or a vertical bar, depending
                  on overstrike pattern
   /     /      element of a +45 degree slant rule or a division sign,
                  depending on overstrike pattern


   \            element of a -45 degree slant rule
   (     (      left semicircle or left parenthesis, depending on
                  overstrike pattern
   )     )      right semicircle or right parenthesis, depending on
                  overstrike pattern
   ^     ^      up arrow, diamond top vertex, or upward movement,
                  depending on overstrike pattern
   v     v      down arrow, diamond bottom vertex, or downward move-
                  ment, depending on overstrike pattern
   <     <      left arrow, diamond left vertex, or leftward movement,
                  depending on overstrike pattern
   >     >      right arrow, diamond right vertex, or rightward move-
                  ment, depending on overstrike pattern
         [      left bracket
         ]      right bracket


         {      left brace
         }      right brace
         X      multiplication sign (1-high math symbol only)
   ~            vertical or slant rule terminator
   *     *      horizontal rule terminator or text deletion symbol,
                  depending on overstrike pattern
  " '           replicator character showing overstrike but having no
                  pictorial meaning
  H h           half-line control, up or down, depending on overstrike
                  pattern
  S s           superscript/subscript control, depending on overstrike
                  pattern
         =      double vertical bar concatenate symbol
         c      text modification change bar (1-high math symbol only)
         o      bullet (1-high math symbol only)


If any of the characters in the math symbol set is overstruck with a
numeric or alphabetic character it is considered a math symbol and the
overstrike character is interpreted as the symbol size.

 1-0    1 through 10
 a-z   11 through 36
 A-Z   31 through 56


Boxes:
Rectangular boxes are constructed by defining their four corners with
the following four symbols.

     -$|    upper left corner
     *$|    upper right corner
     -$~    lower left corner
     *$~    lower right corner

The box corners are placed at the BOTTOM and LEFT EDGE of the symbols.
The minimum box is one column wide and one line high.

Source    -|*|
          -~*~  Minimum box


Result    __
          _|_|  Minimum box

The maximum box is limited only by the current line length and page
length for the document.  For example,

Source    -|                                *|

            Larger box with enclosed text.
          -~                                *~

Result    __________________________________
          |                                |
          | Larger box with enclosed text. |
          _|_________________________________|


If interior lines are needed, be sure to remember that vertical lines
start at the TOP of the symbol and end at the BOTTOM of the symbol; and
that horizontal lines start and stop at the LEFT EDGE of the symbols.
(Note the difference from horizontal lines EXTERIOR to boxes.)  For
example,

Source    -|   *|
          "-1"|2*-
          -~3|~4*~

Result    _____
          _|_1__|_2_|
          _|_3__|_4_|


Superscripts and subscripts:
Superscripts and subscripts are created by placing the letter "s"
(either uppercase or lowercase) and one of the two vertical motion
characters at the point where the baseline change is to occur.
Alternatively, "S" for superscript or "s" for subscript and a
replicator character may be used.  When using superscripts and
subscripts, the user must remember to return to the normal text
baseline.  For example, the chemical symbol for water could be given
as,

   Hs$v2^$s0

The baseline offset for superscripts and subscripts is one third of the
current linespace value but the feature is effective only for those
devices capable of fractional linespacing.  The constructs are,


 S$^   superscript
 s$^   superscript
 S$"   superscript
 S$'   superscript
 S$v   subscript
 s$v   subscript
 s$"   subscript
 s$'   subscript

Source    A superscript - xS$^2S$v and a subscript - HS$v2S$^0.

          A superscript - xS^2Sv and a subscript - HSv2S^0.

Result    A superscript - x2 and a subscript - H20.


Half-lines:
Half-lines are created by placing the letter "h" (either uppercase or
lowercase) and one of the two vertical motion characters at the point
where the baseline change is to occur.  Alternatively, "H" for
half-line up or "h" for half-line down and a replicator character may
be used.  When using half-lines, the user must remember to return to
the normal text baseline.

The baseline offset for half-lines is one half of the current linespace
value but the feature is effective only for those devices capable of
fractional linespacing.  The constructs are,


 H$^   half-line up
 h$^   half-line up
 H$"   half-line up
 H$'   half-line up
 H$v   half-line down
 h$v   half-line down
 h$"   half-line down
 h$'   half-line down

Source    A half-line H$vdownH$^ and H$^up.H$v

          A half-line HvdownH^ and H^up.Hv

Result    A half-line down and up.


Math symbols:
Multi-line math symbols are created by "stacking" the appropriate math
symbol construct in the same input column for the desired number of
lines.  The constructs are given as one of the math symbol selector
characters below and the alphanumeric character representing the
desired size.  The maximum symbol size is 56.  The size character and
the number of input lines given should be the same.

    Note -- It is critical that text filling be off and that alignment
            be flush left for these constructs so that the positioning
            of the symbol elements are maintained.

The selector characters are,


 [   opening bracket
 ]   closing bracket
 {   opening brace
 }   closing brace
 (   opening parenthesis
 )   closing parenthesis
 |   single line (Boolean OR)
 =   double line (concatenate)

In addition, the following symbols are available as "1-high" only
(these symbols may also be used in filled text),


 o$1   bullet
 /$1   division sign
 X$1   multiplication sign
 $1    asterisk
 c$1   heavy vertical line (change bar mark)

Source    1$[ 1$] 1${ 1$} ($1 )$1 1$| 1$= 1$o 1$/ 1$X *$1 1$c
            one high math symbols

          1[ 1] 1{ 1} (1 )1 1| 1= 1o 1/ 1X *1 1c one high math symbols

Result    [ ] { } ( ) | [] ox / X * (C) one high math symbols


Source    3$[ 3$] 3${ 3$} ($3 )$3 3$| 3$=
          3$[ 3$] 3${ 3$} ($3 )$3 3$| 3$= three high math symbols
          3$[ 3$] 3${ 3$} ($3 )$3 3$| 3$=

          3[ 3] 3{ 3} (3 )3 3| 3=
          3[ 3] 3{ 3} (3 )3 3| 3= three high math symbols
          3[ 3] 3{ 3} (3 )3 3| 3=

Result    [ ] { } ( ) | []
          [ ] { } ( ) | [] three high math symbols
          [ ] { } ( ) | []


Diamonds:
Diamonds are constructed by defining their vertices with the following
four symbols.

     ^$"    top vertex
     v$"    bottom vertex
     <$"    left vertex
     >$"    right vertex

Top vertices are positioned at the BOTTOM of the symbol; left and right
vertices at the LEFT and RIGHT edges, respectively, of the symbols; and
bottom vertices at the TOP of the symbol.


Diamonds must always be an ODD number of lines high and the top and
bottom vertex symbols must appear in the same column.  The left and
right vertex symbols must appear on the mid-way line between the top
and bottom symbols; must be centered on the column containing the top
and bottom symbols; and must be separated by the same number of columns
as there are lines separating the top and bottom symbols.  Symbols for
diamond vertices may NOT appear in column 1.

The minimum diamond is one line high and one column wide and has two
forms as shown below.  The first form has poor appearance on an ASCII
terminal but looks good on a plotting terminal.


Source    "^  "<">
          "v

Result    ^  <>
          v

The maximum diamond is limited only by the current line length and page
length.

Source     "^       "^
          "< ">
           "v     "<   ">

                   "v


Result     ^       ^
          < >     / \
           v     <   >
                  \ /
                   v


Lozenges:
Lozenges (flattened diamonds) are constructed by defining their four
corners and their two vertices with the following five symbols.

     -$/              upper left corner
     *$\              upper right corner
     -$~$\            lower left corner
     *$~$/            lower right corner
     \$~$/            left or right vertex

The four corners are positioned at the BOTTOM of the symbols; left and
right corners at the LEFT and RIGHT edges, respectively, of the
symbols; and left and right vertices at the LEFT and RIGHT edges,
respectively, of the symbols.


Lozenges must always be an ODD number of lines high and the upper and
lower corners symbols must appear in the same column on either side.
The left and right vertex symbols must appear on the mid-way line
between the top and bottom symbols and must lie to the left and right,
respectively, of their corners the same number of columns as there are
lines separating them from the top and bottom symbols.  Symbols for
lozenge corners and vertices may NOT appear in column 1.

The minimum lozenge is three lines high and three columns wide.

Source     *-/\        superposed upper left- and right-corners
          /\~ /\~
           *-/\~        superposed lower left- and right-corners


Result     _
          / \
          \_/

The maximum lozenge is limited only by the current line length and page
length.

Source     -/         *\     -/  *\
          /\~  Is the   /\~
           -\~flag set?*/~
                        /\~        /\~
   
   
                           -\~  */~


Result     ___________     ____
          /  Is the   \   /    \
          \__f_l_a_g__s_e_t_?_/  /      \
                        /        \
                        \        /
                         \      /
                          \____/


Rules:
Typographical rules are created by giving their starting and ending
points with the constructs below.  Rules are started by giving a rule
selector character and any other line art character in an artwork
construct and are ended by giving the appropriate terminator character
with any other line art character in an artwork construct.

Unterminated rules that attempt to cross either page margin result in
error messages.  Unterminated rules that reach the end of the artwork
block are terminated gracefully.  The rule selector and terminator
characters are,

 -   horizontal rule
 |   vertical rule
 \   left slant rule


 /   right slant rule
 *   horizontal terminator
 ~   vertical and slant terminator

Source    ~$| v$|$~ ~$|$~ -$* -$"-$* -$" -$** -$" Some text -$*
            -$"Some-$* <$-*$- -$">$* >$- >$*
          More text    More

          | ~ ~ * "* " * " Some text *Some* -- "* - * *
                           More text  More

Result    | |v |^  _ __ ___S_o_m_e__t_e_x_t_ __S_o_m_e _< __> _<__>
                   More text    More


Circles and rounded boxes:
A circle may be created by giving a left and a right parenthesis, each
with a replicator character, in artwork constructs separated by exactly
one column.  The separating column may be used for a single character.
The resulting circle is three lines high.  No other circle size is
provided.

A rounded box may be created by opening up the space between the
parenthesis constructs and giving horizontal rules in the line before
and the line after the one containing the parentheses.  The extra space
may be used for any text.  The constructs are,

 ($"   left semicircle
 )$"   right semicircle


Source          "$-   -$*
          "$( "$)  "$(H$vAH$^"$)  "$( H$vboxH$^ "$)
                "$-   -$*

                -   *
          ( )  (vA^)  ( vbox^ )
                -   *

Result    ( )  (A)  ( box )
