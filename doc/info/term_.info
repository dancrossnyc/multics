07/25/86  term_

The term_ subroutine performs the same operation as certain hcs_ entry
points; however, the term_ entry points also unsnap links and deal with
object MSFs correctly.  The term_ entry points and corresponding hcs_
entry points are:

    term_                  hcs_$terminate_file
    term_$seg_ptr          hcs_$terminate_seg
    term_$single_refname   hcs_$terminate_name

Use of the term_ subroutine is preferred to the corresponding hcs_
entry points since term_ unsnaps links in addition to terminating the
segment.  The term_ subroutine also deals with terminating portions
of object MSFs by terminating all of the components to prevent them
from becoming inconsistent.


Entry points in term_:
   (List is generated by the help command)


:Entry: term_: 07/25/86  term_


Function: terminates the reference names of a segment or MSF and
removes the file from the caller's address space and the appropriate
combined linkage segment.  It also unsnaps any links in the combined
linkage segments that contain references to the file.


Syntax:
declare term_ entry (char(*), char(*), fixed bin(35));
call term_ (dir_path, entryname, code);


Arguments:
dir_path
   is the pathname of the containing directory.  (Input)
entryname
   is the entryname of the segment or MSF.  (Input)
code
   is a standard status code.  (Output)


:Entry:  refname:  07/25/86 term_$refname


Function:  This entry point performs the same function as the term_
entry point given a reference name rather than a pathname.


Syntax:
declare term_$refname entry (char(*), fixed bin(35));
call term_$refname (ref_name, code);


Arguments:
ref_name
   is the reference name of the segment or MSF.  (Input)
code
   is a standard status code.  (Output)


:Entry:  seg_ptr:  07/25/86 term_$seg_ptr


Function:  This entry point performs the same function as the term_
entry point given a pointer to the segment.  If the segment pointed
to is a component of an object MSF, all of the components are
terminated.


Syntax:
declare term_$seg_ptr entry (ptr, fixed bin(35));
call term_$seg_ptr (seg_ptr, code);


Arguments:
seg_ptr
   is a pointer to the segment.  (Input)
code
   is a standard status code.  (Output)


:Entry:  single_refname:  07/25/86 term_$single_refname


Function:  This entry point allows termination of a single reference
name.  The segment or MSF is not made unknown unless the specified
reference name was the only reference name initiated for the file.


Syntax:
declare term_$single_refname entry (char(*), fixed bin(35));
call term_$single_refname (ref_name, code);


Arguments:
ref_name
   is a reference name of the file.  (Input)
code
   is a standard status code.  (Output)


:Entry:  unsnap:  07/25/86 term_$unsnap


Function:  This entry point unsnaps links to the segment or MSF but
does not terminate any reference names or make the file unknown.


Syntax:
declare term_$unsnap entry (ptr, fixed bin(35));
call term_$unsnap (seg_ptr, code);


Arguments:
seg_ptr
   is a pointer to the file.  (Input)
code
   is a standard status code.  (Output)
