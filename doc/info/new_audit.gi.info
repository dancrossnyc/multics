03/20/81  -  Summary description of the new audit facility.

There are many changed aspects of audit in this version.
There are bug fixes, additional features, and some incompatible
interface changes.  The audit file format is unchanged however, so old
audit files may be used with the new audit.


New attach_audit: 

     Additional control argument, -modes, allows you to specify the
modes to be set on the switch being audited, usually user_i/o, without
entering a separate input line.  It takes a mode string as an
argument.


New audit request:

    There is one new audit request, !d, and one changed request, !n.
These are going to work as originally documented.  !n used to delete
the line, as though nothing had been typed, now it is simply stripped
from the line.  This new function for !n is useful when you want to
end a line with what would otherwise be interpreted as an audit
request.  Unrecognized requests will now be audited.  Due to a bug in
the audit request processing, when audit saw a line that ended in the
magic sequence, <trigger character><any character><new line>, which
didn't have a recognized request in it, it simply passed the line on
without logging it.


New audit editor:

    The editor now prompts, by default, with the string "audit
editor:" or "audit editor (level <level number>):" when <level number>
is greater than 1.  The level is the depth of recursive invocations of
the audit editor.  There are three new audit modes to deal with the
prompting, audit_use_editor_prompt for turning it on and off,
audit_editor_prompt_string=<string> for setting the string.  The
string is an ioa_ control string with the first argument being a bit
which is on if the level is greater than 1, and the second argument is
the level.  The default control string is 
"^/audit editor^[(^d)^]:^2x".  


All of the requests which are of the form .<character> now have
"short" names of <character>, the exception to this is ".." which
remains unchanged.  There is now an "=" request which prints the
current entry number.  This entry number is as understood by the audit
editor, which only counts entries matching the default entry tag, or
class identifier.  Hence, by changing the default tag with the ":"
request or the "d" request the current line number can change.


New display_audit_file:

    Daf takes a new argument, -output_file or -of.  There are four new
control arguments for controlling output format: -insert_nl,
-no_insert_nl, -append_nl and -no_append_nl.  In the absence of any of
these arguments, daf decides whether or not to insert or append
newlines based on the presence of a leader (forced by -etn, -cli, or
-mt) and the length of the output line (set by -ll explicitly or by a
get_line_length_ on the output switch).  Newline insertion is done to
prevent lines from wrapping on the terminal, and to keep the leftmost
columns free of all characters except leader information.  Newline
appending is done to insure that printing of an entry always begins at
the left margin, this is necessary when an entry in the audit file
doesn't end in a newline.
