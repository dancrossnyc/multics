08/19/85  send_message, sm

Syntax as a command:  sm {-control_args} address {message}


Function: sends a message(s), one line at a time, to a given user on a
given project or to a specified mailbox.


Arguments:
address
   can be of the form Person_id.Project_id to specify a mailbox
   belonging to that person; a string containing at least one > or < to
   specify the pathname of a mailbox; one of the arguments -mailbox
   (-mbx), -log, or -save (-sv), immediately followed by a string
   giving the pathname of a mailbox, logbox, or save box, respectively;
   -last_message_destination (-lmds) if you have used send_message in
   this process; or -last_message_sender (-lms) if a message has been
   received in the user's default mailbox.  All arguments beginning
   with the first noncontrol argument after a destination are
   considered to be message text.


message
   is anything that appears up to the end of the command.  It can be
   one or more words.  If you omit it, send_message enters an input
   loop and you can send a multiline message (see "Notes on input loop"
   below).


Control arguments:
-access_class STR, -acc STR
   sends messages at the specified AIM access class.  The ring 1
   privilege must be turned on in the sending process.
-acknowledge, -ack
   requests that the recipient's process return an acknowledgement
   message when the message is read.  It implies -brief.
-acknowledge_if_deferred, -ackid
   requests that the recipient's process return an acknowledgement
   message when the message is read only if the recipient is not
   accepting or has deferred messages.  The state of requesting
   acknowledgements is not affected while in the input loop by changes
   in the recipient's wakeup state.


-brief, -bf
   does not print an error message if the message cannot be sent or if
   the recipient is not accepting messages.
-comment STR, -com STR
   adds a comment of the form (STR) after the user's person and in the
   message's header.  The default is to use the value of the
   "full_name._" variable in the user's default value segment as a
   comment.
-escape, -esc
   turns on the ".."  escape convention to execute Multics commands
   from within input mode for the current message.  (Default)
-express, -xps
   sends the message only if the recipient is likely to see it
   immediately, that is, is currently accepting messages.


-long, -lg
    prints error messages.  (Default)
-no_acknowledge, -nack
   requests that the recipient's process not return an acknowledgment
   message when the message is read.  (Default)
-no_comment, -ncom
   suppresses adding of a comment.
-no_escape, -nesc
   turns off the ".."  escape convention.
-no_express, -nxps
   always sends the message.  (Default)
-no_print_destination, -nprds
   does not print the destination to which the message is being sent if
   the messaage is supplied on the command line.  (Default, if you use
   -lmds and -lms)


-no_update_destination, -nupds
   does not set the last message destination.
-print_destination, -prds
   prints the destination to which the message is being sent if you
   supplied the message on the command line.  (Default, if you don't
   use -lmds and -lms)
-silent, -sil
   suppresses all error messages.
-update_destination, -upds
   causes the last message destination to be set.  (Default)


Notes: If the message is to contain a parenthesis, bracket, or
semicolon character, enclose it in quotes because that character is not
treated specially by send_message.  You can type a single quote
character as """".

For a description of the mailbox, see accept_messages and print_mail.


Notes on input loop: When send_messsage enters the input loop it types
"Input to <destination>" and accepts lines that are sent one at a time.
Input loop is terminated by a line consisting solely of a period.  When
in input loop, you can execute Multics commands if typed on a line
beginning with two periods.  You can receive messages while in the
input loop, so this is a way to hold conversations.

If the user whom you are sending messages to changes how she is
accepting messages (e.g., defers messages, logs out), send_message
prints a message to to that effect unless you supplied -brief or
-silent.
