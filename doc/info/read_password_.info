02/08/84  read_password_


Entry points in read_password_:
   (List is generated by the help command)


:Entry: read_password_: 02/08/84  read_password_

Function: reads a single line from the users' terminal (actually from
the user_input I/O switch).  It attempts to hide the input line by
turning the printing mechanism off before reading and turning it back
on afterwards.  If the printing mechanism cannot be turned off, then a
mask consisting of several layers of printing designed to "black out"
the page is printed.  One of the layers of printing is pseudo-randomly
generated so that it will be different each time the subroutine is
called, thus making it difficult to analyze the layers of
overprinting.  The mask is 12 characters long.


Syntax:
declare read_password_ entry (char(*), char(*));
call read_password_ (prompt, password);


Arguments:
prompt
   is a message to be printed before the password is read.  It can be
   any length.  A newline character is always printed after the
   prompting message.  (Input)
password
   is the password that the user typed.  It can be up to 120 characters
   long.  (Output)


Notes:  The password is processed as follows -- tab characters are
translated to blanks.  Leading blanks are removed.  Characters after
any embedded blanks are removed.  If the resulting password is all
blank, a single asterisk ("*") is returned, otherwise the password is
returned.


:Entry:  switch:  02/08/84 read_password_$switch


Function:  This entry is similar to read_password_, but it allows the
caller to specify the I/O switches to be used to print the prompt and
read the password.


Syntax:
declare read_password_$switch entry (ptr, ptr, char(*), char(*),
     fixed bin(35));
call read_password_$switch (output_switch, input_switch, prompt,
     password, code);


Arguments:
output_switch
   is a pointer to the I/O switch on which the prompt, and if necessary
   the password mask, is printed.  (Input)
input_switch
   is a pointer to the I/O switch from which the password is read.
   (Input)
prompt
   is a message to be printed before the password is read.  It can be
   any length.  A newline character is always printed after the
   prompting message.  (Input)


password
   is the password that the user typed.  It can be up to 120 characters
   long.  (Output)
code
   is a standard system status code which is non-zero only if a
   password could not be read.  (Output)


Notes:  The password is processed as follows -- tab characters are
translated to blanks.  Leading blanks are removed.  Characters after
any embedded blanks are removed.  If the resulting password is all
blank, a single asterisk ("*") is returned; otherwise the password is
returned.
