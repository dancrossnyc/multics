
09/21/87  volume_backup 
Known errors in the current release of volume_backup.
#	Associated TR's
Description

94  phx20536
Problem Description:

The dumper bit map segment is not copied to disk after each dump cycle.

The only time the dumper bit map segment is copied to the disk label is
when the PV is taken off line.  A problem arises when a system
experiences a crash where emergency shutdown procedures cannot be
performed.  The ESD is responsible for taking each PV off line.
Because the packs are not updated, the dumper bit map may not represent
an accurate picture of what has been dumped from the pack.  The result
being that after a crash, the PV can only be restored from the last
time that it was shutdown.


Proposed Solution:

To resolve this problem, the volume dumper process should be enhanced
to copy the memory image of each PV's bit map to the disk label after
the PV is dumped.  To implement this change a call will be added to the
ring-0 code of the dumper - hc_dmpr_primitives to call a new entry in
the fsout_vol ring-0 subroutine.  The fsout_vol subroutine is the entry
called at PV shutdown time copy the dbm_seg to the disk label.  A new
entry point will be added to the fsout_vol subroutine that will allow
the dbm_seg to be copied to disk without freeing the memory image of
the dbm_seg.


93  phx20716
retrieve_from_volume [verified]
         Said it couldn't recover branch but went ahead and did it
               anyway.  .

 As time and resources permit this problem will be evaluated and better
defined at a future date.

92  phx20715
retrieve_from_volume [verified]
         Makes multiple attempts to retrieve the same segment from the
               same tape.  .

 As time and resources permit this problem will be evaluated and better
defined at a future date.


91  phx20691
volume_retrieve [investigating]
         The volume_retrieve command does not properly retrieve segments
               if missing parent directories need to be retrieved.  .

 As time and resources permit this problem will be evaluated and better
defined at a future date.

90  phx20000
retrievals [investigating]
         Retrieve dies if certain i/o switches are not closed.  .

As time and resources permit this problem will be evaluated and better
defined at a future date.


89  phx17264
Volume Reloader [verified]
         Unable to use the "-input_volume_desc" control argument for ring
               1 volume reloads.  .

As time and resources permit this problem will be evaluated and better
defined at a future date.

88  phx20537
Volume Backup [investigating]
          Volume retriever takes vtoc error under certain circumstances..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


87  phx20513
Volume Backup [investigating]
          The RPV pvid field in the volog headers are not being set.

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

86  phx20497
Volume Retriever [investigating]
          If a user requests the retrieval of a file >A>B>C>x via the err
          command such that x doesn't currently exist online and C is a
	segment, the Volume Retriever will go to level 2 on the bad_dir_
          condition..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


85  phx20459
Volume Reloader [verified]
          reload_volume_ argument discrepancy.

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

84  phx20315
Volume Retrieval [investigating]
          directory retrieval failed using -subtree when the pathname was
          one using an add_name for the directory.  The add_name was what
	was supplied by the user..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


83  phx20219
IO Daemons, Absentee Facility, Volume Retriever [verified]
          It appears as though the user can pass invalid information onto
          the daemons and absentee facility, causing either sub_err_
          conditions to be raised or an output request's "Requested" time
          to be set to an arbit

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

80  phx19037
Volume Dumper [investigating]
          lock wait time too short.

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


79  phx18852
Volume Reloader [investigating]
          consolidated dump map not rebuilt on reload.

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

78  phx18763
Volume Dumper [investigating]
          inconsistencies in volume data bases.

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


76  phx18652
Volume Retriever [error]
          (volume_retriever) Use of the -subtree argument in volume
	retrievals generates proxy requests.  A sufficiently large
          hierarchy blows out the volume_retriever queues..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

75  phx18545
Volume Dumper [verified]
          The entry dmpr_report_$error_output doesn't create very good
          unique names for its error files..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


74  phx18518
volume dumper and manager_volume_pool_ [error]
          The Volume Software nails your default volume segment..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

73  phx18462
Volume Retriever [investigating]
          if volume retriever cannot recover an object after recovering
          the branch, he fails to clean up after himself..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


72  phx18419
Volume Dumper [error]
          A typographical error in telling the volume dumper what tape to
          use results in the dump to be aborted.

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

71  phx18417
Volume Dumper [verified]
          hc_dmpr_primitives should provide all available info when
	encountering an error so corrective action can be performed..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


70  phx18357
Volume Retriever [investigating]
          In certain cases the volume retriever will attempt to search
          tapes that it cannot possibly satisfy a request from..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

69  phx18049
Volume Backup Tools [error]
          The -test option to purge_volume_log fails to unlock pvologs
          under certain conditions..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


68  phx17936
Volume Dumper [investigating]
          tape mount problems leave dead pvolog segments around..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

67  phx17735
Volume Retriever [investigating]
          incorrect type in message for cross retrievals.

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


66  phx17577
Volume Retriever [investigating]
          Will not volume retrieve links..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

63  phx17165
Volume Retriever [investigating]
          "Failed to append branch for ^a because object already there
           with other name".

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


62  phx17164
Volume Retriever [investigating]
          "Failed to delete user queue entry;  Message not found.".

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

61  phx17011
Volume Dumper [verified]
          retry strategy in dump_volume_ ineffectual.

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


60  phx16964
Volume Retriever [verified]
          There is no facility to Volume Retrieve a level-1 directory..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

55  phx16727
Volume Retriever [verified]
          Partial completion of volume retrieval can result in disconnect
          failures..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


51  phx15590
Volume Retriever [limitation]
          Renaming a project generates retrieval problems..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

48  phx15579
Volume Retriever [error] Linked TRs:  phx13481
          Retrieving a mailbox should not require a ring_1 process..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


47  phx15458
Volume Retriever [investigating]
          Should adjust bitcounts to character, NOT word boundaries..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.

45  phx14444
Volume Retriever [verified]
          Some error messages have about 20 trailing blanks..

 As time and resources permit this problem will be evaluated
 and better defined at a future date.


38  phx17732
A recovered volume log is not truncated or its bit count set properly.

37  phx16302
If the error message at line 151 of merge_volume_log.pl1 (null entry in
both logs) is emitted, it will be repeated forever since neither i nor
j are advancing within the loop.

Also if the two logs being merged contain duplicate entries, then both
entries are included in the merged log.  Now this is not strictly
within the mandate of merge_volume_log (which is supposed to merge a
newly created volume log with an older copy) but there are instances
where this arises.


36  phx14574
The module dump_volume_ attempts to handle and recover from a couple of
error conditions during dumping -- segfault errors by retrying the
output up to ten times, and page_fault_error by skipping the current
object.  The technique employed for both of these can result in serious
problems if the tape thus created is subsequently used for a reload.
The problems may potentially extend to many segments not directly
involved in the original dump errors.

When writing an object to tape, dump_volume_ calls dmpr_output_ to
write both the backup header and the actual data object.  The length of
the data object is stored in the header in
backup_volume_record.rec2_len.  If a segfault or page_fault_error
occurs during the output of the object, then the resulting tape_mult_
image for the object consists of a header which says that rec2_len
characters have been written to tape for the object and an arbitrary
number of characters (less than rec2_len) which have actually made it
to the tape.


When the reloader goes to read such a tape, the following occurs:  it
reads the header record which indicates that the object consists of the
following rec2_len characters on tape.  It issues a read for rec2_len
characters and gobbles up both the partial dump of the object PLUS the
header and contents of possible many other segments to satisfy the
rec2_len specification.  When it attempts to read the next header on
the tape, it realizes that it is out of synchronization and attempts
recovery.  By now, however, the original segment which sustained the
dump error contains bad pages consisting of whatever was on the tape to
a length of rec2_len characters (including backup headers and pages of
other user's segments); segments which were supposedly dumped without
error after the original segment are not reloaded at all because they
have been absorbed into the original segment up to its quota of
rec2_len characters; and the segment encountered after rec2_len
characters is also lost because of the reloader skipping during
resynchronization.


30  
The Volume Dumper must force write each database after modification.
This could cause some degradation in dumping, but esd-less crashes
would be less painful when one finds a database with null pages just
when one wishes to use it in a hurry.

28  phx15580 phx17205
This is a generalized placeholder for Volume Retriever performance
problems in regard to subtree retrievals.  I am not convinced that
there is much that can be done, but just in case...

26  phx16930
error in the implementation of -stop_vtocx


24  phx16692
Companion entry to 626.  This holds the bug in the Volume retriever
that mis-uses the authorization passed to hardcore to append a segment.

19  phx13032
retrieve_from_volume, the -list control argument causes all other
control arguments to be ignored (silently).  It also says nothing when
there are no pending retreievals.

11  phx13031
If the uid of an object cannot be determined, ie the parent dir does
not exist, the message "Online records indicate that X cannot be found
..." This is a truly mis-leading error message.


10  phx13032
The error message from retv -list -any_other_arguments is too terse.

8  phx11848
A window exists between closing one dump volume and opening the next
(volume log entry) in which a restart will get an incorrect cycle_uid.
This will make reload groups inconsistent.
