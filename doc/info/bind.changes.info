11/19/84 bind.changes

The binder has been changed to allow an unlimited number of object
components to be bound.  (The bound segment may not, however, exceed
one segment.)

The old limit of 30 has been removed from the number of input and
updated archives.

Standalone segments are now accepted by using the new -segment control
argument.  Also see the new -archive control argument.

The -bindfile control argument has been added which allows the user to
override the bindfile seletion method.

Zero-length objects will no longer result in fatal errors.  A warning
is issued and the object is ignored.

The bindfile parsing routine has been rewritten using the reduction
compiler.  As a result, the error messages look slightly
different than before, e.g.,

		ERROR 22 SEVERITY 3 in LINE 20
		Objectname foo not mentioned in order statement

2 new bindfile master keywords have been added: Partial_Order and
Ignore.

For more information on the above see the binder help file (bind.info).

Error numbers 16, 22, and 23 in the binder error list have been fixed.
Note that error 16 caused adding the names of all the components to
the bound segment if the "Addname:;" statement were included in the
bindfile.  The code now conforms to the documentation and only the
names of those components that have external symbols retained will be
added.

When adding names, the binder now uses nd_handler_ to resolve name
duplications.  This may cause names to be removed from other entries
in the same directory.  Before removing the last name from another
segment, the user is queried if that entry is to be deleted.

Error 17 has been partially fixed.  If "syntax" errors are found in
the bindfile, the existing bound segment will not be truncated.
"Semantic" errors, e.g.
	...
	objectname: foo;
	retain: bar;
	...
where entrypoint "bar" does not exist in "foo", are detected upon
examining the individual object components when rebuilding of the
bound segment has already started.
