06/04/80	dsmd_

Function:	 This is the subroutine interface to Multics Relational Data Store
(MRDS) data submodels.  It allows retrieving information about the submodel
definition.


Notes for dsmd_:  This entry is obsolete, see msmi_


Entry points in dsmd_:


:Entry:close_dsm:  05/16/80  dsmd_$close_dsm

Syntax:
call dsmd_$close_dsm (code) ;
dcl dsmd_$close_dsm entry (fixed bin (35)) ;


Notes:  Code is the standard status code.  It will return
mrds_error_$incorrect_dsmd_seq if the submodel was not open.



:Entry:get_dsm_header:  05/16/80  dsmd_$get_dsm_header

Syntax:
call dsmd_$get_dsm_header (area_ptr, hd_ptr, code) ;
dcl dsmd_$get_dsm_header entry (ptr, ptr, fixed bin (35)) ;


Notes:  The area_ptr points to a user defined area in which the header
structure will be allocated.

The hd_ptr points to the header information structure being returned.

Code is the standard status code.

The header structure is declared as follows:

dcl 1 dsm_header_record based,
    2 dsm_generator_version fixed bin init (1),
    2 date_time_generated fixed bin (71),
    2 database_pn char (168),
    2 name char (32),
    2 num_of_relations fixed bin (35),
    2 creator_id char (32);



:Entry:get_dsm_relations:  05/16/80  dsmd_$get_dsm_relations

Syntax:
call dsmd_$get_dsm_relations (area_ptr, drel_ptr, code) ;
dcl dsmd_$get_dsm_relations entry (ptr, ptr, fixed bin (35)) ;


Notes:  The area_ptr points to a user defined area in which the relation
information structure will be allocated.

The drel_ptr points the relation information structure that will be returned.

Code is the standard system status code.

The relation information structure is declared as follows:

dcl 1 dsm_display_rels based (drel_ptr),
    2 nrels fixed bin,
    2 relation (nrels_alloc refer (dsm_display_rels.nrels)) char (32);



:Entry:get_relation:  05/16/80  dsmd_$get_relation

Syntax:
call dsmd_$get_relation (submodel_relation_name, area_ptr, str_ptr, code) ;
dcl dsmd_$get_relation entry (char(*), ptr, ptr, fixed bin (35)) ;


Notes:  The submodel relation name is the char (32) name of the relation, as
known in the submodel.

The area_ptr points to a user defined area in which to allocate the attribute
information structure.

The str_ptr points to the attribute information structure that is being
returned.

Code is the standard system status code.  It will return error_table_$no_record
if no relation by the given name was found in the submodel, or
mrds_error_$incorrect_dsmd_seq, if the submodel was not open.

The attribute information structure is declared as follows:

dcl 1 dsm_relation_str based,
    2 key,
      3 submodel_rel_name char (32),
    2 record,
      3 model_rel_name char (32),
      3 no_attributes fixed bin,
      3 attribute_info (dsm_num_attr_alloc refer (no_attributes)),
        4 submodel_att_name char (32),
        4 model_att_name char (32);



:Entry:open_dsm_read:  05/16/80  dsmd_$open_dsm_read

Syntax:
call dsmd_$open_dsm_read (submodel_path, code) ;
dcl dsmd_$open_dsm_read entry (char (*), fixed bin(35)) ;


Notes:  Submodel_path is the relative pathname of the submodel to be opened.

Code is the standard status code.  it will return error_table_$no_entry if the
path entry given does not exist, mrds_error_$not_dsm if the path does not point
to a mrds submodel, or mrds_error_$incorrect_dsmd_seq if the submodel was not
in a closed state.



