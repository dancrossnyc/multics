
09/23/87  analyze_multics 
Known errors in the current release of analyze_multics.
#	Associated TR's
Description

70  
Display on units which occur in stack.

69  
When the "-for" control argument is given with requests such as "stack"
for example, integers greater than seven (7) are not allowed.

68  phx20553
The structure name "dte" when used as "display -as dte" uses an
incorrect structure to format the output.  Instead of using ioi_dte as
the structure_names info segment states, it uses disk_table_entry for
formatting.

67  phx20262
A malformed ioa_ control string is displayed when the select_dump
request is used and the referenced dumps do not exist.

66  phx20247
azm why request aborts if a segment number is found to be out of the
range of segment numbers.

65  phx20120
The crash message is not printed any longer since BCE was implemented.

64  phx19721
azm display request will not dump a segment which is not in the fdump,
even if an online copy is available.

63  phx19335
User's process is destroyed if too many dumps are referenced within the
same azm invokation.  The process dir get too filled up.

62  phx19331
The azm stack request aborts when it can't find the stack.

61  phx19329
The azm display request does not dump segments that are not in the
fdump without specifying -instruction as a control arg.  It should by
default dump a "not dumped" segment based on the online copy after
stating it cannot be found in the dump.

60  phx19327
mc -prds sys -prs 2 thinks the "2" is a virtual address.

59  phx18934
The azm replace request does not work when attempting to replace
hardcore segments.

55  phx18803
azm_why_ aborts to multics command level via amu_error_ instead of just
aborting the request.

53  phx18785
The "stack -ag" request mis-aligns the arguments of a stack frame when
printed.

52  phx18684
The search request miscaluates the end of a segment (example is
dn355_mailbox, see TR for details).  display calculates it correctly
tho.

45  
Should not attempt to print machine conditions that are obviously
incorrect; a good test of this might be that all of the "pointer
registers" in the machine conditions do not have ITS tags where they
should.  Perhaps a -force control argument to get around this would
help.

This comes up in cases such as doing "mc pr6" to look at machine
conditions in the current stack frame, followed by another "mc pr6"--
since the first one set "pr6" to something different, the second one
should fail, and, indeed, it does, but by printing trash, rather than
any useful diagnostic.

29  phx17437
In the search request, the "Segment is not in the fdump" error message
has garbage in it (nulls) and also incorrectly references the segment
name in the msg.

Also, a "srh foo 555555555555" where foo is not a segment in the dump,
produces an error message "Invalid argument" instead of saying "Segment
foo not found in fdump" or somesuch.
