03/05/85  decode_descriptor_


The decode_descriptor_ subroutine extracts information from argument
descriptors.  It should be called by any procedure wishing to handle
variable length or variable type argument lists.  It processes the
descriptor format used by PL/I, BASIC, COBOL, FORTRAN, and Pascal.


Entry points in decode_descriptor_:
   (List is generated by the help command)


:Entry:  decode_descriptor_:  03/05/85  decode_descriptor_


Function:
extracts information from argument descriptors.


Syntax:
declare decode_descriptor_ entry (ptr, fixed bin, fixed bin,
     bit(1) aligned, fixed bin, fixed bin(24), fixed bin);
call decode_descriptor_ (ptr, n, type, packed, ndims, size, scale);


Arguments:
ptr
   points either directly at the descriptor to be decoded or at the
   argument list in which the descriptor appears.  (Input)
n
   controls which descriptor is decoded.  If n is 0, ptr points at the
   descriptor to be decoded; otherwise, ptr points at the argument list
   header and the nth descriptor is decoded.  (Input)
type
   is the data type specified by the descriptor.  (Output)
   -1 is returned if descriptors are not present in the argument list,
      if the nth descriptor does not exist, or if the descriptor is in
      an old format


packed
   describes how the data is stored.  (Output)
   "1"b   data is packed
   "0"b   data is not packed
ndims
   indicates the number of dimensions of an array.  (Output)

   N   descriptor is an array of N dimensions
   0   descriptor is a scalar
size
   is the arithmetic precision, string size, or number of structure
   elements.  (Output)
scale
   is the scale of an arithmetic value.  (Output)
