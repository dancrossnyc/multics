* ***********************************************************
* *                                                         *
* * Copyright, (C) Honeywell Information Systems Inc., 1982 *
* *                                                         *
* * Copyright (c) 1972 by Massachusetts Institute of        *
* * Technology and Honeywell Information Systems, Inc.      *
* *                                                         *
* ***********************************************************


* HISTORY COMMENTS:
*  1) change(86-02-14,Kozlowski), approve(88-08-15,MCR7965),
*     audit(88-09-08,Farley), install(88-09-20,MR12.2-1115):
*     Autobaud with <cr>, "l" and "L" at 9600, 4800, 2400, 1200 and 300 baud.
*  2) change(86-03-12,Kozlowski), approve(88-08-15,MCR7965),
*     audit(88-09-09,Farley), install(88-09-20,MR12.2-1115):
*     Allow 60 seconds for autobauding and removed 133 autobaud code.
*  3) change(88-07-22,Beattie), approve(88-08-15,MCR7965),
*     audit(88-09-09,Farley), install(88-09-20,MR12.2-1115):
*     Prepared for installation.
*                                                      END HISTORY COMMENTS


	lbl	,autobaud_tables
	ttl	control tables for automatic baud selection
	editp	on
	pmc	off
	detail	off
	pcc	off
	rem
	rem
auto	null
	symdef	auto
	symdef	autost
	rem
	symref	begin	return here in control tables after hanging up
	symref	signal	after baud set, return here to signal dialup
	symref	diftyp	exit to control tables here for 1050 or 2741
	symref	cct.2	cct for 2741 or 1050
	symref	cct.br	cct to break on all characters
	rem
	start	auto
	rem
	rem
	pmc	save,on
	csbits
	tconst
	cctdef
	rem
	tib
	pmc	restore
	rem
	ttls
*         These control tables assume the user has hit  carriage
*         return or typed either an upper case or lower case "l" at
*         some unknown baud  rate. The character(s) read at 4800 baud
*         are tested to determine the baud rate. The speeds supported
*         are:
*
*         300 baud input
*         <cr>, lc-"l", and uc-"L" all show up as a line break only
*
*         1200 baud input
*         <cr>    = 1111000 1111110            (170 176    ) any   parity
*         lc-"l" and uc-"L" show up as a line break plus
*         lc-"l"  = 1111000 1111000            (170 170    ) space parity
*         lc-"l"  = 1111000 1111000 1111000    (170 170 170) mark  parity
*         uc-"L"  = 0000000 0000000 1111000    (170 000    ) space parity
*         uc-"L"  = 0000000                    (000        ) mark  parity
*
*         2400 baud input
*         <cr>    = 1100110 0000000            (146 000    ) space parity
*         <cr>    = 1100110 1100000            (146 140    ) mark  parity
*         lc-"l"  = 1100000 0011110            (140 036    ) space parity
*         lc-"l"  = 1100000 1111110            (140 176    ) mark  parity
*         uc-"L"  = 1100000 0011000            (140 030    ) space parity
*         uc-"L"  = 1100000 1111000            (140 170    ) mark  parity
*         4800 baud input
*         <cr>    = 0001101                    (015        ) any   parity
*         lc-"l"  = 1101100                    (154        ) any   parity
*         uc-"L"  = 1001100                    (114        ) any   parity
*         9600 baud input
*         <cr>    = 1111110                    (176        ) space parity
*         <cr>    = 1111111                    (177        ) mark  parity
*                 = 1111001                    (171        ) sometimes...
*         lc-"l"  = 1111101                    (175        ) any   parity
*         uc-"L"  = 1111101                    (175        ) any   parity
	rem
*	define character codes for making these tests
	rem
cc.000	bool	000
cc.015	bool	015
cc.030	bool	030
cc.036	bool	036
cc.114	bool	114
cc.140	bool	140
cc.146	bool	146
cc.154	bool	154
cc.170	bool	170
cc.171	bool	171
cc.175	bool	175
cc.176	bool	176
cc.177	bool	177
	rem
*	character strings for testing results of autobaud test
	rem
ck1200	chstr	(rescan,match,cc.170)
cl1200	chstr	(rescan,match,cc.000)
ck2400	chstr	(rescan,match,cc.146,ignore,cmplst,cc.140,cc.000)
cl2400	chstr	(rescan,match,cc.140
	etc	,ignore,cmplst,cc.176,cc.170,cc.036,cc.030)
ck4800	chstr	(rescan,cmplst,cc.015,cc.154,cc.114)
ck9600	chstr	(rescan,cmplst,cc.177,cc.176,cc.175,cc.171)
	eject
autost	clrflg	(tfkybd,tfprtr,tfctrl,tfsftr)
	rem
retry	stpchn
	dumpin
	config		configure initially to 4800 baud
	baud	4800
	rmode	fg.lpr+fg.lpo	receive parity off
	smode	fg.lps+fg.8bt	send 8-bit chars with parity
	contrl	stat	check current status
	wait	0,0,0
	status	0,cts,ldoff
	status	0,cd,ldoff
	status	suprec,0,st1200	this means new 1200 baud modem
	status	0,suprec,normal	this means old-style modems
	rem
normal	setcct	cct.br	cct to break on all characters
	contrl	rxmit+srec
	rem
	setime	60	Wait a reasonable time
	wait	hang,0,0
	status	0,cts,ldoff
	status	0,cd,ldoff
	status	brkchr,0,gotchr	a character found
	status	break,0,ckbrk	give character time to arrive
	rem
ckbrk	contrl	stat	check current status
	wait	0,0,0	incoming char should be here by now
	status	0,cd,ldoff
	status	0,cts,ldoff
	status	brkchr,0,gotchr	a character found is likely 1200
	status	break,brkchr,set300
	rem	break with no characters is 300 baud

gotchr	setime	-250	wait 1/4 second for rest
	rem
	wait	ready,0,0
	status	0,cd,ldoff
	status	0,cts,ldoff
	rem
ready	stpchn
	rem
scan1	inscan	ck1200,scan2
	goto	st1200
scan2	inscan	cl1200,scan3
	goto	st1200
scan3	inscan	ck2400,scan4
	goto	st2400
scan4	inscan	cl2400,scan5
	goto	st2400
scan5	inscan	ck4800,scan6
	goto	st4800
scan6	inscan	ck9600,retry
	goto	st9600
	rem
*	come here when baud determined
	rem
st9600	scntr	9600
	goto	join
	rem
st4800	scntr	4800
	goto	join
	rem
st2400	scntr	2400
	goto	join
	rem
st1200	scntr	1200
	goto	join
	rem
set300	scntr	300
	goto	join
	rem
*	come here to finish up and return
	rem
join	config
	baud	0	baud rate is in counter
	dumpin
	setcct	scc.df	to normal hsla cct for modes
	goto	signal	back to signal dialup
	rem
*	come here if a vital dataset lead drops
	rem
ldoff	setime	3	give it a chance to change its mind
	wait	hang,0,0	but after 3 secs give up
	status	dsr+cts+cd,0,retry line is back to normal, start over
	rem
*	come here to hang up terminal after timeout 
	rem
hang	stpchn
	dumpin
	dmpout
	contrl	rdtr
	setime	5
	wait	hung,0,0
	status	0,cts,hung
hung	goto	begin	back to top of control tables
	rem
	end
