* ***********************************************************
* *                                                         *
* * Copyright, (C) Honeywell Information Systems Inc., 1982 *
* *                                                         *
* * Copyright (c) 1972 by Massachusetts Institute of        *
* * Technology and Honeywell Information Systems, Inc.      *
* *                                                         *
* ***********************************************************

	lbl	,vip_tables
	ttl	vip_tables
	editp 	on
	pmc	off
	detail	off
	pcc	off
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*	vip_tables, vip
*
*	control tables for a vip terminal, hardwired or on 201c modem
*
*	written 07/12/76 by Robert S. Coren
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	rem
	rem
vip	null
	symdef	vip
	symdef	vstart
	symdef	cct.9
	rem
	symref	begin
	symref	hungup
	symref	error
	rem
	rem
	start	vip
	pmc	save,on
	tib
	csbits
	tconst
	pmc	restore
	ttls	constants for vip_tables
vipdsp	bool	140	address display
	rem
	rem
	rem	char positions in tib extension
	rem
intype	bool	460
outype	bool	461
fcode	bool	462
reason	bool	463
wbusy	bool	464
	rem
	rem	wbusy values
	rem
no	bool	000	did not get busy message
yes	bool	001	did get busy message
	rem
	rem
	rem	output reason values
	rem
wmsg	bool	001	regular output message
reply	bool	002	ack or nak response
	rem
	rem
	rem	special status codes
	rem
pgof	bool	156	page overflow
busy	bool	157	busy, terminal offline
	rem
	rem
quiet	bool	177	fake message code for "quiescent" message
	rem
	rem
	rem	input scan control strings
	rem
irnl	chstr	(rescan,search,etx,replac,nl)
irff	chstr	(rescan,search,etx,replac,ff)
ingood	chstr	(rescan,search,soh,replac,null,ignore,replac,null,ignore,
	etc	movchr,intype,replac,null,ignore,movchr,fcode,replac,null
	etc	,ignore,replac,null,ignore,match,stx,replac,null)
inlrc	chstr	(rescan,search,soh,ignore,strlrc,search,etx,ignore,cmplrc
	etc	,replac,null)
issoh	chstr	(rescan,match,soh,ignore)
iseot1	chstr	(rescan,match,eot)
iseot2	chstr	(match,eot)
	rem
	rem
	rem	output scan control strings
	rem
setack	chstr	(rescan,search,soh,ignore,ignore,replac,outype)
setlrc	chstr	(rescan,search,soh,ignore,strlrc,search,etx,ignore,outlrc
	etc	)
setetx	chstr	(rescan,endchn,ignore,replac,etx)
seteot	chstr	(rescan,search,etx,ignore,ignore,replac,syn,ignore,replac
	etc	,syn,ignore,replac,syn,ignore,replac,syn,ignore,replac,eo
	etc	t)
	rem
	pmc	save,on
	ttls	vip cct
	rem
	cctdef
	rem
ct.vip	equ	ct.sw+ct.t1s
ct.eom	equ	ct.sw+ct.t0s+ct.syn
	rem
	rem
	base	64
cct.9	null	* cct for vip, terminate on etx + bcc, resync on eot
	rem
	vfd	9/ct.ncs,9/ct.ncs * 000   001
	vfd	9/ct.ncs,9/ct.vip * 002   etx
	vfd	9/ct.eom,9/ct.ncs * eot   005
	vfd	9/ct.ncs,9/ct.ncs * 006   007
	vfd	9/ct.ncs,9/ct.ncs * 010   011
	vfd	9/ct.ncs,9/ct.ncs * 012   013
	vfd	9/ct.ncs,9/ct.ncs * 014   015
	vfd	9/ct.ncs,9/ct.ncs * 016   017
	vfd	9/ct.ncs,9/ct.ncs * 020   021
	vfd	9/ct.ncs,9/ct.ncs * 022   023
	vfd	9/ct.ncs,9/ct.ncs * 024   025
	vfd	9/ct.ign,9/ct.ncs * syn   027
	vfd	9/ct.ncs,9/ct.ncs * 030   031
	vfd	9/ct.ncs,9/ct.ncs * 032   033
	vfd	9/ct.ncs,9/ct.ncs * 034   035
	vfd	9/ct.ncs,9/ct.ncs * 036   037
	rem
	rem
	pmc	restore
	rem
	rem
	rem
	rem	canned output messages
	rem
ackmsg	chstr	(syn,syn,syn,syn,soh,vipdsp,null,space,space,stx,etx,sete
	etc	om)
outhdr	chstr	(syn,syn,syn,syn,soh,vipdsp,null,space,space,stx)
	ttls	dialup sequence
	rem
vstart	tstflg	tflisn,vlisn
	wait	0,0,begin	/* not listening,wait for further notice */
	rem
vlisn	contrl	sdtr+stat	/* start seeing who's there */
	tstflg	tfdlup,vdial	/* dialup or hardwired? */
	wait	0,0,vtlisn	/* hardwired, wait for it to happen */
	rem
	status	cd+dsr,0,dialed
vdial	wait	0,0,vtlisn	/* wait for someone to call */
	status	dsr,0,dialed
	rem
vtlisn	tstglb	gbf6up,vtest1	/* told not to listen? */
	goto	hungup	/* yes */
	rem
dialed	getext	4,error	/* get tib extension */
	dumpin
	dmpout
	setchr	wbusy,no
	signal	dialup	/* tell hardcore */
	setcct	cct.9	/* establisj the cct */
	rem		/* fall through to main loop */
	ttls	main loop and input processing
	rem
what	tstflg	tfhang,vhang
	clrflg	(tfwabt,tfrabt)	/* start clean */
read	tstwrt	vwrite	/* output pending? */
	contrl	srec+rxmit+rrts	/* no, get set to read */
	setime	0	/* see what happens next */
	wait	0,vwrite,vtest
	status	0,dsr,vhang3	/* lost dsr, it's all over */
	status	brkchr,0,vread	/* input arrived */
	status	exh,0,stopc	/* too much input */
	status	xte,0,stopc	/* excess interrupts or something *?
	status	parity,0,stopc
	rem
vtest	tstflg	tfhang,vhang	/* never mind, we're supposed to hang up */
	waitm		/* or if not, go back to what we were doing */
	rem
vtest1	tstflg	tfhang,vhang2	/* hang up before dialup is even finished */
	waitm
	rem
stopc	stpchn		/* something blew, go back and start over */
	dumpin
	goto	what
	rem
vread	calsub	chekin	/* we have an input message, check it out */
	cmpchr	intype,null,sndack	/* regular input-type message? */
	dmpmsg		/* no, what's it doing here */
	cmpchr	intype,nochar,sndnak	/* bad input? */
	clrflg	tfrabt	/* so we can get next input */
	waitm		/* no, don't respond to it */
sndnak	setchr	outype,nak	/* else send nak, try it again */
	goto	acknak
	rem
sndack	setchr	outype,ack	/* it's all right, say so */
	cmpchr	fcode,q,inquit	/* nul message, was it quit? */
	tstflg	tfrabt,skip	/* we're supposed to throw this away */
	cmpchr	fcode,l,inff	/* or form-feed? */
	inscan	irnl,error	/* replace etx with nl */
	goto	insend	/* ship it */
	rem
inff	inscan	irff,error	/* replace etx with ff */
insend	sendin
	rem
acknak	setime 	3	/* wait now for eot msg */
	rem
	wait	aknkto,0,vtest	/* if none, continue */
	status	0,dsr,vhang3	/* died mid-stream */
	status	brkchr,0,aknkto	/* got syn syn eot after text msg */
	status	exh,0,badeom	/* whats this action? */
	status	parity,0,badeom	/* on one char?? */
	rem
badeom	stpchn		/* kill it now */
	rem
aknkto    dumpin		/* throw away the syn syn eot msg */
	bldmsg	ackmsg,error	/* send ack or nak */
	outscn	setack,error
	outscn	setlrc,error
	outscn	seteot,error	/put eot on the end of msg/
	setchr	reason,reply	/* so after write is done we go to top */
	goto	write
	rem
skip	dumpin		/* read abort */
	goto	acknak	/* acknowledge it anyway */
	rem
inquit	stpchn		/* simulated quit */
	dumpin
	dmpout
	signal	quit	/* so do it */
	contrl	srec
	goto	acknak	/* have to acknowledge it */
	ttls	output stuff
	rem
vwrite	tstflg	tfwabt,nowrit	/* sorry, changed our minds */
	bldmsg	outhdr,error	/* attach standard output header to message */
	outscn	setetx,error	/* put etx at end */
	outscn	setlrc,error	/* and block check */
	outscn	seteot,error	/place eot on msg/
rewrit	setchr	reason,wmsg	/* so we'll know where to go after */
	rem
write	holdot		/* make sure we hold output */
	tstflg	tfdlup,wrdial	/* here to do all output */
	dcwlst		/* hardwired output */
	cmd	sxmit+srec+srts
	output	(outmsg)
	cmd	sterm+rxmit+rrts
	setime	0
	wait	0,0,tstdmp	/* just wait for terminate */
	status	term,0,wdone
	rem
wrdial	contrl	srts+rrec+rxmit+stat	/* on dialup, we have to wait for cts */
	setime	3	/* it better not take that long */
	wait	wrdial,0,0	/* but if it does, we'll just try again */
	status	0,dsr,vhang	/* whoops, goodbye */
	status	cts,0,wxmit	/* that's what we want to hear */
	rem
wxmit	dcwlst
	cmd	sxmit
	output	(outmsg)
	cmd	sterm+rxmit+rrts
	wait	0,0,tstdmp	/* wait for terminate */
	status	0,dsr,vhang	/* all right, who hung us up now */
	status	term,0,wdone	/* output finished */
	status	0,cts,wrdial	/* lost cts, try again */
	rem
wdone	tstflg	tfhang,vhang	/* hang up if we're supposed to */
	cmpchr	reason,reply,akdone	/* find out why we were writing */
	cmpchr	reason,wmsg,getack
	punt	2	/* no known reason */
	rem
getack	setime	10	/* allow plenty of time for ack */
	contrl	srec	/* get into receive mode */
	wait	write,0,vtest	/* if it doesn't come, send output again */
	status	0,dsr,vhang3	/* how tiresome */
	status	brkchr,0,chkack	/* we got something, go see what */
	status	exh,0,stopc	/* be serious */
	status	parity,0,stopc	/* god help us */
	rem
chkack	calsub	chekin	/* make sure it's a reasonable message */
	cmpchr	intype,ack,gotack	/* good, it's an ack */
	cmpchr	intype,nak,gotnak	/* terminal didn't like it */
	cmpchr	intype,pgof,fulscr	/* overflew the screen */
	cmpchr	intype,busy,offlin	/* terminal was offline */
	rem
igmsg	dmpmsg		/* nothing we've ever seen, ignore it */
	waitm		/* try again */
	rem
gotack	dmpmsg		/* we don't want this for anything */
	setchr	wbusy,no	/* not off line now */
	dmpout		/* through with output now */
	goto	what	/* see what to do next */
	rem
akdone	dmpout		/* through with this now too */
	cmpchr	wbusy,yes,rewrit	/* we got a busy, try write again */
	goto	what	/* otherwise wait around */
	rem
gotnak	dumpin		/* we lost */
	goto	write	/* try it again */
	rem
nowrit	dmpout		/* told to throw output away */
	clrflg	tfwabt
	setchr	wbusy,no
	goto	what
	rem
	rem		/* terminal offline or screen full */
fulscr	dmpout		/* can't handle this output, too big */
	dmpmsg		/* not interesting any more */
	goto	what	/* start again */
	rem
offlin	setchr	wbusy,yes	/* he was offline */
	contrl	srec+rxmit+stat	/* we're going to wait to hear from him */
	setime	3	/* check again every now and again */
	wait	write,0,tstdmp	/* someone might change their mind about output */
	status	0,dsr,vhang3
	status	brkchr,0,vread	/* if we got input, things are going again */
	status	exh,0,ostopc	/* unless we got too much */
	status	parity,0,ostopc	/* ugh */
	rem
tstdmp	tstflg	tfwabt,nowrit	/* changed our mind about output */
	waitm
	rem
ostopc	stpchn
	dumpin		/* if we had parity, nothing's interesting */
	goto	write	/* try output again */
	ttls	hangup routine
vhang	retext		/* return tib extension */
vhang2	contrl	rxmit+rrec+rdtr	/* hangup line */
	tstflg	tfdlup,vhang4	/* drop dtr and wait for dsr on dialup */
	goto	vhang1	/* but don't wait for hardwired */
	rem
vhang4	setime	5	/* wait 5 secs */
	wait	vhang1,0,0	/* if timeout, try again */
	status	0,dsr,vhang1	/* dsr down */
vhang1	stpchn		/* stop channel */
	dmpout		/* throw away any output */
	dumpin		/* throw away any input */
	signal	hangup	/* tell 6180 about hangup */
	clrflg	(tflisn,tfhang)	/* clear the listen and hangup flags */
	goto	hungup	/* thats all folks */
vhang3	tstflg	tfdlup,vhang	/* right type, give up */
	waitm		/* else wait till it comes back */
	ttls	subroutine for checking input message
	rem
chekin	inscan	iseot1,chksoh	/* see if it's quiescent without soh */
	goto	nomsg	/* yes, say so */
chksoh	inscan	issoh,inerr	/* first char had better be soh */
	inscan	iseot2,chklrc	/* if next character is eot, nothing here */
nomsg	setchr	intype,quiet	/* call it quiescent */
	retsub
	rem
chklrc	inscan	inlrc,inerr	/* see if checksum is any good */
	inscan	ingood,inerr	/* and then rest of message */
	retsub		/* that's cool, ingood set message type */
	rem
inerr	setchr	intype,nochar	/* mark message as unrecognizable */
	retsub
	end
