/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

find_command_error_: proc(cp,code);

/* Initially coded in May 1972 by V. Voydock as part of fast command loop */

dcl	cp ptr;

dcl	(code,
	 error_table_$seg_not_found external,
	 error_table_$noentry external,
	 error_table_$no_ext_sym external
			) fixed bin(35);

dcl	command_name char(32) aligned based(cp);

dcl	com_err_ ext entry options(variable),
	com_err_$suppress_name ext entry options(variable);
/*  */
		/* Check for segment not found */
	if code=error_table_$seg_not_found  then 
NO_SEG: 	     do;
	     call com_err_$suppress_name(0,"command_processor_","Segment ^R^a^B not found.",cp->command_name);
	     return;
	     end;
	if code=error_table_$noentry then go to NO_SEG;
	if code=error_table_$no_ext_sym  then	/* check for entry not found */
	     do;
	     call com_err_$suppress_name(0,"command_processor_","Entry point ^R^a^B not found in segment ^R^a^B.",
				   cp->command_name,cp->command_name);
	     return;
	     end;
	else call com_err_(code,"command_processor_","^R^a^B",cp->command_name);

end find_command_error_;
