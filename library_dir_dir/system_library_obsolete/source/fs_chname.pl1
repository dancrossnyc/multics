/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

/* FS_CHNAME - Call the File System Without Interpreting Arguments.
	Michael A. Padlipsky as told to Noel I. Morris - 5/12/70

							*/

fs_chname:	proc;

dcl  rcode fixed bin,				/* error code */
     count fixed bin,				/* number of arguments */
    (dp, ep, op, np) ptr,				/* pointers to names */
    (dl, el, ol, nl) fixed bin,			/* lengths of names */
     dir char (dl) based (dp),			/* directory path name */
     entry char (el) based (ep),			/* entry name */
     oldname char (ol) based (op),			/* name to be deleted */
     newname char (nl) based (np);			/* name to be added */

dcl  cu_$arg_count ext entry (fixed bin),
     cu_$arg_ptr ext entry (fixed bin, ptr, fixed bin, fixed bin),
     com_err_ ext entry,
     hcs_$chname ext entry,
     ioa_ ext entry;


		/*  */

/* Check for correct number of arguments. */

	call cu_$arg_count (count);
	if count ^= 4 then do;
	     call ioa_ ("^/Usage is:^-fs_chname dir entry oldname newname^/");
	     return;
	end;

/* Pick up directory pathname. */

	call cu_$arg_ptr (1, dp, dl, rcode);
	if rcode ^= 0 then do;
argerr:	     call com_err_ (rcode, "fs_chname", "");
	     return;
	end;

/* Pick up entry name. */

	call cu_$arg_ptr (2, ep, el, rcode);
	if rcode ^= 0 then go to argerr;

/* Pick up oldname and newname. */

	call cu_$arg_ptr (3, op, ol, rcode);
	if rcode ^= 0 then go to argerr;

	call cu_$arg_ptr (4, np, nl, rcode);
	if rcode ^= 0 then go to argerr;

/* Call into Ring 0. */

	call hcs_$chname (dir, entry, oldname, newname, rcode);
	if rcode ^= 0 then
	     call com_err_ (rcode, "fs_chname", entry);

	return;

end;
