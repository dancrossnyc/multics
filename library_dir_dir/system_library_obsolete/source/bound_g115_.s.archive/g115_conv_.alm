" G115_CONV_ - Conversion for G115 remote printer.
"	coded 12/12/74 by Noel I. Morris
"	last modified 6/23/75 by Noel I. Morris
"	modified 04/10/77 by Bob Franklin to change top of inside page char
"		and dont slew on punch


"  ******************************************************
"  *                                                    *
"  *                                                    *
"  * Copyright (c) 1972 by Massachusetts Institute of   *
"  * Technology and Honeywell Information Systems, Inc. *
"  *                                                    *
"  *                                                    *
"  ******************************************************


" This module performs the necessary conversion for printing on the
" G115 remote printer.
"
" The manner in which this procedure is utilized is described in detail
" in the listing of prt_conv_.
"
" A media code character will be inserted at the beginning of each
" output line.  This character must have been placed in pci.temp
" before this procedure is called.


	name	g115_conv_

	segdef	g115_conv_


	temp	char		place for slew and record separator characters


g115_conv_:
	tra	g115_send_init
	tra	g115_send_chars
	tra	g115_send_slew_pattern
	tra	g115_send_slew_count

" 

	include	prt_conv_info


" 

g115_send_init:
	mlr	(pr),(pr)		insert media code at beginning of line
	desc9a	lb|pci.temp,1	..
	desc9a	bb|0,1		..

	ldq	1,dl		bump output pointer by 1 character
	a9bd	bb|0,ql		..

	tra	sb|0		return to caller

" 

g115_send_chars:

spaceloop:
	eaq	0,2		white space count in QU
	tmoz	nospace		skip if no white space
	sbx2	64,du		can take only 64 at a time
	tmoz	*+2		..
	ldq	64,du		if more, take 64 to begin with
	cmpq	4,du		if fewer than 4 spaces,
	tmi	blankout		insert blanks instead

	mlr	(),(pr)		insert blank and dup char
	desc9a	dupblank,2	..
	desc9a	bb|0,2		..

	mlr	(qu),(pr)		insert dup count character
	desc9a	duptab-1(3),1	..
	desc9a	bb|0(2),1		..

	ldq	3,dl		step output pointer
	a9bd	bb|0,ql		..
	tra	spaceloop		loop

blankout:	mlr	(),(pr,rl),fill(040)  insert requisite number of blanks
	desc9a	*,0		..
	desc9a	bb|0,qu		..

	a9bd	bb|0,qu		bump output pointer
	tra	spaceloop		and loop

nospace:	mlr	(pr,rl),(pr,rl)	copy characters into output
	desc9a	bp|0,au		..
	desc9a	bb|0,au		..

	a9bd	bp|0,au		step input and output pointers
	a9bd	bb|0,au		..

	eax2	0		clear white space counter
	tra	sb|0		return to caller


dupblank:
	vfd	a9/ ,o9/037

duptab:	aci	"0123456789[#@:>?"
	aci	" ABCDEFGHI&.](<\"
	aci	"^JKLMNOPQR-$*);'"
	aci	"+/STUVWXYZ_,%=""!"

" 

g115_send_slew_pattern:
	eax7	0		initialize for search
	rpt	nslew/2,2,tze	search for slew characters
	cmpa	slew,7		..
	xec	-1,7		get correct carriage control

stslew:	orq	separator		follow by separator character
	eax7	2		will really have two
	ldx6	lb|pci.temp	look at mc supplied
	cmpx6	=o117000,du	for punch?
	tze	*+3	yes - drop slew from q
	cmpx6	=o116000,du	for teleprinter?
	tnz	*+3		no, all is well
	eax7	1		teleprinter mc, no slew
	qls	9		drop slew from q
	stq	char		and store

	mlr	(pr,rl),(pr,rl)	copy into output
	desc9a	char,x7		..
	desc9a	bb|0,x7		..

	a9bd	bb|0,7		..

	tra	sb|0		return to caller


slew:
	vfd	27/,o9/0		FF
	ldq	=1a ,du
	vfd	27/,o9/013	top of inside page
	ldq	=1a ,du	changed from A (101 octal) to space for Mohawk printer
	vfd	27/,o9/011	top of outside page
	ldq	=1aB,du

	equ	nslew,*-slew


separator:
	vfd	9/,o9/036

" 

g115_send_slew_count:
	eaq	0,al		count in QU
	sbla	15,dl		decrement A by 15
	tmoz	*+2		can only take 15 lines at a time
	ldq	15,du		if > 15, take 15 for now
	ldq	skip,qu		get correct skip character
	tra	stslew		join common code


skip:	aci	"0"
	aci	"1"
	aci	"2"
	aci	"3"
	aci	"4"
	aci	"5"
	aci	"6"
	aci	"7"
	aci	"8"
	aci	"9"
	aci	"["
	aci	"#"
	aci	"@"
	aci	":"
	aci	">"
	aci	"?"




	end
