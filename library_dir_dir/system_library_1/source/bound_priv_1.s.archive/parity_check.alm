" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Bull Inc., 1987                *
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************
	name	parity_check

	entry	parity_check
	entry	set_parity_mask
	entry	reset_parity_mask

"	Last Modified by RBSnyder 02/14/73 for follow-on

"
"	call parity_check(loc, word, check)
"
"	 loc pointer	pointer to parity cell
"	word bit(36)	contents of cell indicating parity
"	check fixed bin	= 0 if no parity
"
"
"	This routine is called to validate the existence of a parity error
"	by re-accessing the word in question.
"	It is used by the software to verify that the
"	condition was in fact a memory parity error.
"
"
"
"
"	call set_parity_mask
"
"	This entry is used to set the parity mask indicator in
"	the caller's indicators.
"
"
"	call reset_parity_mask
"
"	This entry is the reverse of the one above
"

	include	mc
"

parity_check:
	ldi	scu.ir.parm,dl	Set mask
	eppbp	ap|2,*		Pick up pointer to cell
	lda	bp|0,*		Read from cell
	sta	ap|4,*		Return contents
	sti	ap|6,*		Store indicators into return arg
	lda	scu.ir.par,dl	Pick up mask
	ansa	ap|6,*		If error occured, will be non-zero
	short_return

set_parity_mask:
	sti	sp|0		store the current indicators
	lda	scu.ir.parm,dl	Pick up masking bit
	orsa	sp|0		store into stored indicators
	ldi	sp|0		reload indicators
	short_return

reset_parity_mask:
	sti	sp|0		save current indicators
	lca	scu.ir.parm+1,dl	Form 1-s complement of mask
	ansa	sp|0		and delete the bit
	ldi	sp|0		get new indicators
	short_return

	end	parity_check	
