" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Bull Inc., 1987                *
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************

name	ipc_

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
"	This procedure is a transfer vector for the several pieces of IPC.
"
"	Originally coded by R. J. Feiertag on May 13, 1972.
"	Changed by E. Donner Jan 1981 for new ipc from rest_of_ipc_.alm
"	Modified by J. Bongiovanni Septemper 1981 for name ipc_, macro
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


" HISTORY COMMENTS:
"  1) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
"     audit(86-10-08,Fawcett), install(86-11-03,MR12.0-1206):
"     Modified to support control point management.  This change was actually
"     made in February 1985 by G. Palter.
"  2) change(86-08-12,Kissel), approve(86-08-12,MCR7479),
"     audit(86-10-08,Fawcett), install(86-11-03,MR12.0-1206):
"     Added the create_event_channel and run_event_calls entries to support
"     asynch event channels.
"                                                      END HISTORY COMMENTS


"	The following is the normal transfer-vector macro
"	
"	ipc_tv	<entry in ipc_>,<seg$entry to transfer to>

	macro	ipc_tv
	segdef	&1
&1:
	tsx0	getlp
	tra	&2
	&end



"
"	The following subroutine calculate the lp for this procedure.
"

getlp:
	epaq	*		get ptr to ourselves
	lprplp	sb|stack_header.lot_ptr,*au get ptr to linkage from packed ptr
	tra	0,0		return
"
	%include	stack_header
"
	ipc_tv	block,ipc_fast_$block
	ipc_tv	create_ev_chn,ipc_real_$create_ev_chn
	ipc_tv	create_event_channel,ipc_real_$create_event_channel
	ipc_tv	cutoff,ipc_real_$cutoff
	ipc_tv	decl_ev_call_chn,ipc_real_$decl_ev_call_chn
	ipc_tv	decl_ev_wait_chn,ipc_real_$decl_ev_wait_chn
	ipc_tv	decl_event_call_chn,ipc_real_$decl_event_call_chn
	ipc_tv	delete_ev_chn,ipc_real_$delete_ev_chn
	ipc_tv	drain_chn,ipc_real_$drain_chn
	ipc_tv	mask_ev_calls,ipc_real_$mask_ev_calls
	ipc_tv	read_ev_chn,ipc_real_$read_ev_chn
	ipc_tv	reassign_call_channels,ipc_real_$reassign_call_channels
	ipc_tv	reconnect,ipc_real_$reconnect
	ipc_tv	reset_ev_call_chn,ipc_real_$reset_ev_call_chn
	ipc_tv	run_event_calls,ipc_real_$run_event_calls
	ipc_tv	set_call_prior,ipc_real_$set_call_prior
	ipc_tv	set_wait_prior,ipc_real_$set_wait_prior
	ipc_tv	unmask_ev_calls,ipc_real_$unmask_ev_calls
	ipc_tv	wait_for_an_event,ipc_real_$wait_for_an_event

"	This is an obsolete entry, from the days before IPC
"	used standard error codes. It is a no-op

	segdef	convert_ipc_code_
convert_ipc_code_:
	short_return


	end
