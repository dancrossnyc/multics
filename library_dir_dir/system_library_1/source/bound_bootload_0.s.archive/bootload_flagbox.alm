" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Bull Inc., 1987                *
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" ***********************************************************

" BOOTLOAD_FLAGBOX
"
" This program initializes the segment "flagbox", used for communication
" between bce/Multics.
"
" 11/04/80, W. Olin Sibert
" 83-84, Keith Loepere for the MR11 bce.

	name	bootload_flagbox
	decor	L68

	include	bootload_equs
	include	flagbox
	include	toe_hold
" 
"
" This code is executed just after we have created the bootload DSEG,
" before anything else is done. 

	segdef	preinit

preinit:	Bpush
	epp	seg,template_slt_$toehold_ptr,*
	epp	seg2,template_slt_$bos_toehold_ptr,*

	mlr	(),(pr),fill(000)	" Clear out the flagbox
	desc9a	0,0
	desc9a	seg|fgbx.flags_word,fgbx_size*4

	sdbr	seg|fgbx.hc_dbr

	ldx7	template_slt_$slt_ptr
	stx7	seg|fgbx.slt_segno

	szn	bootload_info$assume_config_deck " see if info from
	tze	bos_absent	" IOM suggests BOS

" We were booted either from BOS or an IIOC.  Check for BOS sentinel.

	cmpc	(pr),()
	desc9a	seg2|20,32		" BOS sentinel in flagbox
	desc9a	test_sentinel,32
	tnz	bos_absent

	stz	bootload_info$cold_disk_mpc   " BOS loaded this

	mlr	(),(pr)			" save BOS entries
	desc9a	BOS_entries,3*2*4
	desc9a	seg|TOE_HOLD_BOS_ENTRY*2,3*2*4
	tra	return

bos_absent:
	stz	bootload_info$assume_config_deck

	lda	=o400000,du
	sta	bootload_info$cold_disk_mpc	" we must load

	ldaq	seg|TOE_HOLD_CRASH_ENTRY*2	" make goto BOS -> goto bce
	staq	seg|TOE_HOLD_BOS_ENTRY*2
	staq	seg|TOE_HOLD_BOS_NO_SAVE_ENTRY*2
	staq	seg|TOE_HOLD_BOS_MULTICS_ENTRY*2

return:	ldaq	seg|TOE_HOLD_CRASH_ENTRY	" make 10000 -> goto bce
	staq	seg2|0
	staq	seg2|2
	staq	seg2|4
	Breturn

	bool	bos_origsetup,10000
	bool	bos_switchentry,7
	bool	bos_bos_entry,10
	bool	bos_mulentry,11
	bool	bos_tscu,370

	inhibit	on			<><><>ON<><><>
BOS_entries:
	scu	bos_origsetup+bos_tscu
	ret	bos_origsetup+bos_switchentry

	scu	bos_origsetup+bos_tscu
	ret	bos_origsetup+bos_bos_entry

	scu	bos_origsetup+bos_tscu
	ret	bos_origsetup+bos_mulentry
 
	inhibit	off			<><><>OFF<><><>

test_sentinel:
	aci	"Flagbox & Toehold Valid",32
	end
