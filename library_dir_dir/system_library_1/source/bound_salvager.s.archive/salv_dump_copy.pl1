/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


salv_dump_copy: proc (a_block_p, a_block_len, a_name);

/* *	SALV_DUMP_COPY
   *
   *	Procedure to copy data into a segment in >dumps, with condition handlers
   *	to deal with the unexpected. It is the callers responsibility to ensure that
   *	the this will not cause a mylock error on >dumps.
   *
   *	Created, from on_line_salvager, 10 August 1981, W. Olin Sibert
   */

dcl  a_block_p ptr parameter; 			/* ptr to block. */
dcl  a_block_len fixed bin parameter;			/* Number of words in block. */
dcl  a_name char (*) parameter;			/* name of segment in >dumps */

dcl  block_p pointer;
dcl  block_len fixed bin;
dcl  name char (32);
dcl  rings (3) fixed bin (3);
dcl  seg_p ptr;					/* Ptr. to segment in >dumps */
dcl  code fixed bin (35);
dcl  copy (block_len) bit (36) aligned based;		/* Used to copy block. */

dcl 1 del_acl aligned,
    2 user char (32),
    2 err_code fixed bin (35);

dcl  pds$process_group_id char (32) external static;

dcl  append$branchx entry (char (*), char (*), fixed bin (5), (3) fixed bin (3), char (*),
     fixed bin (1), fixed bin (1), fixed bin (24), fixed bin (35));
dcl  asd_$del_sentries entry (char (*), char (*), ptr, fixed bin, fixed bin (35));
dcl  delentry$dseg entry (pointer, fixed bin (35));
dcl  initiate$priv_init entry (char (*) aligned, char (*) aligned, char (*) aligned,
     fixed bin (1), fixed bin (2), ptr, fixed bin (35));
dcl  syserr entry options (variable);
dcl  syserr$error_code entry options (variable);

dcl  WHOAMI char (32) internal static options (constant) init ("salv_dump_copy");

dcl  seg_fault_error condition;

dcl (addr, null, ptr) builtin;

/*  */

	block_p = a_block_p;
	block_len = a_block_len;
	name = a_name;

	rings (*) = 7;
	call append$branchx (">dumps", name, RW_ACCESS_BIN, rings, pds$process_group_id, 0, 0, 36 * block_len, code);
	if code ^= 0 then do;
	     call syserr$error_code (LOG, code, "^a: Appending ^a to dump directory.", WHOAMI, name);
	     return;
	     end;

	call initiate$priv_init (">dumps", (name), "", 0, 0, seg_p, code); /* get a pointer to the new seg */
	if seg_p = null then do;
	     call syserr$error_code (LOG, code, "^a: Intiating ^a.", WHOAMI, name);
	     return;
	     end;

	on condition (seg_fault_error) begin;
	     call syserr (LOG, "^a: seg_fault_error copying ^p into >dumps>^a", WHOAMI, block_p, name);
	     call delentry$dseg (seg_p, (0));		/* Get rid of it to avoid embarassment later */
	     goto DUMP_FINISHED;
	     end;

	seg_p -> copy = block_p -> copy;		/* copy the information */

	del_acl.user = pds$process_group_id;		/* set to delete user */
	call asd_$del_sentries (">dumps", name, addr (del_acl), 1, (0));

DUMP_FINISHED:
	return;

%page; %include syserr_constants;
%page; %include access_mode_values;

/*  */

/* BEGIN MESSAGE DOCUMENTATION

   Message:
   salv_dump_copy: Appending SEGNAME to dump directory ERRORMESSAGE

   S: $log

   T: $run

   M: The directory salvager could not append a copy of a directory being
   salvaged or the stack at the time of salvage to the system dump directory.

   A: Check the ACL on the system dump directory, and site exec_coms which set it.
   $notify_sa

   Message:
   salv_dump_copy: Initiating SEGNAME ERRORMESSAGE

   S: $log

   T: $run

   M: The directory salvager could not initiate a copy of a
   ring 0 stack or directory being salvaged in the system dump directory.
   There may be ACL problems in the system dump directory.

   A: $notify_sa

   Message:
   salv_dump_copy: seg_fault_error copying PPPP into >dumps>SEGNAME

   S: $log

   T: $run

   M: The directory salvager attempted to create a copy of a segment in >dumps,
   but encountered a seg_fault_error condition
   while attempting to copy it. This is probably caused by quota problems in
   >dumps or insufficient space on the logical volume.

   A: $notify_sa

   END MESSAGE DOCUMENTATION */

	end salv_dump_copy;
