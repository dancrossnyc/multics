/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


/* Main Program for the Multics Salvager.
   5/23/69 - Noel I. Morris		 */
/* last modified by Kobziar on 5/1/74 to set cur_length in dummy root branch */
/* Extensively modified by Andrew M. Kobziar for NSS, with minor changes by Greenberg */
/* Set sons lvid in dummy root branch, 07/26/76 BSG */
/* Modified 9/76 by S. Barr for variable size hash tables. */
/* Modified 3/77 by S.E. Barr to add information to the dummy branch for the root. */
/* Rewritten 8/77 by S.E. Barr for invoking salvaging from ring 4. */
/* Rewritten February 1982 by C. Hornig for new salvaging strategy. */
/* Modified March 1982 by J. Bongiovanni to add convert_vtoc entry */
/* Modified July 1982 by J. Bongiovanni to eliminate salv_data$console */

salvager:
     procedure;

dcl  arg_salv_opt_bits bit (36) aligned parameter;
dcl  arg_code fixed bin (35) parameter;
dcl  a_info_p ptr parameter;				/* online:  ptr to salv_args structure to fill. */
dcl  a_pvtx fixed bin parameter;
dcl  a_path char (*) parameter;

dcl  ec fixed bin (35);
dcl  start_time fixed bin (71);
dcl  i fixed bin;
dcl  update_vtoce bit (1) aligned;			/* ON, Update perm. info. in VTOC entry during dir salv. */
dcl  delete_connection_failure_flag bit (1) aligned;	/* ON, Delete Branches with no VTOCEs */
dcl  rebuild bit (1) aligned;				/* ON, to force rebuild. */
dcl  salv_info_p ptr;				/* ptr to salv argument structure. */

dcl  1 salv_info aligned like salv_args;
dcl  (addr, fixed, ptr, bit, hbound, rel, null, divide, unspec, rtrim) builtin;

/* EXTERNAL */

dcl  salv_temp_dir$ ext;
dcl  salv_dir_space$ ext;

dcl  find entry (char (4) aligned, ptr);
dcl  salvage_pv entry (fixed bin, fixed bin (35));
dcl  salvage_pv$convert_vtoc entry (fixed bin, fixed bin (35));
dcl  salv_directory$ring0_salvage entry (ptr, fixed bin (35));
dcl  syserr entry options (variable);
dcl  syserr$error_code entry options (variable);
%page;
volume_salvage:
     entry (a_pvtx, arg_salv_opt_bits, arg_code);		/* Salvage another volume */

	salv_opt_bits = arg_salv_opt_bits;
	call set_salv_data (salv_opt_bits);
	call salvage_pv (a_pvtx, arg_code);
	return;


convert_vtoc:
     entry (a_pvtx, arg_salv_opt_bits, arg_code);		/* Convert the VTOC for a volume */

          salv_opt_bits = arg_salv_opt_bits;
	call set_salv_data (salv_opt_bits);
	call salvage_pv$convert_vtoc (a_pvtx, arg_code);


set_options:
     entry (arg_salv_opt_bits);

	salv_opt_bits = arg_salv_opt_bits;
	call set_salv_data (salv_opt_bits);
	return;


online:
     entry (a_info_p);

	call set_salv_data ("0"b);
	call setup_args (a_info_p);

	salv_data$on_line = "1"b;
	return;


dir_salv_boot:
     entry (a_path);

	call set_salv_data ("0"b);
	salv_data$rpv = "1"b;
	call setup_args (addr (salv_info));
	salv_info.pathname = a_path;
	salv_info.options.check_vtoce = "1"b;
	salv_info.options.delete_connection_failure = "1"b;
	call salv_directory$ring0_salvage (addr (salv_info), ec);
	if ec ^= 0 then call syserr$error_code (3, ec, "salvager: Error salvaging ^a.", salv_info.pathname);
	salv_data$rpv = "0"b;
	return;
%page;
set_salv_data:
     procedure (options_bit);

dcl  options_bit bit (36) aligned;
dcl  1 options aligned like salv_opts based (addr (options_bit));

dcl  dump_bad_dir bit (1) aligned;			/* ON, Print dump of bad directories. */
dcl  print_pathnames bit (1) aligned;			/* ON, Print pathname of each directory that is salvaged. */
dcl  debug bit (1) aligned;

/* Set system default values. */

	debug, dump_bad_dir, print_pathnames, rebuild, update_vtoce, delete_connection_failure_flag = "0"b;

/* Override standard defaults with salv config card. */

	salv_cardp = null ();
	call find ("salv", salv_cardp);
	if salv_cardp ^= null () then do;
	     do i = 1 to salv_card.n_fields;
		if /* case */ salv_card.options (i) = "debg" then debug = "1"b;
		else if salv_card.options (i) = "dump" then dump_bad_dir = "1"b;
		else if salv_card.options (i) = "rbld" then rebuild = "1"b;
		else if salv_card.options (i) = "dcf" then delete_connection_failure_flag = "1"b;
		else if salv_card.options (i) = "path" then print_pathnames = "1"b;
	     end;
	     end;

/* Override salv card with options specified with call. */

	if options_bit ^= "0"b then do;
	     if options.debug then debug = "1"b;
	     if options.ndebug then debug = "0"b;
	     if options.dump then dump_bad_dir = "1"b;
	     if options.ndump then dump_bad_dir = "0"b;
	     if options.pnames then print_pathnames = "1"b;
	     if options.npnames then print_pathnames = "0"b;
	     if options.rbld then rebuild = "1"b;
	     if options.nrbld then rebuild = "0"b;
	     if options.dcf then delete_connection_failure_flag = "1"b;
	     if options.ndcf then delete_connection_failure_flag = "0"b;
	     update_vtoce = options.check | options.dcf;
	     end;

/* Set salv_data. */

	salv_data$on_line = "0"b;
	salv_data$dump = dump_bad_dir;
	salv_data$debug = debug;
	salv_data$print_path = print_pathnames;

	return;

     end set_salv_data;
%page;
setup_args:
     procedure (salv_p);

dcl  salv_p ptr;					/* ptr to args structure. */
dcl  1 args aligned like salv_args based (salv_p);

	args.salv_time = bit (binary (clock (), 52));
	args.force_rebuild = rebuild;
	args.check_vtoce = update_vtoce;
	args.delete_connection_failure = delete_connection_failure_flag;
	args.print_trace = salv_data$debug;
	args.dump = salv_data$dump;
	args.correct_oosw = "1"b;
	args.temp1_ptr = addr (salv_temp_dir$);
	args.temp2_ptr = addr (salv_dir_space$);
	return;
     end setup_args;
%page;
%include config_salv_card;
%include salv_args;
%include salv_data;
%include salv_options;
%page;
/* BEGIN MESSAGE DOCUMENTATION

   END MESSAGE DOCUMENTATION */

     end salvager;
