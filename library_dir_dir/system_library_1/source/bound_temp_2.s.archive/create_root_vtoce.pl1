/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        *********************************************************** */
create_root_vtoce:
     procedure;

/* format: style4,indattr,ifthenstmt,ifthen,idind35,^indcomtxt */


/****^  HISTORY COMMENTS:
  1) change(82-02-01,Hornig), approve(), audit(), install():
      Written by C. Hornig.
  2) change(84-11-01,Loepere), approve(), audit(), install():
      Modified by Keith Loepere to update label when done.
  3) change(86-02-01,Fawcett), approve(86-05-27,MCR7417),
     audit(86-08-18,Hartogs), install(86-08-19,MR12.0-1120):
      Modified to check for root vtoce not a zero.
                                                   END HISTORY COMMENTS */


dcl  pvt$root_pvid			bit (36) aligned external;
dcl  pvt$root_pvtx			fixed bin external;
dcl  pvt$root_vtocx			fixed bin external;
dcl  sys_info$default_dir_max_length	fixed bin external;
dcl  sys_info$time_of_bootload	fixed bin (71) external;

dcl  dbm_man$set_incr		entry (fixed bin, fixed bin, fixed bin (35));
dcl  read_disk			entry (fixed bin, fixed bin (17), ptr, fixed bin (35));
dcl  syserr			entry options (variable);
dcl  syserr$error_code		entry options (variable);
dcl  vtoc_man$alloc_and_put_vtoce	entry (bit (36) aligned, fixed bin, ptr, fixed bin (35)) returns (fixed bin);
dcl  write_disk			entry (fixed bin, fixed bin (17), ptr, fixed bin (35));

dcl  code				fixed bin (35);
dcl  1 local_label			aligned like label;
dcl  1 local_vtoce			aligned like vtoce;

dcl  (addr, binary, bit, clock, divide, unspec) builtin;

/* * * * * * * * * * CREATE_ROOT_VTOCE * * * * * * * * * */

	unspec (local_vtoce) = ""b;
	local_vtoce.uid = "777777777777"b3;		/* Fill in new VTOC entry */
	local_vtoce.msl = bit (divide (sys_info$default_dir_max_length, 1024, 9, 0));
	local_vtoce.csl = "0"b;
	local_vtoce.records = "0"b;
	local_vtoce.dtm, local_vtoce.dtu = bit (binary (sys_info$time_of_bootload, 52));
	local_vtoce.nqsw = "1"b;			/* The root's immune (saves nasty recursion) */
	local_vtoce.dirsw = "1"b;
	local_vtoce.master_dir = "1"b;
	local_vtoce.quota (*) = binary ("777777"b3, 18);	/* Biggest quota possible */
	local_vtoce.used (*) = 0;
	local_vtoce.received (*) = 0;
	local_vtoce.trp (*) = 0;
	local_vtoce.trp_time (*) = local_vtoce.dtm;
	local_vtoce.primary_name = ">";		/* Fill in info for salvager */
	local_vtoce.branch_rp = "0"b;
	local_vtoce.time_created = local_vtoce.dtm;
	local_vtoce.par_pvid = pvt$root_pvid;
	local_vtoce.par_vtocx = -1;
	local_vtoce.uid_path (*) = "0"b;
	local_vtoce.fm (*) = create_vtoce_null_addr;

	pvt$root_vtocx = vtoc_man$alloc_and_put_vtoce ("0"b, pvt$root_pvtx, addr (local_vtoce), code);
	if code ^= 0 then call syserr$error_code (SYSERR_CRASH_SYSTEM, code, "create_root_vtoce: Cannot alloc-write root VTOCE.");

/* if the first free vtoce on rpv is not vtoc 0 then the cold boot was not preceeded by an rpv init_vol */

	if pvt$root_vtocx ^= 0 then
	     call syserr (SYSERR_CRASH_SYSTEM, "create_root_vtoce: Root vtoce not allocated at 0, RPV not initialized.");

	call read_disk (pvt$root_pvtx, LABEL_ADDR, addr (local_label), code);
	if code ^= 0 then go to RPV_error;

	local_label.root_vtocx = pvt$root_vtocx;
	local_label.time_registered = clock;

	call write_disk (pvt$root_pvtx, LABEL_ADDR, addr (local_label), code);
	if code ^= 0 then
RPV_error:
	     call syserr$error_code (SYSERR_CRASH_SYSTEM, code, "create_root_vtoce: Cannot set root_vtocx in RPV label.");

	call dbm_man$set_incr (pvt$root_pvtx, pvt$root_vtocx, code);
	if code ^= 0 then call syserr (SYSERR_PRINT_ON_CONSOLE, "create_root_vtoce: Cannot set dmpr bit map for root.");
	return;
%page;
%include disk_pack;
%page;
%include fs_vol_label;
%page;
%include null_addresses;
%page;
%include syserr_constants;
%page;
%include vtoce;
%page;
/* BEGIN MESSAGE DOCUMENTATION

   Message:
   create_root_vtoce: Cannot alloc-write root vtoce ERROR_MESSAGE

   S:	$crash

   T:	Cold boot of Multics hierarchy.

   M:	The system is unable to write out the VTOC entry for the root directory.

   A:	Correct the disk problem if one exists and reboot.
   Otherwise reboot with a different version of the system.


   Message:
   create_root_vtoce: Cannot set dmpr bit map for root ERROR_MESSAGE

   S:	$info

   T:	Cold boot of Multics hierarchy.

   M:	$err

   A:	$inform


   Message: create_root_vtoce: Cannot set root_vtocx in RPV label.

   S:	$crash

   T:	Cold boot of Multics hierarchy.

   M:	The system is unable to update the RPV label for the 
   root directory.

   A:	Correct the disk problem if one exists and reboot.
   Otherwise reboot with a different version of the system.

   Message: create_root_vtoce: Root vtoce not allocated at 0, RPV not initialized.

   S:	$crash

   T:	Cold boot of Multics hierarchy.

   M:     A boot -cold was attempted without init_vol for RPV.

   A:     Reboot system answering the find_rpv_subsystem with cold instead of rpv.

   END MESSAGE DOCUMENTATION */

     end create_root_vtoce;
