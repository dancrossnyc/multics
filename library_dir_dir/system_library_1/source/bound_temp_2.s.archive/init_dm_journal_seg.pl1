/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        *********************************************************** */
/* format: style3 */
init_dm_journal_seg:
     proc;

/*  Program to initialize the Page Control data base dm_journal_seg_

    Written October 1982 by J. Bongiovanni
    Modified January 1983 by J. Bongiovanni to call make_sdw instead of get_main
*/

/*  Automatic  */

dcl	dm_journal_astep	ptr;
dcl	dm_journal_segno	fixed bin (18);
dcl	journalx		fixed bin;
dcl	pagex		fixed bin;
dcl	seg_pages		fixed bin;
dcl	sx		fixed bin;
dcl	tsdw		fixed bin (71);

/*  Static  */

dcl	DBMJ_CARD_FIELDS	fixed bin internal static options (constant) init (6);
dcl	JOURNAL_WAIT_EVENT	bit (36) aligned internal static options (constant) init ("666000000000"b3);

/*  External  */

dcl	slt$		external;
dcl	sst$dm_enabled	bit (1) aligned external static;
dcl	1 sst$level	(0:3) aligned external,
	  2 ausedp	bit (18) unaligned,
	  2 no_aste	fixed bin (18) unsigned unaligned;
dcl	sst$nused		fixed bin (19) external static;
dcl	tc_data$end_of_time fixed bin (71) external static;

/*  Entry  */

dcl	config$find	entry (char (4) aligned, ptr);
dcl	make_sdw		entry (fixed bin (18), fixed bin (71), ptr, ptr);
dcl	pmut$swap_sdw	entry (ptr, ptr);
dcl	syserr		entry options (variable);

/*  Builtin  */

dcl	addr		builtin;
dcl	divide		builtin;
dcl	null		builtin;
dcl	rel		builtin;
dcl	size		builtin;
%page;

/*  Parse DBMJ config card, if there is one  */

	dbmj_cardp = null ();
	call config$find (DBMJ_CARD_WORD, dbmj_cardp);

	if dbmj_cardp = null ()
	then return;

	if dbmj_card.type_word.n_fields ^= DBMJ_CARD_FIELDS
	then do;
BAD_DBMJ_CARD:
		call syserr (CRASH, "init_dm_journal_seg: Invalid DBMJ config card.");
	     end;
	else do;
		if (dbmj_card.n_journals <= 0) | (dbmj_card.max_held_pages <= 0)
		then goto BAD_DBMJ_CARD;
		do sx = lbound (dbmj_card.per_aste_pool, 1) to hbound (dbmj_card.per_aste_pool, 1);
		     if sst$level (sx).no_aste <= dbmj_card.per_aste_pool (sx)
		     then goto BAD_DBMJ_CARD;
		end;
		n_dm_journals = dbmj_card.n_journals;
		max_dm_pages = dbmj_card.max_held_pages;
	     end;



/*  Get memory for dm_journal_seg_  */

	dm_journal_segp = addr (dm_journal_seg_$);
	seg_pages = divide (size (dm_journal) + 1023, 1024, 17);
	dm_journal_segno = bin (baseno (dm_journal_segp));
	sltp = addr (slt$);
	sltep = addr (slt.seg (dm_journal_segno));
	slte_uns.cur_length = seg_pages;
	slte.wired = "1"b;
	call make_sdw (dm_journal_segno, tsdw, dm_journal_astep, (null ()));
	if dm_journal_astep = null ()
	then call syserr (CRASH, "init_dm_journal_seg: make_sdw failed for dm_journal_seg_");
	call pmut$swap_sdw (dm_journal_segp, addr (tsdw));


/*  Initialize dm_journal_seg_  */

	dm_journal.n_journals = n_dm_journals;
	dm_journal.max_held_pages_mem = max_dm_pages;
	dm_journal.per_aste_pool (*).threshold = dbmj_card.per_aste_pool (*);
	dm_journal.free_list_relp = rel (addr (dm_journal.page_entry));
	dm_journal.wait_event = JOURNAL_WAIT_EVENT;

	do journalx = 1 to n_dm_journals;
	     dm_journal.per_journal (journalx).time_stamp = tc_data$end_of_time;
	end;

	do pagex = 1 to max_dm_pages - 1;
	     dm_journal.page_entry (pagex).fp = rel (addr (dm_journal.page_entry (pagex + 1)));
	end;


	sst$dm_enabled = "1"b;

	return;

/* format: off */
%page;  %include config_dbmj_card;
%page;  %include dm_journal_seg_;
%page;  %include slt;
%page;  %include slte;
%page;  %include syserr_constants;
%page;
/*  BEGIN MESSAGE DOCUMENTATION


Message:
init_dm_journal_seg: Invalid DBMJ config card.

S:        $crash

T:	$init

M:	The DBMJ configuration card is not in proper format.
This could be a format error, or one of the following criteria may not
be satisfied. The limit on active segments for a pool must be smaller than
the pool size.

A:	Correct the configuration deck and reboot.


Message:
init_dm_journal_seg: make_sdw failed for dm_journal_seg_

S:        $crash

T:	$init

M:	The ASTE for dm_journal_seg_ could not be created.

A:	$contact


END MESSAGE DOCUMENTATION  */

end init_dm_journal_seg;
