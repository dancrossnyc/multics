/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        *                                                         *
        *********************************************************** */


/****^  HISTORY COMMENTS:
  1) change(86-01-14,Fawcett), approve(86-04-11,MCR7383),
     audit(86-05-14,Farley), install(86-07-17,MR12.0-1097):
     Changed to add Subvolume support.
                                                   END HISTORY COMMENTS */


bce_display_disk_label: proc (p_ss_info_ptr);

/* Program written by Allen Ball June of '84 to display a disk label in bce. */

/* format: style4,initcol1,indattr,declareind8,dclind4,idind35,ifthenstmt,ifthen,^indproc,delnl,insnl */

dcl addr			         builtin;
dcl arg			         char (arg_len) based (arg_ptr);
dcl arg_count		         fixed bin;
dcl arg_len		         fixed bin (21);
dcl arg_ptr		         ptr;
dcl code			         fixed bin (35);
dcl disk_name_pvtx		         entry (char (8), fixed bin (17), fixed bin (35));
dcl com_err_		         entry options (variable);
dcl cu_$arg_count_rel	         entry (fixed bin, ptr, fixed bin (35));
dcl cu_$arg_ptr_rel		         entry (fixed bin, ptr, fixed bin (21), fixed bin (35), ptr);
dcl display_disk_label_	         entry (ptr);
dcl devname		         char (8);
dcl ioa_			         entry options (variable);
dcl me			         char (18) static options (constant) init ("display_disk_label");
dcl 1 my_label		         aligned like label;
dcl p_ss_info_ptr		         ptr parameter;
dcl pvtx			         fixed bin;
dcl read_disk_label		         entry (fixed bin, ptr, char (*), fixed bin (35));
dcl reason		         char (128);

	ss_info_ptr = p_ss_info_ptr;
	call cu_$arg_count_rel (arg_count, ss_info.arg_list_ptr, code);
	if code ^= 0 then do;
	     call com_err_ (code, me);
	     return;
	end;
	if arg_count ^= 1 then do;
	     call ioa_ ("Usage:^/    display_disk_label {device}");
	     return;
	end;
	call cu_$arg_ptr_rel (1, arg_ptr, arg_len, code, ss_info.arg_list_ptr);
	if code ^= 0 then do;
	     call com_err_ (code, me);
	     return;
	end;
	pvtp = addr (pvt$);
	pvt_arrayp = addr (pvt.array);

	devname = arg;

	call disk_name_pvtx (devname, pvtx, code);	/* validate name and get the pvtx */
	if code ^= 0 then do;			/* not a valid name or valid drive */
	     call com_err_ (code, me, "^a", arg);
	     return;
	end;

	call read_disk_label (pvtx, addr (my_label), reason, code);
	if code ^= 0 then
	     call com_err_ (code, me, "^a", reason);

	else call display_disk_label_ (addr (my_label));

	return;

/* format: ^insnl */
%page; %include bce_subsystem_info_;
%page; %include fs_vol_label;
%page; %include pvt;
%page; %include pvte;
     end /* bce_display_disk_label */;
