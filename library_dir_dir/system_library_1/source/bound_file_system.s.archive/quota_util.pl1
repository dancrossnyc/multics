/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


quota_util$suspend_quota: proc;	/* Set switch for this process' PDS */

dcl switch_val fixed bin(17),
    pdsp ptr,
    (pds$quota_inhib ext, pdsval based(pdsp)) fixed bin(17);

	switch_val = 1;		/* Suspend quota checking for this process */

	go to this_process_common;

restore_quota: entry;		/* clear switch */

	switch_val = 0;

this_process_common:
	pds$quota_inhib = switch_val;

	return;

/* Following code is commented out, may be completed and de-commented if
   it is ever desired to suspend the quota for any process other than
   one which may call hphcs_$(suspend/restore)_quota in its own right.
suspend_proc_quota: entry(pid, code);

dcl pid fixed bin(35),
    code fixed bin(17);

	switch_val = 1;
	go to find_pdir;

restore_proc_quota: entry(pid, code);

	switch_val = 0;

find_pdir:
	uc = unique_chars(addr(pid) -> bit36b);
	...

	call initiate(pdir, "pds", "", 1, 0, pdsp, code);

	if pdsp = null
	then return;

	pdsp = ptr(pdsp, rel(addr(pds$quota_inhib));

	code = 0;
	pdsp -> pdsval = switch_val;

	call terminate_noname(pdsp, ignore_code);

   End of commented code */

end quota_util$suspend_quota;
