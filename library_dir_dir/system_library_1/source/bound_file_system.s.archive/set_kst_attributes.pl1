/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


set_kst_attributes: proc (a_segno, a_kstap, a_code);

	priv = "0"b;

highly_privileged: entry (a_segno, a_kstap, a_code);

/*

   Written 03/26/76 by R. Bratt

   This procedure allows a sufficiently privileged user to change the segment use attributes
   stored in his kst.

   Privileged users may set: allow_write, explicit_deact_ok, tpd, and audit.
   Highly privileged users may also set: tms, and tus.

*/

dcl  a_segno fixed bin (17),
     a_kstap ptr,
     a_code fixed bin (35);

dcl  segno fixed bin (17),
     code fixed bin (35),
     1 ksta aligned like kst_attributes,
     priv bit (1) aligned init ("1"b);

dcl  dseg$ ext,
     error_table_$action_not_performed ext fixed bin (35);

dcl  get_kstep entry (fixed bin (17), ptr, fixed bin (35)),
     setfaults$disconnect entry (fixed bin (17));

	segno = a_segno;
	unspec (ksta) = unspec (a_kstap -> kst_attributes);
	call get_kstep (segno, kstep, code);
	if code ^= 0
	then do;
	     a_code = code;
	     return;
	end;
	if ^priv & (ksta.set.tms | ksta.set.tus)
	then do;
	     a_code = error_table_$action_not_performed;
	     return;
	end;
	if ksta.set.allow_write
	then do;
	     kste.allow_write = ksta.value.allow_write;
	     sdwp = addr (addr (dseg$) -> sdwa (segno));	/* Get ptr to SDW */
	     string (sdw.access) = kste.access & ("11"b || kste.allow_write);
	     call setfaults$disconnect (segno);
	end;
	if ksta.set.tms
	then kste.tms = ksta.value.tms;
	if ksta.set.tus
	then kste.tus = ksta.value.tus;
	if ksta.set.tpd
	then kste.tpd = ksta.value.tpd;
	if ksta.set.audit
	then kste.audit = ksta.value.audit;
	if ksta.set.explicit_deactivate_ok
	then kste.explicit_deact_ok = ksta.value.explicit_deactivate_ok;
	a_code = 0;
	return;

/*  */

% include kst;

/*  */

%include kst_attributes;

/*  */

%include sdw;

     end set_kst_attributes;
