/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


date_name_:	proc (dir, prename, postname, a_name, a_code);

/* A subroutine to create a unique name in a directory "dir" of the form
/*
/*	prename.mm/dd/yy.tttt.postname
/*
/* Created by M A Meer in November 1972				       */
/* Updated by J A Falksen in Mar 1984 to call date_time_$format	       */

dcl  dir char(*),
     prename char(*),
     postname char(*),
     a_name char(32),
     a_code fixed bin (35),
     time fixed bin (71),
     time_line char(24)var,
     (p1, p2) char(20)var,
     name char(32)var,
     (i, j) fixed bin,
     pname char(168),
     ename char(32),
     code fixed bin(35),
     type fixed bin (2),
     btcnt fixed bin (24),
     error_table_$bigarg fixed bin(35) ext,
     error_table_$noentry fixed bin(35) ext;

dcl  date_time_$format entry (char(*), fixed bin(71), char(*), char(*),
	char(*) var, fixed bin, fixed bin(35)),
     expand_pathname_ entry (char(*), char(*), char(*), fixed bin(35)),
     hcs_$status_minf entry (char(*), char(*), fixed bin, fixed bin(2), fixed bin(24), fixed bin (35));

dcl (clock, length, rtrim) builtin;
	i, j, code =  0;				/* Initialize variables to 0 */
	p1 = rtrim (prename);
	if (p1 ^= "") then p1 = p1 || ".";
	p2 = ".";
	p2 = p2 || rtrim (postname);
	if (p2 = ".") then p2 = "";
	if length (p1) + length (p2) > 19 then do;	/* Name > 32 characters */
	     code = error_table_$bigarg;		/* Let world know what is wrong */
	     go to err_ret;				/* Now quit */
	end;

	time = clock ();				/* Get the current time */
convert_time:					/* Convert to ascii string */
	call date_time_$format("^my/^dm/^yc.^Hd^MH", time, "", "", time_line, 0, code);

	name = p1;
	name = name || time_line;
	name = name || p2;

	if dir = "" then do;
	     call expand_pathname_ ((name), pname, ename, code);
	     if code ^= 0 then go to err_ret;
	  end;
	  else do;
	     pname = dir;				/* Get a directory name */
	     ename = name;				/* Get the new entry name */
	  end;
	call hcs_$status_minf (pname, ename, 0, type, btcnt, code);  /* See if seg with this name exists */
	if code = error_table_$noentry then do;		/* OK none exists */
	     code = 0;
	     go to ret;
	end;
	if code ^= 0 then go to err_ret;		/*  Trouble  */
						/* Duplicate so try a new name */
	time = time + 60000000;			/* add one minut */
	go to convert_time;				/* and try again */

err_ret:	name = "";

ret:	a_name = name;
	a_code = code;

	return;

	end date_name_;
