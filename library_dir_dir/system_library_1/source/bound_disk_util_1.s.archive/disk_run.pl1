/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


disk_run: proc;

/* disk_run - externally  callable  subroutine  that  forces
   looking  at status returns from disk, regardless of whether
   interrupt has come in or not (i.e. if interrupts are  masked
   due   to  some  unexplainable  set  of  circumstances,  this
   subroutine will win).

   coded by J. A. Bush 3/11/80
*/
dcl  page$time_out entry;
dcl  pmut$wire_and_mask entry (fixed bin (71), ptr);
dcl  pmut$unwire_unmask entry (fixed bin (71), ptr);
dcl  temp_msk_ptr ptr;				/* temporary for wire_and_mask (and unwire_unmask) */
dcl  mask_temp fixed bin (71);			/* temporary for wire_and_mask (and unwire_unmask) */

	call pmut$wire_and_mask (mask_temp, temp_msk_ptr); /* wire our stack (and mask interrupts) */
	call page$time_out;				/* force looking at status */
	call pmut$unwire_unmask (mask_temp, temp_msk_ptr); /* can unwire stack now */

     end disk_run;
