/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        *                                                         *
        *********************************************************** */
/* level_error.pl1 produces syserr/condition signals for invalid calls */
/* to level$set. */
/* BIM 830518 */
/* format: style2 */

level_error:
     procedure;

	declare signal_		 entry (char (*), pointer, pointer);
	declare syserr		 entry options (variable);
	declare ioa_$rsnnl		 entry options (variable);
	declare caller		 entry returns (pointer);
	declare error_table_$badringno fixed bin (35) ext static;
	declare currentsize		 builtin;

%include condition_info_header;
%include val_level_error;
%include syserr_constants;

	declare 1 VLE		 aligned like val_level_error_info;

	declare A_ring		 fixed bin (3) aligned parameter;
	declare ERROR_NAME		 char (32) init ("validation_level_error") int static options (constant);


/* This is called from the gate. Just crawlout. */

ring_bigger_than_7:
     entry (A_ring);

	call SETUP_HEADER;

	call ioa_$rsnnl ("Validation level of ^d is bigger than 7.", VLE.header.info_string, (0), A_ring);
	VLE.header.status_code = error_table_$badringno;
	do while ("1"b);
	     call signal_ (ERROR_NAME, null (), addr (VLE));
	end;

ring_too_small:
     entry (A_ring);


	call SETUP_HEADER;

	call ioa_$rsnnl ("Validation level of ^d is less than the ring of execution.", VLE.header.info_string, (0),
	     A_ring);
	VLE.header.status_code = error_table_$badringno;
	do while ("1"b);
	     call signal_ (ERROR_NAME, null (), addr (VLE));
	end;

r0_invalid_ring:
     entry (A_ring);

	call syserr (BEEP, "level: call to level$set with arg (^d) > 7; caller  ^p.", A_ring, caller ());

	call SETUP_HEADER;

	call ioa_$rsnnl ("Validation level of ^d is bigger than 7.", VLE.header.info_string, (0), A_ring);
	VLE.header.status_code = error_table_$badringno;
	do while ("1"b);
	     call signal_ (ERROR_NAME, null (), addr (VLE));
	end;


SETUP_HEADER:
     procedure;

	VLE.header.length = currentsize (VLE);
	VLE.header.version = 0;
	VLE.header.action_flags = "0"b;
	VLE.header.action_flags.cant_restart = "1"b;
	VLE.header.info_string = "";
	VLE.header.status_code = 0;
	VLE.invalid_ring = A_ring;

	return;
     end SETUP_HEADER;

     end level_error;
