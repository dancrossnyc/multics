/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        *                                                         *
        *********************************************************** */

/* format: style4,inddcls,^ifthendo,^indproc,indcom,^indblkcom,declareind8,dclind4 */

iox_measure_options: proc (arg_description, arg_n_options, arg_max_option_len, arg_code);

     /* Removed from attach_name.pl1 4/83 by S. Krupp. */

     /* Automatic */

	dcl as fixed bin;
	dcl code fixed bin;
	dcl descrip char (length (arg_description)) var;
	dcl i fixed bin;
	dcl m fixed bin;
	dcl t fixed bin;
	dcl tn fixed bin;
	dcl ts fixed bin;
	dcl x fixed bin;
	dcl y fixed bin;

     /* Builtin */

	dcl (index, length, ltrim, max, rtrim, search, substr, verify) builtin;

     /* Parameter */

	dcl arg_code fixed bin (35);
	dcl arg_description char (*);
	dcl arg_max_option_len fixed bin;
	dcl arg_n_options fixed bin;

     /* Static */

	dcl error_table_$unbalanced_quotes fixed bin (35) ext static;

	arg_n_options = 0;
	arg_max_option_len = 0;
	arg_code = 0;

	descrip = ltrim (rtrim (arg_description));

	if descrip = ""
	then return;				/* Nothing to scan. */

     /* Scan the description string, counting tokens (tn) and remembering the
        longest length (m). */


	code = 0;
	tn = 0;
	m = 0;
	ts = 1;

more:
	as = 1;
	i = verify (substr (descrip, ts), "	 ") - 1;	/* Skip over blanks and tabs */
	if i < 0 then goto done;
	ts = ts + i;
	tn = tn + 1;

continue:
	x = search (substr (descrip, ts), "	"" ") - 1;/* quotes, blanks, and tabs */
	if x < 0 then goto done;

	as = as + x;
	t = ts + x + 1;
	if substr (descrip, t - 1, 1) = """"		/* terminator found was a quote */
	then do;
pass:
	     y = index (substr (descrip, t), """") - 1;	/* search for matching quote */
	     if y < 0
	     then do;
		code = error_table_$unbalanced_quotes;
		goto ERROR_RETURN;
	     end;

	     as = as + y;
	     ts = t + y + 1;
	     if ts <= length (descrip)
	     then if substr (descrip, ts, 1) = """"	/* double quote encountered */
		then do;
		     as = as + 1;
		     t = ts + 1;
		     x = 0;
		     goto pass;
		end;
	     goto continue;
	end;
	ts = t;
	m = max (m, as - 1);
	goto more;

done:
	m = max (m, as + length (descrip) - ts);

	arg_n_options = tn;
	arg_max_option_len = m;

ERROR_RETURN:

	arg_code = code;

     end iox_measure_options;
