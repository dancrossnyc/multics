/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        *                                                         *
        *********************************************************** */

/* format: off */


	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
	/*									*/
	/* CONVERT_ACCESS_OPERATION_							*/
	/*									*/
	/* Routine to convert a bit string which uniquely describes a system access operation	*/
	/* into its associated text.  The text strings as well as the table of unique access	*/
	/* operation codes are in "access_operations_".  The format of the file is described by	*/
	/* "access_operations_.incl.pl1"  The format of the encoded operation is described by	*/
	/* "access_audit_encoded_op.incl.pl1".						*/
	/*									*/
	/* History:								*/
	/* 84-11-14 EJ Sharpe - created						*/
	/*									*/
	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */


convert_access_operation_:
	procedure (a_oper_code) returns (char (50));

dcl	a_oper_code	bit (36) aligned parameter;

dcl	oper_index	fixed bin;	/* unique part of encoded operation */
dcl	based_char_str	char (char_str_len) based (char_str_ptr);  /* the string we'll return */
dcl	char_str_len	fixed bin (21);	/* length of text for the operation */
dcl	char_str_ptr	pointer;		/* pointer to the text */

dcl	fifty_exs		char (50)		/* returned in cases where supplied code is not in table */
				init ("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx")
				static internal options (constant);


dcl	addr		builtin;
dcl	fixed		builtin;
dcl	addrel		builtin;

	oper_index = fixed(addr(a_oper_code)->encoded_access_op.operation_index);
	if  oper_index <= 0
	  | oper_index > access_operations_$num_codes
	  | access_operations_$version ^= ACCESS_OPERATIONS_V1
	then return (fifty_exs);

	char_str_ptr = addrel (addr(access_operations_$text_area),
			fixed(access_operations_$text_offset_table.text_offset(oper_index)));
	char_str_len = access_operations_$text_offset_table.text_len(oper_index);
	return (based_char_str);
%page;

%include access_audit_encoded_op;



%include access_operations_;

end convert_access_operation_;
