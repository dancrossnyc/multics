/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(87-06-25,Rauschelbach), approve(87-06-29,MCR7736),
     audit(87-07-21,Farley), install(87-08-06,MR12.1-1063):
     System error message documentation was added. Also set
     RTDT_area_len.
                                                   END HISTORY COMMENTS */


/* format: style4,delnl,insnl,indattr,ifthen,dclind10 */
rcprm_verify_registries_:
     proc (p_sysdir, p_code);

dcl	p_sysdir		   char (*) parameter;
dcl	p_code		   fixed bin (35) parameter;

/* automatic */

dcl	caller_ring	   fixed bin;
dcl	code		   fixed bin (35);
dcl	error_occurred	   bit (1) initial (""b) aligned;
dcl	registry_dir	   char (168);
dcl	sysdir		   char (168);

/* builtins and conditions */

dcl	(null, pointer)  builtin;

dcl	cleanup		   condition;

/* entries */

dcl	admin_gate_$syserr_error_code
			   ext entry options (variable);
dcl	(
	cu_$level_set,
	cu_$level_get
	)		   ext entry (fixed bin);
dcl	get_ring_		   ext entry returns (fixed bin);
dcl	initiate_file_	   entry (char (*), char (*), bit (*), ptr, fixed bin (24), fixed bin (35));
dcl	pathname_		   entry (char (*), char (*)) returns (char (168));
dcl	rcprm_registry_mgr_$validate_registry
			   ext entry (char (*), pointer, fixed bin (35));
dcl       sys_info$max_seg_size  fixed bin(35) ext static;
dcl	terminate_file_	   entry (ptr, fixed bin (24), bit (*), fixed bin (35));

/* external static */

dcl	error_table_$action_not_performed
			   ext fixed bin (35) static;

	sysdir = p_sysdir;
	call cu_$level_get (caller_ring);
	rtdtp = null ();

	on cleanup call clean_up;

	call cu_$level_set (get_ring_ ());

	RTDT_area_len = sys_info$max_seg_size - 32; /* Size of author info is 28, and there are four words before it in rtdt. */

	call initiate_file_ (sysdir, "rtdt", R_ACCESS, rtdtp, (0), code);
	if code ^= 0 then
	     goto returner;

	registry_dir = pathname_ (sysdir, "rcp");

	do rtdep = pointer (rtdt.first_resource, rtdt.rtdt_area)
	     repeat pointer (rtde.next_resource, rtdt.rtdt_area) while (rtdep ^= null);

	     if rtde.valid then
		if ^rtde.is_synonym then do;
		     call rcprm_registry_mgr_$validate_registry (registry_dir, rtdep, code);
		     if code ^= 0 then do;
			call admin_gate_$syserr_error_code (BEEP, code, "rcprm_verify_registries_: ^a.rcpr",
			     pathname_ (registry_dir, (rtde.name)));
			error_occurred = "1"b;
		     end;
		end;
	end;

	if error_occurred then
	     code = error_table_$action_not_performed;
	else code = 0;

returner:
	call clean_up;
	p_code = code;
	return;

clean_up:
     proc;

	if rtdtp ^= null () then
	     call terminate_file_ (rtdtp, 0, TERM_FILE_TERM, (0));
	call cu_$level_set (caller_ring);

     end clean_up;

%include access_mode_values;
%page;
%include rtdt;
%page;
%include syserr_constants;
%page;
%include terminate_file;

     end rcprm_verify_registries_;
/* BEGIN MESSAGE DOCUMENTATION

   Message: rcprm_verify_registries_: REGISTRY.rcpr

   S:     $beep

   T:     $run

   M:     There is an error in the named registry.

   A:     $contact_sa

   END MESSAGE DOCUMENTATION */

