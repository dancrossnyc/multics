/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


absolute_pathname_:
     procedure (p_relpath, p_abspath, p_code);

/* ABSOLUTE_PATHNAME_ - Procedure to convert a relative pathname into an absolute pathname. */
/* Written 770628 by PG (separated from expand_pathname_) */
/* Modified 790823 by PG to check for error_table_$pathlong case, which
   arise from the way expand_pathname_ handles archive components */

/* This program has to be separate from expand_pathname_ because */
/* both programs have an entry of the same name. */

/* parameters */

declare	(
	p_relpath		char (*),
	p_suffix		char (*),
	p_abspath		char (*),
	p_code		fixed bin (35)
	)		parameter;

/* automatic */

declare	dname		char (168),
	dname_len		fixed bin (21),
	ename		char (32),
	ename_len		fixed bin (21);

/* entries */

declare	expand_pathname_	entry (char (*), char (*), char (*), fixed bin (35)),
	expand_pathname_$add_suffix
			entry (char (*), char (*), char (*), char (*), fixed bin (35));

/* external static */

declare	error_table_$pathlong
			fixed bin (35) external static;

/* program */

	call expand_pathname_ (p_relpath, dname, ename, p_code);
	if p_code ^= 0
	then return;

	call build_absolute_pathname;
	return;

absolute_pathname_$add_suffix:
     entry (p_relpath, p_suffix, p_abspath, p_code);

	call expand_pathname_$add_suffix (p_relpath, p_suffix, dname, ename, p_code);
	if p_code ^= 0
	then return;

	call build_absolute_pathname;
	return;

build_absolute_pathname:
     procedure;

/* builtins */

declare	rtrim		builtin;

/* program */

	if dname = ">"
	then p_abspath = ">" || ename;		/* ROOT case */
	else do;
		dname_len = length (rtrim (dname));
		ename_len = length (rtrim (ename));

		if dname_len + ename_len + 1 > 168
		then do;
			p_code = error_table_$pathlong;
			return;
		     end;
		p_abspath = substr (dname, 1, dname_len) || ">" || substr (ename, 1, ename_len);
	     end;

     end /* build_absolute_pathname */;

     end /* absolute_pathname_ */;
