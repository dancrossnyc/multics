/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */

/* format: off */

rcp_comment_:  procedure (arg_rcse_ptr);

/*	This program is an internal interface of RCP.
*	Created on 10/15/74 by Bill Silver.
*/


/****^  HISTORY COMMENTS:
  1) change(87-02-10,Farley), approve(87-04-14,MCR7652),
     audit(87-04-15,Lippard), install(87-04-28,MR12.1-1028):
     Removed the resetting of rcse.caller_comment so that it can be
     multiply displayed if required along with the check mount message.
                                                   END HISTORY COMMENTS */


/*	This program is called to display a comment on the operator's console.
*	We will call a special ring 1 interface to syserr using syserr code 0.
*	The comment that is displayed is taken from the specified RCS entry.
*	The format of the comment message seen by the operator is:
*
*		"RCP: Note (device_name) - comment"
*
*	The following rules are used to control the printing of the comment.
*	     1.	If the comment is blank it will not be displayed.
*	     2.	If the comment contains any bad characters they will be
*		converted to blanks.  The bad characters that we check 
*		for are all ASCII characters from (000) to (037) octal.
*	     3.	Once the comment is displayed it will be set to all
*		blanks so it will not be displayed again.
*/

dcl	arg_rcse_ptr	ptr;		/* (I) Pointer to specified RCS entry. */

dcl	converted_comment	char(64);		/* Used to convert bad characters. */
dcl	x		fixed bin;	/* Search variable. */

dcl     (	collate, search, substr, translate )  builtin;

dcl	admin_gate_$syserr  entry  options(variable);
%page;
%include rcp_com_seg;
%page;
/*	Begin rcp_comment_.
*/
	rcse_ptr = arg_rcse_ptr;		/* Get pointer to RCS entry. */

	if   rcse.caller_comment = " "	/* Is comment blank? */
	     then return;			/* Yes, don't display comment. */

					/* Look for bad characters. (000 - 037 octal) */
	x = search (rcse.caller_comment, substr(collate,1,31));
	if   x ^= 0			/* Are there any bad characters in comment? */
	     then do;			/* Yes, convert them to blanks. */
		converted_comment = translate(rcse.caller_comment, " ", substr(collate,1,31));
		rcse.caller_comment = converted_comment;
		if   rcse.caller_comment = " " /* Is comment blank now? */
		     then return;		/* Yes, then don't display it. */
	     end;

	call admin_gate_$syserr (0, "RCP: Note (^a) - ^a", rcse.device_name, rcse.caller_comment);
%page;
/* BEGIN MESSAGE DOCUMENTATION

Message:
RCP: Note (DEVICE) - COMMENT

S:	$info

T:	$run

M:	The user requesting the mounting of a
tape or disk pack on device specified a comment string.

A:	Read the comment.
It may describe special operator action,
such as where to find or send the volume.


END MESSAGE DOCUMENTATION */

	end  rcp_comment_;
