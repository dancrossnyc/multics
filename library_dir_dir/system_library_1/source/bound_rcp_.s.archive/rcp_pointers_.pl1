/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


rcp_pointers_:  procedure;

/*	This program is an internal interface of RCP.
*	Created on 07/31/75 by Bill Silver.
*
*	This program returns pointers to rcp_data or rcp_com_seg.
*	This program has the following entries:
*	     1.	data    -	Returns a pointer to rcp_data.
*	     2.	com_seg -	Returns a pointer to rcp_com_seg.
*/

dcl	ecode		fixed bin(35);

dcl	com_seg_init_flag	bit(1)		/* ON => com_seg_ptr initialized. */
	internal static	init ("0"b);
dcl	data_init_flag	bit(1)		/* ON => data_ptr initialized. */
	internal static	init ("0"b);

dcl	com_seg_ptr	ptr	internal static;
dcl	data_ptr		ptr	internal static;

dcl	hcs_$initiate	entry  (char(*), char(*), char(*), fixed bin(1), fixed bin(2), ptr, fixed bin(35));
/*	*/
data:  	entry  returns (ptr);

	if   ^data_init_flag		/* Have we initiated pointer to rcp_data? */
	     then do;			/* No. */
		call hcs_$initiate (">system_library_1", "rcp_data", "", 0, 0, data_ptr, ecode);
		data_init_flag = "1"b;
	     end;

	return (data_ptr);



com_seg:	entry  returns (ptr);

	if   ^com_seg_init_flag		/* Have we initiated pointer to rcp_com_seg? */
	     then do;			/* No. */
		call hcs_$initiate (">system_library_1", "rcp_com_seg", "", 0, 0, com_seg_ptr, ecode);
		com_seg_init_flag = "1"b;
	     end;

	return (com_seg_ptr);


	end  rcp_pointers_;
