/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


/* format: style2,indcomtxt */

/* SET_VOLUME_QUOTA: Command to set logical volume quota for a quota account */

/* Written March 1976 by Larry Johnson */
/* Modified 83-12-07 BIM for correct precision of quota */

set_volume_quota:
svq:
     procedure options (variable);

	dcl     name		 char (16) int static options (constant) init ("set_volume_quota");
	dcl     code		 fixed bin (35);	/* System status code */
	dcl     arg_ptr		 ptr;		/* Pointer to command argument */
	dcl     arg_len		 fixed bin;	/* Length of command argument */
	dcl     arg		 char (arg_len) based (arg_ptr);
						/* The argument */
	dcl     volume		 char (32);	/* Logical volume name */
	dcl     account		 char (32);	/* Name of quota account */
	dcl     quota		 fixed bin (35);	/* The quota to set */

	dcl     i			 fixed bin;
	dcl     sw		 bit (1) aligned;

	dcl     cu_$arg_ptr		 entry (fixed bin, ptr, fixed bin, fixed bin (35));
	dcl     com_err_		 entry options (variable);
	dcl     ioa_		 entry options (variable);
	dcl     cv_dec_check_	 entry (char (*), fixed bin) returns (fixed bin (35));
	dcl     mdc_$set_volume_quota	 entry (char (*), char (*), bit (1) aligned, fixed bin (35), fixed bin (35));
	dcl     get_group_id_$tag_star entry returns (char (32));

	dcl     substr		 builtin;


	call cu_$arg_ptr (1, arg_ptr, arg_len, code);	/* Get volume name */
	if code ^= 0
	then do;
		call ioa_ ("Usage: ^a volume quota -account-", name);
		return;
	     end;
	volume = arg;

	call cu_$arg_ptr (2, arg_ptr, arg_len, code);	/* Get quota */
	if code ^= 0
	then do;
		call com_err_ (code, name, "Quota");
		return;
	     end;

	quota = cv_dec_check_ (arg, i);
	if i ^= 0
	then do;
		call com_err_ (0, name, "Quota must be numeric: ^a", arg);
		return;
	     end;

	if substr (arg, 1, 1) = "+" | substr (arg, 1, 1) = "-"
	then sw = "1"b;				/* Incremental */
	else sw = "0"b;

	call cu_$arg_ptr (3, arg_ptr, arg_len, code);	/* Get account name */
	if code ^= 0
	then account = get_group_id_$tag_star ();
	else account = arg;

	call mdc_$set_volume_quota (volume, account, sw, quota, code);
	if code ^= 0
	then call com_err_ (code, name, "^a", volume);
	return;

     end set_volume_quota;
