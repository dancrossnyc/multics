/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


value_set_path: vsp: proc;

/* Written 03/06/81 by S. Herbst */
/* Changed to use default value seg when invoked with no args 08/18/81 S. Herbst */

/* Constants */

dcl ME char (32) int static options (constant) init ("value_set_path");
dcl CREATE bit (1) aligned int static options (constant) init ("1"b);

/* Based */

dcl arg char (arg_len) based (arg_ptr);

/* Automatic */

dcl (expanded_path, path) char (168);
dcl (brief_sw, got_path_sw) bit (1) aligned;
dcl arg_ptr ptr;
dcl arg_len fixed bin (24);
dcl (arg_count, i) fixed bin;
dcl code fixed bin (35);

/* External */

dcl error_table_$badopt fixed bin (35) ext;
dcl error_table_$no_w_permission fixed bin (35) ext;

dcl absolute_pathname_ entry (char (*), char (*), fixed bin (35));
dcl (com_err_, com_err_$suppress_name) entry options (variable);
dcl cu_$arg_count entry (fixed bin, fixed bin (35));
dcl cu_$arg_ptr entry (fixed bin, ptr, fixed bin (24), fixed bin (35));
dcl ioa_ entry options (variable);
dcl value_$set_path entry (char (*), bit (1) aligned, fixed bin (35));

dcl index builtin;
%page;
	call cu_$arg_count (arg_count, code);
	if code ^= 0 then do;
	     call com_err_ (code, ME);
	     return;
	end;

	got_path_sw, brief_sw = "0"b;

	do i = 1 to arg_count;

	     call cu_$arg_ptr (i, arg_ptr, arg_len, code);

	     if index (arg, "-") = 1 then
		if arg = "-brief" | arg = "-bf" then brief_sw = "1"b;
		else do;
		     call com_err_ (error_table_$badopt, ME, "^a", arg);
		     return;
		end;

	     else if got_path_sw then do;
USAGE:		call com_err_$suppress_name (0, ME, "Usage:  vsp {path} {-brief}");
		return;
	     end;

	     else do;
		got_path_sw = "1"b;
		path = arg;
	     end;
	end;

	if ^got_path_sw | path = "" then expanded_path = "";
	else do;
	     call absolute_pathname_ (path, expanded_path, code);
	     if code ^= 0 then do;
		call com_err_ (code, ME, "^a", path);
		return;
	     end;
	end;

	call value_$set_path (expanded_path, CREATE, code);
	if code ^= 0 then
	     if code = error_table_$no_w_permission then do;
		if ^brief_sw then
		     call ioa_ ("Warning: You lack write access on value segment ^a", expanded_path);
	     end;
	     else call com_err_ (code, ME, "Value segment ^a", expanded_path);

end value_set_path;
