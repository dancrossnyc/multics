/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

get_link_entry_name_: proc (eptr, ename, segnum, code);



/* This procedure takes the address of an entry point in the linkage section and
   attempts to return its name */


dcl  eptr pointer;					/* Pointer to the entry point. */
dcl  ename char (*);				/* Entry name output */
dcl  segnum fixed bin(18);				/* seg no. of text */
dcl  code fixed bin (35);				/* Standard File System Error Code. Returned. */


/* Automatic Storage */


dcl  pls pointer;					/* Pointer to the linkage section */
dcl  offset bit (18) aligned;				/* Offset of the entry in the linkage section */
dcl  owner fixed bin (18);				/* segno of ls owner */
dcl  ls_offset fixed bin(18);				/* offset of ls within cls */
dcl  (i, section) fixed bin;

/* Externals */


dcl  error_table_$name_not_found ext fixed bin (35);
dcl  get_def_name_ entry (ptr, ptr, bit (18) aligned, fixed bin, char (*), fixed bin (35));
dcl  hcs_$get_lp entry (ptr, ptr);
dcl  find_ls_owner_ entry (ptr, fixed bin(18), fixed bin(18));
dcl (addrel, bit, fixed, null, rel, bin, baseno, ptr, baseptr) builtin;


/* this procedure should be called only for non-object segments */

program_begins_here:

	if eptr = null then goto error;

	/* be sure this is a linkage section before we go looking for an entry sequence */
	call find_ls_owner_ (eptr, owner, ls_offset);
	if owner = -1 then do;			/* eptr doesn't point to a linkage section,
						   but maybe it points to a seg that has one,
						   as for example a seg created by datmk_ or type 6 link */
	     owner = bin (baseno (eptr), 18);		/* we have ptr to seg itself */
	     segnum = owner;			/* assume we already have ptr to text */
	     offset = rel (eptr);			/* so use offset directly from ptr */
	     call hcs_$get_lp (ptr (eptr, 0), pls);
	     if pls = null then do;			/* may have a ring 0 seg (they're
						   not all complete object segs); but
						   must go into r0 to get pls */
		call get_def_name_(null, ptr(eptr, 0), offset, -1, ename, code);
		return;
	     end;
	     section = 0;				/* probably have ptr to text */
	     go to get_name;			/* and forget about entry sequence */
	end;
	segnum = owner;				/* return ptr to real text */
	pls = ptr (eptr, ls_offset);			/* get ptr to linkage header */
	section = 1;				/* have ptr to linkage section */
	offset = bit (fixed (fixed (rel (eptr), 18)-ls_offset, 18), 18); /* Offset to entry */

get_name: call get_def_name_ (pls, null, offset, section, ename, code); /* Get name */

	return;

error:	code = error_table_$name_not_found;
     end;
