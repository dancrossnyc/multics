/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


/* Procedure to save value of a reference by converting it into an aligned temporary

   Initial Version:  9 February 1972 by BLW
	Modified: 12 December 1972 by BLW
	Modified:	15 February 1973 by RAB
	Modified:	9 March 1977 by RAB to change mod_word handling
	Modified:	25 March 1977 by RAB to fix 1599
	Modified:	9 April 1977 by RAB to remove mod_word
	Modified:	30 March 1980 by RAB for reference.(padded aligned)_for_store_ref.
		See prepare_operand for details.	*/

save_value: proc(pt);

dcl	pt ptr;		/* points at a reference node */

dcl	(p,q) ptr,
	n fixed bin,
	(null,substr) builtin,
	adjust_ref_count entry(ptr,fixed bin),
	stack_temp$free_temp entry(ptr),
	state_man$flush_address entry(ptr);

%include reference;
%include operator;
%include boundary;
%include nodes;

	p = pt;

	if p -> reference.temp_ref & (p -> reference.aggregate | p -> reference.dont_save)
	     then return;

	q = p -> reference.length;
	if q ^= null
	then do;
	     if q -> node.type = operator_node then q = q -> operand(1);
	     if ^ q -> reference.shared
		then call adjust_ref_count(q,-1);
	     end;

	q = p -> reference.qualifier;
	if q ^= null
	then do;
	     if q -> node.type = temporary_node
	     then call stack_temp$free_temp(p);
	     else do;
		if q -> node.type = operator_node
		     then q = q -> operand(1);
		if ^ q -> reference.shared
		     then call adjust_ref_count(q,-1);
		end;
	     end;

	q = p -> reference.offset;
	if q ^= null
	then do;
	     if q -> node.type = operator_node
		then q = q -> operand(1);

	     if ^ q -> reference.shared
		then call adjust_ref_count(q,-1);
	     end;

	p -> reference.aligned_ref,
	p -> reference.temp_ref,
	p -> reference.padded_ref,
	p -> reference.aligned_for_store_ref,
	p -> reference.padded_for_store_ref = "1"b;

	p -> reference.units = word_;

	p -> reference.length,
	p -> reference.offset,
	p -> reference.qualifier = null;

	p -> reference.c_offset = 0;

	p -> reference.fo_in_qual,
	p -> reference.hard_to_load,
	p -> reference.store_ins,
	p -> reference.defined_ref,
	p -> reference.allocated,
	p -> reference.value_in.storage = "0"b;

	if string(p -> reference.address_in)
	     then call state_man$flush_address(p);
	end;
