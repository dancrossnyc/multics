/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */

vrm_destroy_cursor: destroy_cursor: proc (X_cursor_ptr, I_work_area_ptr, O_code);


/* .	         BEGIN_DESCRIPTION

	       Frees the storage used by a cursor.  It will also
	       close and detach the vfile opening associated with
	       the cursor. If metering is being done it will delete
                 the meter for this cursor.

.	         END_DESCRIPTION	    */


/* History:

   82-08-20  R. Harvey: Initially written

*/

/*      Parameters	        */

	dcl     I_work_area_ptr	 ptr;
	dcl     X_cursor_ptr	 ptr;
	dcl     O_code		 fixed bin (35);

	vrm_cursor_ptr = X_cursor_ptr;

	call vrmu_iocb_manager$destroy_cursor_iocb (vrm_cursor_ptr, code);

	if code = 0 then do;

		if vrm_cursor.meter_ptr ^= null then
		     vrm_cursor.meter_ptr -> vrm_meter.cursor_ptr = null;

		free vrm_cursor in (work_area);
	     end;

	X_cursor_ptr = null ();
	O_code = code;
%page;
	dcl     code		 fixed bin (35);
	dcl     vrmu_iocb_manager$destroy_cursor_iocb entry (ptr, fixed bin (35));
	dcl     work_area		 area based (I_work_area_ptr);
	dcl     null		 builtin;
%page;
%include vrm_cursor;
%page;
%include vrm_meter;

     end vrm_destroy_cursor;
