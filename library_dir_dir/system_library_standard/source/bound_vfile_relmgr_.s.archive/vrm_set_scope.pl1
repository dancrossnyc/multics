/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */

vrm_set_scope: set_scope: proc (I_rel_opening_id, I_this_process_permission, I_other_process_permission, O_code);

/* .     BEGIN_DESCRIPTION

         Take the scope setting requested by MRDS for the use of the
         page_file manager and convert it into a vfile_ opening mode.


         00   null
         01   write
         10   read
         11   read/write

   .     END_DESCRIPTION        */


/* History:

   82-08-20  R. Harvey:  Initially written

*/

/*   Parameters    */

	dcl     I_rel_opening_id	 bit (36) aligned;
	dcl     I_this_process_permission bit (2) aligned;
	dcl     I_other_process_permission bit (2) aligned;
	dcl     O_code		 fixed bin (35);

%page;
/* vrm_set_scope: set_scope: proc (I_rel_opening_id, I_this_process_permission, I_other_process_permission, O_code); */

	if (I_this_process_permission | I_other_process_permission) = "00"b then
	     O_code = dm_error_$invalid_scope;

	else call vrm_open_man$get_open_info_ptr (I_rel_opening_id, vrm_open_info_ptr, O_code);

	if O_code = 0 then do;

		if substr (I_other_process_permission, 2, 1) = "1"b then
		     vrm_open_info.switches.shared = "1"b;

		else vrm_open_info.switches.shared = "0"b;
	     end;

	return;
%page;
%include vrm_open_info;
%page;
	dcl     dm_error_$invalid_scope fixed bin (35) ext static;
	dcl     vrm_open_man$get_open_info_ptr entry (bit (36) aligned, ptr, fixed bin (35));
	dcl     substr		 builtin;


     end vrm_set_scope;
