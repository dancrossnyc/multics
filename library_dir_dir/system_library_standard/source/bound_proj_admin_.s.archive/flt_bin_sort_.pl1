/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


flt_bin_sort_: proc (v, x, n);

/* Singleton sort - from Max Smith */

dcl  v (*) float bin,				/* input array of strings to sort */
     x (*) fixed bin,				/* index array which will be filled in */
     n fixed bin;					/* number of items to sort */

dcl  (i, j, k, l, m) fixed bin,
     q fixed bin,
     xi fixed bin,
     xj fixed bin,
    (vxi, vxj) float bin,
     xk fixed bin,
     vxk float bin,
     xl fixed bin,
     xq fixed bin,
     vxq float bin;

dcl  stacki (18) fixed bin,
     stackj (18) fixed bin,
     cut fixed bin int static init (12);

	i, m = 1;
	j = n;
	go to test;

sloop:	k = i;
	l = j;
	q = divide (i+j, 2, 17, 0);
	xi = x (i);
	vxi = v (xi);
	xj = x (j);
	vxj = v (xj);
	xq = x (q);
	vxq = v (xq);
	if vxq < vxi then
	if vxj < vxi then
	if vxq < vxj then do;			/* vxq < vxj < vxi */
	     x (i) = xq;
	     x (q) = xj;
	     x (j) = xi;
	     vxq = vxj;
	end;
	else do;					/* vxj <= vxq < vxi */
	     x (i) = xj;
	     x (j) = xi;
	end;
	else do;					/* vxq < vxi <= vxj */
	     x (i) = xq;
	     x (q) = xi;
	     vxq = vxi;
	end;
	else if vxj < vxq then
	if vxi < vxj then do;			/* vxi < vxj < vxq */
	     x (q) = xj;
	     x (j) = xq;
	     vxq = vxj;
	end;
	else do;					/* vxj <= vxi <= vxq */
	     x (q) = xi;
	     x (i) = xj;				/* warning: x(q) before x(i) so q=i works */
	     x (j) = xq;
	     vxq = vxi;
	end;

/* here, v(x(i)) <= vxq <= v(x(j)) */

lloop:	l = l - 1;
	xl = x (l);
	if v (xl) > vxq then go to lloop;
kloop:	k = k + 1;
	xk = x (k);
	if v (xk) < vxq then go to kloop;

/* here, v(x(l)) <= vxq <= v(x(k)) */

	if k <= l then do;
	     x (k) = xl;
	     x (l) = xk;
	     go to lloop;
	end;
	if l - i > j - k then do;
	     stacki (m) = k;
	     stackj (m) = j;
	     j = l;
	end;
	else do;
	     stacki (m) = i;
	     stackj (m) = l;
	     i = k;
	end;
	m = m + 1;

test:	if j-i > cut then go to sloop;
	if i = 1 then if i < j then go to sloop;
	do i = i + 1 by 1 while (i <= j);
	     k = i;
	     xk = x (k);
	     vxk = v (xk);
bubble:	     l = k - 1;
	     xl = x (l);
	     if v (xl) <= vxk then go to ok;
	     x (k) = xl;
	     x (l) = xk;
	     k = l;
	     go to bubble;
ok:	end;
	m = m - 1;
	if m = 0 then do;
		xj=divide(n,2,17,0);
		do i = 1 to xj;
		xk= x(i);
		x(i)=x(n+1-i);
		x(n+1-i)=xk;
		end;
	    return;
	     end;
	i = stacki (m);
	j = stackj (m);
	go to test;

     end flt_bin_sort_;
