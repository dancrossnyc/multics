/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


find_source_line_:
     procedure (strp, Line_no, Dirname, Ename, Offset, Length, Code);

dcl strp ptr parameter;
dcl Line_no char (*) parameter;
dcl Dirname char (*) parameter;
dcl Ename char (*) parameter;
dcl Offset fixed bin (21) parameter;
dcl Length fixed bin (21) parameter;
dcl Code fixed bin (35);

dcl source_name_ptr ptr;
dcl source_name_len fixed bin (21);
dcl source_name char (source_name_len) based (source_name_ptr);

dcl code fixed bin (35);
dcl (l_comp, l_num) fixed bin;
dcl source_map_ptr ptr;

dcl expand_pathname_ entry (char (*), char (*), char (*), fixed bin (35));
dcl ioa_$rsnnl entry options (variable);
dcl stu_$get_line entry (ptr, fixed bin, fixed bin, fixed bin, fixed bin (21), fixed bin (21), fixed bin);

dcl (addrel, binary) builtin;

/* * * * * * * * * * FIND_SOURCE_LINE_ * * * * * * * ** */

	Code = 0;
	Offset, Length = 0;
	Line_no, Dirname, Ename = "";

	if ^struc.std_flag then return;
	call stu_$get_line (struc.symbolp, struc.instruction_counter, 1, l_num, Offset, Length, l_comp);
	if l_num = -1 then return;
	call ioa_$rsnnl ("(line ^[^d-^;^s^]^d)", Line_no, (0), (l_comp ^= 0), l_comp, l_num);
	if struc.sourcemap = 0 then return;
	source_map_ptr = addrel (struc.symbolp, struc.sourcemap);
	source_name_ptr = addrel (struc.symbolp, source_map_ptr -> source_map.map (l_comp + 1).pathname.offset);
	source_name_len = binary (source_map_ptr -> source_map.map (l_comp + 1).pathname.size, 21);
	call expand_pathname_ (source_name, Dirname, Ename, code);
	if code ^= 0 then do;
	     Dirname, Ename = "";
	     return;
	     end;
	return;

/* * * * * * * * * * * * * * * * * * */

%include interpret_ptr_struc;
%include source_map;

     end find_source_line_;
