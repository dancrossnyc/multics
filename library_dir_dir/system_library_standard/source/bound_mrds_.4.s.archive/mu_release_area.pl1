/* ***********************************************************
   *                                                         *
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
   *                                                         *
   *                                                         *
   *********************************************************** */

/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

/* HISTORY:

   Originally written by Jim Gray - - March 1980
   Made to do something by R. Harvey - 27 January 1982
   Made not to do anything by R. Harvey - 7 February 1982

*/

mu_release_area:
release_area:
     procedure (area_ptr);

/* DESCRIPTION:

   This is a strategy module for the handling of the temporary storage
   areas used by the five access entries dsl_$store, modify, delete,
   retrieve, and define_temp_rel. it is called at the end of each call
   to the particular module, with a pointer to that modules temporary
   area, and then this module may do a release_area_, truncate_seg_,
   or whatever seems more appropiate, and efficient.
   Currently nothing is done in this routine, and the individual
   dsl_ entries mentioned do a define_area_ over the existing area,
   and only at close time is release_area_ called, in order to promote
   best efficiency.

*/

/* PARAMETERS:

   area_ptr - - (input/output) pointer, one of the five pointers in the
   mrds_dbcb.incl.pl1, store_area_ptr, modify_area_ptr, delete_area_ptr,
   retrieve_area_ptr, def_temp_rel_area_ptr. it should not be null.
   NOTE: this procedure should only by called if the area is the whole
   segment.
   if release_area_ is called with this pointer, the pointer should be
   set to null before returning.

*/

	declare area_ptr		 ptr parameter;	/* input parameter to area to be "released" */



     end;
