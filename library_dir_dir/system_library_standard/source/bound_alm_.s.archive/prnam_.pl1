/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1988                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        *********************************************************** */
%;
/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */


/****^  HISTORY COMMENTS:
  1) change(2016-01-05,Swenson), approve(2016-01-05,MCR10002):
     Fixed ALM buffer overrun error (ticket #89) that occurs on long source
     pathnames.
                                                   END HISTORY COMMENTS */

prnam_:	proc( link );		/* this procedure puts symbols in the listing for postp2_ by
				faking a source line */
/**/
%include varcom;
%include lstcom;
/**/
dcl	(link, segname, symname)	ptr;
dcl	(count,count2)	fixed bin;

dcl	1 array_overlay	based aligned,
	2 words(count2)	bit(36) aligned;

dcl	char	based char(1) aligned;

dcl	1 eb_data_$oulst external, 2 oulst char(680) aligned;
/**/
	if tnolst ^= 0 then return;				/* ignore call if no listing */
	count = fixed(unspec(substr(link->char,1,1)),9,0);	/* get the count of the string */
	count2 = divide(count+4, 4, 17, 0);			/* convert it to words */
	addr(oulst) -> array_overlay = link -> array_overlay;	/* do a word by word move */
common:	substr(oulst, count+2, 1) = "
";							/* append a new_line */
	source_printed = "0"b;				/* set a flag so prwrd will print the line */
	return;
/**/
prnam2:	entry(segname, symname);	/* like prnam except takes two symbols and puts a | between them */
	if tnolst ^= 0 then return;				/* ignore the call if no listing */
	count = fixed(unspec(substr(segname->char,1,1)),9,0);	/* get the character count */
	count2 = divide(count+4, 4, 17, 0);			/* get the word count */
	addr(oulst) -> array_overlay = segname -> array_overlay;	/* do a word by word move */
	count = count + 1;					/* add a character for the count at the beginning */
	substr(oulst, count+1, 1) = "|";			/* put in the | */
	count2 = fixed(unspec(substr(symname->char,1,1)),9,0);	/* get the character count of the second symbol */
	substr(oulst, count+2, count2) = substr(symname->char, 2, count2);/*append it to the first*/
	count = count + count2;				/* get the total count */
	goto common;					/* and finish up */
/**/
	end prnam_;
