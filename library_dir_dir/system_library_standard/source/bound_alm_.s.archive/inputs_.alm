" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Bull Inc., 1988                *
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************
	name	inputs_
	entry	next
	entry	nxtnb
	entry	next_statement
	entry	next_statement_nolist
	entry	run_statement
	entry	run_statement_nolist
	entry	ascii_literal
	entry	getid
	entry	getname
	entry	get_ptr

" Input routines for ALM.
" Modified 3/23/77 by Noel I. Morris for macro processing.
" Modified 7/16/76 by N. I. Morris to use EIS.
" Modified 740821 by PG to treat input chars as bit (9) instead of bit (7).
" Modified on 07/29/73 at 02:57:04 by R F Mabee.
" Fixed code sequence that pops stack without returning, March 1973, R F Mabee.
" Changed short return sequence to use macro, 11 November 1972, R F Mabee.
" 23 July 1972 - made inputs_$next_statement count lines for xref. R F Mabee.
" Changed to call alm_include_file_ at end of file instead of prnter_$no_end_card.
" This is for include file processing. 19 May 1972, R F Mabee.
"
	equ	brk,0
	equ	sym,4
	equ	begin_line,48
	equ	tpass2,50
	equ	binlin,65
	equ	source_printed,283

	bool	inl,012
	bool	isp,040
	bool	icomma,54
	bool	ipoint,56
	bool	inum,60
	bool	irpb,76
	bool	ilet,101

	include	segnfo

	include	stack_header
"
	use	static_data
	even
bpsave:	its	-1,1
x7save:	dec	0
char:	bss	,1
tctally:	bss	,1

	use	text_section

	join	/text/text_section/link/static_data

" 

get_ptr:	eppbb	eb_data_$segnfo+source,*
	spribb	ap|2,*		return source pointer
	lda	eb_data_$curr_char_no
	ldq	eb_data_$segnfo+srclen
	sta	ap|4,*		return curr_char_no
	stq	ap|6,*		return source length
	stz	ap|8,*		set sw for at nl
	lda	eb_data_$varcom+brk
	cmpa	eb_data_$codtab+inl	if this is so, mexp must
	tnz	return		be told that there are
	lda	=o400000,du	no args on line.
	sta	ap|8,*

	short_return

" 

next:	tsx7	set_char
	tsx7	get_char
return:	short_return



nxtnb:	lda	eb_data_$varcom+brk
	cmpa	eb_data_$codtab+inl
	tze	return

mornb:	tsx7	set_char
	tct	(pr,al,rl)
	desc9a	bb|0,ql
	arg	nxtnbtab
	arg	lp|tctally

	ada	lp|tctally
	ana	=o77777777
	sta	eb_data_$curr_char_no

	tsx7	set_char		get one more
	tsx7	get_char
	cmpa	eb_data_$codtab+isp
	tze	mornb
	tra	return

" 

run_statement_nolist:
	lda	=o400000,du	get "1"b
	sta	eb_data_$varcom+source_printed  suppress printing of source
	tra	run_statement

next_statement_nolist:
	lda	=o400000,du
	sta	eb_data_$varcom+source_printed
next_statement:
	ldaq	eb_data_$varcom+brk
next_statement_loop:
	cmpa	eb_data_$codtab+inl
	tze	check_nl

run_statement:
	tsx7	set_char
	tct	(pr,al,rl)
	desc9a	bb|0,ql
	arg	nxtsttab
	arg	lp|tctally

	ada	lp|tctally
	ana	=o77777777
	sta	eb_data_$curr_char_no

	tsx7	set_char
	tsx7	get_char
	tra	next_statement_loop

check_nl:	cmpq	=o12,dl
	tnz	return
	szn	eb_data_$varcom+source_printed
	tnz	printed
	szn	eb_data_$varcom+tpass2
	tze	printed1		" Don't try to print listing during pass1.
	save			"save because we are going to call out
	call	prwrd_$source_only
	eppbp	sp|0
	eppsp	sp|16,*		undo the save
	spribp	sb|stack_header.stack_end_ptr
printed1:	szn	eb_data_$macro_linect
	tze	printed
	aos	eb_data_$macro_linect
printed:	ldq	eb_data_$curr_char_no
	stq	eb_data_$varcom+begin_line
	stz	eb_data_$varcom+source_printed
	szn	eb_data_$include_control  " if not in macro expansion
	tmi	*+2
	aos	eb_data_$varcom+binlin  " inputs_ always counts lines.
	tra	return



ascii_literal:
	tsx7	set_char
	tsx7	get_char
	tra	check_nl

" 

get_char:	mrl	(pr,al),(pr),fill(0)
	desc9a	bb|0,1
	desc9a	lp|char,4

	ldq	lp|char
	aos	eb_data_$curr_char_no
	anq	=o777,dl			just one char, please
	canq	=o600,dl			if ascii
	tze	3,ic			then top bits are off
	lda	eb_data_$codtab	else pretend it's ascii NUL char
	tra	2,ic
	lda	eb_data_$codtab,ql
	staq	eb_data_$varcom+brk
	tra	0,7



set_char:	lda	eb_data_$curr_char_no
	ldq	eb_data_$segnfo+srclen
	sbq	eb_data_$curr_char_no
	tmoz	source_eof

	eppbb	eb_data_$segnfo+source,*
	tra	0,7



source_eof:
				" We have run out of this segment
" Try to revert from include file.
" alm_include_file_$pop will not return
" if there is nothing more to read.
	stx7	lp|x7save		" This is necessary because save uses index 7 and bp.
	spribp	lp|bpsave
	save			" Save because we are going to make a call
	call	alm_include_file_$pop
	eppbp	sp|0
	eppsp	sp|16,*		" Undo the save
	spribp	sb|stack_header.stack_end_ptr
	ldx7	lp|x7save
	eppbp	lp|bpsave,*
	tra	set_char		" Try whole read again.

" 

getid:	eax6	getidtab
	tra	getid_work

getname:	eax6	getnametab
	tra	getid_work



getid_work:
	eppbp	eb_data_$varcom+sym	get address of sym where we will return results

	ldaq	eb_data_$varcom+brk	get the current character
	cmpa	eb_data_$codtab+inl	check for end of statement
	tze	clear		return if so
	cmpa	eb_data_$codtab+isp	check for space as last break
	tnz	chk_sym		if not, get next char and continue

	tsx7	set_char
	tct	(pr,al,rl)
	desc9a	bb|0,ql
	arg	nxtnbtab
	arg	lp|tctally

	ada	lp|tctally
	ana	=o77777777
	sta	eb_data_$curr_char_no

chk_sym:	tsx7	set_char
	tsx7	get_char
	cmpa	eb_data_$codtab+ilet  check for legal first char (letter or . or _)
	tze	putin	"
	cmpa	eb_data_$codtab+ipoint  "
	tze	putin	"
	cmpx6	getnametab,du	check if we came in through getname
	tnz	clear		if not we have the terminator already
	cmpa	eb_data_$codtab+inl	make sure we are not at end of statement
	tze	return

putin:	tsx7	set_char
	sba	1,dl		back up 1 char
	adq	1,dl
	cmpq	31,dl		scan only 31 chars
	tmoz	*+2
	ldq	31,dl

	tct	(pr,al,rl)
	desc9a	bb|0,ql
	arg	0,6
	arg	lp|tctally

	ldq	lp|tctally
	mlr	(pr,al,rl),(pr),fill(0)
	desc9a	bb|0,ql
	desc9a	bp|0(1),31
	qls	27
	stbq	bp|0,40		insert count

	ada	lp|tctally
	ana	=o77777777
	sta	eb_data_$curr_char_no

	tra	next


clear:	mlr	(),(pr),fill(0)	clear sym
	desc9a	*,0
	desc9a	bp|0,32

	tra	return

" 

nxtnbtab:
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/0,9/1,9/1,9/0,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/0,9/1,9/1,9/1,9/1,9/0,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1


" 

nxtsttab:
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/1,9/0,9/0,9/1,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/1,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0


" 

getidtab:
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/0,9/1
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/1,9/1,9/1,9/1,9/0

	vfd	9/1,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1

	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1
	vfd	9/1,9/1,9/1,9/1,9/1,9/1,9/1,9/1


" 

getnametab:
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/1,9/1,9/0,9/1,9/1,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/1,9/0,9/0,9/0,9/0,9/1,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/1,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/1,9/0,9/0,9/1,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0

	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0
	vfd	9/0,9/0,9/0,9/0,9/0,9/0,9/0,9/0


	end
