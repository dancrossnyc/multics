/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1974 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

dasin_: procedure (number) returns (float binary (63));

/*     compute the arcsine, arccosine, or arctangent of a double-precision floating-point number     */

declare	(number, value) float binary (63),
	code_ entry(fixed bin),
	(abs, atan, atand, sqrt) builtin;

	value = number;
	if abs(value) > 1.e0 then go to out_of_range;
	return(atan(value, sqrt(-value*value+1.e0)));

dacos_:	entry(number) returns(float bin(63));
	value = number;
	if abs(value) > 1.e0
	then do;

out_of_range:
	     call code_(58);
	     return (0e0);
	     end;
	return(atan(sqrt(-value*value+1.e0), value));

dasind_:	entry(number) returns(float bin(63));
	value = number;
	if abs(value) > 1.e0 then go to out_of_range;
	return(atand(value, sqrt(-value*value+1.e0)));

dacosd_:	entry(number) returns(float bin(63));
	value = number;
	if abs(value) > 1.e0 then go to out_of_range;
	return(atand(sqrt(-value*value+1.e0), value));

datan_:	entry(number) returns(float bin(63));
	value = number;
	return(atan(value));

datand_:	entry(number) returns(float bin(63));
	value = number;
	return(atand(value));
	end;
