/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

/* modified by A. Downing 07/16/73 to use round builtin function */

sinh_: procedure (number) returns (float binary (27));

/*     compute the hyperbolic sine or cosine of a single-precision floating-point number     */
declare (number, n, p, r) float binary (27),
        (a, b) float binary (63);
dcl  code_ ext entry (fixed bin),
     (abs, exp, round) builtin;
	n = number;
	r = abs (n);
if r >= 0.67943378e0 then large: do;
	     p = -1.e0;
	     go to sinhs;
	end large;
	if r < 5.e-5 then go to negate;
	a = r;
	b = a*a;
	a = ((((0.2755731922398589065e-5 * b + 0.1984126984126984127e-3) * b + 0.8333333333333333333e-2) * b
	+ 0.1666666666666666667e0) * b + 1.e0) * a;
	go to finis;
cosh_: entry (number) returns (float binary (27));
	n, r = abs (number);
	p = 1.e0;
sinhs: if r > 88.028e0 then err: do;
	     call code_ (39);
	     r = 170141182.e30;
	     go to negate;
	end err;
	a = exp (r);
	a = (p/a + a) * 0.5e0;
finis:	r = round (a, 28);
negate:	if n < 0.0e0 then r = -r;
	return (r);
     end sinh_;
