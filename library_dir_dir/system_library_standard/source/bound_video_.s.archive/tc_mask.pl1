/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


/* IPS mask utility for Terminal Control */
/* format: style2,linecom,^indnoniterdo,indcomtxt,^inditerdo,dclind5,idind25 */
tc_mask:
     procedure;
	return;

/* June 1981, Benson I. Margulies */

	declare video_data_$shut_mask	   bit (36) aligned external static;
	declare video_data_$open_mask	   bit (36) aligned external static;
	declare video_data_$only_quit_mask
				   bit (36) aligned external static;
	declare video_data_$alrm_only_mask
				   bit (36) aligned external static;

	declare Old_mask		   bit (36) aligned parameter;
	declare old_mask		   bit (36) aligned;

	declare hcs_$set_ips_mask	   entry (bit (36) aligned, bit (36) aligned);
	declare hcs_$reset_ips_mask	   entry (bit (36) aligned, bit (36) aligned);


all:
     entry returns (bit (36) aligned);

	call set_mask (video_data_$shut_mask, old_mask);
	return (old_mask);

restore:
     entry (Old_mask);

	call reset_mask (Old_mask, ""b);
	return;

close:
     entry;

	call swap_to (video_data_$shut_mask);
	return;

open_all:
     entry;

	call swap_to (video_data_$open_mask);
	return;

open_alrm:
     entry;
	call swap_to (video_data_$alrm_only_mask);
	return;


open_quit:
     entry;

	call swap_to (video_data_$only_quit_mask);
	return;

set_mask:
     procedure (new, old);

	declare (new, old)		   bit (36) aligned;

	call hcs_$set_ips_mask (new, old);

     end set_mask;

reset_mask:
     procedure (old, older);

	declare (old, older)	   bit (36) aligned;


	call hcs_$reset_ips_mask (old, older);

     end reset_mask;

swap_to:
     procedure (new);
	declare new		   bit (36) aligned;

	call hcs_$set_ips_mask (new, ""b);
     end swap_to;
     end tc_mask;

