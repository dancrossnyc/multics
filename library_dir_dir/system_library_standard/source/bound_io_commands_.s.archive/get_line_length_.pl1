/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


/* GET_LINE_LENGTH_ - subroutine to return the line length of a given
   stream or switch.

   Written 750206 by PG from a program by the SIPB
   Modified 801104 (election day) by JRD to use mode_string_$parse (MCR 4721)
*/

/* format:  style3,ll122,idind30,ifthenstmt */

get_line_length_:
     procedure (P_stream) returns (fixed bin (17));

declare	P_stream			char (*) parameter,
	P_switch_ptr		ptr parameter,
	P_status			fixed bin (35) parameter;

declare	(addr, null)		builtin;

declare	mode_string		char (512),
	switch_ptr		ptr,
	have_code			bit (1) aligned,
	status			fixed bin (35);

declare	1 mv			aligned like mode_value;

declare	error_table_$action_not_performed
				fixed bin (35) external;

declare	mode_string_$get_mode	entry (char (*), char (*), ptr, fixed bin (35));
%page;
%include iox_dcls;
%page;
%include mode_string_info;
%page;
/* get_line_length_:
        procedure (P_stream) returns (fixed bin (17)); */

	have_code = "0"b;
	goto STREAM_JOIN;

get_line_length_$stream:
     entry (P_stream, P_status) returns (fixed bin (17));

	have_code = "1"b;


STREAM_JOIN:
	if P_stream = ""
	then switch_ptr = iox_$user_output;
	else do;
		call iox_$look_iocb (P_stream, switch_ptr, status);
		if status ^= 0 then go to RETURN_CODE;
	     end;

	go to JOIN;


get_line_length_$switch:
     entry (P_switch_ptr, P_status) returns (fixed bin (17));

	have_code = "1"b;
	switch_ptr = P_switch_ptr;
	if switch_ptr = null () then switch_ptr = iox_$user_output;

JOIN:
	call iox_$modes (switch_ptr, "", mode_string, status);
	if status ^= 0 then go to RETURN_CODE;

	mv.version = mode_value_version_3;
	call mode_string_$get_mode (mode_string, "ll", addr (mv), status);
	if status ^= 0 then goto RETURN_CODE;

	if ^mv.numeric_valuep then goto RETURN_NO_ACTION;

	if have_code then P_status = 0;

	return (mv.numeric_value);

RETURN_NO_ACTION:
	status = error_table_$action_not_performed;

RETURN_CODE:
	if have_code then P_status = status;

	return (72);				/* return default line length (policy decision) */

     end get_line_length_;
