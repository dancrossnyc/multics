/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */


/*  DESCRIPTION:
   Program to establish fast locking for this process.
   Called by init_lock_per_process_ during per-process
   Lock Manager initialization.
*/

/* HISTORY:
Written by John Bongiovanni 06/15/82.
Modified:
03/04/83 by Jeffrey D. Ives: Modified for new initialization.
10/10/84 by Stanford S. Cox:  For DM program standards, and to meter fast
            locks.
11/26/84 by Matthew Pierret:  Removed references to the obsolete dm_common_init
*/

/* format: style3,ifthenstmt,ifthendo,^indnoniterdo,^inditerdo,ind3 */
/* format: indcomtxt,indcom */

lm_init_fast_per_process_:
   proc ();

dcl	saved_validation_level
			fixed bin init (0);
dcl	cleanup		condition;

dcl	lm_data_$fast_lock_data_ptr
			ptr external;
dcl	lm_data_$lock_list_meters_ptr
			ptr external;
dcl	dm_system_data_$	external;
dcl	dm_system_data_$fast_lock_data_rel
			bit (18) aligned external;
dcl	dm_system_data_$lock_list_meters_rel
			bit (18) aligned external;

dcl	cu_$level_get	entry (fixed bin);
dcl	cu_$level_set	entry (fixed bin);
dcl	get_ring_		entry () returns (fixed bin (3));

dcl	addr		builtin;
dcl	ptr		builtin;

      call cu_$level_get (saved_validation_level);
      on cleanup call cu_$level_set (saved_validation_level);
      call cu_$level_set (get_ring_ ());

      lm_data_$fast_lock_data_ptr = ptr (addr (dm_system_data_$), dm_system_data_$fast_lock_data_rel);

      if dm_system_data_$lock_list_meters_rel = "0"b
      then lm_data_$lock_list_meters_ptr = null ();
      else lm_data_$lock_list_meters_ptr = ptr (addr (dm_system_data_$), dm_system_data_$lock_list_meters_rel);

      call cu_$level_set (saved_validation_level);

      return;


   end lm_init_fast_per_process_;
