/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


system_type_: proc (P_name, P_canonical_name, P_type, P_code);

/* *	SYSTEM_TYPE_
   *
   *	This is the subroutine used to canonicalize the values of the operands of
   *	the "-target" control argument, and of the ALM "decor" pseudo-op.
   *
   *	03/23/81, W. Olin Sibert
   */

dcl  P_name char (*) parameter;			/* Input: user-specified system type name */
dcl  P_canonical_name char (*) parameter;		/* Output: canonical name for this system type */
dcl  P_type fixed bin parameter;			/* Output: integer value of this system type */
dcl  P_code fixed bin (35) parameter;			/* Output: error code */

dcl  name char (32);
dcl  type fixed bin;

dcl  sys_info$system_type fixed bin external static;

dcl  error_table_$invalid_system_type fixed bin (35) external static;

dcl  LC_ALPHA char (26) internal static options (constant) init ("abcdefghijklmnopqrstuvwxyz");
dcl  UC_ALPHA char (26) internal static options (constant) init ("ABCDEFGHIJKLMNOPQRSTUVWXYZ");

dcl  translate builtin;

/*  */

	name = translate (P_name, LC_ALPHA, UC_ALPHA);

	if (name = "") then type = sys_info$system_type;	/* Default */

	else if (name = "l68") then type = L68_SYSTEM;	/* Various names for Level 68 */
	else if (name = "dps") then type = L68_SYSTEM;
	else if (name = "dps2") then type = L68_SYSTEM;
	else if (name = "level68") then type = L68_SYSTEM;
	else if (name = "level_68") then type = L68_SYSTEM;
	else if (name = "6180") then type = L68_SYSTEM;
	else if (name = "6880") then type = L68_SYSTEM;
	else if (name = "68/80") then type = L68_SYSTEM;

	else if (name = "dpse") then type = L68_SYSTEM;	/* DPS-8 is the same as Level 68 */
	else if (name = "dps8") then type = L68_SYSTEM;
	else if (name = "dps-8") then type = L68_SYSTEM;
	else if (name = "8/70") then type = L68_SYSTEM;
	else if (name = "dps8/70") then type = L68_SYSTEM;
	else if (name = "dps-8/70") then type = L68_SYSTEM;

	else if (name = "adp") then type = ADP_SYSTEM;	/* The Next Generation */
	else if (name = "orion") then type = ADP_SYSTEM;

	else do;
	     P_canonical_name = "???";
	     P_type = -1;
	     P_code = error_table_$invalid_system_type;
	     return;
	     end;

	P_canonical_name = SYSTEM_TYPE_NAME (type);
	P_type = type;
	P_code = 0;
	return;

%page; %include system_types;

	end system_type_;
