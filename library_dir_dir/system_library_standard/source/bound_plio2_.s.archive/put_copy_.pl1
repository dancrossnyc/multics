%;
/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

put_copy_:proc(pspp,nn) options(support);


	dcl pspp ptr;
	dcl nn fixed bin(21);

	dcl ( psp , cp , cpfp ) ptr;
	dcl ( n1 , n2 , i  ) fixed bin(15);
	dcl (addr,null,substr) builtin;
	dcl copy_file file based;
	dcl ( pspstatsaved,fsbpstatsaved ) ptr;
	dcl NL char(1) aligned static internal init("
");



% include plio2_fsb;
% include plio2_ps;


	psp=pspp;
	n1=psp->ps.start_copy;
	n2=nn;
	cp=psp->ps.fsbp->fsb.bptr;

	if psp->ps.copy_file_p=null then cpfp=addr_sysprint();
	else cpfp=psp->ps.copy_file_p;
/*
		dcl ioa_ entry ext implementation(variable);
	call ioa_("cpfp=^p,cp=^p,n1=^d,n2=^d,stuff=^a",cpfp,cp,n1,n2,substr(cp->xbuf,n1,n2+1-n1));
	call ioa_("filename(get)=^a",psp->ps.fsbp->fsb.filename);
	call ioa_("filename(copy)=^a",psp->ps.copy_file_p->p_vector(2)->fsb.filename);
*/

	pspstatsaved=plio2_data_$pspstat;
	fsbpstatsaved=plio2_data_$fsbpstat;

		/* TO OPEN THE COPY FILE PRIOR TO FIRST GET . . . */
	if n2=-1 then
		do;
		put file(cpfp->copy_file) edit("")(a);
		goto exit;
		end;


copy_loop:
	if n1 > n2 then
		do;
exit:
		plio2_data_$pspstat=pspstatsaved;
		plio2_data_$fsbpstat=fsbpstatsaved;
		return;
		end;

	do i=n1 to n2;
	if substr(cp->xbuf,i,1)=NL then goto copy;
	end;

	i=n2+1;
copy:
	if n1<i then put file(cpfp->copy_file) edit(substr(cp->xbuf,n1,i-n1)) (a);
	n1=i+1;

	if i<=n2  then put file(cpfp->copy_file) skip;

	goto copy_loop;

addr_sysprint:proc returns(ptr);
dcl sysprint file output print stream;
return(addr(sysprint));
end addr_sysprint;

end put_copy_;
