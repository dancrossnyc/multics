/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

assign_type_d:	proc(descriptor_bit,psp,picture_ptr,assign_type,scale_prec) options(support);

dcl	descriptor_bit bit(36) aligned,

	(picture_ptr,psp) ptr;

dcl	assign_type	fixed bin(17),
	scale_prec	fixed bin(35),

	1 fo		based(addr(scale_prec)) aligned,
	2 scale		fixed bin(17) unal,
	2 prec		fixed bin(17) unal;

dcl	(addr,addrel,fixed,unspec) builtin;

dcl	assign_type_p	ext entry(ptr,fixed bin(17),fixed bin(35));

%include descriptor;
%include pl1_stack_frame;
%include plio2_ps;

	if descriptor_bit="0"b
	then do;
		picture_ptr = psp->ps.stack_frame_p;
		picture_ptr = picture_ptr->pl1_stack_frame.text_base_ptr;

		picture_ptr = addrel(picture_ptr,psp->ps.top_half);

		call assign_type_p(picture_ptr,assign_type,scale_prec);

		return;
	end;

	unspec(desc_) = descriptor_bit;

	assign_type = type_*2 + fixed(pack_,17,0);
	fo.scale = scale_;
	fo.prec = precision_;

	end assign_type_d;
