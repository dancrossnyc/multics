/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


print_auth_names: pan: proc;

/* This procedure will print the names of the access categories and sensitivity
   levels of the access isolation mechanism.  There are four control arguments
   for this command:

   -level           list sensitivity levels 0 to system high level.

   -category, -cat  list access categories in system high category set.

   -brief, -bf      suppress titles.

   -all, -a         list all possible level or category names (as requested)
   .		even if they are above system high.

   If neither the -level nor the -category options are specified, both options
   are assumed as default.
*/

/* Originally coded 741218 by J. Whitmore */
/* Modified 750102 by PG to use system_info_ */
/* Modified 750417 by LJS */


dcl  long_name char (32),
    (long, brief, lev, cat) bit (1) init ("0"b),
     max_level fixed bin,
     max_cat_set bit (18) aligned,
     high ptr,
     i fixed bin,
    (level_names dim (0:7), category_names dim (18)) char (32),
    (short_level_names dim (0:7), short_category_names dim (18)) char (8),
     access_ceiling bit (72) aligned,
     ec fixed bin (35),
     sys_high char (400),
     no_print bit (1) init ("1"b),
     date char (24);

dcl (ioa_, com_err_) entry options (variable),
     cu_$arg_count entry () returns (fixed bin),
     cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35)),
     date_time_ entry (fixed bin (71), char (*)),
     clock_ entry () returns (fixed bin (71)),
     system_info_$access_ceiling entry (bit (72) aligned),
     system_info_$level_names entry (dim (0:7) char (32), dim (0:7) char (8)),
     system_info_$category_names entry (dim (18) char (32), dim (18) char (8));

dcl  aptr ptr,
     alen fixed bin,
     arg char (alen) based (aptr),
     nargs fixed bin;

dcl (addr, substr) builtin,
     error_table_$badopt ext fixed bin (35);

%include aim_template;


	nargs = cu_$arg_count ();

	if nargs = 0 then do;			/* if no arguments, take the default */
	     lev, cat = "1"b;
	     go to start;
	end;

	do i = 1 to nargs;				/* check the arguments ... what does he want printed? */

	     call cu_$arg_ptr (i, aptr, alen, ec);
	     if ec ^= 0 then do;
err:
		call com_err_ (ec, "print_auth_names", "^/Usage: print_auth_names -brief(-bf), -level, -category(-cat), -all(-a)");
		return;
	     end;

	     if arg = "-level" then lev = "1"b;

	     else if arg = "-cat" | arg = "-category" then cat = "1"b;

	     else if arg = "-bf" | arg = "-brief" then brief = "1"b;

	     else if arg = "-a" | arg = "-all" then long = "1"b;

	     else do;
		ec = error_table_$badopt;
		go to err;
	     end;
	end;

	if ^lev & ^cat then lev, cat = "1"b;		/* default to both names if no option */


start:						/* get value of access ceiling */
	call system_info_$access_ceiling (access_ceiling);

	if ^brief then do;				/* do we print a heading? */

	     call date_time_ (clock_ (), date);		/* give the date...names change over time */
	     call ioa_ ("^/Access Isolation Attribute Names - ^a", date);

	end;

	if long then do;				/* see how much info we should print */
	     max_level = 7;				/* print 0 through 7 */
	     max_cat_set = (18)"1"b;			/* print each of the 18 categories */
	end;
	else do;					/* stay within the system high boundry */
	     high = addr (access_ceiling);		/* ptr to system high */
	     max_level = high -> aim_template.level;	/* copy system high level */
	     max_cat_set = substr (high -> aim_template.categories, 1, 18); /* only the first 18 are defined */
	end;

	if lev then do;				/* print the level names? */

	     call system_info_$level_names (level_names, short_level_names);

	     if max_level = 0 then do;		/* there may be nothing to print */
		if level_names (0) ^= " " then do;	/* name exists, so print */
		     no_print = "0"b;		/* indicate that something was printed */
		     if ^brief then call ioa_ ("^/^-Sensitivity level"); /* title? */
		     call ioa_ ("^-^11a^a", short_level_names (0), level_names (0)); /* print name */
		end;
	     end;
	     else do;				/* he wants several names */
		no_print = "0"b;			/* indicate that we printed */
		if ^brief then call ioa_ ("^/^-Sensitivity Levels^/^7xShort Name^-Long Name");
		do i = 0 to max_level;
		     long_name = level_names (i);
		     if long_name = "" then long_name = "*- NOT NAMED -*"; /* we should print something!! */
		     call ioa_ ("^-^8a^2x^a", short_level_names (i), long_name);
		end;
	     end;
	end;

	if cat then				/* print category names? */

	     if max_cat_set ^= (18)"0"b then do;	/* is there anything to print? */
		call system_info_$category_names (category_names, short_category_names);
		no_print = "0"b;			/* yes, say we did it */
		if ^brief then call ioa_ ("^/^-Access Categories^/^7xShort Name^-Long Name"); /* short title? */
		do i = 1 to 18;
		     if substr (max_cat_set, i, 1) then do;
			long_name = category_names (i);
			if long_name = "" then long_name = "*- NOT NAMED -*"; /* again...print something */
			call ioa_ ("^-^8a^2x^a", short_category_names (i), long_name);
		     end;
		end;

	     end;



	if no_print then				/* special case when no names were printed */
	     if lev & cat then
		call ioa_ ("The only acceptable access class is ""system_low"".");
	     else if lev then
		call ioa_ ("There are no sensitivity levels defined.");
	     else call ioa_ ("There are no access categories defined.");

	return;
     end print_auth_names;
