/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */

/* format: ^indcom */

/* DESCRIPTION:

         This  program  loads  dm_system_data_ with the various configuration
     file parameters that are different than in the installed dm_system_data_.
     An example of this is the default before journal size.

     Several assumptions are made:
     - The configuration file exists and has been locked and validated by  the
       process loading the system data,
     - dm_system_data_ is addressable via an implicit link,
     -  the configuration file can be interpreted by overlaying a structure on
       it (see dm_system_config.incl.pl1), and
     - the site config parameters will  either  be  zero  (a.k.a.    null)  or
       non-zero.    Zero  valued parameters will be ignored, the others loaded
       into dm_system_data_.
*/

/* HISTORY:
Written by M. Pandolf, 12/07/82.
Modified:
03/21/83 by M. Pandolf: to use new dm_system_config dcl and to use new name
	  use new name for the config file, "dm_configuration".
03/23/83 by M. Pandolf: to set default bj dirs and to set shutdown delay.
03/28/83 by M. Pandolf: to fix names of default bj dirs and to add
	  log_proc_terms.
04/07/83 by M. Pandolf:  to fix bug in previous change.
05/09/83 by L. A. Newcomb:  to work with new config programs:  lock and find.
11/04/83 by M. Pandolf:  to set default before journal name to
            system_default.bj for extended object integration.
05/29/84 by Lindsey L. Spratt:  Changed to use version 2 of dm_system_config.
            Fixed to check the version of dm_system_config.  Removed dcl of
            $bj_max_n_journals.
06/12/84 by Lindsey Spratt:  Added initialization of the
	  $initializer_shutdown_delay cell.
09/05/84 by Lee A. Newcomb:  Renamed
            dm_system_data_$initializer_shutdown_delay to be
            $user_shutdown_delay to agree with dm_system_data_ changes.
11/22/84 by Lee A. Newcomb:  Fixed to use dm_misc_util_$get_aim_dir.
12/10/84 by R. Michael Tague:  Added comments and rearranged CHECK_VERSION args
*/

/* format: style2,^inddcls,linecom,ifthendo,ifthen,^indnoniterdo,dclind5,idind35 */

dm_load_configuration_:
     proc (p_dm_system_config_ptr);

/* START OF DECLARATIONS */

/* Parameter */
dcl  p_dm_system_config_ptr		ptr parameter;

/* Automatic */
dcl  code				fixed bin (35) automatic;

/* Builtin */
dcl  null				builtin;

/* Constant */
dcl  myname			init ("dm_load_configuration_") char (32) varying internal static
				options (constant);

/* Entries */
dcl  (
     dm_misc_util_$get_aim_dir	entry (char (*)),
     sub_err_			entry () options (variable)
     )				external;

/* External */
dcl  (
     dm_system_data_$bj_default_dirname char (168),
     dm_system_data_$bj_default_filename
				char (32),
     dm_system_data_$bj_default_journal_size
				fixed bin,
     dm_system_data_$bj_max_n_processes fixed bin,
     dm_system_data_$initializer_wakeup_increment
				fixed bin,
     dm_system_data_$log_proc_terms	bit (1) aligned,
     dm_system_data_$max_n_transactions fixed bin,
     dm_system_data_$user_shutdown_delay
				fixed bin (71),
     error_table_$unimplemented_version fixed bin (35)
     )				external static;

/* END OF DECLARATIONS */
%page;
/* set local version of config file pointer */

	dm_system_config_ptr = p_dm_system_config_ptr;

	call CHECK_VERSION (dm_system_config.version, DM_CONFIG_VERSION_2, "dm_system_config");

/* now fill in appropriate dm_system_data_ cells. */

	if dm_system_config.idle_timeout ^= 0 then
	     dm_system_data_$initializer_wakeup_increment = dm_system_config.idle_timeout;

	if dm_system_config.shutdown_delay ^= 0 then
	     dm_system_data_$user_shutdown_delay = dm_system_config.shutdown_delay;

/* $log_proc_terms is always set, no default */

	dm_system_data_$log_proc_terms = dm_system_config.log_proc_terms;

	if dm_system_config.max_n_txn ^= 0 then
	     dm_system_data_$max_n_transactions = dm_system_config.max_n_txn;

	if dm_system_config.max_n_proc ^= 0 then
	     dm_system_data_$bj_max_n_processes = dm_system_config.max_n_proc;

	if dm_system_config.default_bj_size ^= 0 then
	     dm_system_data_$bj_default_journal_size = dm_system_config.default_bj_size;

	if dm_system_config.default_bj.dir = "" | dm_system_config.default_bj.dir = "aim_dir" then
	     call dm_misc_util_$get_aim_dir (dm_system_data_$bj_default_dirname);

/*
   NOTE WELL: the non-deterministic keyword "bootload_dir" is passed directly
   into dm_system_data_ to be interpreted at a later time by the before 
   journal manager.
*/

	else dm_system_data_$bj_default_dirname = dm_system_config.default_bj.dir;

	if dm_system_config.default_bj.entry = "" then
	     dm_system_data_$bj_default_filename = "system_default.bj";
	else dm_system_data_$bj_default_filename = dm_system_config.default_bj.entry;

	return;
%page;
CHECK_VERSION:
     proc (p_received_version, p_expected_version, p_structure_name);

dcl  (p_expected_version, p_received_version)
				char (8) aligned parameter;
dcl  p_structure_name		char (*) parameter;

	if p_expected_version ^= p_received_version then
	     call sub_err_ (error_table_$unimplemented_version, myname, ACTION_CANT_RESTART, null, 0,
		"^/Expected version ^a of the ^a structure.  
Received version ^a, instead.", p_expected_version, p_structure_name, p_received_version);
     end CHECK_VERSION;


/* INCLUDE FILES START NEXT PAGE */
%page;
%include dm_system_config;
%page;
%include sub_err_flags;


     end dm_load_configuration_;
