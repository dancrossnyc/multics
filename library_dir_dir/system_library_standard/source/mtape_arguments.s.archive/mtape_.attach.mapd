/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */

/*	This is the argument processing definition source language for the
	attach description of the mtape_ I/O module. This may be
	compiled with the mtape_$mtape_cv_apd command and the binary result
	will be stored in the specified value segment data space with the 
	name of mtape_.attach. The syntax of the command line to perform
	this task would be:

	mtape_$mtape_cv_apd mtape_.attach.mapd -target <value_seg_path>

	where <value_seg_path> is the pathname of the desired value segment
	which will be created if it does not exist. If no "-target" control 
	arg is given, then the binary definition is stored in the users
	default value segment ([home_dir]>[user name].value).

	Modification history:

	Created by J. A. Bush 03/31/83
*/

Program_name:		mtape_.attach;

Default_linear_form:	"-density 1600 -device 1 -default_volume_type ansi",
			" -track 9 -wait_time 10 -error -label -no_display",
			" -no_ring -no_system -no_wait";

Initial_implied_option:       volume;

Option:			comment;
  Option_name:		-comment, -com;
  First_argument:		comment;
 Argument:		comment;
   Presence:		required;
   Validate:		"nless [length &r1]  65";
   Validate_explanation:	"The comment text must not exceed 64 characters",
			" in length.";

Option:			default_volume_type;
  Option_name:		-default_volume_type, -dvt;
  First_argument:		default_volume_type;
 Argument:		default_volume_type;
   Presence:		required;
   Validate:		"nless [length &r1] 22";
   Validate_explanation:	"The default_volume_type specification must not",
			" exceed 21 characters in length.";

Option:			density;
  Option_name:		-density, -den;
  First_argument:		density;
 Argument:		density;
   Presence:		required;
   Validate:		"or [nequal (200 556 800 1600 6250) &r1]";
   Validate_explanation:	"Valid density values are 200, 556, 800, 1600",
			" and 6250 only.";

Option:			device;
  Option_name:		-device, -dv;
  First_argument:		device;
 Argument:		device;
   Presence:		required;
   Validate:		"and [ngreater &r1 0] [nless &r1 64]";
   Validate_explanation:	"From 1 to 63 devices only may be specified.";

Option:			display;
  Option_name:		-display, -ds;
  Antonym:		-no_display, -nds;
 Argument:		flag;
   Default_value:		"true";
   Antonym_value:		"false";

Option:			error;
  Option_name:		-error, -err;
  Antonym:		-no_error, -nerr;
 Argument:		flag;
   Default_value:		"true";
   Antonym_value:		"false";

Option:			label;
  Option_name:		-label, -lbl;
  Antonym:		-no_labels, -no_label, -nlbl;
 Argument:		flag;
   Default_value:		"true";
   Antonym_value:		"false";

Option:			ring;
  Option_name:		-ring, -rg;
  Antonym:		-no_ring, -nrg;
 Argument:		flag;
   Default_value:		"true";
   Antonym_value:		"false";

Option:			speed;
  Option_name:		-speed, -ips;
  First_argument:		speed;
 Argument:		speed;
   Presence:		required;
   Validate:		"or [equal (75 125 200 75,125 75,200 75,125,200",
			" 75,200,125 125,75 125,200 125,75,200 125,200,75",
			" 200,75 200,125 200,75,125 200,125,75) &r1]";
   Validate_explanation:	"Acceptable speed values are 75, 125 and 200. If",
			" more than 1 speed is to be specified,",
			" additional speeds must be indicated in a comma",
			" seperated list (e.g. ""-speed 125,200"").";

Option:			system;
  Option_name:		-system, -sys;
  Antonym:		-no_system, -nsys;
 Argument:		flag;
   Default_value:		"true";
   Antonym_value:		"false";

Option:			track;
  Option_name:		-track, -tk;
  First_argument:		track;
 Argument:		track;
   Presence:		required;
   Validate:		"or [nequal (7 9) &r1]";
   Validate_explanation:	"Values for the ""-track"" option may be either",
			" 7 or 9 only.";

Option:			volume;
  Option_name:		-volume, -vol;
  Unexclude:		volume;
  First_argument:		volume;
 Argument:		volume;
   Presence:		required;
   Force_literal:		;
   Next_argument:		NONE;
   Validate:		"nless [length &r1]  33";
   Validate_explanation:	"Volume name specifications must not exceed 32",
			" characters in length.";

Option:			volume_type;
  Option_name:		-volume_type, -vt;
  First_argument:		volume_type;
 Argument:		volume_type;
   Presence:		required;
   Validate:		"nless [length &r1]  22";
   Validate_explanation:	"The volume_type specification must not",
			" exceed 21 characters in length.";

Option:			wait;
  Option_name:		-wait, -wt;
  Antonym:		-no_wait, -nwt;
 Argument:		flag;
   Default_value:		"true";
   Antonym_value:		"false";

Option:			wait_time;
  Option_name:		-wait_time, -wtm;
  First_argument:		wait_time;
 Argument:		wait_time;
   Presence:		required;
   Validate:		"and [ngreater &r1 0] [nless &r1 1441]";
   Validate_explanation:	"The wait_time value must be in the range of",
			" 1 to 1440 minutes (24 hours).";

End;



