/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */

/* format: style2,ind3 */

rlm_create_cursor:
   proc (p_rel_opening_id, p_work_area_ptr, p_relation_cursor_ptr, p_code);

/* DESCRIPTION:


*/

/* HISTORY:

Written by Matthew Pierret, 09/13/82.
Modified:
10/13/82 by Matthew Pierret:  Changed to accept p_collection_id = "0"b to 
            indicate the record collection.
01/18/83 by Matthew Pierret:  Changed to use RELATION_INFO_VERSION_2.
02/28/83 by Matthew Pierret:  Changed to use relation_opening_info, 
            relation_header and index_attribute_map instead of relation_info.
05/24/83 by Matthew Pierret:  Changed to use relation_cursor instead of
            index and record_cursor.  This reduced the routine to little
            more than an allocation.
06/08/84 by Lee Baldwin:  Took out the dcl of dm_error_$index_not_in_relation
            since it isn't being used here.
10/31/84 by Stanford S. Cox:  Added asgn. of relation_cursor.version.
*/

/* START OF DECLARATIONS */
/* Parameter */

      dcl	    p_rel_opening_id       bit (36) aligned parameter;
      dcl	    p_work_area_ptr	       ptr parameter;
      dcl	    p_relation_cursor_ptr  ptr parameter;
      dcl	    p_code	       fixed bin (35) parameter;

/* Automatic */

      dcl	    relation_opening_info_ptr
			       ptr init (null);

/* Based */

      dcl	    p_work_area	       area (99999) based (p_work_area_ptr);

/* Builtin */

      dcl	    (null, hbound)	       builtin;

/* Constant */

      dcl	    myname	       init ("rlm_create_cursor") char (17) internal static options (constant);

/* Entry */

      dcl	    record_manager_$create_cursor
			       entry (bit (36) aligned, bit (36) aligned, ptr, ptr, fixed bin (35));
      dcl	    index_manager_$create_cursor
			       entry (bit (36) aligned, bit (36) aligned, ptr, ptr, fixed bin (35));
      dcl	    rlm_opening_info$get   entry (bit (36) aligned, ptr, fixed bin (35));

/* END OF DECLARATIONS */

      p_code = 0;
      p_relation_cursor_ptr = null;

/* To verify that p_rel_opening_id is valid */
      call rlm_opening_info$get (p_rel_opening_id, relation_opening_info_ptr, p_code);
      if p_code ^= 0
      then return;

      alloc relation_cursor in (p_work_area);
      relation_cursor.version = RELATION_CURSOR_VERSION_2;
      relation_cursor.work_area_ptr = p_work_area_ptr;
      relation_cursor.file_opening_id = p_rel_opening_id;

      p_relation_cursor_ptr = relation_cursor_ptr;

      return;
%page;
%include dm_rlm_cursor;

   end rlm_create_cursor;
