/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */
/* format: style2 */
rcm_create_cursor:
create_cursor:
     proc (p_file_opening_id, p_record_collection_id, p_work_area_ptr, p_record_cursor_ptr, p_code);

/* DESCRIPTION
   Allocates a record_cursor structure in the provided work area.  This
   cursor is tailored for the record collection with which it is to be used.
   Its initial position is at the beginning of the collection.
*/

/* Written by Matthew Pierret.
Modified:
09/07/82 by Matthew Pierret:  Changed collection_id to bit (36) aligned.
07/28/83 by Matthew Pierret: Changed name from rm_create_cursor to
            rcm_create_cursor, and all rm_ prefixes to rcm_.
04/12/84 by Lee Baldwin:  Renamed the parameters to coincide with all the other
            rcm_XX routines.
*/

/* START OF DECLARATIONS */
/* Parameter */

	dcl     p_file_opening_id	 bit (36) aligned;
	dcl     p_record_collection_id bit (36) aligned;
	dcl     p_work_area_ptr	 ptr;
	dcl     p_record_cursor_ptr	 ptr;
	dcl     p_code		 fixed bin (35);

/* Automatic */

	dcl     work_area_ptr	 ptr;

/* Based */

	dcl     work_area		 area (sys_info$max_seg_size) based (work_area_ptr);

/* Builtin */
/* Condition */

	dcl     area		 condition;

/* Controlled */
/* Constant */

	dcl     myname		 init ("rcm_create_cursor") char (32) varying internal static options (constant);

/* Entry */
/* External */

	dcl     error_table_$area_too_small
				 ext fixed bin (35);
	dcl     sys_info$max_seg_size	 ext fixed bin (35);

/* END OF DECLARATIONS */

	p_code = 0;
	work_area_ptr = p_work_area_ptr;

	on area
	     begin;
		p_code = error_table_$area_too_small;
		goto RETURN;
	     end;

	alloc record_cursor in (work_area);
	record_cursor.version = RECORD_CURSOR_VERSION_2;
	record_cursor.type = RECORD_CURSOR_TYPE;
	record_cursor.area_ptr = work_area_ptr;
	record_cursor.file_opening_id = p_file_opening_id;
	record_cursor.collection_id = p_record_collection_id;
	record_cursor.record_id = BEGINNING_OF_COLLECTION_RECORD_ID;
	record_cursor.record_check_value = "0"b;
	string (record_cursor.flags) = "0"b;

	p_record_cursor_ptr = record_cursor_ptr;
RETURN:
	return;

%page;
%include dm_rcm_cursor;

     end rcm_create_cursor;
