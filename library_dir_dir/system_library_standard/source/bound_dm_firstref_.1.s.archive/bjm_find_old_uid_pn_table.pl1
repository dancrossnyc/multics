/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */
bjm_find_old_uid_pn_table:
     proc (Old_boot_dir, Bj_pn_table_p, Code);

/*  DESCRIPTION:
     This program locates the before journal unique id-pathname table from
   an old bootload instance of DMS.  Currently, this table is in the
   bj_pst_segment.  The table is required for DMS recovery to operate.
*/

/*  HISTORY:
Written by Lee A. Newcomb, 6 Jan 1983
Modified:
*/
/* format:  style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */
%page;
/* initialize output parameter */
	Code = 0;					/* let's be optimistic */


/* now initiate the PST segment in the old directory */
	call initiate_file_ (Old_boot_dir, BJ_PST, R_ACCESS, bj_pst_ptr, (0), Code); /* ignore bit count */
	if Code ^= 0 then				/* sorry */
	     return;


/* OK, now get the location we want */
	Bj_pn_table_p = addrel (bj_pst_ptr, bj_pst.pn_table_offset);

	return;					/* I never said
it was lengthy */

/* end bjm_find_old_uid_pn_table; */
%page;
/* DECLARATIONS */

dcl  (						/* parameters */
     Old_boot_dir		        char (*),		/* INPUT: old bootload dir. of DMS */
     Bj_pn_table_p		        ptr,		/* OUTPUT: the location of the BJ UID-pathname table */
     Code			        fixed bin (35)	/* OUTPUT: normal error code, recovery fails if ^= 0 */
     )			        parameter;

dcl						/* PL/I things */
     addrel		        builtin;

dcl						/* external entries called */
     initiate_file_		        entry (char (*), char (*), bit (*), ptr, fixed bin
			        (24), fixed bin (35));
%page;
/* INCLUDE FILES */
%include dm_bj_pst;
%page;
%include dm_bj_pste;
%page;
%include dm_bj_names;
%skip (6);
%include access_mode_values;


     end bjm_find_old_uid_pn_table;
