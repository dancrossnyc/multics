" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" ***********************************************************

" Standard subsystem request tables

" Created:  April 1982 by G. Palter
" Modified: 30 July 1982 by G. Palter to allow abbrev to be used as an active
"	  request.



" HISTORY COMMENTS:
"  1) change(86-08-12,JSLove), approve(86-08-12,MCR7519),
"     audit(86-08-18,Parisek), install(86-10-01,MR12.0-1170):
"     Added the execute_string and substitute_arguments requests.
"                                                      END HISTORY COMMENTS




	include	ssu_request_macros

	name	ssu_request_tables_

" 

" ssu_request_tables_$standard_requests -- A request table containing all
"   standard subsystem requests;" it should be added as the last request
"   table by subsystems which implement all standard requests

	begin_table standard_requests

	request	.,
		 ssu_requests_$self_identify,
		 (),
		 (Identify the subsystem.)

	request	?,
		 ssu_requests_$summarize_requests,
		 (),
		 (Produce a list of the most commonly used requests.),
		 flags.allow_command+flags.dont_summarize

	request	abbrev,
		 ssu_requests_$abbrev,
		 (ab),
		 (Enable/disable abbreviation processing of request lines.),
		 flags.allow_both

	request	answer,
		 ssu_requests_$answer,
		 (),
		 (Provide preset answers to another request line.)

	request	debug_mode,
		 ssu_requests_$debug_mode,
		 (),
		 (Enable/disable subsystem debugging facilities.),
		 flags.allow_command+flags.dont_summarize+flags.dont_list

	request	do,
		 ssu_requests_$do,
		 (),
		 (Perform substitution into a control string and execute or return the expansion.),
		 flags.allow_both

	request	exec_com,
		 ssu_requests_$exec_com,
		 (ec),
		 (Execute a file containing request lines with parameter substitution.),
		 flags.allow_both

	request	execute,
		 ssu_requests_$execute,
		 (e),
		 (Execute a Multics command line.),
		 flags.allow_both

	request	execute_string,
		 ssu_requests_$execute_string,
		 (exs),
		 (Perform substitution into a control string and execute the expansion.),
		 flags.allow_both

	request	help,
		 ssu_requests_$help,
		 (),
		 (Obtain detailed information on the subsystem.)

	request	if,
		 ssu_requests_$if,
		 (),
		 (Conditionally execute one of two request lines.),
		 flags.allow_both

	request	list_help,
		 ssu_requests_$list_help,
		 (lh),
		 (List topics for which help is available.)

	request	list_requests,
		 ssu_requests_$list_requests,
		 (lr),
		 (List brief information on subsystem requests.)

	request	quit,
		 ssu_requests_$quit,
		 (q),
		 (Leave the subsystem.)

	request	ready,
		 ssu_requests_$ready,
		 (rdy),
		 (Print a ready message.),
		 flags.allow_command+flags.dont_summarize+flags.dont_list

	request	ready_off,
		 ssu_requests_$ready_off,
		 (rdf),
		 (Disable printing ready messages after each request line.),
		 flags.allow_command+flags.dont_summarize+flags.dont_list

	request	ready_on,
		 ssu_requests_$ready_on,
		 (rdn),
		 (Enable printing ready messages after each request line.),
		 flags.allow_command+flags.dont_summarize+flags.dont_list

	request	substitute_arguments,
		 ssu_requests_$substitute_arguments,
		 (substitute_args,sbag),
		 (Perform substitution into a control string and print or return the expansion.),
		 flags.allow_both

	request	subsystem_name,
		 ssu_requests_$subsystem_name,
		 (),
		 (Return the name of this subsystem.),
		 flags.allow_both+flags.dont_summarize+flags.dont_list

	request	subsystem_version,
		 ssu_requests_$subsystem_version,
		 (),
		 (Return the version number of this subsystem.),
		 flags.allow_both+flags.dont_summarize+flags.dont_list

	end_table standard_requests

	end
