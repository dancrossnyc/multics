/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
/* format: off */
%skip(1);
/*

     This module is called by the the rw_display module to delete
     the environment set up by rw_fr_new_report.

 
     Known Bugs:
 
     Other Problems:

     History:

     Written - Al Dupuis - August 1983
     Changed - Al Dupuis - October 1984 - Became report_writer_.

*/
%page;
rw_fr_delete_report: proc (

	report_cip_parm,	/* input: point to report_control_info */
	code_parm		/* output: success or failure */
		         );
%skip(3);
dcl code_parm fixed bin (35) parm;
dcl report_cip_parm ptr parm;
%skip(3);
	report_cip = report_cip_parm;
	code_parm = 0;
	sci_ptr = report_control_info.subsystem_control_info_ptr;
%skip(1);
	/* If we kept a copy of the original report while we were making it then delete it. */
%skip(1);
	if report_control_info.flags.permanent_report
	then do;
	     format_report_ip = report_control_info.format_report_info_ptr;
	     iocb_ptr = format_report_info.report_iocb_ptr;
	     if iocb_ptr ^= null ()
	     then do;
		call iox_$close (iocb_ptr, code);
		if code ^= 0
		then call ssu_$print_message (sci_ptr, code,
		     "While trying to close ^p.", iocb_ptr);
		call iox_$detach_iocb (iocb_ptr, code);
		if code ^= 0
		then call ssu_$print_message (sci_ptr, code,
		     "While trying to detach ^p.", iocb_ptr);
		call iox_$destroy_iocb (iocb_ptr, code);
		if code ^= 0
		then call ssu_$print_message (sci_ptr, code,
		     "While trying to destroy ^p.", iocb_ptr);
		call delete_$path (format_report_info.report_directory_name,
		     
		     format_report_info.report_entry_name,
		     "100111"b, "display", code);
		if code ^= 0
		then call ssu_$print_message (sci_ptr, code,
		     "While trying to delete ^a in directory^/^a.",
		     format_report_info.report_entry_name,
		     format_report_info.report_directory_name);
		format_report_info.report_iocb_ptr = null ();
		report_control_info.flags.permanent_report = "0"b;
	     end;
	end;
%skip(1);
	/* Refresh our area instead of freeing everything. */
%skip(1);
	work_area_ptr = report_control_info.report_work_area_ptr;
	call ssu_$release_area (sci_ptr, work_area_ptr);
	call ssu_$get_area (sci_ptr, report_control_info.area_info_ptr,
	     "rw_.report_area", report_control_info.report_work_area_ptr);
%skip(1);
	return;
%page;
dcl code fixed bin (35);
%skip(1);
dcl delete_$path entry (char(*), char(*), bit(6), char(*), fixed bin(35));
%skip(1);
dcl iocb_ptr ptr;
dcl iox_$close entry (ptr, fixed bin(35));
dcl iox_$destroy_iocb entry (ptr, fixed bin(35));
dcl iox_$detach_iocb entry (ptr, fixed bin(35));
%skip(1);
dcl null builtin;
%skip(1);
dcl sci_ptr ptr;
dcl ssu_$get_area entry (ptr, ptr, char(*), ptr);
dcl ssu_$print_message entry() options(variable);
dcl ssu_$release_area entry (ptr, ptr);
%skip(1);
dcl work_area_ptr ptr;
%page;
%include rw_options_extents;
%page;
%include rw_report_info;
%page;
%include rw_report_structures;
%skip(3);
     end rw_fr_delete_report;
