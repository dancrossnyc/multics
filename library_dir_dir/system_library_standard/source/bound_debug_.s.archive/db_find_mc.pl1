/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


db_find_mc:	procedure (a_sp, co_flag, ret_mcp);

/* 	This procedure is used by other debug subroutines to
	obtain a pointer to the latest set of machine
	conditions relative to the frame pointed to by a_sp.
	If co_flag is "1"b, then the caller desires machine conditions
	associated with the latest crawlout.
*/


/*	Coded by Robert S. Coren 07/23/73	*/


dcl a_sp ptr;
dcl co_flag bit(1) aligned;
dcl ret_mcp ptr;

dcl sp ptr;
dcl pp ptr;

dcl code fixed bin(35);

dcl (addr, null) builtin;

dcl find_condition_frame_ entry (ptr) returns (ptr);
dcl find_condition_info_ entry (ptr, ptr, fixed bin(35));

dcl 1 cond_info aligned,
%include cond_info;


	sp = a_sp;
	ret_mcp = null;		/* all set in case we don't find it */

find_it:
	pp = find_condition_frame_ (sp);
	if pp = null then return;	/* okay, there aren't any */

	sp = pp;
	call find_condition_info_ (pp, addr(cond_info), code);
	if cond_info.mcptr = null then go to find_it;	/* software condition, no mc */

	if co_flag
	then if ^cond_info.crawlout
	     then go to find_it;		/* not crawlout, keep looking */

	ret_mcp = cond_info.mcptr;		/* if we got here we have the stuff we want */
	return;
     end;
