/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
%;
/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

create_reference: proc(s) returns(ptr);
/*	Modified on:	April 1977 by RHS for new allocation methods */

dcl	1 pl1_nodes_template_$reference_template external like reference aligned;

dcl	(p,s) ptr,

	nodetype fixed bin(15);

dcl	pl1_stat_$free_ptr(18) ptr ext static;

dcl	(addr,fixed,null,string) builtin;
dcl	pl1_stat_$node_uses(32) fixed bin ext;

dcl	use_xeq bit(1) aligned;

%include pl1_tree_areas;
%include nodes;
%include reference;

	use_xeq = "1"b;

begin:
	nodetype = fixed(reference_node,15,0);
	p = pl1_stat_$free_ptr(nodetype);

	if p^=null
	then	pl1_stat_$free_ptr(nodetype) = p->reference.symbol;
	else do;
	     pl1_stat_$node_uses(4) = pl1_stat_$node_uses(4) + 1;
	     if use_xeq
		then allocate reference in(xeq_tree_area) set(p);
		else allocate reference in(tree_area) set(p);
	     end;

	p->reference = pl1_nodes_template_$reference_template;

	p -> reference.symbol = s;

	return(p);

for_symbol:	entry(s) returns(ptr);
	use_xeq = "0"b;
	go to begin;

	end;
