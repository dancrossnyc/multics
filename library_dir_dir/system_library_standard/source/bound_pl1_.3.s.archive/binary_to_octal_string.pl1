/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


binary_to_octal_string: procedure(integer,nonvarying);

	vs = "0"b;
	go to begin;

dcl integer fixed bin(35) parameter;
dcl (addr,mod,substr) builtin;
dcl number fixed bin(35);
dcl bit_number bit(36) based(addr(number)) aligned;
dcl string char(12);
dcl nonvarying char(12);
dcl varying char(12) varying;
dcl 1 bit_string_overlay aligned based(addr(string)),
    2 bit_string(0:11) bit(9) unaligned;
dcl (i,j,l) fixed bin;
dcl vs bit(1) aligned;
dcl spaces char(12) aligned internal static initial((12)" ");

binary_to_octal_var_string: entry(integer,varying);

	vs = "1"b;
begin:
	number = integer;
	i = 0;
	if number < 0
	then do;
		number = -number;
		i = 1;
		substr(string,1,1) = "-";
	     end;

	j = index(bit_number,"1"b);
	if j = 0
	then do;
		string = "0";
		i = 1;
		go to return;
	     end;

	l = mod(j,3);
	if l = 0
	then j = j - 2;
	else j = j - l + 1;

	bit_number = substr(bit_number,j);
	do j = j to 34 by 3;
	bit_string(i) = "000110"b || substr(bit_number,1,3);
	bit_number = substr(bit_number,4);
	i = i + 1;
	end;

return:
	if vs
	then varying = substr(string,1,i);
	else nonvarying = substr(spaces,1,(12-i))||substr(string,1,i);
end;
