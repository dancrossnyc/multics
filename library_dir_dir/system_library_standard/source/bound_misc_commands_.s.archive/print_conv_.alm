" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" ***********************************************************
" PRINT_CONV_ - Conversion for for producing canonical output
"	coded 11/4/74 by Noel I. Morris
"         borrowed by thvv


"  ******************************************************
"  *                                                    *
"  *                                                    *
"  * Copyright (c) 1972 by Massachusetts Institute of   *
"  * Technology and Honeywell Information Systems, Inc. *
"  *                                                    *
"  *                                                    *
"  ******************************************************


	include	prt_conv_info




	name	print_conv_

	segdef	print_conv_

	tempd	pointer
	temp	char,line,tabstop,residue

print_conv_:
	tra	print_send_init
	tra	print_send_chars
	tra	print_send_slew_pattern
	tra	print_send_slew_count

" 
" Entry called at beginning of conversion

print_send_init:
	ldq	lb|pci.line	get current line
	sbq	1,dl		.. cause tabs are at 11 ...
	stq	line
	div	10,dl		compute starting tabstop
	stq	tabstop
	sta	residue
	tra	sb|0		return

" 

print_send_chars:
	eax2	0,2		set indicators from X2
	tmoz	nospace		if no white space, skip following

	mlr	(),(pr,rl),fill(040)  insert blanks into output
	desc9a	*,0		..
	desc9a	bb|0,x2		..

	a9bd	bb|0,2		step output pointer over blanks
	eax2	0		set white space count back to zero

nospace:	mlr	(pr,rl),(pr,rl)	copy characters into output
	desc9a	bp|0,au		..
	desc9a	bb|0,au		..

	a9bd	bp|0,au		step input and output pointers
	a9bd	bb|0,au		..

	tra	sb|0		return to caller

" 

print_send_slew_pattern:
	eax7	0		initialize for search
	rpt	nslew/2,2,tze	search for slew characters
	cmpa	slew,7		..
	lda	-1,7
	sta	char
stslew:	mlr	(pr),(pr)
	desc9a	char,1
	desc9a	bb|0,1
	ldq	1,dl
	a9bd	bb|0,ql
	tra	sb|0		return to caller


slew:
	vfd	27/,o9/0		FF
	vfd	o9/014
	vfd	27/,o9/013	top of inside page
	vfd	o9/014		treat as ff
	vfd	27/,o9/011	top of outside page
	vfd	o9/014

	equ	nslew,*-slew

nlchar:	vfd	o9/012
crchar:	vfd	o9/015
vtstring:	vfd	o9/013,o9/013,o9/013,o9/013
	vfd	o9/013,o9/013,o9/013,o9/013
	vfd	o9/013,o9/013,o9/013,o9/013
	vfd	o9/013,o9/013,o9/013,o9/013

" 

print_send_slew_count:
	spribp	pointer		see if faked slew char is beyond end of seg
	ldq	pointer+1
	qrl	18
	cmpq	=o776000
	tze	no_vt		if so, skip test for VT char
	cmpc	(pr),()		see if slew was VT
	desc9a	bp|0,1
	desc9a	vtstring,1
	tnz	no_vt
	ada	line		VT, compute new ending line
	lrs	36
	div	10,dl		convert to stop
	sba	residue		a has spaces over
	sbq	tabstop		q has vt count
	tze	no_vt
	mlr	(rl),(pr,rl)	undo work of prt_conv_
	desc9a	vtstring,ql	.. by putting out VT
	desc9a	bb|0,ql
	a9bd	bb|0,ql		step output ptr
	tra	sb|0
no_vt:	ldq	crchar
	sba	1,dl		one at a time
	tmi	2,ic
	ldq	nlchar
	stq	char
	tra	stslew

	end
