/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


fill_refer: proc(pp,qq,copy) returns(ptr);

dcl	(pp,qq) ptr,
	copy bit(1) aligned;

dcl	(i,n) fixed bin(15),
	(p,q) ptr,
	null builtin;

%include language_utility;
%include nodes;
%include reference;
%include operator;
%include op_codes;

	p = pp;
	if p = null then return(null);

	q = qq;

	if p -> node.type = reference_node
	then do;
	     p -> reference.qualifier = fill_refer((p -> reference.qualifier),q,copy);
	     p -> reference.offset = fill_refer((p -> reference.offset),q,copy);
	     p -> reference.length = fill_refer((p -> reference.length),q,copy);
	     return(p);
	     end;

	if p ->node.type = operator_node
	then do;
	     if p -> op_code = refer
	     then do;
		p = p -> operand(2);
		if p -> node.type = token_node then p = create_reference(p);

		if q -> node.type = reference_node
		then if q -> reference.shared
		      & q -> reference.qualifier = null
		      & q -> reference.offset = null
		      & q -> reference.length = null
		     then do;
			p -> reference.qualifier = q;
			return(p);
			end;

		if copy then q = copy_expression((q));
		p -> reference.qualifier = q;
		return(p);
		end;

	     do i = 1 to p -> operator.number;
		p -> operand(i) = fill_refer((p -> operand(i)),q,copy);
		end;

	     return(p);
	     end;

	return(p);
	end;
