/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */
picture_edit_: proc(picture,target_pt,target_length,source_pt,source_type,source_length);

dcl	picture		char(*) aligned,
	target_pt		ptr,
	target_length	fixed bin,
	source_pt		ptr,
	source_type	fixed bin,
	source_length	fixed bin;

dcl	buff(20) fixed binary,
	temp(128) char(1) unaligned,
	temp_length fixed binary;

dcl	bit1 bit(1) unaligned based;

dcl	picture_info_ entry(char(*) aligned,ptr,fixed bin),
	assign_ entry(ptr,fixed bin,fixed bin,ptr,fixed bin,fixed bin),
	pack_picture_ options(variable);

dcl	map_type(24:28) fixed bin int static
	init(	42,	/* character */
		18,	/* real fixed dec */
		22,	/* cplx fixed dec */
		20,	/* real float dec */
		24	/* cplx float dec */);

dcl	1 info aligned based(addr(buff)) like picture_image;

%include picture_image;

	call picture_info_(picture,addr(buff),target_length);

	if target_length ^= 0 then return;

	temp_length = info.prec + 262144 * (info.scale - info.scalefactor);

	call assign_(addr(temp),map_type(info.type),temp_length,source_pt,source_type,source_length);

	call pack_picture_(target_pt -> bit1,buff,temp);

	target_length = info.varlength;
	end;
