/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */
/* format: style2 */

/* Written by J. Siwila 3/30/83 */

/* This procedure clears a six line window at the bottom of the Tutorial and then
   accepts a glossary query and prints the glossary entry. */

tut_bottom_:
     proc (true_io_window_info, io_height, menu_height, Phelp_args, code);

/* Automatic */

	dcl     io_height		 fixed bin;
	dcl     line		 char (40);
	dcl     menu_height		 fixed bin;
	dcl     1 bottom_io_window_info
				 like window_position_info;
	dcl     1 true_io_window_info	 like window_position_info;
	dcl     bottom_io_switch_name	 char (32);
	dcl     code		 fixed bin (35);
	dcl     ME_BOTTOM		 char (11) init ("tut_bottom_");
	dcl     n_read		 fixed bin (21);
	dcl     seg_name		 char (11) init ("prompt_line");
	dcl     trim_line		 char (40) var;

	dcl     LOWER_CASE		 char (26) int static options (constant) init ("abcdefghijklmnopqrstuvwxyz");
	dcl     UPPER_CASE		 char (26) int static options (constant) init ("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
	dcl     progress		 fixed bin;
	dcl     NL		 char (1) int static options (constant) init ("
");

/* Builtin */

	dcl     (addr, divide, substr, length, translate)
				 builtin;

/* Entries */


	dcl     ioa_$ioa_switch	 entry options (variable);
	dcl     ioa_$ioa_switch_nnl	 entry options (variable);
	dcl     tut_quit_		 entry () options (variable);


	bottom_io_window_info = window_position_info_version_1;
	call iox_$control (iox_$user_io, "get_window_info", addr (bottom_io_window_info), code);
	if code ^= 0
	then do;
		call tut_quit_ (code, ME_BOTTOM, "Can't get window info.", iox_$user_io, bottom_io_window_info);
		return;
	     end;
	bottom_io_window_info.height = 7;
	bottom_io_window_info.width = true_io_window_info.extent.width;

	bottom_io_window_info.line = io_height + menu_height - 6;

	call iox_$control (iox_$user_io, "set_window_info", addr (bottom_io_window_info), code);
	if code ^= 0
	then do;
		call tut_quit_ (0, ME_BOTTOM, "Unable to set user i/o window info.", iox_$user_io,
		     bottom_io_window_info);
		return;
	     end;
	call window_$clear_window (iox_$user_io, code);
	if code ^= 0
	then do;
		call tut_quit_ (0, ME_BOTTOM, "Unable to clear bottom window.", iox_$user_io, bottom_io_window_info);
		return;
	     end;

	call ioa_$ioa_switch (iox_$user_io, "^v(-^)^/", bottom_io_window_info.width);
	call ioa_$ioa_switch_nnl (iox_$user_io, "^7( ^)Term to be explained:  ");
	call iox_$get_line (iox_$user_io, addr (line), length (line), n_read, code);

	trim_line = substr (line, 1, (n_read - 1));
	trim_line = translate (trim_line, "_", " ");
	trim_line = translate (trim_line, LOWER_CASE, UPPER_CASE);

	help_args.info_name = trim_line;

	call window_$position_cursor (iox_$user_io, 2, 1, code);

	if code ^= 0
	then do;
		call tut_quit_ (code, ME_BOTTOM, "Unable to move io switch.", iox_$user_io, bottom_io_window_info);
		return;
	     end;

	call help_ (ME_BOTTOM, Phelp_args, "gi.info", progress, code);
	if code ^= 0
	then if progress = 1
	     then call ioa_$ioa_switch (iox_$user_io, "Unable to get help at this time.");
	     else if progress = 2
	     then call ioa_$ioa_switch (iox_$user_io, "Cannot find term you asked for: ^a", trim_line);
	     else if progress = 3
	     then call ioa_$ioa_switch (iox_$user_io, "Cannot find term you asked for: ^a", trim_line);
	     else if progress = 4
	     then call ioa_$ioa_switch (iox_$user_io, "Cannot find term you asked for: ^a", trim_line);
	     else if progress = 5
	     then call ioa_$ioa_switch (iox_$user_io, "Cannot find term you asked for: ^a", trim_line);
	     else call ioa_$ioa_switch (iox_$user_io, "Cannot find term you asked for: ^a", trim_line);




	call iox_$control (iox_$user_io, "set_window_info", addr (true_io_window_info), code);
	if code ^= 0
	then do;
		call tut_quit_ (0, ME_BOTTOM, "Unable to reset user i/o window.", iox_$user_io, true_io_window_info);
		return;
	     end;

	return;

%include iox_dcls;
%page;
%include help_args_;
%page;
%include window_dcls;
%page;
%include window_control_info;

     end tut_bottom_;
