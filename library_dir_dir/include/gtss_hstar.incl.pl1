/* BEGIN INCLUDE FILE gtss_hstar.incl.pl1 */
/*
  Created: (Kepner Multics)  10/12/78 1500.3 mst Thu 
*/
/* This include file contains data structures, variables,
and routines used in common between gtss_drl_drlsav_ and
gtss_drl_restor_ for reading and writing H* files. */
dcl 1 catalog_block aligned based (buffer_ptr),
    2 blk_num fixed bin (17) unal,
    2 continue_catalog bit (18) unal,
    2 fill2 bit (36),
    2 cat (15),
      3 bcd_name bit (36),
      3 element_size bit (18) unal,			/* Size in 64 word blocks */
      3 initial_block bit (18) unal,
      3 fill3 bit (72),
    2 fill4 bit (36),
    2 checksum bit (36);

dcl 1 available_space_block aligned based (buffer_ptr),
    2 fill1 bit (36),
    2 blocks_used bit (18) unal,
    2 blocks_remaining bit (18)unal,
    2 fill2 (61) bit (36),
    2 checksum bit (36);

dcl 1 data_control_block aligned based (buffer_ptr),
    2 data_checksum bit (36),
    2 fill1 bit (36),
    2 control_block_checksum bit (36),
    2 bcd_name bit (36),
    2 entry_address bit (18) unal,
    2 load_origin bit (18) unal,
    2 fill2 bit (18) unal,
    2 number_of_data_blocks bit (18) unal,
    2 dcws (58),
      3 memory_loc bit (18)unal,
      3 zeros_3 bit (03)unal,
      3 action_code bit (03)unal,
      3 word_count bit (12) unal;

dcl  buffer_ptr ptr init(null());
dcl  element_name bit (36);
dcl  file_size_in_blocks fixed bin (18);
dcl  i fixed bin (24);
dcl  max_for_18_bits fixed bin (18) static int options (constant) init (256*1024-1);
dcl  memory_loc fixed bin (18);
dcl  temp fixed bin (24);
dcl  words_in_element fixed bin (18);
dcl  words_remaining fixed bin (18);

write_data: proc (sector,memory_location);
dcl  memory_location fixed bin(18) parm;
dcl  sector fixed bin (18) parm;
	     OP2.Device_Command = write_cmd;
go to data_dcws;

read_data: entry(sector,memory_location);
	     OP2.Device_Command = read_cmd;


data_dcws:;
	     memory_loc = memory_location;
	     words_remaining = words_in_element;
	     do i = 1 to hbound (DCW, 1);
		if words_remaining < 4097 then go to last_dcw;
		DCW (i).memory_loc = bit (memory_loc, 18);
		DCW (i).action_code = "001"b;		/* IOTP */
		DCW (i).word_count = "0000"b3;	/* 10000 octal = 4096 words indicated by all zeros in dcw count */
		memory_loc = memory_loc + 4096;
		words_remaining = words_remaining - 4096;
	     end;

last_dcw:	     ;
	     DCW (i).memory_loc = bit (memory_loc, 18);
	     DCW (i).action_code = "000"b;		/* IOTD */
	     DCW (i).word_count = bit (fixed (words_remaining, 12), 12);
	     go to common;

write_buffer:  entry (sector,memory_location);
	     OP2.Device_Command = write_cmd;
	     go to buffer_dcw;

read_buffer:   entry (sector,memory_location);
	     OP2.Device_Command = read_cmd;

buffer_dcw:    ;
	     DCW (1).memory_loc = bit(memory_location,18);
	     DCW (1).action_code = "000"b;		/* IOTD */
	     DCW (1).word_count = "0100"b3;		/* 100 octal = 64 = block_size */

common:	     ;
	     Seek_Address = sector;
	     call gtss_ios_io_ (
		fn,
		addr (select_sequence),
		gseg,
		fixed (gtss_ust.lsize.limit, 18),
		status,
		code);
	     if status ^= 0 then do;
		call gtss_abort_subsystem_(
		     mcp,
		     me,
		     4, /* Bad derail argument */
		     "At (^6o) Unable to write program to file ""^a"". gtss_ios_ status = ^i",
		     fixed (scu.ilc, 18),
		     to_from,
		     ascii_file_name);
		go to ret;
	     end;
	end write_data;
/*   END INCLUDE FILE gtss_hstar.incl.pl1 */
