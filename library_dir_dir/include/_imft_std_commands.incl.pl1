/* BEGIN INCLUDE FILE ... _imft_std_commands.incl.pl1 */

/* Created:  April 1982 by G. Palter */
/* Modified: July 1982 by G. Palter to add true AIM support */
/* Modified: March 1983 by Robert Coren to add local_io_error abort code */
/* Modified: August 1983 by Robert Coren to add access_floor to AIM2 record */


/****^  HISTORY COMMENTS:
  1) change(88-08-12,Beattie), approve(88-08-01,MCR7948),
     audit(88-10-14,Farley), install(88-10-14,MR12.2-1165):
     Add imft_version to sync_record structure to inform other driver of this
     driver's version of the IMFT software.
                                                   END HISTORY COMMENTS */


/* Standard command and reply control records used by IMFT drivers */


/* Standard command/reply types */

dcl (IMFT_DATA		initial (0),		/* data record */
     IMFT_SYNC1		initial (1),		/* first half of synchronization sequence */
     IMFT_SYNC2		initial (2),		/* second half of synchronization sequence */
     IMFT_ABORT		initial (3),		/* abort the current operation */
     IMFT_LOGOUT		initial (4),		/* one side requests that the other logout */
     IMFT_RESYNCHRONIZE	initial (5),		/* reply requesting resynchronization */
     IMFT_AIM1		initial (6),		/* first half of establsihing AIM ceiling */
     IMFT_AIM2		initial (7))		/* second half of establishing AIM ceiling */
	fixed binary (7) unaligned unsigned static options (constant);


/* Synchronization control record: sent as the SYNC1 command and reply and as the SYNC2 command; the SYNC2 reply is a
   zero-length record which is only sent if the SYNC2 command indicates success */

dcl  1 sync_record aligned based (sync_record_ptr),
       2 my_userid character (32),			/* Person_id of system sending this record */
       2 my_password character (8),			/* scrambled card input passowrd */
       2 code fixed binary (35),			/* non-zero code => validation failed; break the connection */
       2 correct_userid character (32),			/* Person_id that was expected if incorrect */
       2 imft_version character (8);			/* version of IMFT being used by driver */

dcl  sync_record_ptr pointer;


/* Abort command record */

dcl  1 abort_command aligned based (abort_command_ptr),
       2 reason fixed binary,				/* reason to abort this operation */
       2 code fixed binary (35);			/* real error code for an I/O error */

dcl  abort_command_ptr pointer;

dcl (IMFT_ABORT_IO_ERROR	initial (1),		/* I/O error */
     IMFT_ABORT_ABORTED	initial (2),		/* random fault */
     IMFT_ABORT_DEFERRED	initial (3),		/* operator deferred request */
     IMFT_ABORT_CANCELLED	initial (4),		/* operator cancelled request */
     IMFT_ABORT_SAVED	initial (5),		/* operator saved the request silently */
     IMFT_ABORT_RESTARTED	initial (6),		/* operator restarted the request */
     IMFT_ABORT_LOCAL_IO_ERROR initial (7))		/* I/O error on local system */
	fixed binary static options (constant);


/* AIM ceiling control records: the AIM1 command and reply are the aim_attributes structures defining the attributes on
   the system; the AIM2 command/reply record follows */

dcl  1 aim2_record aligned based (aim2_record_ptr),
       2 code fixed binary (35),			/* non-zero => AIM ceiling can not be established */
       2 computed_ceiling bit (72),			/* ceiling computed by other system (before translation) */
       2 computed_floor bit (72),			/* floor computed by other system (before translation) */
       2 flags unaligned,
         3 explicit_ceiling_given bit (1),		/* ON => an explicit access ceiling follows */
         3 explicit_floor_given bit (1),		/* ON => an explicit access floor follows */
         3 pad bit (34),
       2 explicit_ceiling bit (72),			/* the explicitly requested ceiling (before translation) */
       2 explicit_floor bit (72);			/* the explicitly requested floor (before translation) */

/* The following version of the structure is used for pre-version 3.0 IMFT */

dcl  1 v2_aim2_record aligned based (aim2_record_ptr),
       2 code fixed binary (35),			/* non-zero => AIM ceiling can not be established */
       2 computed_ceiling bit (72),			/* ceiling computed by other system (before translation) */
       2 explicit_ceiling_given bit (1),		/* ON => an explicit access ceiling follows */
       2 explicit_ceiling bit (72);			/* the explicitly requested ceiling (before translation) */

dcl  aim2_record_ptr pointer;

/* END INCLUDE FILE ... _imft_std_commands.incl.pl1 */
