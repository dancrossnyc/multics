/*		BEGIN mailbox_ops.incl.pl1

   Created 8/15/74 by F. A. Canali
   Modified 12/01/75 by J. Goldman for dial out
   Modified 8/24/76 by Robert Coren to add dont_accept_calls and blast
   Modified 7/28/77 by J. Stern to add set_delay_table
   Modified 2/6/78 by Robert Coren to add sync_msg_size
   Modified 6/29/79 by B. Greenberg for FNP echo negotiation
   Modified Oct. 1979 by Robert Coren to add oflow & iflow modes
   Modified 1/21/80 by Robert Coren to add parity controls 
   Modified 12/10/80 by Robert Coren to add report_meters
   */

dcl (						/* declaration of submailbox io commands */

     rcd init (1),					/* read control data */
     rtx init (2),					/* read text */
     wcd init (3),					/* write control data */
     wtx init (4)					/* write text */

     ) fixed bin (8) int static options (constant);


dcl (						/* declaration of submailbox op codes sent by 6180 to 355 */

     terminal_accepted init (0),			/* a dialed terminal has been accepted */
     disconnect_this_line init (1),			/* hang up a line */
     disconnect_all_lines init (2),			/* hang up all lines */
     dont_accept_calls init (3),			/* the 6180 is no longer accepting terminals */
     accept_calls init (4),				/* the 6180 is ready to accept terminals */
     input_accepted init (5),				/* the 6180 will accept input and has reserved
						   space in its circular buffer */
     set_line_type init (6),				/* set the line type */
     enter_receive init (7),				/* give the line to the terminal */
     set_framing_chars init (8),			/* set characters for block transfer */
     blast init (9),				/* BOS blast message */
     accept_direct_output init (10),			/* the 6180 has an output request */
     accept_last_output init (11),			/* same as above but the 355 may
						   unlock the keyboard and accept input
						   when the output transmission is through */
     dial init (12),				/* use command data to dial a phone number */
     reject_request_temp init (14),			/* an input request can not be serviced */
     terminal_rejected init (16),			/* a dial up has been rejected */
     disconnect_accepted init (17),			/* the 6180 recognizes a disconnection */
     init_complete init (18),				/* 6180 system initialization is complete */
     dump_mem init (19),				/* dump 355 memory */
     patch_mem init (20),				/* patch 355 memory */
     fnp_break init (21),				/* to control fnp break points */
     line_control init (22),				/* line control order to fnp */
     sync_msg_size init (23),				/* set message size for sync line */
     set_echnego_break_table init (24),			/* send over echo negotiation break table */
     start_negotiated_echo init (25),			/* attempt to start FNP echoing for ech. nego. */
     stop_negotiated_echo init (26),			/* 6180 wants FNP to stop negotiated echo */
     init_echo_negotiation init (27),			/* synchronize echo negotiation ctrs. */
     break_acknowledged init (29),			/* the 6180 recognizes a break for a terminal */
     input_fc_chars init (30),			/* set input flow control chars */
     output_fc_chars init (31),			/* set output flow control chars */
     alter_parameters init (34),			/* request to alter 355 parms for a terminal */
     checksum_error init (35),			/* submailbox has a checksum error */
     report_meters init (36),				/* get meters from FNP */
     set_delay_table init (37)			/* tells 355 to set new delay table for channel */
     ) fixed bin (8) int static options (constant);


dcl (						/* submailbox op codes sent from 355 to 6180 */

     accept_new_terminal init (64),			/* a terminal has dialed up */
     disconnected_line init (65),			/* a terminal has been hung up */
     input_in_mailbox init (66),			/* this mailbox contains input */
     line_masked init (67),				/* channel was masked for excessive interrupts */
     s6180_params init (68),				/* return bcount */
     send_output init (69),				/* I am ready to send to a terminal */
     ack_echnego_init init (70),			/* I have zeroed my ech. nego. ctr. */
     ack_echnego_stop init (71),			/* I have sent all that I have echoed. */
     connect_to_slave init (73),			/* a dialup sequence has been completed */
     accept_direct_input init (74),			/* HEY! here's some input for you */
     break_condition init (75),			/* a break has been hit for a terminl */
     wru_timeout init (76),				/* no answerback */
     error_message init (77),				/* error message from the 355 */
     first_acu_op_code init (80),
     acu_no_power init (80),				/* power indicator of auto-call unit is off */
     acu_line_occupied init (81),			/* auto-call unit's line is being used */
     acu_dial_failure init (82),			/* dial out failed */
     acu_no_good init (83),				/* invalid dial out attempt */
     last_acu_op_code init (83),
     line_status init (84)				/* line status reported by fnp */
     ) fixed bin (8) int static options (constant);

dcl (						/* declaration of sub operations for alter parameters */

     Breakchar init (1),				/* specifies break character */
     Nocontrol init (2),				/* enter/leave nocontrol mode */
     Fullduplex init (3),				/* perform character echoing */
     Break init (4),			/* send line break to terminal */
     Errormsg init (5),				/* indicates error detected by 355 */
     Meter init (6),				/* read metering info */
     Sensepos init (7),				/* sense position of carrier */
     Crecho init (8),				/* enter/leave crecho mode */
     Lfecho init (9),				/* enter/leave line feed echo mode */
     Lock init (10),				/* lock keyboard */
     Msg init (11),					/* precanned msg for dialing terminals */
     Upstate init (12),				/* are you up? */
     Dumpoutput init (13),				/* throw away output */
     Tabecho init (14),				/* echo tabs */
     Setbusy init (15),				/* force dataset busy */
     Listen init (16),				/* answer the phone */
     Hndlquit init (17),				/* send newline on receipt of quit */
     Chngstring init (18),				/* printer addressing string definition */
     Wru init (19),					/* read answerback */
     Echoplex init (20),				/* enter/leave echoplex mode */
     Xmit_hold init (21),				/* start/stop transmit hold */
     Dumpinput init (22),				/* throw away input */
     Replay init (23),				/* replay interrupted input */
     Polite init (24),				/* write only if at left margin */
     Block_xfer init (25),				/* block transfer or "frame" mode */
     Set_buffer_size init (26),			/* set input buffer size */
     Breakall init (27),				/* break on all characters */
     Prefixnl init (28),				/* prefix output with newlines if input present */
     Input_flow_control init (29),			/* iflow mode */
     Output_flow_control init (30),			/* oflow mode */
     Odd_parity init (31),				/* generate odd parity */
     Eight_bit_in init (32),				/* 8bit mode */
     Eight_bit_out init (33)				/* no_outp mode */
     ) fixed bin (8) int static options (constant);

dcl  global_opcodes (9) fixed bin (8) int static options (constant) init (
     2,						/* disconnect_all_lines */
     3,						/* dont_accept_calls */
     4,						/* accept_calls */
     9,						/* blast */
     19,						/* dump_mem */
     20,						/* patch_mem */
     21,						/* fnp_break */
     36,						/* report_meters */
     77);						/* error_message */

/* END of mailbox_ops.incl.pl1 */
