/* BEGIN INCLUDE FILE ... work_class_info.incl.pl1 ... Mod REM 1/76 */


/* This include file provides the structure used to call
   hphcs_$define_work_classes.  The version number should be set by
   the caller to WCI_version_N  */

dcl  wcip ptr;					/* pointer on which work_class_info is based */
dcl  WCI_version_3 fixed bin int static init (3);		/* current version of the structure */

dcl 1 work_class_info aligned based (wcip),
    2 version fixed bin,				/* version of this structure */
    2 switches aligned,				/* one word of switches */
      3 user_wc_defined (16) bit (1) unaligned,		/* which user work classes are defined ("1"b = defined) */
      3 set_system_wc bit (1) unaligned,		/* = "1"b if percent of system work class to be changed */
      3 set_user_wc bit (1) unaligned,			/* = "1"b if definitions of user work classes to be changed */
      3 set_sked_mode bit (1) unal,			/* "1"b if setting deadline | percent mode */
      3 set_max_batch_elig bit (1) unal,		/* "1"b if setting max batch elig */
      3 pad bit (16) unal,				/* rest of word */
    2 system_wc_min_pct fixed bin,			/* new percent for system work class */
    2 user_wc_min_pct (16) fixed bin,			/* percents for the normal user work classes */
    2 error_process_id bit (36) aligned,		/* returned if we tried to undefine this process's work class */
    2 error_work_class fixed bin,			/* the work class that had the above process in it */
						/* Version 1 limit */
    2 flags aligned,
      3 deadline_mode bit (1) unal,		/* = "1"b if virtual deadline for the many */
      3 realtime (16) bit (1) unaligned,		/* which user work classes are realtime */
      3 governed (16) bit (1) unal,			/* which work classes are governed ("1"b = defined)*/
      3 pad bit (3) unal,
    2 max_batch_elig fixed bin,			/* if nonzero is max batch elig */
    2 resp1 (16) fixed bin (35),			/* response time after interaction(micro_sec) */
    2 quantum1 (16) fixed bin (35),			/* first time slice after interaction(micro_sec) */
    2 resp2 (16) fixed bin (35),			/* time between sucessive time slices(micro_sec) */
    2 quantum2 (16) fixed bin (35),			/* second and following time slices(micro_sec) */
    2 wc_max_elig (0:16) fixed bin (35),		/* Added if answering service ever decides to use it */
    2 io_priority (0:16) fixed bin (35),
    2 pin_weight (0:16) fixed bin (35),
    2 user_wc_max_pct (16) fixed bin;			/* max percent of total cpu for governed WC	*/

/* structure for calling hphcs_$tune_work_class */

dcl  WCTI_version_3 fixed bin int static init (3);

dcl 1 work_class_tune_info aligned based,
    2 version fixed bin,
    2 wc_number fixed bin (35),			/* which workclass is to be changed */
    2 resp1 fixed bin (71),				/* time til quantum after interact(micro_sec) */
    2 resp2 fixed bin (71),				/* time between successive quanta(micro_sec) */
    2 quantum1 fixed bin (35),			/* quantum after interaction(micro_sec) */
    2 quantum2 fixed bin (35),			/* successive quanta(micro_sec) */
    2 maxel fixed bin (35),				/* maxeligible for this workclass */
    2 set aligned,
      3 resp1 bit (1) unal,
      3 resp2 bit (1) unal,
      3 quantum1 bit (1) unal,
      3 quantum2 bit (1) unal,
      3 maxel bit (1) unal,
      3 purging bit (1) unal,
      3 realtime bit (1) unal,
      3 pin_weight bit (1) unal,
      3 io_priority bit (1) unal,
      3 governed bit (1) unal,
      3 interactive_q bit (1) unal,
      3 pad bit (25) unal,
    2 pin_weight fixed bin (35),
    2 max_percent fixed bin (35),
    2 flags aligned,
      3 io_priority bit (1) unal,
      3 purging bit (1) unal,
      3 realtime bit (1) unal,
      3 interactive_q bit (1) unal,
      3 pad bit (33) unal;
	

/* END INCLUDE FILE ... work_class_info.incl.pl1 */
