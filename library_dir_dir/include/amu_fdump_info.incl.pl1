/*	BEGIN INCLUDE FILE amu_fdump_info.incl.pl1	*/

dcl 1 fdump_info aligned based (amu_info.fdump_info_ptr),
    2 version char (8),
    2 ref_count fixed bin,				/* number of initiations */

    2 erf_name char (32),				/* ERF name for this dump */
    2 dump_dname char (168),				/* location of the dump */
    2 dump_ename char (32),				/* ename of component zero */
    2 system_id char (8),				/* the system_id of this erf */
    2 version_id char (8),				/* the version id of this erf */
    2 dump_seg_0_uid bit (36) aligned,			/* for determining EQ-ness and gullibility checking */

    2 n_dump_segs fixed bin,				/* number of real segs in the dump */
    2 copy_block_ptr pointer, 			/* pointer to chain of temp segment blocks */

    2 dump_seg_ptr (0:31) pointer,			/* pointer and length arrays */
    2 dump_seg_lth (0:31) fixed bin (18),

    2 fdump_process_table_ptr pointer;			/* pointer to array describing processes */


dcl 1 fdump_process_table aligned based (fdump_info.fdump_process_table_ptr),
    2 size fixed bin,				/* number of entries */

    2 array (0:alloc_fdump_process_table_size - 1 refer (fdump_process_table.size)) like fp_table;

dcl 1 fp_table based (fp_table_ptr),
      2 first_seg fixed bin,
      2 last_seg fixed bin,
      2 process_info_ptr pointer unaligned,		/* pointer to process_info structure, if filled in */
      2 dmp_seg_indx fixed bin,			/* dump seg index where process can be found */
      2 dmp_seg_offset fixed bin (24),			/* offset in the segment refered to by dmp_seg_indx where process starts */
      2 cpu_name char (1),
      2 dbr fixed bin (24),				/* address portion of DBR */
      2 apte_offset fixed bin (18);

dcl fp_table_ptr ptr;

dcl  alloc_fdump_process_table_size fixed bin;

dcl  AMU_FDUMP_INFO_VERSION_1 char (8) internal static options (constant) init ("amu_erf1");
dcl  AMU_FDUMP_INFO_VERSION char (8) internal static options (constant) init ("amu_erf1");

/*	END INCLUDE FILE amu_fdump_info.incl.pl1	*/
