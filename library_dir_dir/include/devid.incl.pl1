/* BEGIN INCLUDE FILE devid.incl.pl1 */

/* Rewritten September 1977 by T. Casey to implement a new method of device charging. */


/****^  HISTORY COMMENTS:
  1) change(85-10-07,Herbst), approve(87-07-21,MCR7694),
     audit(87-07-21,GDixon), install(87-08-04,MR12.1-1056):
     Add dsa_kbyt, dsa_kpkt and dsa_hour device types.
                                                   END HISTORY COMMENTS */


/* This include file is used to avoid conflicts between system code and customer
   sites over the use of elements of the devtab array in installation_parms.

   Sites can define new device types for terminal channel charging (for high-speed
   lines, for example), set prices for them in installation_parms, and use their
   names in the charge statement in the CMF.

   There also exists a set of system-defined devices, such as tape and disk, and
   this set must be expandable. Code to charge for each one of these devices is
   built into the system. That code can not reference specific elements in the
   devtab array, since a site may have used any given element in that array for
   one of its own devices. This include file solves that problem.

   The dev_id array contains the names of devices for which charging code is
   built into the system. That array should be changed whenever new device
   charging code is added. The order of device names in that array is insignificant.
   The constants with names of the form dev_DEVICE are used for program
   readability, to avoid having to reference specific entries in the dev_id
   array with numeric constants as subscripts.

   The site must define devices of each of the names in the dev_id array, and
   set prices for them. Otherwise, no charges will be made for use of those
   devices. The ed_installation_parms procedure prints a warning, when
   printing device prices, if any of the required devices is not defined.

   The static variables with names of the form devtab_ix_DEVICE are used to
   hold the subscripts of the respective devices' devtab entries. These variables
   must be assigned values at initialization time by the procedures that use them.
   These procedures should call system_info_$device_prices to get a copy of devtab,
   and then search devtab for a device_id equal to dev_id(dev_DEVICE) and remember
   the subscript in devtab_ix_DEVICE. If the device is not defined, the devtab_ix
   variable should remain zero, as an indication that charging for the device is
   to be bypassed.

*/
dcl  dev_id (8) char (8) aligned int static options (constant) init
    ("tape", "tape_mt", "disk", "disk_mt", "lv",
     "dsa_kbyt", "dsa_kpkt", "dsa_hour");

dcl  dev_tape fixed bin int static options (constant) init (1);
dcl  dev_tape_mt fixed bin int static options (constant) init (2);
dcl  dev_disk fixed bin int static options (constant) init (3);
dcl  dev_disk_mt fixed bin int static options (constant) init (4);
dcl  dev_lv fixed bin int static options (constant) init (5);
dcl  dev_dsa_kilobyte fixed bin int static options (constant) init (6);
dcl  dev_dsa_kilopacket fixed bin int static options (constant) init (7);
dcl  dev_dsa_hour fixed bin int static options (constant) init (8);

dcl  devtab_ix_tape fixed bin int static init (0);
dcl  devtab_ix_tape_mt fixed bin int static init (0);
dcl  devtab_ix_disk fixed bin int static init (0);
dcl  devtab_ix_disk_mt fixed bin int static init (0);
dcl  devtab_ix_lv fixed bin int static init (0);
dcl  devtab_ix_dsa_kilobyte fixed bin int static init (0);
dcl  devtab_ix_dsa_kilopacket fixed bin int static init (0);
dcl  devtab_ix_dsa_hour fixed bin int static init (0);

/* END INCLUDE FILE devid.incl.pl1 */
