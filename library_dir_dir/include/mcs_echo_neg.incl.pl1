/* BEGIN INCLUDE FILE mcs_echo_neg.incl.pl1  Bernard Greenberg 1/20/79 */



/****^  HISTORY COMMENTS:
  1) change(86-04-23,Coren), approve(86-04-23,MCR7300),
     audit(86-05-19,Beattie), install(86-07-08,MR12.0-1089):
               Changed version to 2, increased size of break table,
               included named constant for break table size.
                                                   END HISTORY COMMENTS */


/* This include file defines the callable entrypoints and argument data
   structures for ring 0 echo negotiation */

/* format: style2,linecom,^indnoniterdo,indcomtxt,^inditerdo,dclind5,idind25 */
     dcl	echo_neg_datap	     ptr;
     dcl	echo_neg_data_version_2  fixed bin static options (constant) init (2);
     dcl	ECHO_NEG_BREAK_TABLE_SIZE
			     fixed bin internal static options (constant) init (255);

     dcl	1 echo_neg_data	     based (echo_neg_datap) aligned,
						/* Echo negotiation data */
	  2 version	     fixed bin,
	  2 break		     (0:255) bit (1) unaligned,
						/* Break table, 1 = break */
	  2 pad		     bit (7) unaligned,
	  2 rubout_trigger_chars (2) unaligned,		/* Characters that cause rubout action */
	    3 char	     char (1) unaligned,
	  2 rubout_sequence_length
			     fixed bin (4) unsigned unaligned,
						/* Length of rubout sequence, output */
	  2 rubout_pad_count     fixed bin (4) unsigned unaligned,
						/* Count of pads needed */
	  2 buffer_rubouts	     bit (1) unaligned,	/* 1 = put rubouts and rubbed out in buffer */
	  2 rubout_sequence	     char (12) unaligned;	/* Actual rubout sequence */

/*** VERSION 1 STRUCTURE DECLARATION FOR COMPATIBILITY (TO BE REMOVED FOR MR12) ***/

     dcl	echo_neg_data_version_1  fixed bin static options (constant) init (1);

     dcl	1 v1_echo_neg_data	     based (echo_neg_datap) aligned,
						/* Echo negotiation data */
	  2 version	     fixed bin,
	  2 break		     (0:127) bit (1) unaligned,
						/* Break table, 1 = break */
	  2 pad		     bit (7) unaligned,
	  2 rubout_trigger_chars (2) unaligned,		/* Characters that cause rubout action */
	    3 char	     char (1) unaligned,
	  2 rubout_sequence_length
			     fixed bin (4) unsigned unaligned,
						/* Length of rubout sequence, output */
	  2 rubout_pad_count     fixed bin (4) unsigned unaligned,
						/* Count of pads needed */
	  2 buffer_rubouts	     bit (1) unaligned,	/* 1 = put rubouts and rubbed out in buffer */
	  2 rubout_sequence	     char (12) unaligned;	/* Actual rubout sequence */
/*** END VERSION 1 STRUCTURE ****/

     dcl	(
	hcs_$tty_read_echoed,
	hcs_$echo_negotiate_get_chars
	)		     entry (fixed bin, ptr, fixed bin (21), fixed bin (21), fixed bin (21), fixed bin (21),
			     fixed bin, fixed bin, fixed bin (35));
						/*
						   call  hcs_$echo_negotiate_get_chars
						   (devx, datap, offset, nelem, NRETURNED, NECHOED_RETURNED, screen_left, STATE, CODE);
						*/

/* END INCLUDE FILE mcs_echo_neg.incl.pl1 */
