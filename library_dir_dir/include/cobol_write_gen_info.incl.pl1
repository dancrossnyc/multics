

/*

	The procedure cobol_write_gen.pl1 generates the code which realizes the
COBOL write statement.

	Format 1	WRITE rn [id] [id] eos

	FORMAT 2	WRITE rn [id] eos

	FORMAT 3  WRITE fn id eos

		eos	a=000	format 1	write advancing
			  001	format 2
			  010	format 3 write report file

			b=0	no EOP
			  1	EOP

			c=0	no FROM
			  1	FROM

			d=00	neither
			  01	BEFORE
			  10	AFTER

			f=00	no NOT
			  01	NOT

	mp.n		3 - 5
	mp.ptr(1)		type-1("WRITE")
	mp.ptr(2)		type-9(record-name) or type-12(file-name)
	mp.ptr(3)		type-9(from id)
	mp.ptr(4)		type-9(data-name,advancing id)
			type-1("PAGE")
			type-2(advancing literal)
			type-17(mnemonic-name)
	mp.ptr(n)		eos

Flow Chart

TAG(ioerror.retry_tag):

	OP39(init_write,good_tag);GEN_IOERROR

TAG(good_tag):

	alt_sw =	file_table.organization = 3	ind
		&
		file_table.alternate_keys ^= 0

	if	file_table.organization = 4	stream
		|
		file_table.device = 1	printer
		|
		file_table.device = 3	punch

	then	do;	if file_table.linage
			then	OP68(write_stream_linage,stream_tag)
			else	OP40(write_stream,stream_tag)

			GEN_IOERROR
		end;
	else	do;	if file_table.access < 2	seq
			|
			file_table.open_io

			then	do;	INCR_NTAG
					IO_UTIL$BYPASS_MODE_ERROR
TAG(ntag):
				end;

			if alt_sw
			then	do;	IO_UTIL$FILE_DESC
					OP91(alt_write_seek_key,alt_seek_tag)
					GEN_IOERROR
TAG(alt_seek_tag):
					SET_FSBPTR
				end;

			if file_table.organization ^= 1	not seq
			then	do;	move key to FSB
					if alt_sw then call EMIT_OP_91;
					OP41(seek_key,seek_tag)
					GEN_IOERROR
TAG(seek_tag):
				end;
			else if alt_sw then call EMIT_OP_91;

			OP42(write_record,write_tag);GEN_IOERROR

TAG(write_tag):

			if alt_sw then IO_UTIL$FILE_DESC;OP90(alt_add_write_keys,stream_tag);GEN_IOERROR

		end;

TAG(stream_tag):

	if alt_sw then SET_FSBPTR

	if file_table.linage then	do;	INCR_NTAG(skip_tag)

TAG(skip_tag):
				end;

EMIT_OP_91:	proc;

		IO_UTIL$FILE_DESC
		COBOL_SET_PR
		OP91(alt_write_seek_key,alt_seek_tag)
		GEN_IOERROR
TAG(alt_seek_tag):
		SET_FSBPTR
end;

*/

%include cobol_opr_write;

