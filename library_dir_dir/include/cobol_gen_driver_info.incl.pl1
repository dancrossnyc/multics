/*
The function of cobol_gen_driver_ is to direct the generation of the
object code necessary to implement the source code comprising a
given COBOL program.  The primary input to cobol_gen_driver_ is the
file Minpral5.  This file comprises a sequence of tokens which
are, in effect, a coded version of the source program.  These
tokens are grouped, by PD Syntax, into logical sets for process-
ing by the insertion of type-19 End of "Statement" (EOS) tokens.
cobol_gen_driver_ creates a structure (in_token) consisting primarily
of pointers to each token comprising a "statement", as delimited
by EOS tokens, and passes a pointer to this structure to the
appropriate generator.  In addition, cobol_gen_driver_ performs a
number of auxiliary functions, such as;

  1.  Initialization of a number of variables to pre-code-gener-
      ation values.

  2.  Initialization of the definition and linkage sections.

  3.  Deallocation of the stack and determination of maximum re-
      quired stack size.

  4.  Deallocation of the area (temp_token_area) in which tokens
      to temporaries are built.

  5.  Tabulation of data for the construction of the procedure
      division map.

  6.  Resolution of internal tag definition and tag equivalence
      tokens not bracketed within EOS tokens.


U__s_a_g_e:_

     declare cobol_gen_driver_ entry;

     call cobol_gen_driver_;


D__a_t_a:_

      include cobol_;

	Items in cobol_ include file used (u) and/or set (s) by
	cobol_gen_driver_:

	     cobol_ptr (u)
	     com_ptr (u)
	     alter_flag (s)
	     alter_index (s)
	     alter_list_ptr (s)
	     init_stack_off (s)
	     map_data_ptr (u)
	     map_data_max (u)
	     max_stack_off (s)
	     minpral5_ptr (u)
	     misc_end_ptr (u)
	     misc_max (u)
	     para_eop_flag (s)
	     perform_list_ptr (u/s)
	     perform_para_index (s)
	     perform_sect_index (s)
	     priority_no (s)
	     sect_eop_flag (s)
	     seg_init_list_ptr (s)
	     stack_off (u/s)
	     temp_token_area_ptr (s)
	     temp_token_ptr (s)
	     temp_token_max (s)
	     token_block1_ptr (u)
	     token_block2_ptr (u)
	     text_wd_off (u)

      include fixed_common;

	Items in fixed_common include file used (u) and/or set (s) by
	cobol_gen_driver_:

	     perf_alter_info (u)
	     size_perform_info (u)

Conditional Statements:

(1) STATEMENT OPTION

	(a) cobol_pdout_

		STATEMENT
		type19(vt = CODE, b = 1, f = 00)
		OPTION
		type19(vt = 3, b = 0)

	(b) generated code

			STATEMENT -> (L1)
			OPTION
		L1:

(2) STATEMENT OPTION NOT OPTION

	(a) cobol_pdout_

		STATEMENT
		type19(vt = CODE, b = 1, f = 00)
		OPTION
		type19(vt  = 3, b = 1, f = 01)
		NOT OPTION
		type19(vt = 3, b = 0)

	(b) generated code

			STATEMENT -> (L1)
			OPTION
			TRA L3
		L1:
			NOT OPTION
		L2:

(3) STATEMENT NOT OPTION OPTION

	(a) cobol_pdout_

		STATEMENT
		type19(vt = CODE, b = 1, f = 01)
		NOT OPTION
		type19(vt = 3, b = 1, f = 00)
		OPTION
		type19(vt = 3, b = 0)

	(b) generated code

			STATEMENT -> (L1)
			NOT OPTION
			TRA L2
		L1:
			OPTION
		L2:

(4) STATEMENT NOT OPTION

	(a) cobol_pdout_

		STATEMENT
		type19(vt = CODE, b = 1, f = 01)
		NOT OPTION
		type19(vt = 3, b = 0)

	(b) generated code

			STATEMENT -> (L1)
			NOT-OPTION
		L1:
						  */
