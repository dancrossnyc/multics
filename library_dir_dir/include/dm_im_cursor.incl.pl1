/* BEGIN INCLUDE FILE - dm_im_cursor.incl.pl1 */

/* DESCRIPTION:

          This structure specifies a DM file, an index collection in that DM
file, and a position (key) in that index collection.

*/

/* HISTORY:

Written by Lindsey Spratt, 03/29/82
Modified:
08/09/82 by Matthew Pierret: Changed collection_id from "fixed bin (17)" to
            "bit (35) aligned".
08/26/82 by Lindsey Spratt:  Changed to version 2.  Added the is_valid and
	  is_at_end_of_index flags.  Changed the key_check_value to fixed
	  bin (35).  Added the IM_HASH_BIAS, which is used to increment the
	  value developed by hash_index_, and IM_HASH_NUMBER_OF_BUCKETS,
	  which is a unique number used by hash_index_ to develop the
	  key_check_value.
02/23/83 by Lindsey Spratt: Changed to keep the current key value in the
	  cursor.  Also, implemented the ability to have the cursor
	  positioned before or after the index.  
10/23/84 by Lindsey L. Spratt:  Added a description section.
*/

/* format: style2,ind3 */
     dcl	   1 index_cursor	      based (index_cursor_ptr),
	     2 type	      fixed bin (17) unaligned,
	     2 version	      fixed bin (17) unaligned,
	     2 file_opening_id    bit (36) aligned,
	     2 collection_id      bit (36) aligned,
	     2 key_id_string      bit (36) aligned,	/* Is the location of the current key, */
						/* if flags.current_key_exists is on. Is the location */
						/* of the end of the index if flags.is_at_end_of_index */
						/* is on, which is only available via an operation */
						/* requiring the "previous" key.  Is the location of */
						/* the "next" key, otherwise. */
	     2 area_ptr	      ptr,		/* Area in which the cursor and key_string area allocated. */
						/* Must be a freeing area. */
	     2 current_key_string_ptr
			      ptr,		/* Points to the value of the current key. */
	     2 current_key_string_length
			      fixed bin (24) unal,	/* Is the length of the current key in bits. */
	     2 pad	      bit (12) unal,
	     2 flags	      aligned,
	       3 is_at_beginning_of_index
			      bit (1) unaligned,	/* Only the "next" key is defined. */
	       3 is_at_end_of_index
			      bit (1) unaligned,	/* Only the "previous" key is defined. */
	       3 current_key_exists
			      bit (1) unaligned,	/* If on, indicates that the "current" key is identified */
						/* by the key_id_string.  If off, the "current" position */
						/* is undefined, and the key_id_string identifies the */
						/* previous or next key, depending on whether */
						/* flags.is_at_end_of_index is off or on, respectively. */
	       3 is_valid	      bit (1) unaligned,	/* If off, the index_manager_ was interrupted while */
						/* setting the cursor position and the cursor is not */
						/* to be trusted for relative position operations. */
	       3 pad	      bit (32) unal;


     dcl	   index_cursor_ptr	      ptr;

     dcl	   INDEX_CURSOR_VERSION_3 fixed bin (17) init (3) internal static options (constant);
     dcl	   INDEX_CURSOR_TYPE      init (2) fixed bin (17) internal static options (constant);

/* END INCLUDE FILE - dm_im_cursor.incl.pl1 */
