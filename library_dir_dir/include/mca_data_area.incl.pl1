/* Begin mca_data_area.incl.pl1 */

/****^  HISTORY COMMENTS:
  1) change(86-03-19,Fawcett), approve(86-03-19,MCR7374),
     audit(86-04-28,Lippard), install(86-09-16,MR12.0-1159):
     Created for control of the MCA. This is a template for the ioi workspace
     needed for the MCA communications.
                                                   END HISTORY COMMENTS */

/* Created Sept 84 by R. A. Fawcett from information in
   "EPS-1 DIPPER Maintainability" REV A (MAY 3, 1983) */



dcl  data_header_ptr ptr;

dcl  (data_size_1, data_size_2) fixed bin (21) init (0);

dcl  io_param_blk_ptr ptr;

dcl  mca_dcw_list_ptr ptr;

dcl  mca_work_space_ptr ptr;

dcl  1 mca_work_space based (mca_work_space_ptr),
       2 list_of_dcw like mca_dcw_list,
       2 status_area like istat,

       2 data_header_1 aligned like data_header,
       2 data_1 char (data_size_1),
       2 data_header_2 aligned like data_header,
       2 data_2 char (data_size_2);


dcl  1 data_header based (data_header_ptr) aligned,
       2 type bit (9) unal,				/* must be equal to "000"b3 (MBZ) */
       2 definer fixed bin (9) unal unsigned,		/* defines type of info in header */
       2 ctl_sw bit (18) unal,			/* "currently undfined" mbz  = "000000"b3 */

       2 host_sts_ign1 bit (1) unal,
       2 host_sts_msb bit (8) unal,
       2 host_sts_ign2 bit (1) unal,
       2 host_sts_lsb bit (8) unal,

       2 rd_flpy fixed bin (9) unal unsigned,		/* 0 = data files from host */
						/* 1 = data files from flopy */
       2 io_param_blk like io_parameter_block unal;


dcl  1 io_parameter_block based (io_param_blk_ptr) unal,
       2 open fixed bin (9) unal unsigned,
       2 cmd bit (18),
       2 sts_ptr bit (18),				/* Unused */
       2 file_name char (8),				/* file name for this request */
       2 options bit (18),				/* Unused */
       2 source_ptr bit (18),				/* Unused */
       2 source_len,
						/* data_size = source_len_msb||source_len_lsb MCA to HOST */
         3 source_len_ign1 bit (1),
         3 source_len_msb bit (8),
         3 source_len_ign2 bit (1),
         3 source_len_lsb bit (8),
       2 dest_ptr bit (18),				/* Unused */
       2 blk_ct,
						/* if MCA to HOST blk_ct_msb||blk_ct_lsb = MAX number of 256 byte BLOCKS  */
						/* else not used */
         3 blk_ct_ign1 bit (1),
         3 blk_ct_msb bit (8),
         3 blk_ct_ign2 bit (1),
         3 blk_ct_lsb bit (8),
       2 dest_len,
						/* supplied by host as the number of bytes in data_field max value is 16128 */
						/* dest_len_msb = substr(unspec(data_size),21,8) */
						/* dest_len_lsb = substr(unspec(data_size),29,8) */
         3 dest_len_ign1 bit (1),
         3 dest_len_msb bit (8),
         3 dest_len_ign2 bit (1),
         3 dest_len_lsb bit (8);


dcl  1 mca_dcw_list based (mca_dcw_list_ptr),
       2 idcw1 like idcw,
       2 dcw1 like dcw,
       2 idcw2 like idcw,
       2 dcw2 like dcw;


%include iom_dcw;
%skip (4);
%include iom_pcw;
%skip (4);
%include ioi_stat;
%skip (4);
/* Constants used for data_header.definer */

dcl  DATA_FROM_HOST
	fixed bin (9) unsigned init (0) static options (constant);
dcl  WRITE_CONSOLE
	fixed bin (9) unsigned init (1) static options (constant);
dcl  WRITE_READ_CONSOLE
	fixed bin (9) unsigned init (2) static options (constant);
dcl  DATA_FROM_MCA
	fixed bin (9) unsigned init (3) static options (constant);
dcl  REQ_DATA_FROM_HOST
	fixed bin (9) unsigned init (4) static options (constant);
dcl  STATUS_FROM_MCA
	fixed bin (9) unsigned init (5) static options (constant);
dcl  SEEK
	fixed bin (9) unsigned init (6) static options (constant);
dcl  CON_DATA_FROM_HOST
	fixed bin (9) unsigned init (7) static options (constant);
dcl  BIN_DATA_FROM_HOST
	fixed bin (9) unsigned init (8) static options (constant);
dcl  ABORT_SES_FROM_HOST
	fixed bin (9) unsigned init (9) static options (constant);


/* End mca_data_area.incl.pl1 */

