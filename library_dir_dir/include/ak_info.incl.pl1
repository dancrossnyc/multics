/* ak_info -- include file for info structures used by the following vfile_
   control orders: "add_key", "delete_key", "get_key", and "reassign_key".
   Created by M. Asherman 3/23/76
   Modified 5/13/77 to add separate gk_info structure */

     dcl	   1 ak_info	      based (ak_info_ptr),
	     2 header	      like ak_header,
	     2 key	      char (ak_key_len refer (ak_info.header.key_len));

     dcl	   1 ak_header	      based (ak_info_ptr),
	     2 flags	      aligned,
	       3 input_key	      bit (1) unal,		/* set if key is input arg */
	       3 input_desc	      bit (1) unal,		/* set if descriptor is an input arg */
	       3 mbz	      bit (34) unal,	/* not used for the present */
	     2 descrip	      fixed (35),		/* record designator */
	     2 key_len	      fixed;

     dcl	   ak_info_ptr	      ptr;
     dcl	   ak_key_len	      fixed;


     dcl	   1 rk_info	      based (rk_info_ptr),
	     2 header	      like rk_header,
	     2 key	      char (rk_key_len refer (rk_info.header.key_len));

     dcl	   1 rk_header	      based (rk_info_ptr),
	     2 flags	      aligned,
	       3 input_key	      bit (1) unal,		/* same as above */
	       3 input_old_desc   bit (1) unal,		/* set if specified entry has initial descrip
						   given by old_descrip */
	       3 input_new_desc   bit (1) unal,		/* set if new val for descrip is input in this struc */
	       3 mbz	      bit (33) unal,
	     2 old_descrip	      fixed (35),		/* used if first flag is set */
	     2 new_descrip	      fixed (35),		/* used only if second flag is set */
	     2 key_len	      fixed;

     dcl	   rk_info_ptr	      ptr;
     dcl	   rk_key_len	      fixed;


     dcl	   1 gk_info	      based (gk_info_ptr),	/* structure for get_key order */
	     2 header	      like gk_header,
	     2 key	      char (gk_key_len refer (gk_info.header.key_len));
						/* may be Input as well as Output */

     dcl	   1 gk_header	      based (gk_info_ptr),
	     2 flags	      aligned,
	       3 input_key	      bit (1) unal,		/* if set, use key in this structure */
	       3 input_desc	      bit (1) unal,		/* if set, descriptor given in this structure */
	       3 desc_code	      fixed (2) unal,	/* 0=any, 1=current -- applies when input_desc="0"b */
	       3 position_specification
			      unal,
	         4 current	      bit (1) unal,		/* otherwise next */
	         4 rel_type	      fixed (2) unal,	/* as in seek_head, if input_key = "1"b */
	         4 head_size      fixed bin (9) unsigned unaligned,
						/* size of head for initial seek */
	       3 reset_pos	      bit (1) unal,		/* if set, final position unchanged by this operation */
	       3 pad	      bit (8) unal,
	       3 version	      fixed (8) unal,
	     2 descrip	      fixed (35),		/* Output, except when input_desc="1"b */
	     2 key_len	      fixed;		/* Input when input_key="1"b, also Output in all cases */

     dcl	   gk_info_ptr	      ptr;
     dcl	   gk_key_len	      fixed;

     dcl	   gk_info_version_0      internal static fixed options (constant) init (0);

/* end ak_info.incl.pl1 */
