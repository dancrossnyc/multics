/*  BEGIN INCLUDE FILE:  ibm_hdr2.incl.pl1                  */
/*  Modified by J. A. Bush 04/26/83 for use by mtape_ */

/* format: style4 */

dcl  ibm_hdr2P ptr;					/* pointer on which ibm_hdr2 is based */

dcl  1 ibm_hdr2 unaligned based (ibm_hdr2P),
       2 label_id char (4),				/* HDR2/EOF2/EOV2 */
       2 format char (1),				/* U/F/V */
       2 blksize char (5),				/* equivalent to ANSI block length - 32760 maximum */
       2 lrecl char (5),				/* equivalent to ANSI record length - 32760 maximum */
						/* for VS and VBS, 0 means lrecl > 32756 */
       2 density char (1),				/* no ANSI equivalent */
						/* 2 = 800 bpi; 3 = 1600 cpi; 4 = 6250 cpi */
       2 dataset_position char (1),			/* no ANSI equivalent */
						/* 0 = no volume switch has occurred */
						/* 1 = volume switch has occurred */
       2 jobstep_id char (17),			/* no ANSI equivalent */
       2 recording_technique char (2),			/* no ANSI equivalent - "  " = 9 track */
       2 control_characters char (1),			/* no ANSI equivalent */
       2 reserved1 char (1),				/* " " */
       2 block_attribute char (1),			/* no ANSI equivalent */
						/* "B" - records are blocked */
						/* "S" - records are spanned */
						/* "R" - records are blocked and spanned */
						/* " " - records are neither blocked nor spanned */
       2 reserved2 char (41);				/* " " */

dcl  1 ibm_system_use unaligned based (addr (ibm_hdr2.reserved2)), /* mtape IBM overlay */
       2 mode char (1),				/* 1 - ASCII, 9 mode; 2 - EBCDIC, 9 mode; 3 - binary */
       2 next_volname char (6);			/* Next volume id in EOV2 label */

dcl  IBM_L2_ID (3) char (4) int static options (constant) init
	("HDR2", "EOV2", "EOF2");
dcl  (IBM_HDR2 init (1),
     IBM_EOV2 init (2),
     IBM_EOF2 init (3)) fixed bin int static options (constant);

/*  END INCLUDE FILE:  ibm_hdr2.incl.pl1                    */
