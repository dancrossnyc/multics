/* 	BEGIN INCLUDE FILE ... stack_header.incl.pl1 .. 3/72 Bill Silver  */
/*	modified 7/76 by M. Weaver for *system links and more system use of areas */
/*	modified 3/77 by M. Weaver to add rnt_ptr */
/*	Modified April 1983 by C. Hornig for tasking */

/****^  HISTORY COMMENTS:
  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
     added the heap_header_ptr definition.
  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
     Modified to support control point management.  These changes were actually
     made in February 1985 by G. Palter.
  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
     bit pad after cur_lot_size for the cpm_enabled. This was done to save some
     space int the stack header and change the cpd_ptr unal to cpm_data_ptr
     (ITS pair).
                                                   END HISTORY COMMENTS */

/* format: style2 */

     dcl	   sb		      ptr;		/* the  main pointer to the stack header */

     dcl	   1 stack_header	      based (sb) aligned,
	     2 pad1	      (4) fixed bin,	/*  (0) also used as arg list by outward_call_handler  */
	     2 cpm_data_ptr	      ptr,		/*  (4)  pointer to control point which owns this stack */
	     2 combined_stat_ptr  ptr,		/*  (6)  pointer to area containing separate static */
	     2 clr_ptr	      ptr,		/*  (8)  pointer to area containing linkage sections */
	     2 max_lot_size	      fixed bin (17) unal,	/*  (10) DU  number of words allowed in lot */
	     2 main_proc_invoked  fixed bin (11) unal,	/*  (10) DL  nonzero if main procedure invoked in run unit */
	     2 have_static_vlas   bit (1) unal,		/*  (10) DL  "1"b if (very) large arrays are being used in static */
	     2 pad4	      bit (2) unal,
	     2 run_unit_depth     fixed bin (2) unal,	/*  (10) DL  number of active run units stacked */
	     2 cur_lot_size	      fixed bin (17) unal,	/*  (11) DU  number of words (entries) in lot */
	     2 cpm_enabled	      bit (18) unal,	/*  (11) DL  non-zero if control point management is enabled */
	     2 system_free_ptr    ptr,		/*  (12)  pointer to system storage area */
	     2 user_free_ptr      ptr,		/*  (14)  pointer to user storage area */
	     2 null_ptr	      ptr,		/*  (16)  */
	     2 stack_begin_ptr    ptr,		/*  (18)  pointer to first stack frame on the stack */
	     2 stack_end_ptr      ptr,		/*  (20)  pointer to next useable stack frame */
	     2 lot_ptr	      ptr,		/*  (22)  pointer to the lot for the current ring */
	     2 signal_ptr	      ptr,		/*  (24)  pointer to signal procedure for current ring */
	     2 bar_mode_sp	      ptr,		/*  (26)  value of sp before entering bar mode */
	     2 pl1_operators_ptr  ptr,		/*  (28)  pointer to pl1_operators_$operator_table */
	     2 call_op_ptr	      ptr,		/*  (30)  pointer to standard call operator */
	     2 push_op_ptr	      ptr,		/*  (32)  pointer to standard push operator */
	     2 return_op_ptr      ptr,		/*  (34)  pointer to standard return operator */
	     2 return_no_pop_op_ptr
			      ptr,		/*  (36)  pointer to standard return / no pop operator */
	     2 entry_op_ptr	      ptr,		/*  (38)  pointer to standard entry operator */
	     2 trans_op_tv_ptr    ptr,		/*  (40)  pointer to translator operator ptrs */
	     2 isot_ptr	      ptr,		/*  (42)  pointer to ISOT */
	     2 sct_ptr	      ptr,		/*  (44)  pointer to System Condition Table */
	     2 unwinder_ptr	      ptr,		/*  (46)  pointer to unwinder for current ring */
	     2 sys_link_info_ptr  ptr,		/*  (48)  pointer to *system link name table */
	     2 rnt_ptr	      ptr,		/*  (50)  pointer to Reference Name Table */
	     2 ect_ptr	      ptr,		/*  (52)  pointer to event channel table */
	     2 assign_linkage_ptr ptr,		/*  (54)  pointer to storage for (obsolete) hcs_$assign_linkage */
	     2 heap_header_ptr     ptr,		/*  (56)  pointer to the heap header for this ring */
	     2 trace,
	       3 frames,
	         4 count	      fixed bin,		/*  (58)  number of trace frames */
	         4 top_ptr	      ptr unal,		/*  (59)  pointer to last trace frame */
	       3 in_trace	      bit (36) aligned,	/*  (60)  trace antirecursion flag */
	     2 pad2	      bit (36),		/*  (61) */
               2 pad5	      pointer;		/*  (62)  pointer to future stuff */

/*	The following offset refers to a table within the  pl1  operator table.  */

     dcl	   tv_offset	      fixed bin init (361) internal static;
						/* (551) octal */


/*	The following constants are offsets within this transfer vector table.  */

     dcl	   (
	   call_offset	      fixed bin init (271),
	   push_offset	      fixed bin init (272),
	   return_offset	      fixed bin init (273),
	   return_no_pop_offset   fixed bin init (274),
	   entry_offset	      fixed bin init (275)
	   )		      internal static;





/*	The following declaration  is an overlay of the whole stack header.   Procedures which
	move the whole stack header should use this overlay.
*/

     dcl	   stack_header_overlay   (size (stack_header)) fixed bin based (sb);



/* 	END INCLUDE FILE ... stack_header.incl.pl1 */
