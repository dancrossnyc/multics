dcl	1 rand		based(p) aligned,
	2 node_type	fixed bin(15),	/* type of node = 24 */
	2 type		fixed bin(15),	/* transformed data type */
	2 next		ptr,		/* ptr to next rand node */
	2 pointer		ptr,		/* ptr to actual operand */
	2 address		ptr,		/* ptr to address block */
	2 var_size	ptr,		/* ptr to var holding adj size */
	2 var_word_offset	ptr,		/* ptr to var holding adj word offset */
	2 var_bit_offset	ptr,		/* ptr to var holding adj bit offset */
	2 size		fixed bin(15),	/* constant size */
	2 word_offset	fixed bin(15),	/* constant word offset */
	2 bit_offset	fixed bin(15),	/* constant bit offset */
	2 class		fixed bin(15),	/* storage class */
	2 class_offset	fixed bin(15),	/* offset in storage */
	2 level		fixed bin(15),	/* nesting level of block owning datum */
	2 atom		bit(1),		/* true if operand not expression */
	2 aligned		bit(1),		/* true if operand aligned */
	2 padded		bit(1),		/* true if operand filled on right */
	2 varying		bit(1),		/* true for access to varying string */
	2 long		bit(1),		/* true if bit-offset or size variable or size > 72 */
	2 store_ins	fixed bin(18),	/* text offset of store instruction  */
	2 descriptor	ptr,		/* ptr to descriptor block of rand */
	2 contiguous	bit(1),		/* true if string doesnt cross word boundary */
	2 abnormal	bit(1);
