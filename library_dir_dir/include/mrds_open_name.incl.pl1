/* BEGIN INCLUDE FILE mrds_open_name.incl.pl1 - - Jim Gray 81-02-04 */

/* HISTORY:

   81-02-04 Jim Gray : originally written for the new mrds_open_name_manager routine

*/

/* DESCRIPTION:

   This structure is an element in "in order" binary tree
   of names that the user has given in a call to a model/submodel opening
   routine, which he can use in future references to that opening.
   It associates that user name with information needed internally
   by MRDS to properly reference the particular opening involved.
   The opening could have been made by the equivalent
   of one of dmd_, dsmd_, or dsl_$open.

*/


declare 1 mrds_open_name aligned based (mrds_open_name_ptr),
        2 version fixed bin,				/* version number of this structure */
        2 mbz1 bit (36) unal,
        2 right,
	3 link ptr,				/* pointer to right descendent or thread to successor */
	3 thread bit (1) unal,			/* on => link is a thread, not a pointer */
	3 mbz2 bit (35) unal,
        2 left,
	3 link ptr,				/* pointer to left descendent or thread to predecessor */
	3 thread bit (1) unal,			/* on => link is a thread not a pointer */
	3 mbz3 bit (35) unal,
        2 mrds_info,
	3 opening_type char (1) unal,			/* "m" => user opening database model(mmi_)
						   "s" => user opening submodel structure(msmi_)
						   "r" => user opening database(dsl_), for data access */
	3 mbz4 char (3) unal,
	3 model_pointer ptr,			/* if model opening, a pointer to the data model
						   if submodel opening, the submodel iocb pointer
						   if database opening, the resultant model pointer */
        2 user_info,
	3 name_length fixed bin (24),			/* the length of the users opening reference name */
	3 mbz5 bit (36) unal,
	3 name char (mrds_open_name_length_init refer (mrds_open_name.user_info.name_length)) ;


declare  mrds_open_name_ptr ptr ;

declare  mrds_open_name_length_init fixed bin (24) ;

declare  mrds_open_name_structure_version fixed bin int static init (1) options (constant) ;

/* END INCLUDE FILE mrds_open_name.incl.pl1 */
