/* BEGIN INCLUDE FILE ... lap_line_info.incl.pl1 */

/*
   Line status and control information for LAP -- extracted from x25_mpx

   Created January 10, 1983 by Olin Sibert to support LAP multiplexers.
*/

/****^  HISTORY COMMENTS:
  1) change(88-07-07,Beattie), approve(88-06-27,MCR7926),
     audit(88-07-22,Brunelle), install(88-08-08,MR12.2-1082):
     Prepared for installation.
                                                   END HISTORY COMMENTS */

dcl  L2_HEADER_PAD fixed bin internal static options (constant) init (2);

dcl  lap_line_control_info_ptr pointer;

dcl 1 lap_line_control_info aligned based (lap_line_control_info_ptr),
    2 dce_or_dte bit (1) unaligned,                         /* ON = DCE */
    2 lap_or_lapb bit (1) unaligned,                        /* ON = lapb */
    2 disc_first bit (1) unaligned,                         /* ON = send disc upon physical connect */
    2 trace_off bit (1) unaligned,                          /* ON = turn off trace upon line crash */
    2 pad bit (5) unaligned,                                /* padding */
    2 command bit (9) unaligned,                            /* One of the values below */
    2 frame_size fixed bin (18) unsigned unaligned,         /* max size of I-frame */

    2 K fixed bin (9) unsigned unaligned,                   /* max un-acked frames allowed */
    2 N2 fixed bin (9) unsigned unaligned,                  /* number of retries */
    2 T1 fixed bin (9) unsigned unaligned,                  /* frame ack wait timer in tenths of seconds */
    2 T3 fixed bin (9) unsigned unaligned;                  /* init timer */

dcl  ACTIVATE_COMMAND init ("001"b3) bit (9) internal static options (constant);
dcl  DEACTIVATE_COMMAND init ("002"b3) bit (9) internal static options (constant);
dcl  DISCONNECT_COMMAND init ("003"b3) bit (9) internal static options (constant);

dcl  lap_line_status_info_ptr pointer;

dcl 1 lap_line_status_info aligned based (lap_line_status_info_ptr),
    2 status_type fixed bin (18) unsigned unaligned,        /* One of the values below */
    2 last_function_process fixed bin (17) unaligned,       /* coded function */

    2 which_state_process fixed bin (9) unsigned unaligned, /* process state */
    2 main_state fixed bin (9) unsigned unaligned,          /* current frame level state */
    2 primary_sub_state fixed bin (9) unsigned unaligned,   /* sub link up state */
    2 secondary_sub_state fixed bin (9) unsigned unaligned;

dcl  LINE_DOWN_STATUS init (1) fixed bin (18) unsigned internal static options (constant);

dcl  FRAME_STATE_ARRAY (5) char (32) static options (constant) init
    ("Down", "T3", "SABM Sent", "Set Up", "Up");

dcl  FRAME_SUB_STATE_ARRAY (0:14) char (32) static options (constant) init
    ("Link down: see frame", "Link down: down", "Link down: T3",                                    /* 0, 1, 2 */
     "Link down: SABM sent", "Link down: set up", "Primary normal",                                 /* 3, 4, 5 */
     "Primary remote busy", "Primary T1 expired", "Primary SARM reset",                             /* 6, 7, 8 */
     "Secondary normal", "Secondary local busy", "Secondary reject",                                /* 9, 10, 11 */
     "Secondary CMDR send", "Link up FRMR send", "Link up reset started (lapb)");                   /* 12, 13, 14 */

dcl  FRAME_FUNCTION_CODE (0:19) char (32) static options (constant) init
    ("Recieved invalid command or data", "Recieved DISC", "Recieved DM (lapb)",                     /* 0, 1, 2 */
     "Recieved SARM (lap)", "Recieved SABM (lapb)", "Recieved UA",                                  /* 3, 4, 5 */
     "Recieved CMDR/FRMR", "Recieved RR", "Recieved RNR",                                           /* 6, 7, 8 */
     "Recieved REJ", "Recieved bad command or response", "Timer (T1) expired with rc<N2",           /* 9, 10, 11 */
     "Timer (T1) expired with rc=N2", "Recieved bad final bit", "Recieved bad I-frame (N(R))",      /* 12, 13, 14 */
     "Recieved bad I-frame (N(S))", "Recieved I-frame", "Recieved poll RR command (lapb)",          /* 15, 16, 17 */
     "Recieved poll RNR command (lapb)", "Recieved poll REJ command (lapb)");                       /* 18, 19 */

/* END INCLUDE FILE ... lap_line_info.incl.pl1 */
