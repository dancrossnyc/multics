/* BEGIN INCLUDE FILE ... dialup_values.incl.pl1 */

/* format: style4 */

/* Values for "cdte.tra_vec" used by dialup_ and others. */

/* Modified by T. Casey April 1976 to add WAIT_NEW_PASSWORD
   -		in 1977 and 1978 to add WAIT_(GREETING_MSG DELETE_CHANNEL)
   -		and in October 1979 to add WAIT_CONNECT_REQUEST
   Modified by Robert Coren in May 1981 to add TANDD_ATTACH values and 
		WAIT_DISCARD_WAKEUP
   Modified by T. Casey, July 1981, for MR9.0, to add WAIT_BEFORE_HANGUP.
   Modified by E. N. Kittlitz, July 1982, to add TTY_MASKED.
*/

/****^  HISTORY COMMENTS:
  1) change(87-04-20,GDixon), approve(87-07-13,MCR7741),
     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
     Add constant arrays naming cdte.state, cdte.tra_vec and ute.active values.
  2) change(87-05-11,GDixon), approve(87-07-13,MCR7741),
     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
     Add named constants for instance tags.
                                                   END HISTORY COMMENTS */

dcl  (WAIT_DIALUP init (1),				/* Channel waiting for dialup. */
     WAIT_ANSWERBACK initial (2),			/* WRU sent, waiting for reply */
     WAIT_LOGIN_LINE init (3),			/* Greeting typed, wait for login command. */
     WAIT_LOGIN_ARGS init (4),			/* Want rest of login line */
     WAIT_OLD_PASSWORD init (5),			/* "-cpw" was specified. Wait for old password. */
     WAIT_PASSWORD init (6),				/* Waiting for password. (If "-cpw", repeat of new one.) */
     WAIT_NEW_PASSWORD init (7),			/* "-cpw" was specified. Wait for new password */
     WAIT_LOGOUT_SIG init (8),			/* Channel is hooked up. Wait for logout. */
     WAIT_LOGOUT init (9),				/* A logout has been requested. Wait for process to die */
     WAIT_LOGOUT_HOLD init (10),			/* As above but don't hang up when it dies. */
     WAIT_DETACH init (11),				/* As above but ignore channel afterwards. */
     WAIT_NEW_PROC init (12),				/* As above but make new process and continue. */
     WAIT_REMOVE init (13),				/* As above but completely expunge channel. */
     WAIT_FIN_PRIV_ATTACH init (14),			/* When channel dials up, connect it to user */
     WAIT_DIAL_RELEASE init (15),			/* Waiting for master process to release. */
     WAIT_DIAL_OUT init (16),				/* Waiting for auto call to complete */
     WAIT_HANGUP init (17),				/* Wait for the hangup event to occur for a channel */
     WAIT_SLAVE_REQUEST init (18),			/* Ignore line until someone asks */
     WAIT_GREETING_MSG init (19),			/* Print greeting message and wait for login line */
     WAIT_DELETE_CHANNEL init (20),			/* Channel deleted - mark cdte after process is destroyed */
     WAIT_CONNECT_REQUEST init (21),			/* logged in; awaiting request re disconnected processes */
     WAIT_TANDD_HANGUP init (22),			/* when channel hangs up, proceed with t & d attachment */
     WAIT_FIN_TANDD_ATTACH init (23),			/* when channel dials up, finish t & d attachment */
     WAIT_DISCARD_WAKEUPS init (24),			/* disregard all wakeups on channel */
     WAIT_BEFORE_HANGUP init (25),			/* allow output to print before hanging up */
     WAIT_DESTROY_REQUEST init (26),			/* waiting to continue with destroy request after process has destroyed itself */
     WAIT_NEW_PROC_REQUEST init (27)			/* waiting to continue with new_proc request after process has destroyed itself */
     ) fixed bin internal static options (constant);

dcl  TRA_VEC_VALUES (0:13) char (32) aligned int static options (constant) init
						/* names of ute.destroy_flag values */
	("", "wait dialup", "wait answerback", "wait login line", /*  0-3  */
	"wait login args", "wait old password", "wait password",  /*  4-6  */
	"wait new password", "wait logout signal", "wait logout", /*  7-9  */
	"wait logout hold", "wait detach", "wait new proc",       /* 10-12 */
	"wait remove");				        /*   -13 */

/* Values for "cdte.state", typewriter state. */

dcl  (TTY_MASKED init (-1),				/* Terminal channel is there, but masked by MCS */
     TTY_HUNG init (1),				/* Terminal channel is there, but dead. */
     TTY_KNOWN init (2),				/* Channel being "listened" to, awaiting dialup. */
     TTY_DIALED init (5)				/* Channel is dialed up. This is normal state. */
     ) fixed bin internal static options (constant);

dcl  STATE_VALUES (-1:5) char (15) aligned int static options (constant) init
						/* names of cdte.state values */
	("masked", "dead", "hung up", "listening", "", "", "dialed up");

/* Values for "cdte.in_use" and "ate.active" */

dcl  (NOW_FREE init (0),				/* Entry is empty. */
     NOW_HUNG_UP init (1),				/* Entry is usable but tty is hung up. */
     NOW_LISTENING init (2),				/* Entry is waiting for phone call. */
     NOW_DIALED init (3),				/* Entry is connected but login not complete. */
     NOW_LOGGED_IN init (4),				/* Entry is logged in but no process. */
     NOW_HAS_PROCESS init (5),			/* Entry has a valid process. */
     NOW_DIALING init (6),				/* Entry (auto_call line) is dialing */
     NOW_DIALED_OUT init (7)				/* Entry (auto_call line) is in use */
     ) fixed bin internal static options (constant);

dcl  ACTIVE_VALUES (0:5) char (18) aligned int static options (constant) init
						/* names of ute.active values */
	("free", "hung-up", "listening", "dialed", "logged in, no proc", "logged in & proc");


/**** Values for ute.tag */

dcl (TAG_INTERACTIVE init("a"),
     TAG_UFT init("f"),
     TAG_ABSENTEE init("m"),
     TAG_PROXY init("p"),
     TAG_DAEMON init("z")
     ) char(1) int static options(constant);


/**** Following are constants used to indicate to the process termination
      handler the reason for the process termination.  They are used by
      uc_proc_term_handler_, as well as uc_ls_new_proc_request_ and
      uc_ls_destroy_request_. */

dcl  (
     PT_FPE initial (1),
     PT_LOGOUT initial (4),
     PT_NEW_PROC_AUTH initial (13),
     PT_HANGUP initial (20),
     PT_SHUTDOWN initial (21),
     PT_BUMP initial (22),
     PT_ALARM initial (23),
     PT_DETACH initial (24),
     PT_UNBUMP initial (25),
     PT_OPERATOR_TERMINATE initial (27),
     PT_DESTROY_REQUEST initial (30),
     PT_NEW_PROC_REQUEST initial (31)
     ) fixed bin (17) internal static options (constant);

/**** Values for ute.preempted:
  -1  user unbumped after term signal sent
   0  user unbumped; ignore alarm___
   1  value internally used in load_ctl_
   2  user bumped; when alarm___ comes in, send term signal
   3  term signal sent; destroy process if termsgnl, alarm___, or cpulimit 
      signals come in
   4  user bumped; process sick, so destroy without sending term signal
   5  trm_ signal sent, termsgnl received; (if still 3, we never got the 
      termsgnl).						       */

dcl  (
     PREEMPT_UNBUMP initial (-1),
     PREEMPT_UNBUMP_IGNORE_ALARM initial (0),
     PREEMPT_LOAD_CTL initial (1),
     PREEMPT_BUMPED initial (2),
     PREEMPT_TERM_SENT initial (3),
     PREEMPT_BUMPED_NO_TERM initial (4),
     PREEMPT_TERMSGNL_RECEIVED initial (5)
     ) fixed bin (17) internal static options(constant);

dcl  PREEMPT_VALUES (-1:5) char(28) varying int static options(constant) init(
	"unbumped",
	"not bumped, ignore alarm___",
	"load_ctl_",
	"bumped",
	"bumped, trm_ sent",
	"bumped without trm_",
	"bumped, termsgnl received");

/* END INCLUDE FILE ... dialup_values.incl.pl1 */
