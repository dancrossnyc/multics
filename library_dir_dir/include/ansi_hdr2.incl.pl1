/*  BEGIN INCLUDE FILE:  ansi_hdr2.incl.pl1                 */
/*  Modified by J. A. Bush 11/07/82 for use by mtape_ */

/* format: style4 */

dcl  ansi_hdr2P ptr;				/* pointer on which ansi_hdr2 structure is based */

dcl  1 ansi_hdr2 unaligned based (ansi_hdr2P),
       2 label_id char (4),				/* HDR2/EOF2/EOV2 */
       2 format char (1),				/* U, F, D, or S */
       2 blklen char (5),				/* maximum number of characters per block */
       2 reclen char (5),				/* maximum or actual record length - meaning varies with format */
       2 system_use,				/* 35 characters reserved for system-specific use */
         3 next_volname char (32),			/* next volume name - for trailer label */
         3 blocked char (1),				/* blocking attribute: 0 - no / 1 - yes */
         3 mode char (1),				/* data encoding mode */
						/* 1 - ASCII, 9 mode */
						/* 2 - EBCDIC, 9 mode */
						/* 3 - binary */
         3 system_reserved char (1),			/* reserved for future use */
       2 buffer_offset char (2),			/* meaningful only if HDR1 system code ^= "" */
       2 reserved char (28);				/* spaces */

/* Old HDR2 system use field, pre-secure-authentication */

dcl  1 old_ansi_hdr2_system_use based (addr (ansi_hdr2.system_use)),
       2 canonical_next_volname char (6),		/* next volume name - for trailer label */
       2 blocked char (1),				/* blocking attribute: 0 - no / 1 - yes */
       2 mode char (1),				/* data encoding mode (same as above) */
       2 system_reserved char (27);			/* blanks */

dcl  ANSI_L2_ID (3) char (4) int static options (constant) init
	("HDR2", "EOV2", "EOF2");
dcl  (ANSI_HDR2 init (1),
     ANSI_EOV2 init (2),
     ANSI_EOF2 init (3)) fixed bin int static options (constant);

/*  END INCLUDE FILE:  ansi_hdr2.incl.pl1  */
