/*	BEGIN INCLUDE FILE ... disk_table.incl.pl1 ... Created Oct 75 for NSS */


/****^  HISTORY COMMENTS:
  1) change(86-01-14,Fawcett), approve(86-05-13,MCR7383),
     audit(86-05-14,LJAdams), install(86-07-18,MR12.0-1098):
     Add support for subvolumes.
                                                   END HISTORY COMMENTS */


/*		Modified July 1977 by T. Casey to add pdirs_ok switch in lve */
/*		Modified April 1981 by J. Bongiovanni to add shared_spindle_flip */
/*		Modified 831122 by E. A. Ranzenbach to add vacate_pdirs bit to lve. */

/* The disk table lives in ring 1. Its entries parallel the PVT */

dcl  dtp ptr,
     dtep ptr,
     lvep ptr;

     

dcl 1 dt based (dtp) aligned,

    2 n_entries fixed bin (17),			/* number of disk table entries */
    2 max_n_entries fixed bin (17),			/* max number of disk table entries */
    2 n_in_use fixed bin (17),			/* number of disk table entries in use */
    2 rpvx fixed bin,				/* index (pvtx, too) of the RPV */
    2 version fixed bin init (1),
    2 n_lv_entries fixed bin,				/* Number of LV entries */
    2 pad (2) bit (36),
    2 array (0 refer (dt.max_n_entries)) like dte,
    2 lv_array (0 refer (dt.max_n_entries)) like lve;

dcl 1 dte based (dtep) aligned,
    2 drive_name char (8),				/* device name */
    (2 device_type fixed bin (8),			/* device type */
    2 used bit (1),					/* TRUE if this entry is used for paging */
    2 known bit (1),				/* TRUE if label has been read and checked */
    2 storage_system bit (1),				/* TRUE for storage system (vs io disk) */
    2 permanent bit (1),				/* TRUE if cannot be demounted */
    2 deleted bit (1),				/* TRUE if deleted by "deld" */
    2 rpv bit (1),					/* TRUE if the root physical volume */
    2 demounted bit (1),				/* TRUE if was here or was assumed here */
    2 need_salvage bit (1),				/* TRUE if this vol was volsalv'd automatic */
    2 hc_accepted bit (1),				/* TRUE if vol accepted by ring 0 init */
    2 shared_spindle_flip bit (1),			/* used by ring-4 for shared spindle allocation */
    2 is_sub_vol bit (1),
    2 pad bit (3),
    2 lvx fixed bin (11),				/* index in lv_array of lve */
    2 pre_accepted bit (1)) unaligned,			/* TRUE if was used in previous bootload */
    2 sv_num  fixed bin unal,				/* this sv number */
    2 num_of_sv fixed bin unal,			/* number of sv for this pv */
    2 sv_name   char (2) aligned,
    2 pvid bit (36),				/* physical volume ID */
    2 pvname char (32);				/* Physical volume name. */

dcl 1 lve based (lvep) aligned,
    2 lvid bit (36),				/* logical volume ID */
    (2 used bit (1),				/* TRUE if entry used */
    2 hv_mounted bit (1),				/* TRUE if hvol is really OK */
    2 public bit (1),				/* TRUE for public vol */
    2 mounting bit (1),				/* TRUE if mhv is in progress */
    2 demounting bit (1),				/* TRUE if dhv is in progress */
    2 good_candidate bit (1) unal,			/* used for auto dhv */
    2 demounted_only bit (1) unal,			/* lve here only to warm demounted pve's */
    2 pdirs_ok bit (1) unal,				/* TRUE if process directory segments can be on this lv */
    2 prev_bootload bit (1) unal,			/* TRUE if can auto-accept pvs */
    2 vacate_pdirs bit (1) unal,			/* if TRUE we will demand move all perprocess segs */
    2 pad bit (26)) unal,
    2 lvname char (32),				/* Logical volume name */
    2 min_access_class bit (72),			/* Security stuff */
    2 max_access_class bit (72);			/* .. */

/*	END INCLUDE FILE ...disk_table.incl.pl1 */
