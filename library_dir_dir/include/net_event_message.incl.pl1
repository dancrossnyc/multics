/*	BEGIN INCLUDE FILE ... net_event_message.incl.pl1 */

/****^  HISTORY COMMENTS:
  1) change(86-07-30,Kissel), approve(86-07-30,MCR7475), audit(86-08-04,Coren),
     install(86-10-09,MR12.0-1181):
     This include file was formerly tty_event_message.incl.pl1.  It has been
     updated with different fields and new constants, and renamed to
     net_event_message.incl.pl1
  2) change(87-04-20,GDixon), approve(87-07-13,MCR7694),
     audit(87-06-24,Hartogs), install(87-08-04,MR12.1-1056):
     Add NETWORK_TYPE_VALUES array.
                                                   END HISTORY COMMENTS */

/*	describes event message passed with wakeups from the tty DIM */
/*	Created 5/24/76 by Robert S. Coren */

/* format: style3,linecom,ifthenstmt,indthenelse,^indnoniterdo,indnoniterend,initcol3,dclind5,idind32 */

dcl  net_event_message_arg	       fixed bin (71);	/* For calling IPC */
dcl  NET_EVENT_MESSAGE_VERSION_1     bit (2) internal static options (constant) init ("10"b);

dcl  1 net_event_message	       aligned based (addr (net_event_message_arg)),
       2 version		       bit (2) unaligned,	/* Currently version 1 */
       2 reason		       bit (16) unaligned,	/* Additional info about the event */
       2 pad		       bit (6) unaligned,	/* Must be zero */
       2 network_type	       fixed bin (4) unsigned unaligned,
						/* See below for constants */
       2 type		       fixed bin (8) unsigned unaligned,
						/* Type of interrupt, see below */
       2 handle		       fixed bin (35) aligned;/* Caller's handle (devx for MCS, handle for DSA) */

/* Network type constants */

dcl  MCS_NETWORK_TYPE	       fixed bin (4) unsigned internal static options (constant) init (0);
dcl  DSA_NETWORK_TYPE	       fixed bin (4) unsigned internal static options (constant) init (1);
dcl  MOWSE_NETWORK_TYPE	       fixed bin (4) unsigned internal static options (constant) init (2);

dcl  NETWORK_TYPE_VALUES (0:2) char(8) varying int static options(constant) init(
	"MCS",
	"DSA",
	"MOWSE");


/* MCS event message type constants */

dcl  MAX_MCS_EVENT_MSG_TYPE	       fixed bin internal static options (constant) init (8);

dcl  MCS_UNSPECIFIED_MSG	       fixed bin internal static options (constant) init (0);
						/* used for "start" order, etc. */
dcl  MCS_DIALUP_MSG		       fixed bin internal static options (constant) init (1);
						/* dialup */
dcl  MCS_HANGUP_MSG		       fixed bin internal static options (constant) init (2);
						/* hangup */
dcl  MCS_DIALOUT_MSG	       fixed bin internal static options (constant) init (3);
						/* dialout status returned */
dcl  MCS_QUIT_MSG		       fixed bin internal static options (constant) init (4);
						/* quit */
dcl  MCS_READ_MSG		       fixed bin internal static options (constant) init (5);
						/* input arrived */
dcl  MCS_WRITE_MSG		       fixed bin internal static options (constant) init (6);
						/* output completed */
dcl  MCS_LINE_STATUS_MSG	       fixed bin internal static options (constant) init (7);
						/* control tables sent status */
dcl  MCS_MASKED_MSG		       fixed bin internal static options (constant) init (8);
						/* channel masked by FNP */

dcl  MCS_MSG_TYPE_TO_PNAME	       (0:8) char (20) internal static options (constant) init ("unspecified",
						/*  0 */
			       "dialup",		/*  1 */
			       "hangup",		/*  2 */
			       "dialout status",	/*  3 */
			       "quit",		/*  4 */
			       "read",		/*  5 */
			       "write",		/*  6 */
			       "line status",	/*  7 */
			       "masked");		/*  8 */

/* DSA event message type constants */

dcl  MAX_DSA_EVENT_MSG_TYPE	       fixed bin internal static options (constant) init (19);

dcl  DSA_UNSPECIFIED_MSG	       fixed bin (8) uns internal static options (constant) init (0);
dcl  DSA_ATTENTION_MSG	       fixed bin (8) uns internal static options (constant) init (1);
dcl  DSA_DATA_ATTENTION_MSG	       fixed bin (8) uns internal static options (constant) init (2);
dcl  DSA_DEMAND_RELEASE_SRU_MSG      fixed bin (8) uns internal static options (constant) init (3);
dcl  DSA_DEMAND_TURN_MSG	       fixed bin (8) uns internal static options (constant) init (4);
dcl  DSA_DEMAND_TURN_ACK_MSG	       fixed bin (8) uns internal static options (constant) init (5);
dcl  DSA_PURGE_MSG		       fixed bin (8) uns internal static options (constant) init (6);
dcl  DSA_RECOVER_MSG	       fixed bin (8) uns internal static options (constant) init (7);
dcl  DSA_RECOVER_ACK_MSG	       fixed bin (8) uns internal static options (constant) init (8);
dcl  DSA_RELEASE_SRU_MSG	       fixed bin (8) uns internal static options (constant) init (9);
dcl  DSA_RESUME_MSG		       fixed bin (8) uns internal static options (constant) init (10);
dcl  DSA_RESUME_ACK_MSG	       fixed bin (8) uns internal static options (constant) init (11);
dcl  DSA_SUSPEND_MSG	       fixed bin (8) uns internal static options (constant) init (12);
dcl  DSA_SUSPEND_ACK_MSG	       fixed bin (8) uns internal static options (constant) init (13);
dcl  DSA_TERM_ABNORMAL_MSG	       fixed bin (8) uns internal static options (constant) init (14);
dcl  DSA_ESTABLISHMENT_MSG	       fixed bin (8) uns internal static options (constant) init (15);
dcl  DSA_TERMINATED_MSG	       fixed bin (8) uns internal static options (constant) init (16);
dcl  DSA_USER_UNASSIGN_MSG	       fixed bin (8) uns internal static options (constant) init (17);
dcl  DSA_DATA_INPUT_MSG	       fixed bin (8) uns internal static options (constant) init (18);
dcl  DSA_DATA_OUTPUT_MSG	       fixed bin (8) uns internal static options (constant) init (19);

dcl  DSA_MSG_TYPE_TO_PNAME	       (0:19) char (20) internal static options (constant) init ("unspecified",
						/*  0 */
			       "attention",		/*  1 */
			       "data_attention",	/*  2 */
			       "demand_release_sru",	/*  3 */
			       "demand_turn",	/*  4 */
			       "demand_turn_ack",	/*  5 */
			       "purge",		/*  6 */
			       "recover",		/*  7 */
			       "recover_ack",	/*  8 */
			       "release_sru",	/*  9 */
			       "resume",		/* 10 */
			       "resume_ack",	/* 11 */
			       "suspend",		/* 12 */
			       "suspend_ack",	/* 13 */
			       "terminate_abnormal",	/* 14 */
			       "establishment",	/* 15 */
			       "terminated",	/* 16 */
			       "user_unassign",	/* 17 */
			       "data input",	/* 18 */
			       "data output");	/* 19 */

/*	END INCLUDE FILE ... net_event_message.incl.pl1 */
