/* Begin include file dir_lock_seg_.incl.pl1 BIM 830312 */
/* From dirlockt.incl.pl1 */

/* format: style3,idind25,indcomtxt */

/**** Several arrays in this program are zero based. The zero-th
      entries are NEVER USED. referencers should start at 1, not lbound.
      The zero entries are there to improve the compiler's subscript
      calculations. The compiler can fetch dir_lock_all_dir_locks (foo).uid
      with an lda pr6|FOO,*ql */

dcl	dir_lock_seg$	     external static;	/* name of the segment containing the directory locks */

dcl	dir_lock_segp	     pointer;		/* pointer to the dirlock table */

dcl	1 dir_lock_seg	     based (dir_lock_segp) aligned,
	  2 header	     aligned like dir_lock_seg_header,
	  2 dir_locks	     (0:dir_lock_seg.header.n_dir_locks) aligned like dir_lock,
	  2 readers	     (0:dir_lock_seg.header.n_dir_locks, dir_lock_seg.header.max_readers) bit (36) aligned;

declare	(dir_lock_all_locksp, dir_lock_all_readersp)
			     pointer;

declare	1 dir_lock_all_dir_locks (0:dir_lock_seg.header.n_dir_locks) aligned like dir_lock based (dir_lock_all_locksp);
declare	dir_lock_all_readers     (0:dir_lock_seg.header.n_dir_locks, dir_lock_seg.header.max_readers) bit (36)
			     aligned based (dir_lock_all_readersp);

declare	DIR_LOCK_SEG_EVENT	     char (4) aligned init ("drls") int static options (constant);

declare	1 dir_lock_seg_header    aligned based,
	  2 seg_lock	     aligned like lock,
	  2 n_dir_locks	     fixed bin,		/* max number */
	  2 highest_in_use	     fixed bin,
	  2 max_readers	     fixed bin,
	  2 pad_even	     bit (36) aligned,
	  2 readers_ptr	     pointer,
	  2 locks_ptr	     pointer,
	  2 meters	     aligned,
	    3 find_calls	     fixed bin (35),
	    3 find_failures	     fixed bin (35),
	    3 max_in_use	     fixed bin (35),
	    3 pad_meters	     fixed bin (35),
	  2 pad		     (16) bit (36) aligned;	/* to 32 */

declare	dir_lockp		     pointer;
declare	1 dir_lock	     aligned based (dir_lockp),
	  2 uid		     bit (36) aligned,
	  2 flags		     aligned,
	    3 notify_sw	     bit (1) unaligned,
	    3 salvage_sw	     bit (1) unaligned,	/* ON if dir was locked for salvage */
	    3 pad		     bit (34) unaligned,
	  2 lock_count	     fixed bin (17),	/* POSITIVE --> write_lock */
						/* NEGATIVE --> -number of lockers */
						/* ZERO --> not locked */
	  2 write_locker	     bit (36) aligned;	/* in case of read, see next declaration, and expect this 0 */

declare	dir_read_lockers_ptr     pointer;
declare	dir_read_lockers	     (dir_lock_seg.header.max_readers) bit (36) aligned based (dir_read_lockers_ptr);

/* End include file dir_lock_seg_.incl.pl1 */
