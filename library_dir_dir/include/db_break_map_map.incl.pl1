/*	BEGIN INCLUDE FILE ...  db_break_map_map.incl.pl1
*	Written  Dec 72  for the  6180  by  Bill Silver.
*	Changed  Feb 73  for eis restart by Bill Silver.
*
*	This include file contains the declaration for the debug break map.
*/

dcl	break_map_ptr	ptr,		/* Pointer to break map header. */
	break_slot_ptr	ptr;		/* Pointer to individual break slot entry. */


dcl     1	old_bmap  based(break_map_ptr)  aligned,/* Old version of break map header. */
	2 pad(4)	bit(36),
	2 breaks(1),
	  3 slot (size(break_slot))  bit(36);

dcl    1	bmap  based (break_map_ptr)  aligned,	/* Version 2 break map header. */
	2 num_slots	fixed bin,	/* Number of break slots allocated. */
	2 num_set		fixed bin,	/* Number of breaks actually set. */
	2 bit_count	fixed bin(24),	/* Bit count of the whole segment. */
	2 version		char(4),		/* Break map version number. */
	2 eis,				/* Used to restart EIS instructions.. */
	  3 tra		bit(36),		/* Replaces instruction after eis instr. */
	  3 instructions(9)	bit(36),		/* Executed after eis inst restarted. */
	  3 mme2_indw	bit(18),		/* Indirect word: offset -> loc of break. */
	  3 inst_indw	bit(18),		/* Indirect word: offset -> inst after EIS inst. */
	  3 save		bit(36),		/* Used to save A register. */
	  3 mme2		bit(36),		/* Used to save mme2 instruction. */
	  3 inst		bit(36),		/* Used to save inst after eis inst. */
	2 reserved(13)	bit(36),		/* Reserved for future use. */
	2 breaks(1),			/* Array of break slots. */
	  3 slot (size(break_slot))  bit(36);


dcl     1	break_slot  based(break_slot_ptr)  aligned,
	  2 type		fixed bin,	/* -1 => slot is free, 
					*   0 => regular break,     1 => temporary,
					*   2 => regular disabled,  2 => temporary disabled */
	  2 offset	fixed bin(18),	/* Offset of the break word. */
	  2 old_word	bit(36),		/* Previous contents of break word. */
	  2 skip_count	fixed bin,	/* Number of times to skip break. */
	  2 line_no	fixed bin,	/* Source line corresponding to break. */
	  2 num_words	fixed bin,	/* Number of words in instruction. */
	  2 reserved(2)	fixed bin,	/* Reserved for possible future use. */
	  2 comd_len	fixed bin,	/* Length of command line,  0 => no command */
	  2 comd_line	char(128),	/* Command line to be executed at break time. */
	  2 cond_len	fixed bin,	/* Length of condition data,  0 => no condition. */
	  2 cond_data	char(236);	/* Contents of all the condition data.
					*  Format of this data specified in procedures
					*  which process semantics of condition data. */


/*	END of INCLUDE FILE ...  db_break_map_map.incl.pl1    */
