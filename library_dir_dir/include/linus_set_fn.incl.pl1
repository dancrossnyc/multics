/* BEGIN INCLUDE FILE linus_set_fn.incl.pl1 -- jaw 7/13/77 

   81-10-26  Rickie  E.  Brinegar: Modified to have entry variables instead of
   entry  pointers.  This change included the addition of bit switches inorder
   to  be  able  to tell if the entry variable had been set yet.  Also changed
   the  name  of the structure from set_fn to linus_set_fn and the name of the
   variable that it was based on from setf_ptr to linus_set_fn_ptr.
   
   81-11-05 Rickie E.  Brinegar: Changed the entry pointers to entry variables
   and  added bit switches to determine when the entries have or have not been
   set.     Renamed    set_fn   sturcture   to   linus_set_fn,   setf_ptr   to
   linus_set_fn_ptr,            and            nset_fn_init_args            to
   initial_number_of_linus_set_fn_args.
   
*/

dcl 1 linus_set_fn aligned based (linus_set_fn_ptr),	/* internal rep. of set fun. */
    2 fwd_ptr ptr,					/* pointer to next set function to be eval.
						   at this level */
    2 prior_ptr ptr,				/* pointer to head of list of set functions
						   to be evaluated prior to this one */
    2 assign_entry entry variable,			/* pointer to assign entry */
    2 calc_entry entry variable,			/* pointer to calc entry */
    2 init_entry entry variable,			/* pointer to initialization entry */
    2 assign_al_ptr ptr,				/* pointer to assign entry arg list */
    2 calc_al_ptr ptr,                                      /* pointer to calc entry arg list */
    2 rtrv_al_ptr ptr,				/* pointer to arg list for dsl_$retrieve */
    2 flags,
      3 assign_entry_set bit (1) unaligned,                 /* 0 => null, 1 => not null */
      3 calc_entry_set bit (1) unaligned,                   /* 0 => null, 1 => not null */
      3 init_entry_set bit (1) unaligned,                   /* 0 => null, 1 => not null */
      3 pad_bits bit (33) unaligned,
    2 rslt_desc bit (36),				/* descriptor for result */
    2 nargs fixed bin,				/* number of input args to calc entry */
    2 arg (initial_number_of_linus_set_fn_args refer (linus_set_fn.nargs)),
      3 type fixed bin (4) unal,			/* 1 => constant
						   2 => linus variable
						   3 => scalar function
						   4 => set function
						   5 => expression
						   6 => data base item */
      3 must_convert bit (1) unal,			/* on if must convert prior to call */
      3 reserved bit (30) unal,
      3 desc bit (36),				/* descriptor of source data */
      3 assn_ptr ptr,				/* assign_ ptr for source data */
      3 assn_type fixed bin,				/* assign_ type for source data */
      3 assn_len fixed bin (35),			/* assign_ length for source data */
      3 arg_desc bit (36),				/* descriptor for converted arg */
      3 arg_assn_ptr ptr,				/* assign_ ptr for converted arg */
      3 arg_assn_type fixed bin,			/* assign_ type code for converted arg */
      3 arg_assn_len fixed bin (35),			/* assign_ length for converted arg */
      3 ef_ptr ptr;					/* pointer to express. or function structure */

dcl  initial_number_of_linus_set_fn_args fixed bin;
dcl  linus_set_fn_ptr ptr;

/* END INCLUDE FILE linus_set_fn.incl.pl1 */
