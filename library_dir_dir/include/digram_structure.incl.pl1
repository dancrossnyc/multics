
/* ******** include file digram_structure.incl.pl1 ******* */

dcl  digrams$digrams external;
dcl  digrams$n_units fixed bin external;
dcl  digrams$letters external;
dcl  digrams$rules external;

/* This array contains information about all possible pairs of units */

dcl 1 digrams (n_units, n_units) based (addr (digrams$digrams)),
    2 begin bit (1),				/* on if this pair must begin syllable */
    2 not_begin bit (1),				/* on if this pair must not begin */
    2 end bit (1),					/* on if this pair must end syllable */
    2 not_end bit (1),				/* on if this pair must not end */
    2 break bit (1),				/* on if this pair is a break pair */
    2 prefix bit (1),				/* on if vowel must precede this pair in same syllable */
    2 suffix bit (1),				/* on if vowel must follow this pair in same syllable */
    2 illegal_pair bit (1),				/* on if this pair may not appear */
    2 pad bit (1);					/* this makes 9 bits/entry */

/* This array contains left justified 1 or 2-letter pairs representing each unit */

dcl  letters (0:n_units) char (2) aligned based (addr (digrams$letters));

/* This is the same as letters, but allows reference to individual characters */

dcl 1 letters_split (0:n_units) based (addr (digrams$letters)),
    2 first char (1),
    2 second char (1),
    2 pad char (2);

/* This array has rules for each unit */

dcl 1 rules (n_units) aligned based (addr (digrams$rules)),
    2 no_final_split bit (1),				/* can't be the only vowel in last syllable */
    2 not_begin_syllable bit (1),			/* can't begin a syllable */
    2 vowel bit (1),				/* this is a vowel */
    2 alternate_vowel bit (1);			/* this is an alternate vowel, (i.e., "y") */

dcl  n_units defined digrams$n_units fixed bin;

/* ******** end include file digram_structure.incl.pl1 *********** */
