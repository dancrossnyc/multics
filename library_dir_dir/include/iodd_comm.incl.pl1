/* ..... BEGIN INCLUDE FILE  ...  iodd_comm.incl.pl1  ..... */

/* structure used by a driver to send a command/request to the coordinator */

dcl  comm_ptr ptr;

dcl 1 iodd_comm aligned based (comm_ptr),
     2 ack_chan fixed bin (71),			/* IPC event channel for coord to return status code */
     2 type fixed bin,				/* command/request type code
						   0 = reserved [done & wait (direct - special ev chan)]
						   1 = reserved [done & next   (also direct)]
						   2 = restart - single or series
						   3 = save - single or series
						   4 = reserved [driver logout (direct)]
						   5 = reserved [get cmd ev chan (direct)]
						   6 = next_req - run a given request next
						   7 = restart_q - back to first messages in my queues
						*/
     2 type_ext bit (36),				/* defined by each command type */
     2 minor_idx fixed bin,				/* index of minor device sending this request */
     2 dvc_idx fixed bin,				/* index of associated device class */
     2 request_no fixed bin,				/* request number for save/restart */
     2 queue_no fixed bin,				/* specified queue for next_req */
     2 user_id char (32),				/* sender id for next_req */
     2 req_id char (24),				/* request id from -id arg */
     2 pad_space (3) fixed bin,
     2 data_len fixed bin,				/* length of following string */
     2 data char (256 refer (iodd_comm.data_len));		/* data for command type if needed */

dcl restart fixed bin int static options (constant) init (2);
dcl save fixed bin int static options (constant) init (3);
dcl next_req fixed bin int static options (constant) init (6);
dcl restart_q fixed bin int static options (constant) init (7);


/* ..... END INCLUDE FILE  ...  iodd_comm.incl.pl1  ..... */
