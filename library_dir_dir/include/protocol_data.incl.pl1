/* --------      BEGIN INCLUDE FILE ... protocol_data.incl.pl1     --------- */


/****^  HISTORY COMMENTS:
  1) change(89-03-20,Parisek), approve(89-06-06,MCR8110),
     audit(89-10-09,Farley), install(89-10-25,MR12.3-1100):
     Add support of protocol mpx.
                                                   END HISTORY COMMENTS */

/*	       Written 15 May 1985 by C. Claveleira - CICB            */

/* Latest revision : */ 
/*							  */
/* 7  oct 1985 by C. Claveleira				  */
/* 19 oct 1985 by C. Claveleira				  */
/* 26 dec 1985 by C. Claveleira				  */
/* 14 fev 1986 by C. Claveleira                                         */
/* 20 mar 1986 by C. Claveleira - version 1.0 of protocol_mpx           */
/* 02 sep 1986 by C. Claveleira - version 1.6 of protocol_mpx           */
/* 26 nov 1986 by C. Claveleira - version 1.8 of protocol_mpx           */

     dcl	   protocol_data_ptr      ptr;
     dcl	   protocol_channels      fixed bin;

     dcl	   1 protocol_data	      aligned based (protocol_data_ptr),

	     2 max_channels	      fixed bin,		/* maximum number of channels (filled by fnp_init) */
	     2 n_channels	      fixed bin,		/* # of initialized channels */
	     2 init_time	      fixed bin (71),
	     2 listeners	      (4),		/* array of listeners processes by protocol type */
	       3 proc_id	      bit (36),
                 3 pad1             bit (36),
	       3 event_id	      fixed bin (71),
	     2 special_listeners  (10),		/* array of non-standards protocols listened */
	       3 call_datas,
	         4 partial	      bit (1) unal,		/* ON if test on first part of call_datas */
                   4 pad2           bit(35) unal,
	         4 datas	      char (48) varying,	/* call_datas that must match */
	       3 proc_id	      bit (36),		/* process_id of listener */
                 3 pad3             bit (36),
	       3 event_id	      fixed bin (71),	/* event of listener */
	     2 channels	      (protocol_channels refer (protocol_data.max_channels)) like channel;

     dcl	   channel_ptr	      ptr;

     dcl	   1 channel	      aligned based (channel_ptr), /* entry is 58 words wide */
	     2 name	      char (32),		/* name from lcnt */
	     2 devx	      fixed bin (17),	/* index in lct */
	     2 state	      fixed bin,		/* see values below */
	     2 load_proc_id	      bit (36),		/* process_id of loader process */
	     2 flags,
	       3 initialized      bit (1) unal,		/* ON after init_multiplexer */
	       3 started	      bit (1) unal,		/* ON after start */
	       3 in_use	      bit (1) unal,		/* ON if line currently in use */
	       3 send_output      bit (1) unal,		/* ON if we can send more output */
	       3 wflag	      bit (1) unal,		/* ON if process blocked on output */
	       3 rflag	      bit (1) unal,		/* ON if process blocked on input */
	       3 timer_set	      bit (1) unal,		/* ON if timer set for this channel */
	       3 pad	      bit (29) unal,
	     2 listener_proc_id   bit (36),		/* proc_id of listener process */
               2 pad5               bit (36),
	     2 listener_event     fixed bin (71),	/* event_channel of listener */
	     2 user_proc_id	      bit (36),		/* process_id of current user */
               2 pad6               bit (36),
	     2 user_event	      fixed bin (71),	/* event_channel of user */
	     2 user_ref	      fixed bin (17),	/* user's internal ref */
	     2 max_packet_size    fixed bin,		/* x25's max data packet size */
	     2 our_network_address char (15) varying,	/* network address of this channel */
	     2 his_network_address char (15) varying,	/* network address of remote */
	     2 call_data	      char (48) varying,	/* call datas from remote */
	     2 facilities	      char (16) varying,	/* facilities from remote */
	     2 fblock	      fixed bin (17),	/* offset of first data block. Input */
	     2 lblock	      fixed bin (17),	/*    "   "  last    "    "      "   */
	     2 write_first	      fixed bin (17),	/*    "   "  first   "    "  . Output */
	     2 write_last	      fixed bin (17),	/*    "   "  last    "    "      "    */
	     2 space_left_in_packet fixed bin,		/* current space left in x25 data packet */
	     2 max_buf_size	      fixed bin (9) uns,	/* maximum buffer size we're allowed to get */
	     2 buffer_pad	      fixed bin (9) uns,	/* buffer padding we must respect */
	     2 max_nsdu_size      fixed bin;		/* maximum size of NSDU permitted */

     dcl	   (INACTIVE	      init (0),		/* values of channel.state */
	   HUNGUP		      init (1),
	   DIALING	      init (2),
	   DIALED		      init (3)
	   )		      fixed bin static options (constant);

/* ----------      End include file protocol_data.incl.pl1        ---------- */
