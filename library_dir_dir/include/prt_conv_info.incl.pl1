
/* BEGIN INCLUDE FILE ... prt_conv_info.incl.pl1 */
/* Modified: 12 September 1980 by G. Palter */


/****^  HISTORY COMMENTS:
  1) change(87-05-10,Gilcrease), approve(87-07-31,MCR7686),
     audit(88-02-01,Farley), install(88-02-02,MR12.2-1019):
     Add modes.line_nbrs, flags.(eol eof)  bits for eor -nb.
                                                   END HISTORY COMMENTS */


dcl  pcip ptr;					/* pointer to conversion info structure */

dcl 1 pci based (pcip) aligned,			/* printer conversion info structure */
    2 cv_proc ptr,					/* pointer to character conversion procedure */
    2 lmarg fixed bin,				/* left margin indentation */
    2 rmarg fixed bin,				/* right margin limit */
    2 page_length fixed bin,				/* number of lines on page */
    2 phys_line_length fixed bin,			/* physical width of paper */
    2 phys_page_length fixed bin,			/* physical length of paper */
    2 lpi fixed bin,				/* lines per inch */
    2 sheets_per_page fixed bin,			/* sheets of paper per logical page */
    2 line_count fixed bin,				/* count of converted lines */
    2 page_count fixed bin,				/* count of converted pages */
    2 func fixed bin,				/* special conversion function */
						/* 0 => normal conversion */
						/* 1 => change NL to FF */
						/* 2 => change NL to top inside page */
						/* 3 => change NL to end of page */
                                                            /* 4 => change NL to top of outside page */
    (2 modes,					/* conversion modes */
     3 overflow_off bit (1),				/* "1"b to suppress end of page overflow */
      3 single_space bit (1),				/* "1"b to change all forms advance chars to NL */
      3 non_edited bit (1),				/* "1"b to print ASCII control chars */
      3 truncate bit (1),				/* "1"b to truncate lines that are too long */
      3 esc bit (1),				/* "1"b to process ESC character */
      3 ctl_char bit (1),				/* "1"b to output control characters */
      3 line_nbrs bit (1),				/* "1"b to output line numbers */
      3 pci_pad bit (5),
    2 flags,					/* flags internal to prt_conv_ */
      3 ignore_next_ff bit (1),			/* ON => prt_conv_ just output a FF; ignore next character if
						   it's a FF */
      3 eol bit (1),				/* "1"b = end-of-line encountered */
      3 eof bit (1),				/* "1"b = end-of-segment encountered */
      3 flags_pad bit (3),
    2 coroutine_modes,
      3 upper_case bit(1),				/* "1"b to convert to upper case */
      3 ht bit(1),					/* "1"b to skip tab conversion */
      3 coroutine_pad bit(13),
      3 slew_table_idx bit(3) ) unal,			/* slew table index */
    2 top_label_line char (136),			/* contains an optional top of page label */
    2 bot_label_line char (136),			/* contains an optional bottom of page label */
    2 top_label_length fixed bin,			/* length of top label line */
    2 bot_label_length fixed bin,			/* length of bottom label line */
    2 form_stops (256) unal,				/* logical form stops */
      3 lbits bit (9),				/* leftmost bits */
      3 rbits bit (9),				/* rightmost bits */

/* The following items are for internal use by the print conversion procedure.
   They should be zeroed once and then never referenced again.		*/

    2 level fixed bin,				/* overstrike level */
    2 pos fixed bin,				/* print position at end of incomplete line */
    2 line fixed bin,				/* current line number */
    2 slew_residue fixed bin,				/* number of lines remaining to be slewed */
    2 label_nelem fixed bin,				/* characters remaining in label */
    2 label_wksp ptr,				/* pointer to label being processed */
    2 sav_pos fixed bin,				/* position saved during label processing */
    2 esc_state fixed bin,				/* state of ESC processing */
    2 esc_num fixed bin,				/* number following ESC sequence */
    2 temp bit (36);				/* conversion proc temporary */

/* End of include file ...... prt_conv_info.incl.pl1 */

