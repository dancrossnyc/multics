
	/* BEGIN INCLUDE FILE lisp_readtable.incl.pl1 */

dcl num_macs fixed bin static init(8);	/* size of efficient portion of macro_table */

					/* if changed, the declarations below must also be changed */
dcl read_table_dim_vector dimension(1) fixed bin static init(145); /* number of dbl words in read_table data */



dcl 1 read_table aligned based(addr(addr(readtable)->based_ptr -> atom.value)->based_ptr -> array_info.array_data_ptr),
      2 macro_table(8) fixed bin(71),		/* -> exprs for first few macros */
      2 more_macros fixed bin(71),		/* list of any remaining macros */
      2 syntax (0:131) bit(27) aligned,	/* syntax bits for 128 ascii chars + 4 pseudo chars */
      2 translation (0:131) fixed bin aligned,	/* character translation or index in macro_table */
      2 status_terpri bit(1) aligned,		/* "1"b if (status terpri) is t */
      2 status_underline bit(1) aligned,	/* "1"b if (status _) is t */

      2 status_ttyread bit(1) aligned,		/* not actually used at present */
      2 abbreviate_on_files bit(1) aligned,	/* (sstatus abbrev 1) */
      2 abbreviate_on_flat bit(1) aligned,	/* (sstatus abbrev 2) */
      2 words_not_used_yet (3) bit(36) aligned;


	/* Manifest constants for syntax bits */

dcl (

forcefeed		init("000000100000000000000000000"b),	/* used only by ITS lisp */
vertical_motion	init("000000010000000000000000000"b),	/* bit on for NL and NP characters */
string_quote_exp	init("000000001000000000000000000"b),	/* string quote if bit12=1, exponent if bit12 = 0 */
special		init("000000000100000000000000000"b),	/* always slash if in atom */
single_char_object	init("000000000010000000000000000"b),
blank		init("000000000001000000000000000"b),	/* space, tab, comma, nl, etc. */
lparn		init("000000000000100000000000000"b),	/* "(", bit12 => super left paren */
dotted_pair_dot	init("000000000000010000000000000"b),	/* the two uses of "." are kept seperate */
rparn		init("000000000000001000000000000"b),	/* ")", bit12 => super right paren */
macro		init("000000000000000100000000000"b),
slashifier	init("000000000000000010000000000"b),
rubout		init("000000000000000001000000000"b),		/* used only by ITS lisp */
slash_if_first	init("000000000000000000100000000"b),	/* slashify if first char in pname */
decimal_point	init("000000000000000000010000000"b),
slash_if_not_first  init("000000000000000000001000000"b),	/* slashify on output when in pname & not 1st */
slash_output	init("000000000000000000101000000"b),	/* slashify on output when in pname */
bit12		init("000000000000000000000100000"b),	/* selects from two meanings of certain other bits */
						/* NOTE: this is not really bit 12 anymore, but keep name */
splice		init("000000000000000000000100000"b),	/* splicing macro */
shift_scale	init("000000000000000000000010000"b),	/* left shift if bit12 = 1
					   fixed point scale if bit12 = 0 */
plus_minus	init("000000000000000000000001000"b),	/* + if bit12 = 0, - if bit12 = 1 */
digit		init("000000000000000000000000100"b),	/* decimal digit */
extd_alpha	init("000000000000000000000000010"b),	/* extended alphabetic */
alpha		init("000000000000000000000000001"b)	/* familiar alphabetic */

) bit(27) static;

	/* End include file lisp_readtable.incl.pl1 */

