/* BEGIN INCLUDE FILE ... polled_vip_load_info.incl.pl1 */
/* Created 12/21/78 by J. Stern */


dcl pv_load_infop ptr;

dcl 1 pv_load_info aligned based (pv_load_infop),		/* info for "load_mpx" control order */
      2 ev_chan fixed bin (71),			/* event channel to signal load completion */
      2 pause_time fixed bin,				/* poll cycle pause time (miliseconds) */
      2 max_text_len fixed bin,			/* max data chars in output text message */
      2 function_codes,				/* chars having special meanings as function codes */
        3 quit char (1) unal,
        3 formfeed char (1) unal,
        3 pad char (2) unal,
      2 flags,
        3 controller_poll bit (1) unal,			/* ON if controller polling desired */
        3 crlf_echo bit (1) unal,			/* ON to enable CRLF echoing */
        3 omit_nl bit (1) unal,			/* ON to omit adding NL to received msgs */
        3 omit_ff bit (1) unal,			/* ON to omit sending FF at top of page */
        3 gcos_break bit (1) unal,			/* ON to accept $*$BRK as quit indication */
        3 etb_mode bit (1) unal,			/* On to terminate partial messages with ETB */
        3 unused bit (30) unal,
      2 max_message_len fixed bin,			/* maximum input message size */
      2 pad1 (4) fixed bin,
      2 nchan fixed bin,				/* number of subchannels configured */
      2 subchans (32),
        3 devx fixed bin (17) unal,				/* device index */
        3 baud_rate fixed bin (17) unal,		/* baud rate for printers only (300 or 1200) */
        3 flags,
	4 slave bit (1) unal,			/* ON for slave subchans */
	4 unused bit (35) unal,
        3 pad2 (2) fixed bin;


/* Event message values for the bootload event channel. */

dcl PV_MPX_UP fixed bin (71) int static options (constant) init (1);
dcl PV_MPX_DOWN fixed bin (71) int static options (constant) init (2);
dcl PV_MPX_MASKED fixed bin (71) int static options (constant) init (3);


/* END INCLUDE FILE ... polled_vip_load_info.incl.pl1 */
