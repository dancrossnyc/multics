/* Begin include file mstb_format.incl.pl1 */

/* Modified 1984-07-23 BIM for V3: new hash function, checksums. */
/* Modified 1984-08-08 EJS to make comp_header an even number of
   words long.  This is required so that MSTB entries end up on
   an even word boundary. */

/* format: style3 */

/***** NOTE NOTE NOTE

       These tables have locks. Otherwise, checksum calculation
       would be an incredible complexity.

       It could, however be done. If the AS is split into multiple
       processes, the following can be done:

       1)    use stacq to maintain counters. 
       2)    use entry locks on the individual entries.
       3)    use the pclocks on the components 
             to validate checksum entries. 

       With any luck, we will have FAMIS files at our disposal
       by the time the AS splits, and all of this will be 
       unnecessary.

       --BIM 1984-07-23 */

declare	(hdrp, segp, ep)	pointer;

declare	1 mt_header	aligned based (hdrp),
	  2 header	aligned,			/* data mstb_mgr_ owns */
	    3 comp_hdr	aligned like comp_header,
	    3 lock	bit (36) aligned,		/* file lock */
	    3 pclock	fixed bin (35),		/* change count, used for passive locking */
	    3 mti		aligned like ms_table_info,
	    3 (number_components, entries_per_component, entry_offset)
			unsigned fixed binary (18),
	    3 (total_entries, deleted_entries, used_entries)
			fixed binary (35),
	    3 perm_data_checksum
			fixed bin (35),		/* sum of n_components, entries_per_component, entry_offset, total_entries, header_size, entry_size */
	    3 meters,				/* only maintained if mti.keep_meters is on */
	      4 searches	fixed binary (35),
	      4 entries_examined
			fixed binary (35),
	    3 pad		(12) bit (36) aligned,	/* 50 words to end of this */
	  2 header_data	(0 refer (mt_header.mti.header_size)) bit (36) aligned;

declare	1 comp_header	aligned based (segp),	/* 16 words */
	  2 type		character (32),
	  2 (dt_created, dt_updated)
			fixed binary (71),
	  2 component	unsigned fixed binary (18),
	  2 pad (3) bit (36); /* Pad out to 16 words. */

declare	1 entry		aligned based (ep),		/* 10 + entry size */
	  2 header	aligned,
	    3 flags	unaligned,
	      4 (used, deleted, inconsistent)
			bit (1),
	      4 pad	bit (15),
	    3 checksum	fixed bin (18) unsigned unaligned,
						/* checksums ENTIRE entry, including header */
	    3 lock	bit (36) aligned,		/* unused for now */
	    3 key		character (32) unaligned,
	  2 entry_data	(mt_header.mti.entry_size) bit (36) aligned;



/* End include file mstb_format.incl.pl1 */
