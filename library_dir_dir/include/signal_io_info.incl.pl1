/* Begin include file signal_io_info.incl.pl1 */
/* format: style3,idind30 */

/* This include file requires condition_info_header */

declare	signal_io_info_ptr		pointer;
declare	1 signal_io_info		aligned based (signal_io_info_ptr),
	  2 header		aligned like condition_info_header,
	  2 iocb_ptr		pointer,
	  2 iocb_name		char (32) unaligned,
	  2 operation		char (32),
	  2 control_order_info_ptr	pointer,
	  2 position_type		fixed bin,
	  2 position_amount		fixed bin (35),
	  2 data_ptr		pointer,		/* points to control_order name on control */
	  2 data_length		fixed bin (21),
	  2 returned_data_length	fixed bin (21),
	  2 returned_error_code	fixed bin (35),
	  2 old_modes		aligned,
	    3 pointer		pointer,
	    3 length		fixed bin (21),
	  2 new_modes		aligned,
	    3 pointer		pointer,
	    3 length		fixed bin (21),
	  2 key			char (256) varying;

declare	(
	SGI_OP_GET_LINE		init ("get_line"),
	SGI_OP_GET_CHARS		init ("get_chars"),
	SGI_OP_PUT_CHARS		init ("put_chars"),
	SGI_OP_MODES		init ("modes"),
	SGI_OP_POSITION		init ("position"),
	SGI_OP_CONTROL		init ("control"),
	SGI_OP_READ_RECORD		init ("read_record"),
	SGI_OP_WRITE_RECORD		init ("write_record"),
	SGI_OP_REWRITE_RECORD	init ("rewrite_record"),
	SGI_OP_DELETE_RECORD	init ("delete_record"),
	SGI_OP_SEEK_KEY		init ("seek_key"),
	SGI_OP_READ_KEY		init ("read_key"),
	SGI_OP_READ_LENGTH		init ("read_length")
	)			char (32) int static options (constant);

declare	signal_io_io_buffer		char (signal_io_info.data_length) based (signal_io_info.data_ptr);
declare	signal_io_order_name	char (signal_io_info.data_length) based (signal_io_info.data_ptr);
declare	signal_io_old_modes		char (signal_io_info.old_modes.length) based (signal_io_info.old_modes.pointer);
declare	signal_io_new_modes		char (signal_io_info.new_modes.length) based (signal_io_info.new_modes.pointer);

/* End include file signal_io_info.incl.pl1 */
