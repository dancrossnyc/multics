dcl	1 symbol_node	aligned based,
	2 type		unal bit(12),	/* data type */
	2 level		unal bit(6),	/* structure level */
	2 ndims		unal bit(6),	/* number of dimensions */
	2 bits		unal,
	  3 aligned	bit(1),
	  3 packed	bit(1),
	  3 simple	bit(1),
	  3 decimal	bit(1),
	2 scale		unal bit(8),	/* arithmetic scale factor */
	2 name		unal bit(18),	/* rel ptr to acc name */
	2 brother		unal bit(18),	/* rel ptr to brother entry */
	2 father		unal bit(18),	/* rel ptr to father entry */
	2 son		unal bit(18),	/* rel ptr to son entry */
	2 address		unal,
	  3 offset	bit(18),		/* offset in storage class */
	  3 class		bit(4),		/* storage class */
	  3 next		bit(14),		/* rel ptr to next of same class */
	2 size		fixed bin(35),	/* encoded string|arith size */
	2 word_offset	fixed bin(35),	/* encoded offset from address */
	2 bit_offset	fixed bin(35),
	2 virtual_org	fixed bin(35),
	2 bounds(1),
	  3 lower		fixed bin(35),	/* encoded lower bound */
	  3 upper		fixed bin(35),	/* encoded upper bound */
	  3 multiplier	fixed bin(35);	/* encoded multiplier */

dcl	1 sym_bound	based,
	2 lower		fixed bin(35),
	2 upper		fixed bin(35),
	2 multiplier	fixed bin(35);

dcl	1 symbol_block	aligned based,
	2 type		unal bit(12),	/* = 0 for a block node */
	2 number		unal bit(6),	/* begin block number */
	2 start		unal bit(18),	/* rel ptr to start of symbols */
	2 name		unal bit(18),	/* rel ptr to name of proc */
	2 brother		unal bit(18),	/* rel ptr to brother block */
	2 father		unal bit(18),	/* rel ptr to father block */
	2 son		unal bit(18),	/* rel ptr to son block */
	2 map		unal,
	  3 first		bit(18),		/* rel ptr to first word of map */
	  3 last		bit(18),		/* rel ptr to last word of map */
	2 bits		unal bit(18),
	2 header		unal bit(18),	/* rel ptr to symbol header */
	2 chain(4)	unal bit(18),	/* chain(i) is rel ptr to first symbol
					   on start list with length >= 2**i */
	2 class_list(0:15)  unal bit(18);	/* rel ptrs to first symbol of given
					   storage class */
