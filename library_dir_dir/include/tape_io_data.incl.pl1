/*	BEGIN INCLUDE FILE tape_io_data.incl.pl1 ... Michael R. Jordan 3/81 */

dcl (fcb_ptr, vcb_ptr, tape_io_data_ptr) ptr;

dcl 1 tape_io_data aligned based (tape_io_data_ptr),
    2 temp (3) ptr,					/* (1) -> code to interpret; (2) -> lex temp; (3) -> buffer */
    2 first_vcb_ptr ptr,				/* ptr to first vcb */
    2 source,					/* info about source file */
      3 dirname char (168) unal,
      3 ename char (32) unal,
      3 ptr ptr,
    2 control,					/* control flags */
      3 ck bit (1),					/* ON => -check specified */
      3 force bit (1),				/* ON => -force specified */
      3 ring bit (1),				/* ON => -ring specified */
      3 writing_tape bit (1),				/* ON => tape_out, OFF => tape_in */
      3 max_severity fixed bin;			/* maximum error severity to be printed */

dcl 1 fcb aligned based (fcb_ptr),			/* file control block - governs file i/o */
    2 file_token_ptr ptr,				/* ptr to "File" token */
    2 next_fcb_ptr ptr,				/* pointer to next block, if any */
    2 prev_fcb_ptr ptr,				/* pointer to previous fcb */
    2 default_fcb_ptr ptr,				/* pointer to last default fcb */
    2 segment,					/* storage system data */
      3 dirname char (168),				/* directory name of file to be read/written */
      3 ename char (32),				/* entry name of file to be read/written */
      3 format fixed bin,				/* 0 = not specified; 1 = unstructured; 2 = sequential */
      3 extend fixed bin,				/* 0 = not specified; 1 = truncate (^extend); 2 = extend */
      3 truncate_lines fixed bin,			/* 0 = not specified; 1 = fold or; 2 = truncate long lines */
    2 tape,					/* tape file data */
      3 cmode fixed bin,				/* 0 = not specified; 1 = ASCII; 2 = EBCDIC; 3 = BINARY */
      3 format fixed bin,				/* 0 = not specified; 1 = Undefined; 2 = Fixed; 3 = D */
						/* 4 = Variable; 5 = Fixed Blocked; 6 = DB */
						/* 7 = Variable Blocked; 8 = Spanned; 9 = Spanned Blocked */
						/* 10 = Variable Spanned; 11 = Variable Spanned Blocked */
      3 output_mode fixed bin,			/* 0 = not specified; 1 = extend; 2 = modify */
						/* 3 = generate; 4 = create or replace */
      3 file_id char (17),				/* file identifier; "*" => no file name */
      3 replace_id char (17),				/* replace file ID; "" =>  create new file */
      3 expiration char (16),				/* expiration date, "" => immediate expiration */
      3 sequence fixed bin,				/* file seq. #; -1 = append to file-set; 0 = not specified */
      3 blklen fixed bin,				/* physical block length */
      3 reclen fixed bin (21);			/* logical record length */

dcl 1 vcb aligned based (vcb_ptr),			/* volume control block - governs volume attachment */
    2 volume_token_ptr ptr,				/* ptr to Volume token for this volume group */
    2 next_vcb_ptr ptr,				/* pointer to next block, if any */
    2 first_fcb_ptr ptr,				/* first fcb for this volume set */
    2 first_default_fcb_ptr ptr,			/* first default fcb for this volume-set */
    2 nvols fixed bin,				/* number of volumes in current volume-set */
    2 volid (64) char (32),				/* volume identification string (serial number) */
    2 comment (64) char (64),
    2 tape_type fixed bin,				/* 0 = not specified; 1 = ANSI; 2 = IBMSL */
						/* 3 = IBMNL; 4 = IBMDOS */
    2 density fixed bin;				/* 0 = not specified; 2 = 800; 3 = 1600; 4 = 6250 (BPI) */

/*	END INCLUDE FILE tape_io_data.incl.pl1 */
