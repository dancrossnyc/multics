/*  BEGIN:   _ssu_check_sci.incl.pl1			  *  *  *  *  *  */

/* Created:  25 February 1982 by G. Palter */
/* Modified: 6 November 1984 by G. Palter for version 3 and new sub_err_ 
				  calling sequence */


/****^  HISTORY COMMENTS:
  1) change(87-02-07,GDixon), approve(87-05-25,MCR7680),
     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
     Modified to verify that p_sci_ptr has proper its modifier by overlaying it
     with the structure in its.incl.pl1, rather than assuming knowledge of
     pointer format.
                                                   END HISTORY COMMENTS */


/* format: style4,delnl,insnl,ifthenstmt,ifthen */

/* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/*							       */
/* Validates that the caller's sci_ptr acutally references a valid	       */
/* subsystem control info structure.				       */
/*							       */
/* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

ssu_check_sci:
     procedure (p_sci_ptr);

dcl  p_sci_ptr pointer parameter;

dcl  SSU_ character (32) static options (constant) initial ("ssu_");

dcl  error_table_$bad_ptr fixed binary (35) external;
dcl  error_table_$null_info_ptr fixed binary (35) external;
dcl  error_table_$unimplemented_version fixed binary (35) external;

dcl  sub_err_ entry () options (variable);

dcl  (null, substr, unspec) builtin;

          if addr(p_sci_ptr) -> its.its_mod ^= ITS_MODIFIER then do;
RESIGNAL_BAD_POINTER:
	     call sub_err_ (error_table_$bad_ptr, SSU_, ACTION_CANT_RESTART, null (), (0), "^24.3b", unspec (p_sci_ptr));
	     go to RESIGNAL_BAD_POINTER;
	end;

	if p_sci_ptr = null () then do;
RESIGNAL_NULL_POINTER:
	     call sub_err_ (error_table_$null_info_ptr, SSU_, ACTION_CANT_RESTART, null (), (0), "sci_ptr");
	     go to RESIGNAL_NULL_POINTER;
	end;

	if p_sci_ptr -> sci.version = SCI_VERSION_3 then	/* all is well */
	     return;

RESIGNAL_BAD_VERSION:
	call sub_err_ (error_table_$unimplemented_version, SSU_, ACTION_CANT_RESTART, null (), (0), "^24.3b",
	     unspec (p_sci_ptr -> sci.version));
	go to RESIGNAL_BAD_VERSION;

%include its;

%include sub_err_flags;

     end ssu_check_sci;


/*  END OF:  _ssu_check_sci.incl.pl1			  *  *  *  *  *  */
