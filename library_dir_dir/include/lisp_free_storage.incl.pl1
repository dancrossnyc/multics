/* Include file describing the data related to the free storage allocation package */

dcl lisp_alloc_$alloc_fault_word ext bit(36) aligned,
    alloc_fault_word bit(36) defined ( lisp_alloc_$alloc_fault_word),
    lisp_alloc_$alloc_info bit(288) aligned ext,			/* info to save for recursiveness of lisp */

	/*  FAULT BIT MASKS FOR FAULT BITS IN ALLOC_FAULT_WORD
	    THE FAULT CODES ARE:
		6	ft3 - car or cdr of number
		5	mme4 - array oob
		4	quit
		2	alrm
		1	cput
	 */


    quit_fault bit(36) static init ("000000000000000000000000000000000100"b),
    alrm_fault bit(36) static init ("000000000000000000000000000000000010"b),
    cput_fault bit(36) static init ("000000000000000000000000000000000001"b),

    fault_mask bit(36) static init ("000000000000000000000000000000000111"b),
    lisp_alloc_$gc_blk_cntr ext fixed bin,	/* number of 16k blocks before next gc. */
    lisp_alloc_$seg_blk_cntr ext fixed bin,	/* number of 16k blocks to end of segment */
    lisp_alloc_$consptr ext ptr aligned,	/* pointer to ad tally word */
    1 consptr_ovly based (addr(lisp_alloc_$consptr)) aligned,	/* overlay to set further modification field of pointer */
      2 padding bit(66) unal,
      2 mod bit(6) unal,
    lisp_alloc_$cur_seg ext ptr aligned,	/* pointer to current allocation segment */

    1 alloc_segment based aligned,		/* structure of a free storage segment */
      2 next_seg ptr,			/* chain to next older segment */
      2 tally_word,				/* ad tally word */
	3 seg_offset bit(18) unal,		/* next address in this seg to be allocated */
	3 tally bit(12) unal,		/* decremented once for every 4 words, 16k runout */
	3 delta fixed bin(5) unal,		/* should be set to 4, the size of a cons */
      2 pad bit(36),
      2 first_allocatable_word bit(72);

/* end include file describing free storage structure */
