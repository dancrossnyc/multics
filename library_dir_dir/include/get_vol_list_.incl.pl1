/* BEGIN INCLUDE FILE - get_vol_list_.incl.pl1 */



/****^  HISTORY COMMENTS:
  1) change(86-03-12,Fawcett), approve(86-05-13,MCR7383),
     audit(86-05-27,Wallman), install(86-07-18,MR12.0-1098):
     Add support for subvolumes.
                                                   END HISTORY COMMENTS */


/* Defines structure interface to the routine get_vol_list_, which acquires
   information from the system disk_table on physical and logical volume
   names allocates the structures if needed and returns control to the
   caller.  The area_ptr in each structure is the area the structure was
   allocated in, and can be used for freeing the structure. */

/* Created November-22- 1984 by Tom Oke - MDC-ACTC. */

/* December 17, 1984 by T. Oke, include version and area_ptr. */

     dcl	   (lv_list_ptr, pv_list_ptr) ptr;

     dcl	   get_vol_list_version   char (8) static options (constant) initial ("gvlist02");

     dcl	   1 pv_list	      based (pv_list_ptr),
	     2 version	      char (8) unaligned,		/* struct version */
	     2 area_ptr	      ptr,		/* area allocated in */
	     2 pv_name_max_length fixed bin,
	     2 pv_name_count      fixed bin,
	     2 pv_info	      (1 refer (pv_list.pv_name_count)) aligned,
	       3 used	      bit (1) unaligned,	/* entry in use */
	       3 storage_system   bit (1) unaligned,	/* storage system */
	       3 permanent	      bit (1) unaligned,	/* cannot demount */
	       3 hc_accepted      bit (1) unaligned,	/* vol accpt ring 0 */
	       3 rpv	      bit (1) unaligned,
	       3 is_sub_vol	      bit (1) unaligned,
	       3 pad	      bit (4) unaligned,
	       3 device_type      fixed bin (8) unsigned unaligned,
	       3 lvx	      fixed bin unaligned,	/* index in lv_list */
	       3 drive_name	      char (8) unaligned,		/* like dska_01 */
	       3 pvname	      char (32) unaligned,
	       3 sv_num	      fixed bin (17),          /* if this is a subvolume then what number */
	       3 num_of_sv	      fixed bin (17);	/* if this is a subvolume how many */

     dcl	   1 lv_list	      based (lv_list_ptr),
	     2 version	      char (8) unaligned,		/* struct version */
	     2 area_ptr	      ptr,		/* area allocated in */
	     2 lv_name_max_length fixed bin,
	     2 lv_name_count      fixed bin,
	     2 lv_info	      (1 refer (lv_list.lv_name_count)) aligned,
	       3 used	      bit (1) unaligned,	/* in use */
	       3 hv_mounted	      bit (1) unaligned,	/* hvol OK */
	       3 public	      bit (1) unaligned,	/* public use */
	       3 mounting	      bit (1) unaligned,	/* mount in progress */
	       3 demounting	      bit (1) unaligned,	/* demount in progress */
	       3 pdirs_ok	      bit (1) unaligned,	/* can use pdirs */
	       3 prev_bootload    bit (1) unaligned,	/* can auto-accept pvs */
	       3 vacate_pdirs     bit (1) unaligned,	/* demand move pdirs */
	       3 pad	      bit (26) unaligned,
	       3 lvname	      char (32) unaligned;

/* END INCLUDE FILE - get_vol_list_.incl.pl1 */
