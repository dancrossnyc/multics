/* BEGIN include file mseg_hdr_v4.incl.pl1 */

declare
     1 mseg_hdr_v4 aligned based,         		/* message segment header format */
     2 lock bit (36) aligned,				/* standard file system lock */
     2 mseg_pattern bit (36) aligned,			/* to identify message segments */
     2 hdr_ms_access_class bit (72) aligned,		/* access class of header message */
   2 date_time_last_salvaged fixed bin (71),		/* time message segment was last salvaged */
     2 pad (2) fixed bin,
     2 first_ms_offset bit (18) aligned,		/* offset to first logical message */
     2 last_ms_offset bit (18) aligned,			/* offset to last logical message */
     2 alloc_len fixed bin,				/* length of allocation bit string */
     2 space_left fixed bin,				/* number of empty blocks */
     2 number_of_messages fixed bin,			/* number of messages in segment */
     2 block_size fixed bin,				/* message block size */
     2 switches,
     3 mip bit (1) unaligned,				/* ON if modification is in progress */
     3 os bit (1) unaligned,				/* ON if message segment was salvaged */
     3 ms_in_hdr bit (1) unaligned,			/* ON if there is a message in the header */
     3 sip bit (1) unaligned,				/* ON if salvage is in progress */
     3 pad2 bit (32) unaligned,
     2 version_number fixed bin,
     2 hdr_ms bit (64 * 36) aligned,			/* space for header message */
     2 hash_table aligned,				/* message ID hash table */
     3 last_in_bucket (0:511) bit (18) unaligned,		/* offset of last message in this hash table bucket */
     2 alloc_bits bit (0 refer (mseg_hdr_v4.alloc_len)) aligned;/* allocation bit string */

/* END include file mseg_hdr.incl.pl1 */
