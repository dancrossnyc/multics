/******************** lisp_subr_fmt.incl.pl1 ****************************/


/* Include file describing the format
   of a lisp subroutine link. This format is designed
   to appear just like a standard ft2 link, so the linker
   can do link snapping for us */


dcl 1 lisp_subr_ based aligned,
      2 subr_nargs fixed bin(17) unaligned,
      2 flags fixed bin(17) unaligned,
      2 link_ptr,			/* the its pointer will be created here */
        3 header_ptr fixed bin(17) unaligned, /* self relative pointer to definitions
				   pointer */
        3 pad bit(12) unaligned,	/* = 0 */
        3 ft2 bit(6) unaligned,	/* = o46 */
        3 exp_ptr bit(18) unaligned,	/* pointer to exp word relative to definitions */
        3 rest_of_link_ptr bit(18) unaligned,	/* = 0 */
      2 exp_word,
        3 type_pair_ptr bit(18) unaligned, /* offset of type_pair below, from def_ptr */
        3 expr_word bit(18) unaligned,	/* value of offset from symbol, will be ""b */
      2 type_pair,
        3 type_no bit(18) unaligned,	/* type of link - set to 4 for lisp */
        3 trap_ptr bit(18) unaligned,	/* for trapbforlink, set to 0 for lisp */
        3 segname_ptr bit(18) unaligned, /* relative offset of segname in definitions */
        3 entname_ptr bit(18) unaligned,/* relative offset of entname in definitions */
      2 acc_seg_name,
        3 segnamel bit(9) unaligned,	/* length of acc string */
        3 segname char(0 refer(segnamel)) unaligned,
    1 acc_ent_name based aligned,		/* entry name overlay */
      2 entnamel bit(9) unaligned,	/* length of acc string */
      2 entname char(0 refer(entnamel)) unaligned, /* entry name */
    1 lisp_subr_for_call based aligned, /* used to call through this link */
      2 subr_entry ptr;		/* this is the faulting link noted above */


/********************** end lisp_subr_fmt.incl.pl1 **********************/
