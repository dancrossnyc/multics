/* BEGIN INCLUDE FILE ... tty_buf.incl.pl1 */

/* Date Last Modified and Reason
   Created 04/19/77 by J. Stern (from part of tty.incl.pl1)
   Modified January 1978 by Robert Coren and Larry Johnson for variable-size buffers
   Modified 2/6/78 by Robert Coren to make circular_queue size settable
   Modified Aug 78 by J. Nicholls to move the buffer block format to a file of its own
   and wtcb to its own plus other modification for ring 0 multiplexing, tty_buffer_block.incl.pl1
   Modified 7/17/79 by B. Greenberg for echo negotiation meters.
   Modified November 1979 by C. Hornig for MCS tracing.
   Modified December 1979 by Robert Coren to add FNP channel lock meter
   Modified February 1980 by Robert Coren to remove all references to circular buffer
   Modified March 1980 by Robert Coren to reorganize metering information
   Modified December 1980 by Robert Coren to add FNP-specific events
   Modified 24 March 1982, W. Olin Sibert, to add mcs_timer support, recoverable_error_severity
   Modified November 1984 by Robert Coren to add tty_area_lock
*/

dcl  ttybp ptr,
     tty_buf$ ext static,				/* tty buffer segment */
     tty_ev fixed bin int static options (constant) init (57), /* event used for wait and notify */
     abs_buf_limit fixed bin (18) static options (constant) init (64), /* minimum number of words we will leave free */
     input_bpart fixed bin (18) static options (constant) init (2), /* fraction of bleft we will allow for input */
     output_bpart fixed bin (18) static options (constant) init (4); /* fraction of bleft we will allow for output */


dcl  qblock_size fixed bin int static options (constant) init (16); /* size in words of a delay queue block */
dcl  bsizec fixed bin int static options (constant) init (60); /* number of characters in smallest buffer */
dcl  buf_per_second fixed bin int static options (constant) init (10); /* for figuring out max. buffer size based on speed */

dcl  FNP_DUMP_PATCH_EVENT fixed bin int static options (constant) init (58);
dcl  FNP_METER_EVENT fixed bin int static options (constant) init (59);
dcl  TTY_AREA_LOCK_EVENT bit (36) aligned int static options (constant) init ("74"b3);

dcl 1 tty_buf aligned based (ttybp),			/* declaration of tty buffer seg */
    2 slock bit (36),				/* per system lock */
    2 absorig fixed bin (24),				/* abs address of this seg */
    2 borig bit (18),				/* index of start of buffer area */
    2 bleft fixed bin (18),				/* words left in pool */
    2 free bit (18),				/* pointer to start of free pool */
    2 fnp_config_flags (8) bit (1) unal,		/* flag(i) ON if fnp(i) configured */
    2 padb1 bit (28) unaligned,
    2 lct_ptr ptr,					/* pointer to logical channel table */

    2 nrawread fixed bin (35),			/* number of raw chars input, total */
    2 nrawwrite fixed bin (35),			/* number of raw characters output */
    2 ninchars fixed bin (35),			/* total input chars after conversion */
    2 noutchars fixed bin (35),			/* total output chars before conversion */
    2 readblocked fixed bin (35),			/* number of times go input blocked */
    2 nblocked fixed bin (35),			/* number of times process output blocked */
    2 minbuf fixed bin (18),				/* min output buffer size */
    2 totbuf fixed bin (35),				/* divide by nblocked to get ave buffer size */

    2 preconverted fixed bin (35),			/* number of converted chars held in tty_buf */
    2 input_restart fixed bin,			/* number of times tty_read had to start over */
    2 output_restart fixed bin,			/* number of times tty_write has had to start over */
    2 output_buffer_overflow fixed bin,			/* number of times tty_write has run out of buffers */
    2 read_time fixed bin (71),			/* total time spent in tty_read */
    2 write_time fixed bin (71),			/* total time spent in tty_write */

    2 read_calls fixed bin (35),			/* number of calls to tty_read */
    2 write_calls fixed bin (35),			/* number of calls to tty_write */
    2 bfx fixed bin,				/* used in calls to iobm */
    2 nquits fixed bin (35),				/* number of quits */
    2 space_needed_data,
      3 space_needed bit (1) unal,			/* space_needed bit on in at least 1 lcte */
      3 space_needed_calls fixed bin (34) unal,		/* meter of uses of this facility */
    2 space_lock_count fixed bin (35),			/* count of times tty_buf.slock locked */
    2 space_lock_wait_count fixed bin (35),		/* count of times necessary to loop to lock it */
    2 space_lock_wait_time fixed bin (35),		/* total time looped trying to lock it */

    2 alloc_calls fixed bin (35),			/* total number of allocations performed in tty_buf */
    2 free_calls fixed bin (35),			/* total number of freeings in tty_buf */
    2 alloc_time fixed bin (35),			/* time spent masked in tty_space_man$get entries */
    2 free_time fixed bin (35),			/* time spent masked in tty_space_man$free entries */
    2 total_alloc_steps fixed bin (35),			/* number of steps thru free chain while doing above */
    2 alloc_failures fixed bin (35),			/* number of unsuccessful attempts to allocate space */
    2 cumulative_input_space fixed bin (71),		/* cumulative amount of space allocated for input */

    2 cumulative_output_space fixed bin (71),		/* cumulative amount of space allocated for output */
    2 cumulative_control_space fixed bin (71),		/* cumulative amount of space allocated by tty_space_man$get_space */
    2 input_space_updates fixed bin (35),		/* number of increments to cumulative_input_space */
    2 output_space_updates fixed bin (35),		/* number of increments to cumulative_output_space */
    2 control_space_updates fixed bin (35),		/* number of increments to cumulative_control_space */
    2 minimum_free_space fixed bin (18),		/* smallest amount of free space ever available */

    2 current_input_space fixed bin (18),		/* amount of space currently allocated for input */
    2 current_output_space fixed bin (18),		/* amount of space currently allocated for output */
    2 current_control_space fixed bin (18),		/* amount of space currently allocated by get_space */
    2 tty_lock_calls fixed bin (35),			/* number of calls to tty_lock$lock entries */
    2 found_channel_locked fixed bin (35),		/* number of times tty_lock found channel already locked */
    2 max_wait_time fixed bin (35),			/* longest time waited for any channel lock */
    2 total_wait_time fixed bin (71),			/* total amount of time spent waiting for channel locks */

    2 echo_neg_time fixed bin (71),			/* cumulative time spent doing echo negotiation */
    2 echo_neg_interrupts fixed bin (35),		/* Echo-negotiated shipments */
    2 echo_neg_r0_chars fixed bin (35),			/* Chars echoed by ring 0 */
    2 echo_neg_mux_chars fixed bin (35),		/* Chars echoed by mux */
    2 echo_neg_sndopt_restarts fixed bin (35),		/* Echo reinits */
    2 echo_neg_mux_nonecho fixed bin (35),
    2 echo_neg_entries fixed bin (35),			/* Entries into negotiate */

    2 echo_neg_mux_inhibit bit (1) aligned,		/* For testing */
    2 n_queued_interrupts fixed bin (35),		/* number of interrupts queued by tty_lock */
    2 trace unaligned,				/* tracing information */
      3 flags,
      4 enable bit,					/* global tracing control */
      4 default_mode bit,				/* whether to trace channels by default */
      4 read bit,					/* read */
      4 write bit,					/* write */
      4 data bit,					/* buffers on reads and writes */
      4 control bit,				/* control, priv_control, and hpriv_control */
      4 modes bit,					/* (get set check)_modes */
      4 interrupt bit,				/* interrupt, interrupt_later */
      4 init bit,					/* init_multiplexer, terminate_multiplexer */
      4 start bit,					/* start, stop */
      4 shutdown bit,				/* shutdown */
      4 space_man bit,				/* tty_space_man$* */
      4 pad_flags bit (6),
      3 data_offset bit (18),				/* offset of tracing data */

    2 recoverable_error_severity fixed bin,		/* Syserr severity for recoverable MCS errors */

    2 timer_lock bit (36) aligned,			/* Lock owned by mcs_timer */
    2 next_timer_offset bit (18) aligned,		/* Offset of next timer to come due */
    2 timer_count fixed bin,				/* Number of timers outstanding */
    2 timer_process bit (36) aligned,			/* Who is doing timers? */

    2 timer_ev_chn fixed bin (71),			/* How get get him */
    2 timer_lock_wait_time fixed bin (71),		/* CPU time spent spinning on timer lock */

    2 timer_lock_count fixed bin (35),			/* Number of times timer lock locked */
    2 timer_lock_wait_count fixed bin (35),		/* Number of times imer lock waited on */
    2 timer_call_time fixed bin (71),			/* CPU time spent in call side timer operations */

    2 timer_polling_time fixed bin (71),		/* CPU time spent polling (including channel_manager) */
    2 timer_set_calls fixed bin (35),			/* Number of calls to mcs_timer$set, set_wired */
    2 timer_reset_calls fixed bin (35), 		/* Number of calls to mcs_timer$reset, reset_wired */

    2 timer_change_calls fixed bin (35),		/* Number of calls to mcs_timer$change, change_wired */
    2 timer_poll_calls fixed bin (35),			/* Number of calls to mcs_timer$poll */
    2 timer_error_calls fixed bin (35), 		/* Number of mcs_timer calls ending with recoverable errors */
    2 timer_duplicate_pollings fixed bin (35),		/* Number of timer polling found in progress on other CPU */

    2 tty_area_lock like hc_fast_lock,			/* to prevent contention in allocating/freeing in tty_area */

    2 pad2 (13) fixed bin (35),

    2 free_space fixed bin;				/* start of free space region */


%include hc_fast_lock;

/* END INCLUDE FILE ... tty_buf.incl.pl1 */
