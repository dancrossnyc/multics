

		/* STATIC DECLARATIONS */

dcl 1 basic_arg static,
     2 pt ptr init(null()),	/* initialized to address of basic structure */
     2 zeros bit(144) init(""b);
dcl 1 name_arg static,
     2 pt ptr init(null()),	/* set each time to pt to varying char string containing name of program to be called */
     2 type fixed bin init(6),
     2 zeros bit(108) init(""b);
dcl 1 temp_arg static,
     2 pt ptr init(null()),	/* always null */
     2 type fixed bin init(3),
     2 zeros bit(108) init(""b);
dcl 1 value_arg static,
     2 pt ptr init(null()),	/* always null */
     2 type fixed bin init(1),
     2 zeros bit(108) init(""b);
dcl 1 upper_value_arg static,
     2 pt ptr init(null()),	/* always null */
     2 type fixed bin init(2),
     2 zeros bit(108) init(""b);
dcl 1 status_arg static,
     2 pt ptr init(null()),	/* always null */
     2 type fixed bin init(3),
     2 off1 fixed bin init(40),
     2 zeros bit(72) init(""b);

dcl 1 pr1_struct static,
     2 pr1 fixed bin init(1),
     2 pointer_no bit(3),
     2 lock fixed bin init(0),
     2 switch fixed bin init(0),
     2 segno fixed bin,
     2 offset fixed bin,
     2 reset fixed bin;
dcl 1 x5_struct static,
     2 x5 fixed bin init(15),
     2 reg_no bit(4),
     2 lock fixed bin init(0),
     2 already_there fixed bin,
     2 contains fixed bin init(0),
     2 null_ptr ptr init(null()),
     2 fill bit(18) unaligned init((18)"0"b),
     2 literal bit(18) unaligned;
dcl 1 aq_struct static,
     2 aq fixed bin init(3),
     2 reg_no bit(4),
     2 lock fixed bin init(0),
     2 already_there fixed bin,
     2 contains fixed bin init(0),
     2 null_ptr ptr init(null()),
     2 fill bit(18) unaligned init((18)"0"b),
     2 literal bit(18) unaligned;

dcl 1 basic_struct static,
     2 type fixed bin init(1),
     2 operand_no fixed bin init(0),
     2 lock fixed bin init(0),
     2 seg fixed bin,
     2 offset fixed bin,
     2 send_receive fixed bin init(0);
dcl 1 atd_type9 static,
     2 header (4) fixed bin init(112,0,0,9),
     2 repl_ptr (2) ptr init((2)null()),
     2 fill1  bit(108) init(""b),
     2 file_key_info,
	3 fb (6) fixed bin init(0,0,0,200,0,0),
	3 flags1 bit(36) init("000000100100000000010000000100000000"b),
	3 flags2 bit(36) init(""b),
	3 seg fixed bin init(1000),
	3 off fixed bin,
     2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
dcl 1 catid_type9 static,
     2 header (4) fixed bin init(112,0,0,9),
     2 repl_ptr (2) ptr init((2)null()),
     2 fill1  bit(108) init(""b),
     2 file_key_info,
	3 fb (6) fixed bin init(0,0,0,0,0,0),
	3 flags1 bit(36) init(""b),
	3 flags2 bit(36) init(""b),
	3 seg fixed bin,
	3 off fixed bin,
     2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
dcl 1 comp6_type9 static,
     2 header (4) fixed bin init(112,0,0,9),
     2 repl_ptr (2) ptr init((2)null()),
     2 fill1  bit(108) init(""b),
     2 file_key_info,
	3 fb1 (3) fixed bin init(0,0,0),
	3 size fixed bin init(0),
	3 places_left fixed bin,
	3 places_right fixed bin init(0),
	3 flags1 bit(36) init("010000100100001001000000000000000000"b),
	3 flags2 bit(36) init(""b),
	3 seg fixed bin init(0),
	3 off fixed bin,
     2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
dcl 1 fkey_type9 static,
     2 header (4) fixed bin init(112,0,0,9),
     2 repl_ptr (2) ptr init((2)null()),
     2 fill1  bit(108) init(""b),
     2 file_key_info,
	3 fb1 (3) fixed bin init(0,0,0),
	3 size fixed bin init(0),
	3 fb2 (2) fixed bin init(0,0),
	3 flags1 bit(36) init(""b),
	3 flags2 bit(36) init(""b),
	3 seg fixed bin,
	3 off fixed bin,
     2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
dcl 1 type19 static,
     2 wd0 fixed bin init(38),
     2 wd1 fixed bin init(0),
     2 wd2 fixed bin init(0),
     2 wd3 fixed bin init(19),
     2 wd4 fixed bin init(18), 	/* verb number */
     2 e fixed bin init(1),		/* one operand after TO */
     2 h fixed bin,
     2 j fixed bin,
     2 a bit(3),
     2 b bit(1),
     2 c bit(1),
     2 d bit(2),
     2 f bit(2),
     2 g bit(2),
     2 k bit(5);

dcl 1 ioerror static,
	2 cobol_code fixed bin,
	2 retry_tag fixed bin,
	2 is_tag fixed bin,
	2 ns_tag fixed bin,
	2 type1_ptr ptr,
	2 mode fixed bin;

dcl unique_bits_vstring char(12) varying static init("unique_bits_");
dcl unique_chars_vstring char(13) varying static init("unique_chars_");
dcl get_pdir_vstring char(9) varying static init("get_pdir_");


/* EXTERNAL ENTRY NAMES */

dcl cobol_ioop_util$set_stz entry;
dcl cobol_make_tagref entry(fixed bin, fixed bin, ptr);
dcl cobol_ioop_util$disp entry(fixed bin);
dcl cobol_ioop_util$lda entry(fixed bin);
dcl cobol_ioop_util$tra entry(fixed bin);
dcl cobol_ioop_util$open_clean_up entry(ptr, fixed bin, fixed bin);
dcl cobol_ioop_util$ldaldx5 entry(fixed bin, fixed bin);
dcl cobol_ioop_util$set_fsb entry(fixed bin(31), fixed bin);
dcl cobol_gen_ioerror entry(ptr, ptr);
dcl cobol_gen_ioerror$finish_up entry(ptr, ptr);
dcl cobol_call_op entry(fixed bin,  fixed bin);
dcl cobol_reg_manager$after_op entry(fixed bin);
dcl cobol_set_fsbptr entry(ptr);
dcl cobol_alloc$stack entry(fixed bin,fixed bin,fixed bin);
dcl cobol_read_ft entry(fixed bin,ptr);
dcl cobol_read_rand entry(fixed bin,char(5),ptr);
dcl cobol_define_tag entry(fixed bin);
dcl cobol_iomode entry(ptr,ptr,fixed bin,fixed bin,bit(1) aligned);

/* sub-generators */
dcl cobol_move_gen entry(ptr);
dcl cobol_file_util$open entry(ptr, fixed bin);
dcl cobol_io_util$move_lit entry(bit(3) aligned,fixed bin,fixed bin,char(*));
dcl cobol_iocall entry(ptr,ptr);
dcl cobol_io_util$move entry(bit(3) aligned,fixed bin,fixed bin,bit(3) aligned,fixed bin,fixed bin);
dcl cobol_io_util$file_desc entry(fixed bin(24));
dcl cobol_open_util$make_pdir_path entry(fixed bin,fixed bin,fixed bin,fixed bin);

/* BUILTIN FUNCTIONS */

	/*****	Declaration for builtin function	*****/

dcl	(substr,mod,binary,fixed,addr,addrel,rel,length,
	string,unspec,null,index)		builtin;





%include cobol_file_table;
%include cobol_file_key;
%include cobol_linage_rec;
%include cobol_type1;
%include cobol_type9;
%include cobol_type12;
%include cobol_type19;
%include cobol_fixed_common;
%include cobol_ext_;
%include cobol_;

