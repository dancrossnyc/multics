
/*	BEGIN INCLUDE FILE ... pascal_fsb.incl.pl1 ... 5 May 1980 JMAthane *	*/



     
/****^  HISTORY COMMENTS:
  1) change(86-09-16,JPFauche), approve(86-09-16,MCR7521),
     audit(86-09-16,Martinson), install(86-11-12,MR12.0-1208):
     Added breakall mode bits to support version 8.03 of pascal.
                                                   END HISTORY COMMENTS */

dcl	   fsb_ptr	      ptr;

     dcl	   1 pascal_fsb	      based (fsb_ptr) aligned,/* PASCAL FILE STATUS BLOCK */
	     2 allocated_size     fixed bin (35),	/* size in words (=0 if not allocated by operators) */
	     2 next_element	      bit (18) unal,	/* offset of next fsb in array */
	     2 global_flags	      unal,
	       3 pad	      bit (1) unal,
	       3 reset_break_all  bit (1) unal,		/* set if mode breakall set by call to breakall_on */
	       3 break_all_mode   bit (1) unal,		/* = 1 if file in break_all_mode */
	       3 standard_file_used bit (1) unal,	/* =1 if used (standard_files only) */
	       3 interactive_file bit (1) unal,		/* =1 if file was open in interactive mode */
	       3 array_of_file    bit (1) unal,		/* = 1 if element of array */
	       3 permanent_file   bit (1) unal,		/* = 1 if permanent file */
	       3 static_file      bit (1) unal,		/* = 1 if static file */
	       3 local_file	      bit (1) unal,		/* = 1 if local file */
	       3 get_next_char    bit (1) unal,		/* = 1 if next char to read */
	       3 attached_by_fconnect bit (1) unal,	/* = 1 if attached by fconnect */
	       3 vfile_switch     bit (1) unal,		/* = 1 if input is a segment */
	       3 file_created     bit (1) unal,		/* (if local_file = 1) = 1 if temp seg created */
	       3 standard_file    bit (1) unal,		/* =1 if standard input or output */
	       3 fsb_is_chained   bit (1) unal,		/* =1 if fsb is chained */
	       3 line_is_complete bit (1) unal,		/* if = 1 then end of line is in the buffer */
	       3 file_is_open     bit (1) unal,		/* pascal open indicator */
	       3 last_line	      bit (1) unal,		/* if = 1 last line is in the buffer */
	     2 owner_stack	      ptr,		/* ptr to the stack frame of the owner */
	     2 eof	      fixed bin (35),	/* end of file if ^= 0 (PASCAL EOF) */
	     2 file_status	      fixed bin (35),	/* opening mode (internal pascal_code_) */
	     2 rec_length	      fixed bin (21),	/* record length (length of the PASCAL WINDOW) */
	     2 SOL_fstatus	      fixed bin (35),	/*  */
	     2 system_ptr	      ptr,		/* ptr to the MULTICS iocb */
	     2 file_name	      char (32),		/* PASCAL file name */
	     2 record_counter     fixed bin (35),	/* nbre of read/written records/lines */
	     2 SOL_fpos	      fixed bin (35),
	     2 SOL_fsize	      fixed bin (35),
	     2 SOL_fllength	      fixed bin (35),
	     2 owner_link	      ptr,		/* ptr to link section of owner */
	     2 owner_symbol	      ptr,		/* ptr to symbol section of owner */
	     2 file_is_text	      fixed bin (35),	/* if ^= 0 then PASCAL TEXT file */
	     2 eoln	      fixed bin (35),	/* TEXT file EOLN if ^= 0 */
	     2 buff_index	      fixed bin (21),	/* index in the TEXT file internal io buffer */
	     2 buff_max	      fixed bin (21),	/* length of usefull info in the TEXT file internal input buffer */
	     2 buff_len	      fixed bin (21),	/* length of the TEXT file internal io buffer */
	     2 multics_error_code fixed bin (35),	/* last Multics error code (if non zero) */
	     2 next_fsb_ptr	      ptr,		/* ptr to the next fsb */
	     2 reserved_2	      (2) fixed bin (35),	/* (future use) */
	     2 uid	      bit (70),		/* unique id of fsb */
	     2 window	      char (0 refer (rec_length)) unal; /* PASCAL WINDOW */


     dcl	   1 pascal_text_fsb      based (fsb_ptr) aligned,/* PASCAL TEXT FILE STATUS BLOCK */
	     2 text_fsb_fix,
	       3 file_info_1      (30) fixed bin (35),
	       3 buff_len_	      fixed bin (35),
	       3 file_info_2      (7) fixed bin (35),
	       3 text_window,
	         4 window_pad     bit (27) unal,
	         4 window_char    char (1) unal,	/* PASCAL TEXT file window */
	     2 buffer	      char (0 refer (pascal_text_fsb.buff_len_)); /* PASCAL TEXT files internal io buffer */



/*	END INCLUDE FILE ...pascal_fsb.incl.pl1			*/

