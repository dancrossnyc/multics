/* BEGIN INCLUDE FILE mrds_debug_names.incl.pl1     Jim Gray 8/7/79 */

/* this include file associates module names with debug switches
   that are stored in the data segment mrds_debug_
   each module has it's own bit(9) debug switch, to define for various
   debug actions, with new module names to be added to the end
   of this list using the next in order array index in mrds_debug_
   the convention for naming is db_{module's full name}
   for the defined declaration over mrds_debug_$switch.
   module.name array is then changed to reflect the new
   number of modules, with the full module name added to the bottom
   of the initialize list for the name array.
   the module name array is used by the command level interface that sets/resets
   the current status of the debug switches for each module.
   the modules themselves use the db_{module name} declared variable for
   that module to interagate the bits for proper debug action to take.
   the definition of the meaning of the 9-bits is up to each individual module's
   designer. */


/*
   HISTORY

   80-11-12 Davids: added db_mus_mod_ubtup

   80-11-13 Davids: added db_mu_sec_get_tuple and db_mu_sec_get_tid

   80-12-15 Jim Gray :  added  mrds_dsl_set_fscope  to  display  non
   error  info  about  being queued, and request being granted after
   being queued.

   81-01-15 Jim Gray : added  mu_concurrency_control  bit  to  allow
   running  MR8  and  MR9 mrds against the same database at the same
   time.

   81-02-02  Jim  Gray  :  added  bit  for  mrds_rst_dmdm  to  allow
   displaying internal tuple format bit offset, rather than the user
   view.

   81-02-06 Jim Gray : added bit for  new  mu_open_name_manager,  to
   dump  an  element  from  the  list, when display_open_names entry
   called with switch set.

   81-05-20 Jim Gray : added bit for  mrds_dsl_where_clause  display
   of sub_err_ messages, when cross domain compare occurs.

   81-06-17 Jim Gray : added bit for mu_open_iocb_manager to display
   iocb slot and rel name.

   81-07-08 Jim Gray : added comment for bit 4 in mrds_dsl_permute

   81-07-17 Jim Gray : added comment for bit 5 in mrds_dsl_permute

   81-07-18 Jim Gray : added bit 1 for  mrds_dsl_gen_srch_prog  that
   allows  key  searches, other than than specified by permute to be
   done as comparisons instead.

   81-07-22  Jim   Gray   :   added   comment   about   bit   2   in
   mrds_dsl_gen_srch_prog
*/

declare (
         db_mrds_dsl_eval_expr bit (9) unal defined (mrds_debug_$switch (1)),
         db_mrds_dsl_get_token bit (9) unal defined (mrds_debug_$switch (2)),
         db_mrds_dsl_permute bit (9) unal defined (mrds_debug_$switch (3)),
         db_mrds_dsl_optimize bit (9) unal defined (mrds_debug_$switch (4)),
         db_mrds_dsl_search bit (9) unal defined (mrds_debug_$switch (5)),
         db_mrds_dsl_translate bit (9) unal defined (mrds_debug_$switch (6)),
         db_mu_retrieve bit (9) unal defined (mrds_debug_$switch (7)),
         db_mrds_dsl_open bit (9) unal defined (mrds_debug_$switch (8)),
         db_mrds_dsl_close bit (9) unal defined (mrds_debug_$switch (9)),
         db_mrds_dsl_init_res bit (9) unal defined (mrds_debug_$switch (10)),
         db_mu_sec_init_res bit (9) unal defined (mrds_debug_$switch (11)),
         db_mus_mod_ubtup bit (9) unal defined (mrds_debug_$switch (12)),
         db_mu_sec_get_tuple bit (9) unal defined (mrds_debug_$switch (13)),
         db_mu_sec_get_tid bit (9) unal defined (mrds_debug_$switch (14)),
         db_mrds_dsl_set_fscope bit (9) unal defined (mrds_debug_$switch (15)),
         db_mu_concurrency_control bit (9) unal defined (mrds_debug_$switch (16)),
         db_mrds_rst_dmdm bit (9) unal defined (mrds_debug_$switch (17)),
         db_mu_open_name_manager bit (9) unal defined (mrds_debug_$switch (18)),
         db_mrds_dsl_where_clause bit (9) unal defined (mrds_debug_$switch (19)),
         db_mu_open_iocb_manager bit (9) unal defined (mrds_debug_$switch (20)),
         db_mrds_dsl_gen_srch_prog bit (9) unal defined (mrds_debug_$switch (21))
         ) ;

/* list of known module names, with index into name array
   the same as that into mrds_debug_$switch,
   number is the current count of defined module names,
   name is the modules full name. */

declare 1 module options (constant) internal static,
        2 number fixed bin init (21),
        2 name char (32) dimension (21) init (
         "mrds_dsl_eval_expr",			/* 1 => display value of each expression */
         "mrds_dsl_get_token",			/* 1 => display the current token */
         "mrds_dsl_permute",				/* each 1 => lost cost path found,
						   2 => reverse partial path
						   3 => use range order for path
						   4 => display access method costs
						   5 => display details of final low cost path */
         "mrds_dsl_optimize",				/* 1 => pred tree,
						   2 => paths to consider, 3 => calc_cost on */
         "mrds_dsl_search",				/* 1 => display each tuple located */
         "mrds_dsl_translate",			/* 1 => display the search program */
         "mu_retrieve",				/* 1 => display values compared, 2 => display tuple data */
         "mrds_dsl_open",				/* 1 => allow cleanup sub_error_ */
         "mrds_dsl_close",				/* 1 => allow cleanup sub_error_ */
         "mrds_dsl_init_res",				/* 1 => allow cleanup sub_error_ */
         "mu_sec_init_res",				/* 1 => allow cleanup sub_error_ */
         "mus_mod_ubtup",				/* 1 => consistency checking between the old
						   and new tuple during modifies will be done */
         "mu_sec_get_tuple",				/* 1 => attribute values
						   will be zeroed in the tuple structure
						   is don't have read permission. */
         "mu_sec_get_tid",				/* 1 => read permission to the key
						   is checked (if db is secured) */
         "mrds_dsl_set_fscope",			/* 1 => display being queued,
						   and request granted from queue messages */
         "mu_concurrency_control",			/* 1 => allow both dbc and db.control segs under db
						   so can test both MR8 and MR9 mrds
						   against the same database at the same time */
         "mrds_rst_dmdm",				/* 1 => allow internal form of bit offset value
						   for attributes to be displayed, rather than user view */
         "mu_open_name_manager",			/* 1 => dump mrds_open_name tree node structure,
						   when display_open_names entry called */
         "mrds_dsl_where_clause",			/* 1 => display details of cross domain compares */
         "mu_open_iocb_manager",			/* 1 => display relation and slot getting iocb for */
         "mrds_dsl_gen_srch_prog"			/* 1 => do additional conditions as sequential, not key searches
						   when the original access was a key,
						   and the additional conditions can be done as key also
						   2 => force key searches, regardless of strategy
						   used to decide between compare or key search */
         ) ;

declare  mrds_debug_$switch (1:400) bit (9) unal ext ;	/* data segment debug array */

/* END INCLUDE FILE mrds_debug_names.incl.pl1 */

