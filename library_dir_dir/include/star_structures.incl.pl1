/* BEGIN INCLUDE FILE . . . star_structures.incl.pl1 */

/* This include file contains structures for the hcs_$star_,
   hcs_$star_list_ and hcs_$star_dir_list_ entry points.

   Written 23 October 1978 by Monte Davidoff.
   Modified January 1979 by Michael R. Jordan to use unsigned and different pointers for different structures.
   Modified June 1981 by C. Hornig to count link pathnames more efficiently.
*/

/* automatic */

declare  star_branch_count fixed binary;		/* hcs_$star_list_, hcs_$star_dir_list_: matching branch count */
declare  star_entry_count fixed binary;			/* hcs_$star_: number of matching entries */
declare  star_entry_ptr pointer;			/* hcs_$star_: pointer to array of entry information */
declare  star_list_branch_ptr pointer;			/* hcs_$star_list_, hcs_$star_dir_list_: ptr to array of info */
declare  star_link_count fixed binary;			/* hcs_$star_list_, hcs_$star_dir_list_: matching link count */
declare  star_linkx fixed binary;			/* hcs_$star_list_, hcs_$star_dir_list_: index into star_links */
declare  star_names_ptr pointer;			/* hcs_$star_: pointer to array of entry names */
declare  star_list_names_ptr pointer;			/* hcs_$star_list_, hcs_$star_dir_list_: ptr to entry names */
declare  star_select_sw fixed binary (3);		/* hcs_$star_list_, hcs_$star_dir_list_: what info to return */

/* based */

/* hcs_$star_ entry structure */

declare 1 star_entries (star_entry_count) aligned based (star_entry_ptr),
        2 type fixed binary (2) unsigned unaligned,
						/* storage system type */
        2 nnames fixed binary (16) unsigned unaligned,
						/* number of names of entry that match star_name */
        2 nindex fixed binary (18) unsigned unaligned;
						/* index of first name in star_names */

/* hcs_$star_ name structure */

declare  star_names (sum (star_entries (*).nnames)) char (32) based (star_names_ptr);

/* hcs_$star_list_ branch structure */

declare 1 star_list_branch (star_branch_count + star_link_count) aligned based (star_list_branch_ptr),
        2 type fixed binary (2) unsigned unaligned,
						/* storage system type */
        2 nnames fixed binary (16) unsigned unaligned,
						/* number of names of entry that match star_name */
        2 nindex fixed binary (18) unsigned unaligned,
						/* index of first name in star_list_names */
        2 dtcm bit (36) unaligned,			/* date-time contents of branch were last modified */
        2 dtu bit (36) unaligned,			/* date-time branch was last used */
        2 mode bit (5) unaligned,			/* user's access mode to the branch */
        2 raw_mode bit (5) unaligned,			/* user's ACL access mode */
        2 master_dir bit (1) unaligned,			/* is branch a master directory */
        2 pad bit (7) unaligned,
        2 records fixed binary (18) unsigned unaligned;
						/* records used by branch */

/* hcs_$star_dir_list_ branch structure */

declare 1 star_dir_list_branch (star_branch_count + star_link_count) aligned based (star_list_branch_ptr),
        2 type fixed binary (2) unsigned unaligned,
						/* storage system type */
        2 nnames fixed binary (16) unsigned unaligned,
						/* number of names of entry that match star_name */
        2 nindex fixed binary (18) unsigned unaligned,
						/* index of first name in star_list_names */
        2 dtem bit (36) unaligned,			/* date-time directory entry of branch was last modified */
        2 pad bit (36) unaligned,
        2 mode bit (5) unaligned,			/* user's access mode to the branch */
        2 raw_mode bit (5) unaligned,			/* user's ACL access mode */
        2 master_dir bit (1) unaligned,			/* is branch a master directory */
        2 bit_count fixed binary (24) unaligned;
						/* bit count of the branch */

/* hcs_$star_list_ and hcs_$star_dir_list_ link structure */

declare 1 star_links (star_branch_count + star_link_count) aligned based (star_list_branch_ptr),
        2 type fixed binary (2) unsigned unaligned,
						/* storage system type */
        2 nnames fixed binary (16) unsigned unaligned,
						/* number of names of entry that match star_name */
        2 nindex fixed binary (18) unsigned unaligned,
						/* index of first name in star_list_names */
        2 dtem bit (36) unaligned,			/* date-time link was last modified */
        2 dtd bit (36) unaligned,			/* date-time the link was last dumped */
        2 pathname_len fixed binary (18) unsigned unaligned,
						/* length of the pathname of the link */
        2 pathname_index fixed binary (18) unsigned unaligned;
						/* index of start of pathname in star_list_names */

/* hcs_$star_list_ and hcs_$star_dir_list_ name array */

declare  star_list_names char (32) based (star_list_names_ptr)
	dimension (star_links (star_branch_count + star_link_count).nindex
	 + star_links (star_branch_count + star_link_count).nnames
	 + divide (star_links (star_branch_count + star_link_count).pathname_len + 31, 32, 17, 0)
	   * binary (
	     (star_links (star_branch_count + star_link_count).type = star_LINK)
	     & (star_select_sw >= star_LINKS_ONLY_WITH_LINK_PATHS), 1));

/* hcs_$star_list_ and hcs_$star_dir_list_ link pathname */

declare  star_link_pathname char (star_links (star_linkx).pathname_len)
         based (addr (star_list_names (star_links (star_linkx).pathname_index)));

/* internal static */

/* star_select_sw values */

declare  star_LINKS_ONLY fixed binary (2) internal static options (constant) initial (1);
declare  star_BRANCHES_ONLY fixed binary (2) internal static options (constant) initial (2);
declare  star_ALL_ENTRIES fixed binary (2) internal static options (constant) initial (3);
declare  star_LINKS_ONLY_WITH_LINK_PATHS
         fixed binary (3) internal static options (constant) initial (5);
declare  star_ALL_ENTRIES_WITH_LINK_PATHS
         fixed binary (3) internal static options (constant) initial (7);

/* storage system types */

declare  star_LINK fixed binary (2) unsigned internal static options (constant) initial (0);
declare  star_SEGMENT fixed binary (2) unsigned internal static options (constant) initial (1);
declare  star_DIRECTORY fixed binary (2) unsigned internal static options (constant) initial (2);

/* END INCLUDE FILE . . . star_structures.incl.pl1 */
