/*

	The procedure cobol_start_gen generates code which realizes the COBOL
start statement.

	START fn id eos

		eos	b=0	no INVALID
			   1	INVALID

			a=000	no KEY
			  001	KEY

			d=00	=
			  01	>=
			  10	>

			e	key number

			f=00	no NOT
			  01	NOT

	1 mp based(mp_ptr)
	2  n	fixed bin
	2  pt(0 refer(mp.n)) ptr

		pt(1)	type-1("START")
		pt(2)	type-12(file-name)
		pt(3)	type-9(key, if end_stmt.a="1"b)
		pt(n)	type-19(eos)

Flow Chart

TAG(ioerror.retry_tag):

	OP21(init_start,ntag);GEN_IOERROR

TAG(ntag):

	if	file_table.external
		|
		file_table.open_out

	then	do;	INCR_NTAG

			OP54(delete_error,ntag);GEN_IOERROR

TAG(ntag):

		end;

	alt_sw =	file_table.organization = 3
		&
		file_table.alternate_keys ^= 0

	seek_head_sw = "0"b

	if end_stmt.a ^= "0"b
	then	do;	if end_stmt.d = "00"b
			then	if	WHOLE_KEY
				then;
				else	seek_head_sw = "1"b;
			else	seek_head_sw = "1"b;
		end;

	MOVE_KEY_TO_FSB

	if	^seek_head_sw
	then	do;	if alt_sw then call alt_start

			INCR_NTAG

			SET_FSBPTR;OP67(read_seek_key,ntag);GEN_IOERROR

TAG(ntag):
		end;
	else	do;	if alt_sw then call alt_start

			INCR_NTAG

			SET_FSBPTR;
			if alt_sw
			then OP83(alt_start_control,ntag);
			else OP23(start_control,ntag);
			GEN_IOERROT;

TAG(ntag):
		end;


	if alt_sw then IO_UTIL$FILE_DESC;OP79(alt_start,0)

	return;

alt_start:	proc;

	IO_UTIL$FILE_DESC
	IO_UTIL$KEY_NUM
	OP82(alt_seek_key,0)

end;

*/

%include cobol_opr_start;

