" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1981 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************


" *  *  *  *  *  *  *  *  *  *  *  *  *  *  **  *  *  *  *  *  *  *  *  *  *  * "
"								"
" N__a_m_e_s:  pnotice_mlr_, pnotice_mrl_							"
"								"
"   This subroutine uses the MLR and MRL machine instructions to move a source	"
" character string to a target location.  The appropriate entry point must be	"
" to ensure proper direction of movement when the source overlaps the target.	"
" The figure below shows which to use:					"
"								"
"				MLR				"
"								"
"		        target					"
"		 _________|__________				"
"		/		\				"
"		 _____________________________			"
"		|__________|__________|_________|			"
"								"
"			\___________________/			"
"				|				"
"			         source				"
"								"
"				MRL				"
"								"
"		        source					"
"		 _________|__________				"
"		/		\				"
"		 _____________________________			"
"		|__________|__________|_________|			"
"								"
"			\___________________/			"
"				|				"
"			         target				"
"								"
"								"
"								"
" U__s_a_g_e								"
"								"
"     declare pnotice_mlr_ (ptr, fixed bin(21), ptr, fixed bin(21));		"
"     call pnotice_mlr_ (Psource, Lsource, Ptarget, Ltarget);			"
"								"
"	or							"
"								"
"     declare pnotice_mrl_ (ptr, fixed bin(21), ptr, fixed bin(21));		"
"     call pnotice_mrl_ (Psource, Lsource, Ptarget, Ltarget);		"
"								"
"								"
" S__t_a_t_u_s								"
"								"
" 0) Created by:  Gary C. Dixon, January, 1976.				"
" 1) Modified by: JM Stansbury, July 1981.                                      "
"    renamed entrypoints to be consistent with the protection SW.               "
"								"
" *  *  *  *  *  *  *  *  *  *  *  *  *  *  **  *  *  *  *  *  *  *  *  *  *  * "

"
	name	pnotice_mlr_

	segdef	pnotice_mlr_
	segdef	pnotice_mrl_

pnotice_mlr_:	
	ldx0	0,du			" set entry point switch
	tra	common

pnotice_mrl_:	
	ldx0	4,du			" set entry point switch

common:	epp1	ap|2,*			" get ptr to source
	epp1	1|0,*
	lda	ap|4,*			" get length of source
	epp3	ap|6,*			" get ptr to target
	epp3	3|0,*
	ldq	ap|8,*			" get length of target
	tra	move,x0			" perform appropriate move instruction

	even
move:	mlr	(pr,rl),(pr,rl),fill(040)
	desc9a	1|0,al
	desc9a	3|0,ql
	tra	common2

	mrl	(pr,rl),(pr,rl),fill(040)
	desc9a	1|0,al
	desc9a	3|0,ql

common2:	short_return

	end
	