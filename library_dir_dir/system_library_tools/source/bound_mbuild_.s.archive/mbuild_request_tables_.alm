
" HISTORY COMMENTS:
"  1) change(2019-08-17,GDixon), approve(2019-10-23,MCR10069),
"     audit(2020-01-20,Swenson), install(2020-01-20,MR12.6g-0035):
"     Request table for the mbuild subsystem.
"  2) change(2021-02-14,GDixon), approve(2021-02-22,MCR10086),
"     audit(2021-03-17,Swenson), install(2021-03-17,MR12.6g-0051):
"      A) Add entries for:
"          - archive_sort (as):  a hidden command operating as a request.
"          - xref request: invokes peruse_crossref for Include files in build script.
"          - peruse_crossref (pcref): a hidden command operating as a request.
"  3) change(2021-02-14,GDixon), approve(2021-02-22,MCR10086),
"     audit(2021-03-31,Swenson), install(2021-03-31,MR12.6g-0054):
"      A) Add entries for:
"          - verify (vi) request: invokes verify_info for Info files in build script.
"          - verify_info: a hidden command operating as a request.
"                                                      END HISTORY COMMENTS

name      mbuild_request_tables_

          include   ssu_request_macros

          begin_table	user_requests

" REQUESTS FOR mbuild
"
"  NOTE:  order of these request macros control order of display of commands by list_requests (lr) request.
"          Tactic used for ordering requests varies by type of request, and is indicated in comment headings
"	 that introduce each of the various request types.


" MAIN REQUESTS of mbuild subsystem
"  ORDER: by expected usage patterns

  multics_request	list,
		(ls),
		(List files in the working directory (the install directory).)

	request   scan,
		mbuild_scan_$scan_request,
		(sc),
		(Scan the working directory for segments to build.)

          request   read,
                    mbuild_script_$read_request,
                    (rd),
                    (Read information about build operation from a build script file.)

	request   analyze,
		mbuild_analyze_$analyze_request,
		(az),
		(Analyze information gathered by scan or read requests.)

	request	progress,
		mbuild_progress_$progress_request,
		(pg),
		(Report progress toward completing build and install tasks.)

          request   print,
                    mbuild_print_$print_request,
                    (p,pr),
                    (Print information about a build operation, before or after analyze request.)

          request   set,
                    mbuild_set_$set_request,
                    (),
                    (Set description or library information for segments in a build operation.)

          request   save,
                    mbuild_script_$save_request,
                    (sv),
                    (Save information about build operation to a build script file.)

	request	compile,
		mbuild_compile_$compile_request,
		(comp),
		(Compile source segments to create their derived Unbound_obj segments.)

	request	archive_prep,
		mbuild_archive_$archive_prep_request,
		(arch),
		(Update bound segment source/object archives.  Bind object archives.)

	request	install_ec,
		mbuild_install_$install_ec_request,
		(inst),
		(Create a Build_exec_com file to install segments into their target library.)

	request   clean,
		mbuild_clean_$clean_request,
		(cl),
		(Remove any derived segments found/created by prior requests.)

	request   compare,
		mbuild_compare_$compare_request,
		(cmp),
		(Compare original and replacement source, include, info, or bindfile segments.)

	request   history,
		mbuild_history_$history_request,
		(hcom),
		(Apply history_comment command to source, include, info, or bindfile segments.),
		flags.allow_both

	request   verify,
		mbuild_info_checks_$vi_request,
		(vi),
		(Check format of info segments.)

	request   xref,
		mbuild_xref_$xref_request,
		(),
		(Lists source files that reference each include file being installed.)
	

" LIBRARY-RELATED REQUESTS
"  ORDER: alphabetical

	request	lib_names,
		mbuild_lib_names_$lib_names_request,
		(libs),
		(Display library paths with preferred library name.)

  multics_request	library_descriptor,
		(lds),
		(Select a library descriptor descriptor, or display library information.),

	request	library_pathname,
		mbuild_lpn$lpn_request,
		(lpn),
		(List pathnames in selected library matching a starname.),
		flags.allow_both


" REQUESTS FOR mbuild BUILD INFORMATION
"  ORDER: alphabetical

	request   paradigm,
		mbuild_type$paradigm_request,
		(pdm),
		(Print information about an mbuild build/install paradigm.),
		flags.allow_both

	request   seg_type,
		mbuild_type$seg_type_request,
		(seg),
		(Describe mbuild build/install details or paradigm used for a given segment.),
		flags.allow_both


" EXTERNAL COMMANDS USED TO SUPPORT mbuild REQUESTS and SUBROUTINES
"  ORDER: alphabetical
"  - Hidden from list_requests (lr) request, unless: lr -all
"  - Added as mbuild requests so other mbuild requests can invoke them via mbuild_$request()

   multics_request	add_name,		" Hidden command, used by compile (comp) request.
		(an),
		(Add names to branches or links.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	archive,		" Hidden command, used by archive_prep (arch) request.
		(ac),
		(Combine separate source or Unbound_obj segments into one archive.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	archive_sort,	" Hidden command, used by archive_prep (arch) request.
		(as),
		(Sort archive components into alphanumeric order.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	archive_table,	" Hidden active function, used by mbuild_library_$archive_table
		(act),
		(Return names of specified archive components in a given archive.),
		,
		flags.allow_both+flags.dont_list+flags.dont_summarize

   multics_request	bind,		" Hidden command, used by archive_prep (arch) request.
		(bd),
		(Produces a bound object segment from one or more object archives.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	compare_ascii,	" Hidden command, used by compare (cmp) request.
		(cpa),
		(Compares ASCII segments and prints any differences.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	delete_name,	" Hidden command, used by compile (comp) request.
		(dn),
		(Remove names from branches or links.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	file_output,	" Hidden command, used to implement save (sv) request
		(fo),
		(Redirect user_output to a file.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	history_comment,	" Hidden command, used to implement history (hcom) request
		(),		"  - Short name of history_comment command used by history request (above).
		(Adds, checks, displays, formats and updates software change history comments.),
		,
		flags.allow_both+flags.dont_list+flags.dont_summarize

   multics_request	library_fetch,	" Hidden command, used by archive_prep (arch) request.
		(lf),
		(Copy Multics Library segs or components into the install directory.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	peruse_crossref,	" Hidden command, used by archive_prep (arch) request.
		(pcref),
		(Prints information from data generated by the cross_reference command.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	revert_output,	" Hidden command, used to implement save (sv) request
		(ro),
		(Reverts the effects of a file_output request.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	verify_info,	" Hidden command, used to implement verify (vi) request
		(),		"  - Short name of verify_info is attached verify request (see above).
		(Checks format of info segments.),
		,
		flags.allow_both+flags.dont_list+flags.dont_summarize



" EXTERNAL COMMANDS USED BY compile (comp) REQUEST TO INVOKE TRANSLATORS
"  ORDER: alphabetical
"  - Hidden from list_requests (lr) request, unless: lr -all
"  - Added as mbuild requests so other mbuild requests can invoke them via mbuild_$request()

   multics_request	alm,
		(),
		(Compile Assembler Language Multics source segments.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	create_data_segment,
		(cds),
		(Compile data definition programs into Unbound_obj data segments.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	library_descriptor_compiler,
		(ldc),
		(Compile files containing Library Descriptor Language.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	lisp_compiler,
		(lcp),
		(Compile LISP source segments.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	pl1,
		(),
		(Compile PL/I source segments.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	pl1_macro,
		(pmac),
		(Compile PL/I program containing pl1 macro language statements.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize

   multics_request	reductions,
		(rdc),
		(Compile PL/I program containing Reduction Language source.),
		,
		flags.allow_command+flags.dont_list+flags.dont_summarize



" EXTERNAL COMMAND/AFs USED TO SIMPLIFY ENTERING mbuild REQUEST LINES
"  ORDER: alphabetical
"  - Hidden from list_requests (lr) request, unless: lr -all

   multics_request	string,
		(),
		(Print or return input arguments.),
		string$string

   multics_request	home_dir,
		(hd),
		(Return the pathname of your home directory.),
		,
		flags.allow_both+flags.dont_list+flags.dont_summarize

   multics_request	print_wdir,
		(pwd,working_dir,wd),
		(Return the pathname of your working directory.),
		,
		flags.allow_both+flags.dont_list+flags.dont_summarize

   multics_request	process_dir,
		(pd),
		(Return the pathname of your process directory.),
		,
		flags.allow_both+flags.dont_list+flags.dont_summarize
	

" TAKEN FROM: ssu_request_tables_$standard_requests
"  ORDER: requests most import to user are first
"   A request table containing all standard subsystem requests.
"   It should be added as the last request table by subsystems which implement all standard requests.

	request	help,
		mbuild_help_$help_request,
		(h),
		(Obtain detailed information for the mbuild subsystem and its requests.)

	request	list_requests,
		 ssu_requests_$list_requests,
		 (lr),
		 (List brief information on subsystem requests.)

	request	?,
		 ssu_requests_$summarize_requests,
		 (),
		 (Produce a list of the most commonly used requests.),
		 flags.allow_command+flags.dont_summarize

	request	quit,
		 ssu_requests_$quit,
		 (q),
		 (Leave the subsystem.)

	request	.,
		 ssu_requests_$self_identify,
		 (),
		 (Identify the subsystem.)

	request	abbrev,
		 ssu_requests_$abbrev,
		 (ab),
		 (Enable/disable abbreviation processing of request lines.),
		 flags.allow_both

"	request	help,		" REPLACED BY A TAILORED mbuild REQUEST
"		 ssu_requests_$help,
"		 (h),
"		 (Obtain detailed information on the subsystem.)

"	request	list_help,	" REQUEST not provided.  Standard request must be tailored for mbuild help tactics.
"		 ssu_requests_$list_help,
"		 (lh),
"		 (List topics for which help is available.)

	request	subsystem_name,
		 ssu_requests_$subsystem_name,
		 (),
		 (Return the name of this subsystem.),
		 flags.allow_both+flags.dont_summarize+flags.dont_list

	request	subsystem_version,
		 ssu_requests_$subsystem_version,
		 (),
		 (Return the version number of this subsystem.),
		 flags.allow_both+flags.dont_summarize+flags.dont_list

	request	debug_mode,
		 ssu_requests_$debug_mode,
		 (),
		 (Enable/disable subsystem debugging facilities.),
		 flags.allow_command+flags.dont_summarize+flags.dont_list

	request	execute_string,
		 ssu_requests_$execute_string,
		 (exs),
		 (Perform substitution into a control string and execute the expansion.),
		 flags.allow_both

	request	substitute_arguments,
		 ssu_requests_$substitute_arguments,
		 (substitute_args,string,sbag),
		 (Perform substitution into a control string and print or return the expansion.),
		 flags.allow_both

          end_table		user_requests
	
          end
