/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */

/* format: style4,indattr,ifthenstmt,ifthen,idind35,^indcomtxt */

fix_quota_used: proc;

/* fix_quota_used: B. Greenberg 2/19/77 */
/* Modified 12/13/84 by Keith Loepere for (seg/dir) variants. */

/* Based */

dcl  arg				char (argl) based (argp);

/* Misc */

dcl  bad_dir_			condition;

/* Variables */

dcl  acted			bit (1) aligned;
dcl  argl				fixed bin;
dcl  argnum			fixed bin;
dcl  argp				ptr;
dcl  brief			bit (1) aligned;
dcl  code				fixed bin (35);
dcl  fix_dir			bit (1) aligned;
dcl  fix_seg			bit (1) aligned;
dcl  myname			char (24);
dcl  ndu				fixed bin (34);
dcl  nsu				fixed bin (34);
dcl  odu				fixed bin (34);
dcl  osu				fixed bin (34);
dcl  pathname			char (168);
dcl  salvct			fixed bin;

/* Entries */

dcl  absolute_pathname_		entry (char (*), char (*), fixed bin (35));
dcl  com_err_			entry options (variable);
dcl  cu_$arg_ptr			entry (fixed bin, ptr, fixed bin, fixed bin (35));
dcl  hphcs_$correct_dir_qused		entry (char (*), fixed bin (34), fixed bin (34), bit (1) aligned, fixed bin (35));
dcl  hphcs_$correct_qused		entry (char (*), fixed bin (34), fixed bin (34), fixed bin (34), fixed bin (34), bit (1) aligned, fixed bin (35));
dcl  hphcs_$correct_seg_qused		entry (char (*), fixed bin (34), fixed bin (34), bit (1) aligned, fixed bin (35));
dcl  ioa_				entry options (variable);

/* External */

dcl  error_table_$bad_arg		fixed bin (35) ext static;

/* Builtin */

dcl  index			builtin;
%page;
	myname = "fix_quota_used";
	fix_dir, fix_seg = "1"b;
	go to join;

fix_dir_quota_used: entry;

	myname = "fix_dir_quota_used";
	fix_dir = "1"b;
	fix_seg = "0"b;
	go to join;

fix_seg_quota_used: entry;

	myname = "fix_seg_quota_used";
	fix_dir = "0"b;
	fix_seg = "1"b;

join:	brief = "0"b;
	pathname = "";

	call cu_$arg_ptr (1, argp, argl, code);
	if code ^= 0 then do;
USAGE:	     call com_err_ (code, myname, "Usage is: ^a <path> {-bf}", myname);
	     return;
	end;

	argnum = 1;
	do while (code = 0);
	     if index (arg, "-") = 1 then do;
		if arg = "-brief" | arg = "-bf" then brief = "1"b;
		else if arg = "-long" | arg = "-lg" then brief = "0"b;
		else do;
		     call com_err_ (error_table_$bad_arg, myname, "^a", arg);
		     return;
		end;
	     end;
	     else do;			/* must be path */
		call absolute_pathname_ (arg, pathname, code);
		if code ^= 0 then do;
		     call com_err_ (code, myname, arg);
		     return;
		end;
	     end;

	     argnum = argnum + 1;
	     call cu_$arg_ptr (argnum, argp, argl, code);
	end;
	if pathname = "" then go to USAGE;

	salvct = 0;

	on bad_dir_ begin;
	     call com_err_ (0, myname, "Salvage performed on ^a.", pathname);
	     salvct = salvct + 1;
	     if salvct > 3 then go to ret;
	     else go to retry;
	end;

retry:	if myname = "fix_quota_used" then
	     call hphcs_$correct_qused (pathname, osu, odu, nsu, ndu, acted, code);
	else if fix_seg then do;
	     call hphcs_$correct_seg_qused (pathname, osu, nsu, acted, code);
	     odu, ndu = 0;
	end;
	else do;
	     call hphcs_$correct_dir_qused (pathname, odu, ndu, acted, code);
	     osu, nsu = 0;
	end;
	revert bad_dir_;

	if acted then
	     if ^brief then do;
		if code ^= 0 then call com_err_ (code, myname, "While processing ^a.", pathname);
		if osu ^= nsu then call ioa_ ("^a: Segment quota used changed from ^d to ^d.", pathname, osu, nsu);
		if odu ^= ndu then call ioa_ ("^a: Directory quota used changed from ^d to ^d.", pathname, odu, ndu);
	     end;
	     else ;
	else call com_err_ (code, myname, "Could not validate/correct quota on ^a.", pathname);
ret:	return;
     end;
