/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */
/* format: style4,delnl,insnl,^ifthendo */
set_x25_packet_threshold:
     procedure ();

/* highly-privileged command for setting minimum size of X.25 "long packets". A long packet is one
   that is not output as long as there are short packets queued.
*/

/* Written July 1983 by Robert Coren */


dcl  code fixed bin (35);
dcl  n_args fixed bin;
dcl  chan_name char (32);
dcl  packet_size fixed bin (35);
dcl  argp pointer;
dcl  argl fixed bin (21);

dcl  arg char (argl) based (argp);


dcl  cu_$arg_count entry (fixed bin, fixed bin (35));
dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin (21), fixed bin (35));
dcl  com_err_ entry () options (variable);
dcl  cv_dec_check_ entry (char (*), fixed bin (35)) returns (fixed bin (35));
dcl  hphcs_$tty_control entry (char (*), char (*), pointer, fixed bin (35));

dcl  CMD_NAME char (24) internal static options (constant) init ("set_x25_packet_threshold");

dcl  error_table_$wrong_no_of_args fixed bin (35) external static;

dcl  addr builtin;
%page;
	call cu_$arg_count (n_args, code);
	if code ^= 0
	then do;
	     call com_err_ (code, CMD_NAME);
	     return;
	end;

	if n_args ^= 2
	then do;
	     call com_err_ (error_table_$wrong_no_of_args, CMD_NAME, "^/Usage: ^a channel_name packet_size", CMD_NAME);
	     return;
	end;

	call cu_$arg_ptr (1, argp, argl, code);
	chan_name = arg;

	call cu_$arg_ptr (2, argp, argl, code);

	packet_size = cv_dec_check_ (arg, code);
	if code ^= 0
	then do;
	     call com_err_ (0, CMD_NAME, "^a is not a valid packet size.", arg);
	     return;
	end;

	if packet_size < 2
	then do;
	     call com_err_ (0, CMD_NAME, "pakcet threshold must be at least 2.");
	     return;
	end;

	call hphcs_$tty_control (chan_name, "set_long_packet_threshold", addr (packet_size), code);

	if code ^= 0
	then call com_err_ (code, CMD_NAME);

	return;
     end set_x25_packet_threshold;
