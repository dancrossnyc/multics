/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
   *                                                         *
   *********************************************************** */
/* convert_MR10_2_reqfile.pl1 -- converts to MR11 reqfile-entry format */
/* To be run over >udd>sa>a>reqfile  */
/* format: style2 */

/* BIM 1984-07-05 */
/* Modified 1985-04-24 by E. Swenson to terminate the reqfile properly. */

convert_MR10_2_reqfile:
     procedure options (variable);

	declare com_err_		 entry () options (variable);
	declare cu_$arg_count	 entry (fixed bin, fixed bin (35));
	declare cu_$arg_ptr		 entry (fixed bin, ptr, fixed bin (21), fixed bin (35));
	declare expand_pathname_	 entry (character (*), character (*), character (*), fixed binary (35));
	declare get_temp_segment_	 entry (character (*), pointer, fixed binary (35));
	declare initiate_file_	 entry (character (*), character (*), bit (*), pointer, fixed binary (24),
				 fixed binary (35));
	declare pathname_		 entry (character (*), character (*)) returns (character (168));
	declare release_temp_segment_	 entry (character (*), pointer, fixed binary (35));
	declare terminate_file_	 entry (pointer, fixed binary (24), bit (*), fixed binary (35));


	declare arg_count		 fixed bin;
	declare ap		 pointer;
	declare al		 fixed bin (21);
	declare argument		 char (al) based (ap);
	declare code		 fixed bin (35);
	declare dir_name		 char (168);
	declare entryname		 char (32);
	declare qp		 pointer;
	declare reqfileex		 fixed bin;

	declare ME		 char (32) init ("convert_MR10_2_reqfile") int static options (constant);

%include reqfile;
%include access_mode_values;
%include terminate_file;


	call cu_$arg_count (arg_count, code);
	if code ^= 0
	then do;
		call com_err_ (code, ME);
		return;
	     end;

	if arg_count ^= 1
	then do;
		call com_err_ (0, ME, "Usage: ^a REQFILE_PATH.reqfile", ME);
		return;
	     end;

	qp = null ();

	call cu_$arg_ptr (1, ap, al, (0));
	call expand_pathname_ (argument, dir_name, entryname, code);
	if code ^= 0
	then do;
		call com_err_ (code, ME, "^a", argument);
		return;
	     end;

	call initiate_file_ (dir_name, entryname, RW_ACCESS, qp, (0), code);
	if code ^= 0
	then do;
		call com_err_ (code, ME, "^a", pathname_ (dir_name, entryname));
		return;
	     end;

	reqfile.version = REQFILE_VERSION;
	call terminate_file_ (qp, (0), TERM_FILE_TERM, (0));
	return;
     end convert_MR10_2_reqfile;
