/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */
/* convert_MR10_2_projfile.pl1 -- converts to MR11 projfile-entry format */
/* To be run over >udd>sa>a>projfile  */
/* format: style2 */

/* BIM 1984-07-05 */
/* Modified 1984-09-14 to detect double-conversions */

convert_MR10_2_projfile:
     procedure options (variable);

	declare com_err_		 entry () options (variable);
	declare cu_$arg_count	 entry (fixed bin, fixed bin (35));
	declare cu_$arg_ptr		 entry (fixed bin, ptr, fixed bin (21), fixed bin (35));
	declare expand_pathname_	 entry (character (*), character (*), character (*), fixed binary (35));
	declare get_temp_segment_	 entry (character (*), pointer, fixed binary (35));
	declare initiate_file_	 entry (character (*), character (*), bit (*), pointer, fixed binary (24),
				 fixed binary (35));
	declare pathname_		 entry (character (*), character (*)) returns (character (168));
	declare release_temp_segment_	 entry (character (*), pointer, fixed binary (35));
	declare terminate_file_	 entry (pointer, fixed binary (24), bit (*), fixed binary (35));


	declare arg_count		 fixed bin;
	declare ap		 pointer;
	declare al		 fixed bin (21);
	declare argument		 char (al) based (ap);
	declare code		 fixed bin (35);
	declare dir_name		 char (168);
	declare entryname		 char (32);
	declare (pp, old_pp)	 pointer;
	declare projfileex		 fixed bin;

	declare ME		 char (32) init ("convert_MR10_2_projfile") int static options (constant);

%include projfile;
%include access_mode_values;
%include terminate_file;

/**** MR10.2 projfile structure */

	dcl     1 old_projfile	 based (old_pp) aligned,
						/* Project history file */
		2 nproj		 fixed bin (35),	/* number of entries */
		2 projfilexx0_1	 (7) bit (36) aligned,
		2 projfiletab	 (3000),
		  3 id		 char (12),	/* project ID */
		  3 title		 char (52),	/* project title */
		  3 inv		 char (32),	/* name of principal investigator */
		  3 inv_addr	 char (32),	/* address */
		  3 sup		 char (32),	/* name of supervisor */
		  3 sup_addr	 char (32),	/* address */
		  3 sup_phone	 char (16),	/* telephone */
		  3 on		 fixed bin (71),	/* date on */
		  3 off		 fixed bin (71),	/* date off */
		  3 disk_psec	 fixed bin (71),	/* project disk page-seconds */
		  3 disk_quota	 fixed bin (35),	/* project disk quota */
		  3 disk_use	 fixed bin (35),	/* total segment pages used */
		  3 dir_disk_use	 fixed bin (35),	/* total directory pages used */
		  3 misc_charges	 float bin,	/* manuals, etc */
		  3 n_misc	 fixed bin,	/* number of entries */
		  3 processed	 fixed bin;	/* temp for usage-report */


	call cu_$arg_count (arg_count, code);
	if code ^= 0
	then do;
		call com_err_ (code, ME);
		return;
	     end;

	if arg_count ^= 1
	then do;
		call com_err_ (0, ME, "Usage: ^a PROJFILE_PATH", ME);
		return;
	     end;

	pp, old_pp = null ();

	call cu_$arg_ptr (1, ap, al, (0));
	call expand_pathname_ (argument, dir_name, entryname, code);
	if code ^= 0
	then do;
		call com_err_ (code, ME, "^a", argument);
		return;
	     end;

	call initiate_file_ (dir_name, entryname, RW_ACCESS, old_pp, (0), code);
	if code ^= 0
	then do;
		call com_err_ (code, ME, "^a", pathname_ (dir_name, entryname));
		return;
	     end;

	if old_pp -> projfile.version = PROJFILE_VERSION
	then do;
		call com_err_ (0, ME, "^a has already been converted to version ^d.", pathname_ (dir_name, entryname),
		     PROJFILE_VERSION);
		call terminate_file_ (old_pp, (0), TERM_FILE_TERM, (0));
		return;
	     end;
	call get_temp_segment_ (ME, pp, (0));

	projfile = old_projfile, by name;
	projfile.version = PROJFILE_VERSION;
	old_pp -> projfile = projfile;
	call terminate_file_ (old_pp, (loph + (old_pp -> projfile.nproj * lope)) * 36, TERM_FILE_TRUNC_BC_TERM, (0));
	call release_temp_segment_ (ME, pp, (0));
	return;
     end convert_MR10_2_projfile;
