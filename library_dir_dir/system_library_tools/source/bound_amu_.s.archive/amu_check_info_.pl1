/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */
amu_check_info_: proc (P_amu_info_ptr);

/* format: style4,delnl,insnl,ifthenstmt,indnoniterend,ifthendo,ifthen,^thendo */

/* Minor procedure used to validate an amu_info */

dcl  P_amu_info_ptr pointer parameter;

dcl  amu_error_ entry options (variable);

dcl  (null, substr, unspec) builtin;

%page;

	call ck_amu;
	return;					/* nothing appears wrong */



amu_check_info_$hard:
     entry (P_amu_info_ptr);
	call ck_amu;
	call ck_hard;

	return;					/* nothing appears wrong */

ERROR_RET:					/* somting was wrong and the error was printed */
	return;


ck_amu:
     proc;
	if substr (unspec (P_amu_info_ptr), 31, 6) ^= "43"b3 then do;
	     call amu_error_ ((null ()), 0, "amu_check_info_: Invalid amu_info pointer: ^w ^w",
		substr (unspec (P_amu_info_ptr), 1, 36), substr (unspec (P_amu_info_ptr), 37, 36));
	     goto ERROR_RET;
	     end;
	amu_info_ptr = P_amu_info_ptr;
	if amu_info_ptr = null () then do;
	     call amu_error_ (amu_info_ptr, 0, "amu_check_info_: Null amu_info pointer.");
	     goto ERROR_RET;
	     end;
	if amu_info.version ^= AMU_INFO_VERSION_2 then do;
	     call amu_error_ (amu_info_ptr, 0, "amu_check_info_: Invalid amu_info version ""^8a"" at ^p.",
		amu_info.version, amu_info_ptr);

	     goto ERROR_RET;
	     end;
     end ck_amu;



ck_hard:
     proc;
	if substr (unspec (hardcore_info_ptr), 31, 6) ^= "43"b3 then do;
	     call amu_error_ ((null ()), 0, "amu_check_info_: Invalid hardcore_info pointer: ^w ^w",
		substr (unspec (hardcore_info_ptr), 1, 36), substr (unspec (hardcore_info_ptr), 37, 36));
	     goto ERROR_RET;

	     end;


	if hardcore_info_ptr = null () then do;
	     call amu_error_ (hardcore_info_ptr, 0, "amu_check_info_: Null hardcore_info pointer.");

	     goto ERROR_RET;
	     end;

     end ck_hard;

%include amu_info;
     end amu_check_info_;
