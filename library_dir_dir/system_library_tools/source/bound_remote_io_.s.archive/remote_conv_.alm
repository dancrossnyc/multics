" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************

" remote_conv_:  Conversion routine for producing "standard" terminal I/O records for output to an RJE station or a remote
"   host system by an I/O daemon (driven by either remote_driver_ or workstation_sim_driver_).  See the prt_conv_ module
"   for a description of the manner in which this routine is utilized.

" Created:  December 1979 by G. Palter

	name	remote_conv_

	segdef	printer			" output destined for a line printer
	segdef	punch			" output destined for a card punch (to be obsolete soon)
	segdef	teleprinter		" output destined for the RJE station's operator's console


" Transfer vectors for the three types of output devices -- printer, punch, and teleprinter

printer:	tra	send_setup_printer		" initialize new printer output record
	tra	send_characters		" output some characters into the record
	tra	send_slew_pattern		" slew (skip) to specified VFU pattern
	tra	send_slew_count		" slew (skip) specified number of lines

punch:	tra	send_setup_punch		" initialize new punch output record
	tra	send_characters
	tra	pr7|0			" for punch:  meaningless to slew to pattern
"					" for punch:  meaningless to slew by count
	lda	0,du			" set residue count to claim entire skip done
	tra	pr7|0

teleprinter:
	tra	send_setup_teleprinter	" initialize new teleprinter output record
	tra	send_characters		" output some characters into the record
	tra	send_slew_pattern		" slew (skip) to specified VFU pattern
	tra	send_slew_count		" slew (skip) specified number of lines


	tempd	tior_ptr			" -> the record's header
	tempd	saved_pr4
	tempd	saved_pr5
" 
	include terminal_io_record
" 
" Initialize an output record

send_setup_printer:
	ldq	tior_printer_device,dl	" need to set device type in record header
	tra	send_setup_common

send_setup_punch:
	ldq	tior_punch_device,dl
	tra	send_setup_common

send_setup_teleprinter:
	ldq	tior_teleprinter_device,dl
"	tra	send_setup_common


send_setup_common:
	spri3	tior_ptr			" save pointer to start of output record

	stq	pr3|tior.device_type	" save device type from above

	ldq	tior_version_1,dl		" fill in rest of header with "default" settings
	stq	pr3|tior.version

	ldq	slew_single_line		" set to slew by 1 line
	stq	pr3|tior.slew_control

	stz	pr3|tior.flags		" not binary

	ldq	9,dl			" element size is 9 (characters)
	stq	pr3|tior.element_size

	stz	pr3|tior.n_elements		" no data yet

	ldq	4*tior.data,dl		" move pointer past header (to this offset)
	a9bd	pr3|0,ql

	tra	pr7|0			" setup completed


slew_single_line:				" constant to slew 1 line
	vfd	18/tior_slew_by_count,18/1
" 
" Place data (with possible leading whitespace) into the record

send_characters:
	spri4	saved_pr4			" need a pointer to record header
	epp4	tior_ptr,*

	eaq	0,2			" whitespace count into QU
	tmoz	no_whitespace		" ... none needed
	qrl	18			" ... put it into QL (sigh)

	mlr	(),(pr,rl),fill(040)	" insert requested # of spaces
	desc9a	*,0
	desc9a	pr3|0,ql

	a9bd	pr3|0,ql			" ... update output pointer
	asq	pr4|tior.n_elements		" ... update record length in buffer header

no_whitespace:
	lrl	72-18			" put count of characters into QL (sigh)

	mlr	(pr,rl),(pr,rl)		" move the data
	desc9a	pr2|0,ql
	desc9a	pr3|0,ql

	a9bd	pr2|0,ql			" ... update input pointer
	a9bd	pr3|0,ql			" ... update output pointer
	asq	pr4|tior.n_elements		" ... update record length in buffer header

	eax2	0			" be sure X2 is zero (all spaces done)

	epp4	saved_pr4,*
	tra	pr7|0			" all done
" 
" Slew to specified pattern

send_slew_pattern:
	spri4	saved_pr4			" once again -- need pointer to record header
	epp4	tior_ptr,*

	spri5	saved_pr5			" used for RPT instruction
	epp5	slew_pattern_table

	eax7	0			" initialize for search

	rpt	n_slew_patterns,2,tze	" search for the pattern
	cmpa	pr5|0,7

	ldq	pr5|-1,7			" pickup the proper slew control word
	stq	pr4|tior.slew_control	" ... and put it into the record

	epp4	saved_pr4,*
	epp5	saved_pr5,*
	tra	pr7|0			" return


" Slew N lines (in A)

send_slew_count:
	spri4	saved_pr4
	epp4	tior_ptr,*

	ora	slew_N_lines		" put in slew by count opcode
	sta	pr4|tior.slew_control

	lda	0,du			" clear the A (took all lines)

	epp4	saved_pr4,*
	tra	pr7|0


" Constants

	equ	n_slew_patterns,3		" NOTE:  must be changed whenever following table is modified

slew_pattern_table:
	vfd	o36/0			" slew to top of page
	vfd	18/tior_slew_to_top_of_page,18/0
	vfd	o36/13			" slew to top of inside page
	vfd	18/tior_slew_to_inside_page,18/0
	vfd	o36/11			" slew to top of outside page
	vfd	18/tior_slew_to_outside_page,18/0

slew_N_lines:
	vfd	18/tior_slew_by_count,18/0

	end
