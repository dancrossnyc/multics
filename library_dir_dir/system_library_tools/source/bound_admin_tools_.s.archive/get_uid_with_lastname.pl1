/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


get_uid_with_lastname: procedure (Name);

declare  Name character (*) parameter;

/* Originally written April 1971 by K. Willis. */
/* Rewritten for new URF format July 1979 by C. Hornig. */

/* This procedure lists all users with a given last name. */

%include urf_entry;

declare  ME character (32) init ("get_uid_with_lastname") static options (constant);

declare (error_table_$bad_index,
         error_table_$no_record) fixed bin (35) external;

declare  cu_$arg_count entry returns (fixed bin),
         urf_manager_$get_abs_entry entry (fixed bin (35), character (*), pointer, fixed bin (35)),
        (ioa_, com_err_) entry options (variable);

declare  code fixed bin (35),
         rec fixed bin (35),
         count fixed bin (35),
         uid character (32),
         1 urfe aligned like urf_entry;

declare  addr builtin;

/* * * * * * * * * * GET_UID_WITH_LASTNAME * * * * * * * * * */

	if cu_$arg_count () ^= 1 then do;
	     call com_err_ (0, ME, "Usage: get_uid_with_lastname <last-name>");
	     return;
	end;

	count = 0;
	do rec = 1 by 1;
	     call urf_manager_$get_abs_entry (rec, uid, addr (urfe), code);
	     if code ^= error_table_$no_record
	     then if code ^= 0
		then do;
		     if code ^= error_table_$bad_index
		     then call com_err_ (code, ME);
		     else if count = 0
		     then call ioa_ ("No users found with last name of ""^a"".", Name);
		     else call ioa_ ("^d users found with last name of ""^a"".", count, Name);
		     return;
		end;
		else if ((substr (urfe.last_name, 1, 1) = "*")
		& (substr (urfe.last_name, 2) = Name))
		| (urfe.last_name = Name)
		then do;
		     call ioa_ ("User ID for ^a, ^a is ""^a"".", urfe.last_name, urfe.first_name, uid);
		     count = count + 1;
		end;
	end;
     end get_uid_with_lastname;
