/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
/* CARD_DIM - This the the common code for all card I/O DIMs. */
/* modified from earlier code by Noel I. Morris, June 1975. */


/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */


card_attach: proc (ioname, type, ioname2, mode, iostatus, sdb_ptr);

dcl  ioname char (*),				/* name used in attachment */
     type char (*),					/* name of DIM being attached */
     ioname2 char (*),				/* name of DIM being attached to */
     mode char (*),					/* mode of attachment */
     iostatus bit (72) aligned;			/* status bits */

dcl  barea area ((16374)) based (areaptr),		/* allocation area */
     ap ptr;					/* automatic pointer to area */

dcl  error_table_$ionmat fixed bin (35) ext,
     error_table_$no_room_for_dsb fixed bin (35) ext;

dcl  get_system_free_area_ entry (ptr),
     ios_$setsize entry (char (*) aligned, fixed bin, bit (72) aligned),
     ios_$order entry (char (*) aligned, char (*), ptr, bit (72) aligned),
     ios_$changemode entry (char (*) aligned, char (*), char (*), bit (72) aligned);

dcl (addr, null, substr, unspec) builtin;

		/*  */

% include card_sdb;

		/*  */

/* This is the "attach" entry point for all card pseudo-DIMs (i.e. raw, mcc, viipunch, & flipper). */

	iostatus = "0"b;

	if sdb_ptr ^= null () then do;		/* previous attachment indicated */
	     substr (iostatus, 1, 36) = unspec (error_table_$ionmat);
	     return;
	end;

	call get_system_free_area_ (ap);
	allocate SDB in (ap -> barea) set (sdb_ptr);
	if sdb_ptr = null () then do;
	     substr (iostatus, 1, 36) = unspec (error_table_$no_room_for_dsb);
	     return;
	end;

	outer_module_name = type;
	attachment_list_ptr = addr (stream_name);
	next_stream_ptr = null ();
	name_size = 32;
	stream = ioname2;
	areaptr = ap;
	modes = "0"b;				/* Clear all mode settings. */

	call ios_$setsize (stream, 972, iostatus);	/* Insure element is one card. */

	return;




/* This is the "detach" entry point for all card pseudo-DIMs. */

card_detach: entry (sdb_ptr, ioname2, mode, iostatus);

	free SDB in (areaptr -> barea);
	substr (iostatus, 52, 1) = "1"b;		/* Your detach bit */

	return;

		/*  */

card_order: entry (sdb_ptr, order, infop, iostatus);

dcl  order char (*),				/* order to be executed */
     infop ptr;					/* pointer to info for order */


	call ios_$order (stream, order, infop, iostatus);/* Relay the call. */

	return;



card_changemode: entry (sdb_ptr, new_mode, old_mode, iostatus);

dcl  new_mode char (*),				/* new mode setting */
     old_mode char (*);				/* previous mode setting */


	call ios_$changemode (stream, new_mode, old_mode, iostatus);
						/* Relay the call. */
	return;



     end card_attach;
