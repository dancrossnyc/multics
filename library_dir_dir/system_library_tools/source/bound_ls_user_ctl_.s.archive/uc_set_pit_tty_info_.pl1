/****^  ********************************************
        *                                          *
        * Copyright, (C) Honeywell Bull Inc., 1987 *
        *                                          *
        ******************************************** */


/* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/*							       */
/* This module is part of the Multics Network Architecture (MNA) version of  */
/* user control.  MNA user control serves users coming into Multics via      */
/* separate networks (eg, the Distributed Systems Architecture (DSA)	       */
/* network.  MNA user control is not used for logins through the Multics     */
/* Communications System (MCS).  A separate MCS user control system serves   */
/* MCS users.						       */
/*							       */
/* To Be Supplied:						       */
/*  1) Brief module description.  See MDD010 or MTBs 751 and 752 for details */
/*     about this module, and its relationship to modules in the MCS user    */
/*     control system.					       */
/*  2) Operator error message documentation.  This program calls	       */
/*     sys_log_$general but does not contain the required descriptions of    */
/*     these messages.  This omission was waived for initial installation    */
/*     of the subsystem by the auditor, security coordinator, and by MDC     */
/*     management.						       */
/*							       */
/* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

/****^  HISTORY COMMENTS:
  1) change(86-04-04,Swenson), approve(87-07-13,MCR7737),
     audit(87-05-15,GDixon), install(87-08-04,MR12.1-1055):
     Initial coding.
  2) change(87-04-28,GDixon), approve(87-07-13,MCR7737),
     audit(87-07-30,Brunelle), install(87-08-04,MR12.1-1055):
     Updated for change to user_table_entry.incl.pl1.
  3) change(87-05-14,GDixon), approve(87-07-13,MCR7737),
     audit(87-07-30,Brunelle), install(87-08-04,MR12.1-1055):
      A) Replace error logging with calls to sys_log_$general.
      b) Set pit.line_type from ute.line_type.
                                                   END HISTORY COMMENTS */

/* format: style4,indattr */

uc_set_pit_tty_info_:
     procedure (P_utep, P_code);

/* Parameters */

dcl  P_code	        fixed bin (35) parameter;
dcl  P_utep	        ptr parameter;

/* Automatic */

dcl  code		        fixed bin (35) automatic;

/* Entries */

dcl  hcs_$truncate_seg      entry (ptr, fixed bin (19), fixed bin (35));
dcl  hphcs_$set_pit_tty_info entry (bit (36) aligned, ptr, fixed bin (35));

/* External */

dcl  error_table_$out_of_sequence fixed bin (35) ext static;

/* Constant */

dcl  ME		        char (20) initial ("uc_set_pit_tty_info_") internal static options (constant);

/* Builtins */

dcl (addr, null, length, rtrim, substr)
		        builtin;

%page;
/* Program */

	utep = P_utep;
	code = 0;

	if ^ute.uflags.proc_create_ok then
	     call Abort (error_table_$out_of_sequence);

	call Setup_PIT ();
	call hphcs_$set_pit_tty_info (ute.proc_id, pit_ptr, code);
	if code ^= 0 then
	     call Log_Error_with_Code (code,
		"Could not set tty info in PIT for ^a.^a.^a on channel ^a.",
		ute.person, ute.project, ute.tag, ute.tty_name);
RETURN:
	P_code = code;
	return;
%page;
Setup_PIT:
     procedure ();

	pit_ptr = as_data_$pit_ptr;
	call hcs_$truncate_seg (pit_ptr, 0, code);
	if code ^= 0 then
	     call Abort (code, "Could not truncate the pit template.");

	pit.version = PIT_version_3;
	pit.tty = ute.tty_name;
	if length (rtrim (pit.tty)) <= length (pit.old_tty) then
	     pit.old_tty = substr (pit.tty, 1, length (pit.old_tty));
	pit.terminal_access_class = ""b;		/* not used */
	pit.line_type = ute.line_type;
	pit.term_type_name = ute.terminal_type;
/**** TBS: If the value of pit.service is type is used, it will have to
      be conjured up from somewhere.  The cdte, of course, has this value
      for MCS channels.  It was probably only used for the old NCP/FTP. */
	pit.service_type = 0;
/**** TBS: The charge_type is available in the cdte for MCS channels.  If
      this module ever supports MCS, it should be extracted from here. */
	pit.charge_type = 0;
	pit.tty_answerback = ute.tty_id_code;
/**** TBS: The tty_type is an obsolete field which is present in the cdte.
      If this module ever supports MCS, it should be extracted from here. */
	pit.tty_type = 0;
	pit.outer_module = ute.outer_module;
	return;

     end Setup_PIT;
%page;
/* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/*							       */
/* Abort: Report an error via sys_log_$general and stop execution if a       */
/* nonzero code was given.					       */
/*							       */
/* Syntax:  call Abort (code, ioa_ctl, args);			       */
/*							       */
/* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

Abort:
     procedure options (variable);

dcl  cu_$arg_list_ptr       entry returns (ptr);
dcl  sys_log_$general       entry (ptr);

	sl_info = sl_info_code_msg;
	sl_info.severity = SL_LOG_SILENT;
	sl_info.caller = ME;
	sl_info.arg_list_ptr = cu_$arg_list_ptr ();
	call sys_log_$general (addr (sl_info));
	code = sl_info.code;
	if code ^= 0 then go to RETURN;

     end Abort;
%page;
/* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/*							       */
/* Log_Error_with_Code: log an error via sys_log_$general and continue       */
/* execution.						       */
/*							       */
/* Syntax:  call Log_Error_with_Code (code, ioa_ctl, args);		       */
/*							       */
/* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

Log_Error_with_Code:
     procedure options (variable);

dcl  cu_$arg_list_ptr       entry returns (ptr);
dcl  sys_log_$general       entry (ptr);

	sl_info = sl_info_code_msg;
	sl_info.severity = SL_LOG_SILENT;
	sl_info.caller = ME;
	sl_info.arg_list_ptr = cu_$arg_list_ptr ();
	call sys_log_$general (addr (sl_info));

     end Log_Error_with_Code;

/* format: off */
%page; %include as_data_;
%page; %include access_audit_bin_header; /* needed by PL/I */
%page; %include as_audit_structures;
%page; %include dialup_values;
%page; %include pit;
%page; %include sys_log_constants;
%page; %include user_attributes;
%page; %include user_table_entry;

end uc_set_pit_tty_info_;

