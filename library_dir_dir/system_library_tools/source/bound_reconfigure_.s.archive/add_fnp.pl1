/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
   *                                                         *
   *********************************************************** */
/* add_fnp.pl1 command interface (perhaps interim) to FNP reconfiguration */
/* format: style2 */

add_fnp:
     procedure options (variable);

	declare cu_$arg_count	 entry (fixed bin, fixed bin (35));
	declare cu_$arg_ptr		 entry (fixed bin, ptr, fixed bin (21), fixed bin (35));
	declare com_err_		 entry () options (variable);
	declare parse_fnp_name_	 entry (character (*), fixed binary);
	declare hphcs_$configure_fnp	 entry (fixed bin, fixed bin (35));
	declare ioa_		 entry () options (variable);

	declare ap		 ptr;
	declare al		 fixed bin (21);
	declare argument		 char (al) based (ap);
	declare code		 fixed bin (35);
	declare fnp_no		 fixed bin;
	declare n_args		 fixed bin;
	declare error_table_$bad_channel
				 fixed bin (35) ext static;
	declare ME		 char (32) init ("add_fnp") int static options (constant);


	call cu_$arg_count (n_args, code);
	if code ^= 0
	then do;
		call com_err_ (code, ME);
		return;
	     end;

	if n_args ^= 1
	then do;
		call com_err_ (0, ME, "Usage: add_fnp FNP_TAG");
		return;
	     end;

	call cu_$arg_ptr (1, ap, al, (0));
	call parse_fnp_name_ (argument, fnp_no);
	if fnp_no ^> 0
	then do;
		call com_err_ (error_table_$bad_channel, ME, "Invalid FNP name ^a.", argument);
		return;
	     end;
	call hphcs_$configure_fnp (fnp_no, code);
	if code = 0
	then call ioa_ ("FNP ^a added to configuration.", argument);
	else call com_err_ (code, ME, "Could not add FNP ^a to configuration");
	return;
     end add_fnp;


