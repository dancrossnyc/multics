/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


display_source:
	proc(pt,tree_level);

/*	Modified: 29 Nov 1979 by PCK to print a tree level indented listing */

dcl	tree_level fixed bin;
dcl	(p,pt) ptr;
dcl	(addr,null) builtin;
dcl	1 based_words based aligned,
	2 word1 bit(36),
	2 word2 bit(36);
dcl	date char(24) aligned;
dcl	ioa_ entry options(variable);
dcl	decode_node_id entry(ptr,bit(1) aligned) returns(char(120) varying);
dcl	date_time_ entry(fixed bin(71), char(*) aligned);
dcl	display_any_node_name entry(char(*) aligned,ptr,fixed bin);
%include nodes;
%include token;
%include token_list;
%include source_list;

	p = pt;
	if p = null
	then do;
		call ioa_("^/^vxdisplay_source: ptr is NULL^/",tree_level);
		return;
	     end;

	if p->node.type ^= source_node
	then do;
		call display_any_node_name("display_source: node is not a source_node, arg=",p,tree_level+1);
		return;
	     end;

	call ioa_("^/^vxSOURCE ^p, ^a",tree_level,p,p -> source.name->token.string);
	call ioa_("^vx^a",tree_level,decode_node_id(p,"0"b));
	call ioa_("^vxseg_ptr = ^p, length = ^d, pathname = ^a",tree_level,p -> source.seg_ptr,p -> source.source_length,p -> source.pathname);
	call date_time_(p -> source.dtm,date);
	call ioa_("^vxuid = ^w, dtm = ^w^w (^a)^/",tree_level, p -> source.uid, p -> source.dtm,
		addr(p -> source.dtm) -> word2, date);
	return;
end display_source;
