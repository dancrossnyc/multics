/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1987 *
        *                                                         *
        *********************************************************** */

/****^  HISTORY COMMENTS:
  1) change(86-08-01,Coren), approve(87-07-13,MCR7737),
     audit(87-07-24,Brunelle), install(87-08-04,MR12.1-1055):
     Initially written.
  2) change(87-04-26,GDixon), approve(87-07-13,MCR7737),
     audit(87-07-24,Brunelle), install(87-08-04,MR12.1-1055):
     Upgraded for change to answer_table.incl.pl1.
                                                   END HISTORY COMMENTS */

/* format: style4,indattr */

login_server_info_:
     procedure ();

/* Parameters */

dcl  P_code	        fixed bin (35) parameter;
dcl  P_request_ms_dirname   char (*) parameter;
dcl  P_request_ms_entryname char (*) parameter;
dcl  P_server_process_id    bit (36) aligned parameter;
dcl  P_server_event_channel fixed bin (71) parameter;
dcl  P_system_control_dirname char (*) parameter;

/* Automatic */

dcl  code		        fixed bin (35) automatic;
dcl  event_channel	        fixed bin (71) automatic;

/* Entries */

dcl  initiate_file_	        entry (char (*), char (*), bit (*), ptr, fixed bin (24), fixed bin (35));

/* Internal Static */

dcl  static_answer_table_ptr ptr initial (null ()) internal static;
dcl  system_control_dirname char (168) initial (">system_control_1") internal static;

/* External */

dcl  error_table_$process_unknown fixed bin (35) ext static;

/* Conditions */

dcl  seg_fault_error        condition;

/* Builtin */

dcl  null		        builtin;
%page;
/* Program */

request_info:
     entry (P_server_process_id, P_server_event_channel, P_request_ms_dirname,
	P_request_ms_entryname, P_code);

	if static_answer_table_ptr = null () then
RETRY_ANSWER_TABLE_INITIATION:
	     do;
	     call initiate_file_ (system_control_dirname, "answer_table",
		R_ACCESS, ansp, (0), code);
	     if code ^= 0 then
		goto RETURN;
	     static_answer_table_ptr = ansp;
	end;
	else
	     ansp = static_answer_table_ptr;

	on seg_fault_error begin;
	     static_answer_table_ptr = null ();
	     goto RETRY_ANSWER_TABLE_INITIATION;
	end;
	event_channel = anstbl.ls_request_server_event_channel;
	revert seg_fault_error;

	if event_channel = 0 then do;
	     code = error_table_$process_unknown;	/* server not active */
	     goto RETURN;
	end;

	P_server_process_id = anstbl.ls_request_server_process_id;
	P_server_event_channel = event_channel;
	P_request_ms_dirname = system_control_dirname;
	P_request_ms_entryname = "login_server_requests.ms";
	code = 0;
RETURN:
	P_code = code;
	return;
%page;
test:
     entry (P_system_control_dirname);

/**** This entry, used for debugging, sets the pathname of the system
      control directory name. */

	system_control_dirname = P_system_control_dirname;
	return;

/* format: off */
%page; %include access_mode_values;
%page; %include answer_table;
%page; %include user_table_header;

end login_server_info_;
