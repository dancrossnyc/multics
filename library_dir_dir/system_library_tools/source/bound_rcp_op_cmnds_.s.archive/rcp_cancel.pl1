/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


rcp_cancel:
     proc ();

/*
   D_E_S_C_R_I_P_T_I_O_N_

   This command should only be used by the operator or somebody
   with access to rcp_sys_.  It takes two arguments, a reservation id
   and the group id of the user owning the reservation and cancels
   the reservation.  Only one reservation for one user may be cancelled
   per call.


   J_O_U_R_N_A_L_I_Z_A_T_I_O_N_

   1) Written 2/79 by R.J.C. Kissel.
*/
	
dcl  res_id char (19);				/* The reservation id to cancel. */
dcl  group_id char (32);				/* Group id of the user owning the reservation. */
dcl  code fixed bin (35);

dcl  num_args fixed bin;				/* Nunber of arguments. */
dcl  arg_num fixed bin;				/* Argument loop index. */

dcl  arg_len fixed bin;
dcl  arg_ptr ptr;
dcl  arg char (arg_len) based (arg_ptr);

dcl  com_err_ entry options (variable);
dcl  cu_$arg_count entry (fixed bin);
dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35));
dcl  rcp_sys_$cancel_id_string
     entry (char (*), char (*), fixed bin (35));
	
dcl  error_table_$wrong_no_of_args
     fixed bin (35) external;
dcl  error_table_$bad_arg
     fixed bin (35) external;

	call cu_$arg_count (num_args);

	if num_args < 4 | num_args > 5
	then goto ERROR_usage;

	res_id = "";
	group_id = "";

	do arg_num = 1 to num_args;
	     call cu_$arg_ptr (arg_num, arg_ptr, arg_len, code);
	     if code ^= 0
	     then goto ERROR_arg;

	     if arg = "cancel"
	     then ;				/* Ignore this. */

	     else if arg = "-id"
	     then do;
		arg_num = arg_num + 1;
		call cu_$arg_ptr (arg_num, arg_ptr, arg_len, code);
		if code ^= 0
		then goto ERROR_arg;

		res_id = arg;
	     end;

	     else if arg = "-user"
	     then do;
		arg_num = arg_num + 1;
		call cu_$arg_ptr (arg_num, arg_ptr, arg_len, code);
		if code ^= 0
		then goto ERROR_arg;

		group_id = arg;
	     end;

	     else goto ERROR_badarg;
	end;

	if res_id = "" | group_id = ""
	then goto ERROR_usage;

	call rcp_sys_$cancel_id_string (res_id, group_id, code);
	if code ^= 0
	then goto ERROR_cancel;

	return;

ERROR_usage:
	call com_err_ (error_table_$wrong_no_of_args, "rcp_cancel", "Usage is: rcp cancel -id STR -user STR");
	return;

ERROR_arg:
	call com_err_ (code, "rcp_cancel", "Argument number ^d.", arg_num);
	return;

ERROR_badarg:
	call com_err_ (error_table_$bad_arg, "rcp_cancel", "^a", arg);
	return;

ERROR_cancel:
	call com_err_ (code, "rcp_cancel", "Cancellation not performed.");
	return;

     end rcp_cancel;
