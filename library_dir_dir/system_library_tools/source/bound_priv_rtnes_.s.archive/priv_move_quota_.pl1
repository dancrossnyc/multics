/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


priv_move_quota_: proc (dirname, ename, qvalue, code);

/*  privileged quota moving subroutine.  SCV  5/75 */

dcl  hcs_$set_ips_mask entry (bit (36)aligned, bit (36) aligned);
dcl  system_privilege_$dir_priv_on entry (fixed bin (35));
dcl  system_privilege_$dir_priv_off entry (fixed bin (35));
dcl  hcs_$quota_move entry (char (*), char (*), fixed bin, fixed bin (35));
dcl  hcs_$dir_quota_move entry (char (*), char (*), fixed bin, fixed bin (35));
dcl  error_table_$badcall external fixed bin (35);
dcl  error_table_$action_not_performed external fixed bin (35);

dcl  any_other condition;

dcl (dirname, ename) char (*);
dcl  qvalue fixed bin (17);
dcl  code fixed bin (35);
dcl  action fixed bin (35);
dcl  old_mask bit (36) aligned init ((36)"0"b);
dcl  junk bit (36) aligned;
dcl  dir_sw bit (1) init ("0"b);

dcl  null builtin;

/*  */

MOVE:	code = error_table_$action_not_performed;	/* initialize the code in case of condition */

	action = 1;				/*  used to indicate that privileges are on */

	on any_other call reset_mask;			/*  make sure we turn them off is set */

	call hcs_$set_ips_mask ((36)"0"b, old_mask);

	call system_privilege_$dir_priv_on (action);
	if dir_sw then call hcs_$dir_quota_move (dirname, ename, qvalue, code);
	else call hcs_$quota_move (dirname, ename, qvalue, code);
	if action = 0 then call system_privilege_$dir_priv_off (action);
	action = 1;

	call hcs_$set_ips_mask (old_mask, junk);
	old_mask = "0"b;

RETURN:	return;

dir:	entry (dirname, ename, qvalue, code);

	dir_sw = "1"b;
	go to MOVE;

/*  */

reset_mask: proc ;

dcl 1 info aligned,
    2 mc_ptr ptr,
    2 version fixed bin,
    2 cond_name char (32) varying,
    2 info_pad (15) bit (36);

dcl  find_condition_info_ entry (ptr, ptr, fixed bin (35)),
     continue_to_signal_ entry (fixed bin (35));

dcl  ec fixed bin (35);

	     version = 1;				/* tell what version the structure is */

	     call find_condition_info_ (null, addr (info), ec); /* see what happened */

	     if action = 0 then
		call system_privilege_$dir_priv_off (action); /* reset what we did */
	     action = 1;				/* and cancel future effects */

	     if old_mask then do;			/* see if the ips mask was set */

		call hcs_$set_ips_mask (old_mask, junk); /* restore the mask */
		old_mask = (36)"0"b;		/* reset the value */
	     end;

	     if ec = 0 then				/* if all was well, and should be, look more */
		if cond_name = "linkage_error" then do; /* user faulted on system_privilege_ gate */

		     code = error_table_$badcall;
		     go to RETURN;			/* non local go to for a finish */

		end;

	     call continue_to_signal_ (ec);		/* let someone else handle the condition */

	     return;

	end reset_mask;
     end priv_move_quota_;
