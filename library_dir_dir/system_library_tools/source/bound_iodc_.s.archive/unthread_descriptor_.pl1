/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


unthread_descriptor_: proc (a_ptr);

/* A little procedure to unthread request descriptors */
/* Modified: February 26, 1985 by C. Marker to use version 5 message segments */

dcl  a_ptr ptr;

dcl  desc_ptr ptr;

dcl  prev_ptr ptr;
dcl  prev_off fixed bin (18);

dcl  next_ptr ptr;
dcl  next_off fixed bin (18);

dcl  based_offset fixed bin (18) based;

dcl  ptr builtin;

/**/

	desc_ptr = a_ptr;

	next_off = desc_ptr -> request_descriptor.next_done;
	prev_off = desc_ptr -> request_descriptor.prev_done;

	if prev_off = 0 then do;			/* this was first on list */
	     iodc_static.first_req_done = next_off;
	     iodc_static.save_first_req_p -> based_offset = next_off;
	end;

	else do;
	     prev_ptr = ptr (desc_ptr, prev_off);
	     prev_ptr -> request_descriptor.next_done = next_off;
	end;

	if next_off ^= 0 then do;
	     next_ptr = ptr (desc_ptr, next_off);
	     next_ptr -> request_descriptor.prev_done = prev_off;
	end;

	else iodc_static.last_req_done = prev_off;

	return;


init:	entry (a_ptr);

	stat_p = a_ptr;
	return;

/**/

%include iodc_static;
%page;
%include mseg_message_info;
%page;
%include request_descriptor;

     end unthread_descriptor_;
