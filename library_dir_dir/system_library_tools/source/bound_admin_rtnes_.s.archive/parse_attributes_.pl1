/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


parse_attributes_: proc (attr_string, set_attr, reset_attr, ec);

/* PARSE_ATTRIBUTES_ - Parse string containing attributes into
   two bit strings, one with "on" and one with "off".

   Written by T.H. VanVleck, .... 1974
   Modified by T. Casey, Feb 1975 to fix bugs

   */

dcl  attr_string char (*),				/* String to be parsed. */
    (set_attr, reset_attr) bit (36),			/* Output arguments. */
     ec fixed bin (35);				/* Error code. */

dcl (i, j) fixed bin,				/* Indices. */
     atp ptr,					/* Ptr to bit string. */
     char32 char (32) aligned;			/* Single attribute keyword. */

dcl  lookup_attribute_ entry (char (*) aligned, ptr, fixed bin (35));
dcl (length, search, substr) builtin;

	set_attr, reset_attr = "0"b;			/* Clear return args. */
	ec = 0;					/* clear error code */
	i = 1;					/* "i" locates beginning of keyword */
attloop:	j = search (substr (attr_string, i), ",	; ");	/* Find tab, blank, comma, semi */
	if j = 0 then j = length (attr_string) - i + 2;

	if j > 1 then do;				/* skip over null parameters (e.g. ",,") */
	     if substr (attr_string, i, 1) = "^" then do; /* Check to see if on or off */
		atp = addr (reset_attr);		/* Off. */
		char32 = substr (attr_string, i+1, j-2); /* Get keyword without not-sign. */
	     end;
	     else do;				/* On. */
		atp = addr (set_attr);
		char32 = substr (attr_string, i, j-1);
	     end;
	     call lookup_attribute_ (char32, atp, ec);	/* Find which bit this is. */
	     if ec ^= 0 then return;
	end;
	i = i + j;				/* i = index of first char of next attribute */
	if i <= length (attr_string) then go to attloop;	/* Loop until no more. */
	return;

     end parse_attributes_;
