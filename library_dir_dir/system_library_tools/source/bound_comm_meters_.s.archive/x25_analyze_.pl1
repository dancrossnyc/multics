/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */

/* subroutine called by tty_analyze for X.25 multiplexers  */
/* Written sometime-or-other by Charles Hornig */
/* Modified July 1983 by Robert Coren to make print_chain subroutine check for
   null chain pointer. */

/* format: style4,delnl,insnl,tree,ifthenstmt,indnoniterend */
x25_analyze_:
     procedure (Ttybp, Areap, Devx, Check_used, Long);

dcl  (Ttybp, Areap) ptr parameter;
dcl  Devx fixed bin parameter;
dcl  Check_used entry (ptr, fixed bin) parameter;
dcl  Long bit (1) aligned parameter;

dcl  x25_dump_ entry (ptr, ptr, ptr, fixed bin, bit (1) aligned);

dcl  i fixed bin;

dcl  (addr, binary, currentsize, pointer, rel) builtin;
%page;
	x25_data_ptr =
	     pointer (Ttybp,
	     rel (addr (pointer (Ttybp, rel (Ttybp -> tty_buf.lct_ptr)) -> lct.lcte_array (Devx)) -> lcte.data_base_ptr)
	     );

	call x25_dump_ (Ttybp, Areap, x25_data_ptr, -1, ^Long);
	call trace_chain (x25_data.write_head);
	do i = 1 to x25_data.n_sc;
	     call x25_dump_ (Ttybp, Areap, x25_data_ptr, i, ^Long);
	end;
	do i = 1 to x25_data.n_sc;
	     call trace_chain (x25_data.sc (i).write_head);
	end;
	if x25_data.lc_ptr ^= null () then do;
	     x25_data.lc_ptr = ptr (Ttybp, rel (x25_data.lc_ptr));
	     call Check_used (x25_data.lc_ptr, currentsize (x25_lces));
	     end;
	call Check_used (x25_data_ptr, currentsize (x25_data));
	return;

/* * * * * * * * * TRACE_CHAIN * * * * * * * * * * */

trace_chain:
     procedure (Chain);
dcl  Chain ptr parameter;
dcl  buf_offset fixed bin (18);

	if Chain = null () then return;
	buf_offset = binary (rel (Chain), 18);
	do while ((buf_offset ^= 0) & (buf_offset < 261120));
	     blockp = pointer (Ttybp, buf_offset);
	     buf_offset = buffer.next;
	     call Check_used (blockp, 16 * (binary (buffer.size_code, 3) + 1));
	end;
	return;
     end trace_chain;
%page;
%include x25_data;
%include tty_buf;
%include lct;
%include tty_buffer_block;

     end x25_analyze_;
