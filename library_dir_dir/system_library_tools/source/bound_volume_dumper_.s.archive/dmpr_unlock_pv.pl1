/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


dmpr_unlock_pv: proc;

dcl  pvname char (32);
dcl  pvid bit (36);
dcl  lvname char (32);
dcl  lvid bit (36);
dcl  argp ptr;
dcl  argl fixed bin;
dcl  device_type fixed bin;
dcl  dtype fixed bin;
dcl  arg char (argl) based (argp);
dcl  code fixed bin (35);
dcl  narg fixed bin;

dcl  myname char (32) int static init ("dmpr_unlock_pv") options (constant);

dcl  linkage_error condition;

dcl  error_table_$badopt fixed bin (35) ext;

dcl  cu_$arg_count entry (fixed bin);
dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35));
dcl  com_err_ entry options (variable);
dcl  ioa_ entry options (variable);
dcl  mdc_$pvname_info entry (char (*), bit (36), char (*), bit (36), fixed bin, fixed bin (35));
dcl  hc_backup_$dmpr_unlock_pv entry (bit (36), fixed bin, fixed bin (35));

%include backup_static_variables;
	code = 0;
	call cu_$arg_count (narg);
	if narg ^= 2 then do;
	     call com_err_ (0, myname, "Usage: dmpr_unlock_pv pvname dump_type");
	     return;
	end;
	call cu_$arg_ptr (1, argp, argl, code);
	if code ^= 0 then goto err;;
	pvname = arg;
	call mdc_$pvname_info (pvname, pvid, lvname, lvid, device_type, code);
	if code ^= 0 then do;
	     call com_err_ (code, myname, "^a", pvname);
	     return;
	end;
	call cu_$arg_ptr (2, argp, argl, code);
	if code ^= 0 then goto err;
	if arg = "-incr" | arg = "-incremental" then dtype = incr;
	else if arg = "-cons" | arg = "-consolidated" then dtype = cons;
	else if arg = "-comp" | arg = "-complete" then dtype = comp;
	else do;
	     call com_err_ (error_table_$badopt, myname, "^a", arg);
	     return;
	end;
	on linkage_error begin;
	     call ioa_ ("Incorrect access to privilidged gate hc_backup_");
	     goto finish;
	end;

	call hc_backup_$dmpr_unlock_pv (pvid, dtype, code);
	if code ^= 0 then goto err;

finish:
	return;

err:
	call com_err_ (code, myname);
	goto finish;

     end dmpr_unlock_pv;
