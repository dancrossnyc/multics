/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


teco_error: proc (error_string);

dcl  error_string char (*) unal;
declare	error_messages(22) char(64) internal static initial(
/*	 <-  8 -><-		      56			   -> */
	"S: fail Search failed.",
	"NO ROOM Text insertion would exceed maximum segment size.",
	"NOT IMPLUnimplemented feature or command.",
	"NO LABELLabel not found.",
	"TOO BIG Reference is beyond end of text.",
	"NEGATIVEReference is before beginning of text.",
	"PARENS  Too many parentheses, or misplaced parenthesis.",
	"BAD LOOPInfinite loop, or misplaced <, >, or ;.",
	"MANY ARGToo many arguments.",
	"FEW ARGSToo few arguments.",
	"IMP.RES.Too many pushes or macros, or quoted string too long.",
	"numericQThis Q-register must contain text.",
	"% ?     This Q-register must not contain text.",
	"BAD ""   Illegal double quote command.",
	"BAD E   Illegal external command.",
	"Qreg ?  Missing or illegal Q-register name.",
	"DISASTERCannot read from teletype or out of storage.",
	"ORDER ? Arguments given in the wrong order.",
	"?       Syntax error in expression or :X not in macro.",
	"\:NUMBR?Number does not appear following text pointer.",
	"CANT POPPushdown stack empty - cannot pop.",
	"BAD SKIPCharacter not found. Could not skip to >, ', or !.");

dcl  (hbound, length, substr) builtin;
dcl	message char(56);
dcl	name char(8) aligned;
dcl  i fixed bin;
dcl  ioa_ ext entry options (variable);

	name = error_string;			/* Get exactly eight characters. */
	if substr (name, 2) = ": ?    " then do;
	     message = "^a: illegal command.";
	     goto print_message;
	end;
	if substr (name, 2) = ":DELIM?" then do;
	     message = "^a: illegal quoting character.";
	     goto print_message;
	end;

	do i = 1 to hbound(error_messages, 1);

	     if name = substr(error_messages(i), 1, length(name)) then do;
		message = substr(error_messages(i), length(name)+1);
		goto print_message;
	     end;
	end;

	message = "Error message not recognized.";
print_message:
	call ioa_(message, substr(name, 1, 1));
	return;
     end;
