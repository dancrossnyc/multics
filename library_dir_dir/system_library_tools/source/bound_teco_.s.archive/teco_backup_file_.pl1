/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


teco_backup_file_: proc (file);

/* Recoded by REMullen 8/20/73 to replicate
   call copy (file, file||.bak) */

dcl  file char (*);

dcl (d1, d2) char (168) aligned;			/* dirnames */
dcl  bdir char (168) aligned based;
dcl (dirptr, entptr) ptr;
dcl (e1, e2) char (32) aligned;			/* entrynames */
dcl  bent char (32) aligned based;
dcl  code fixed bin (35);				/* standard system status code */
dcl  e1_len fixed bin;				/* length of first ename */
dcl  dot_len fixed bin;				/* length of first component of same */

dcl  errname char (4) aligned init ("TECO");		/* for nd_handler's question */


dcl  com_err_ ext entry options (variable);
dcl  expand_path_ ext entry (ptr, fixed bin, ptr, ptr, fixed bin (35));
dcl  copy_seg_ ext entry (char (*) aligned, char (*) aligned, char (*) aligned,
     char (*) aligned, char (*) aligned, bit (1) aligned, fixed bin (35));

dcl  get_wdir_ ext entry () returns (char (168) aligned);
dcl  which_bit bit (1) aligned;			/* 0 means err in d1>e1, 1 means d2>e2 */


dcl (min, substr, index, addr, length) builtin;

/* --------------------------------------------------------- */


	call expand_path_ (addr (file), length (file), addr (d1), addr (e1), code);
	if code ^= 0 then do;
	     call com_err_ (code, errname, file);
	     return;
	end;

	e1_len = index (e1, " ");
	if e1_len = 0 then e1_len = 32;		/* were no blanks */
	else e1_len = e1_len -1;			/* last char was just before blank */

	dot_len = index (e1, ".");			/* only want first component in any case */
	if dot_len = 0 then dot_len = 32;
	else dot_len = dot_len -1;

	e1_len = min (e1_len, dot_len);

	e2 = substr (e1, 1, e1_len) || ".bak";		/* make backup files name */

	d2 = get_wdir_ ();				/* it will go in working directory */

	call copy_seg_ (d1, e1, d2, e2, errname, which_bit, code); /* try to make copy */
	if code ^= 0 then do;
	     if which_bit = "1"b then do;
		dirptr = addr (d2);
		entptr = addr (e2);
	     end;
	     else do;
		dirptr = addr (d1);
		entptr = addr (e1);
	     end;
	     call com_err_ (code, errname, "^a>^a", dirptr -> bdir, entptr -> bent); /* lose */
	end;
	return;
     end;
