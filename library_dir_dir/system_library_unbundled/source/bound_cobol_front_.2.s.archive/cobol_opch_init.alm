" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************

"	Modified on 8/24/76 by Bob Chang to fix the bug for damaged pr7 after call. */
" This alm procedure is an interface between a PL1 procedure
" and the cobol overpunch operator cobol_opch_operator_.  This alm
" procedure is declared in any calling procedure by a declaration
" of the form:
" 
" dcl cobol_opch_init ext entry (ptr,ptr,bit(36),bit(36),
" fixed bin(35),fixed bin(35));
" 
" The parameters are, respectively
"  1. pointer to the source of conversion.
"  2. pointer to the target of conversion
"  3. scale and precision of the source.
"  4. scale and precision of the target.
"  5. type code of the source.
"  6. type code of the target.
" 
" This alm procedure unloads the argument list passed by the calling
" procedure, and loads the arguments into the registers in which
" they are required by cobol_opch_operator_.  For a description of
" the input requirements of cobol_opch_operator_, see the documentation
" in the listing for that alm procedure.

	segref	cobol_opch_operator_,cobol_opch_operator_

	equ	arg_pr,0
	equ	work_pr,5
	equ	source_pr,2
	equ	target_pr,1
	equ	return_pr,3

	tempd	work_space(40)  	some work space aligned on an even word
	temp	temp_space(2)
"				boundary

	entry	cobol_opch_init

cobol_opch_init:

	push

	epp	source_pr,arg_pr|2,*
	spri7	temp_space
	epp	source_pr,source_pr|0,*     load pointer to source into pr2
	epp	target_pr,arg_pr|4,*
	epp	target_pr,target_pr|0,*     load pointer to target into 1
	ldq	arg_pr|6,*     load source scale into Q reg
	lda	arg_pr|8,*     load target scale into A reg
	lxl7	arg_pr|10,*     load type code of source
	lxl6	arg_pr|12,*     load type code of target

	epp	work_pr,work_space     load a pointer to some work space in
"					  this procedure's stack

	tsp	return_pr,cobol_opch_operator_     call cobol_opch_operator_

	epp7	temp_space,*
	return	return to calling procedure

	end
