" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"  When a gcos activity is set up to be run, the signal pointer in	"
"  the users' stack is set to point to this procedure.  Thus on the	"
"  occurence of a fault this procedure rather than signal_ is invoked."
"  This procedure then checks to see if the fault was caused by a	"
"  gcos mme.  If so, it transfers control to the gcos mme handler.	"
"  If not, it transfers control to signal_.  The condition mechanism	"
"  search for gcos mmes is thus bypassed.			"
"							"
"	Written by Peter M. Haber  8/22/72			"
"	Modified by T. Casey        June 1973
"	Modified by D. Kayden       December 1974
"	Change: Dave Ward 07/30/81 gcos_mme_processor_
"			changed to gcos_process_mme_
"							"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
"
	name	gcos_check_for_mme_
	entry	gcos_check_for_mme_
"
"
	include	mc
"
gcos_check_for_mme_:

	eppbp	ap|2,*		pointer to fault name
	lda	bp|0		load fault name
	ldq	bp|1
	cmpaq	gc_mme		compare to "mme1"
	tnz	<gcos_ext_stat_>|[sig_ptr],*
"
	eppbp	ap|4,*		pointer to machine conditions
	eppbp	bp|0,*
	ldx0	bp|mc.scu.ppr.psr_word load psr word
	anx0	scu.ppr.psr_mask,du	isolate psr
	cmpx0	<gcos_ext_stat_>|[gcos_slave_area_seg]  check segment number
	tnz	<gcos_ext_stat_>|[sig_ptr],*
	tra	<gcos_process_mme_>|[gcos_process_mme_]	real gcos mme, transfer to gcos mme handler
"
"
	even
gc_mme:	acc	"mme1"
"
"
"
	end
