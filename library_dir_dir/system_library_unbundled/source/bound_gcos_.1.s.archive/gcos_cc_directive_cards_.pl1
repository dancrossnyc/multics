/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */



/*
   ********************************************************************************************
   ********************************************************************************************
   *
   *
   *	PROCESS  ASSORTED  DIRECTIVE  CARDS
   *
   *
   *  This module processes assorted directive cards for BMC (CONVER),
   *  FILEDIT (the editor), the loader, and UTILITY.  This processing
   *  includes recognizing these control cards outside the activities
   *  for which they are meaningful and warning the user.  If the cards
   *  are found in the proper context, they are written to the proper
   *  file and processing is terminated.
   *
   *
   *  The following control cards are processed within:
   *
   *
   *	$	COMPILE
   *	$	COPY
   *	$	DELETE
   *	$	DUMP
   *	$	ENDEDIT
   *	$	ENDLD
   *	$	FFILE
   *	$	FORM
   *	$	FUTIL
   *	$	INCLUDE
   *	$	INPUT
   *	$	LIST
   *	$	MODIFY
   *	$	MULTI
   *	$	OUTPUT
   *	$	PATCH
   *	$	QUTIL
   *	$	SEQ
   *	$	SETSQ
   *	$	SYSLD
   *
   *
   *	Written by T. Casey,  November 1973
   *	Modified by D. Kayden,  April 1974
   *	Modified by M. R. Jordan,  July 1977
   *
   *
   ********************************************************************************************
   ********************************************************************************************
*/



gcos_cc_directive_cards_: proc (card, indx, gcos_record);

dcl  card char (80);						/* ascii card image */
dcl  indx fixed bin(24);						/* position in card table - not used here */
dcl  gcos_record char (*);						/* bcd card image overlayed by char (*) variable */
dcl  gcos_write_$record ext entry (char (*), char (*), bit (8));
dcl  gcos_write_to_er_ options (variable);
dcl  fc char (2);						/* temp for holding file code value */
dcl  addr builtin;

/*

   Process FILEDIT directives.  Note that we should never get one of these directives
   if the user has a good input file.  FILEDIT directives should only appear on *C.

*/


cc_editor: entry (card, indx, gcos_record);


	call gcos_write_to_er_ (
	     "Warning:  The following FILEDIT directive appears out of place.  It will be ignored.^/^a^2x^a",
	     gcos_ext_stat_$card_num, card);
	return;

/*

   Process SYSEDIT directives.  Note that we should never get one of these directives
   if the user has a good input file.  SYSEDIT directives should only appear on *C.

*/


cc_sysedit: entry (card, indx, gcos_record);


	call gcos_write_to_er_ (
	     "Warning:  The following SYSEDIT directive appears out of place.  It will be ignored.^/^a^2x^a",
	     gcos_ext_stat_$card_num, card);
	return;

/*

   Process SCED directives.  Note that we should never get one of these directives
   if the user has a good input file.  SCED directives should only appear on *C.

*/


cc_sced:	entry (card, indx, gcos_record);


	call gcos_write_to_er_ (
	     "Warning:  The following SCED (*C editor) directive appears out of place.  It will be ignored.^/^a^2x^a",
	     gcos_ext_stat_$card_num, card);
	return;

/*

   Process BMC (CONVER) directives.

*/


cc_bmc:	entry (card, indx, gcos_record);


	if gcos_ext_stat_$activity_name ^= "conver" then do;
	     call gcos_write_to_er_ (
		"Warning:  The following BMC (CONVER) directive appears out of place.  It will be ignored.^/^a^2x^a",
		gcos_ext_stat_$card_num, card);
	     return;
	end;
	else go to write_it;

/*

   Process a $ FFILE control card.

*/

cc_ffile:	entry (card, indx, gcos_record);


	if gcos_ext_stat_$activity_name ^= "utilit" & gcos_ext_stat_$activity_name ^= "geload" then do;
	     call gcos_write_to_er_ (
		"Warning:  The following $ FFILE card appears out of place.  It will be ignored.^/^a^2x^a",
		gcos_ext_stat_$card_num, card);
	     return;
	end;

	go to write_it;

/*

   Process a $ DUMP control card.

*/


cc_dump:	entry (card, indx, gcos_record);


	if gcos_ext_stat_$activity_name ^= "geload" then do;
	     call gcos_write_to_er_ (
		"Warning:  The following $ DUMP card appears out of place.  It will be ignored.^/^a^2x^a",
		gcos_ext_stat_$card_num, card);
	     return;
	end;

	gcos_ext_stat_$save_data.nondollar = "1"b;
	gcos_ext_stat_$nondollar = "r*";		/* nondollar cards may follow this card */

	go to write_it;

/*

   Process a UTILITY directive card.

*/


cc_utility: entry (card, indx, gcos_record);


	if gcos_ext_stat_$activity_name ^= "utilit" then do;
	     call gcos_write_to_er_ (
		"Warning:  The following UTILITY directive appears out of place.  It will be ignored.^/^a^2x^a",
		gcos_ext_stat_$card_num, card);
	     return;
	end;
	else goto write_it;

/*

   The following code is used by all entries in this module.  It will write the
   $ card to the proper file and get things set up for a $ ETC card following.

*/


write_it:

	fc = gcos_ext_stat_$nongcos;
	call gcos_write_$record (fc, gcos_record, (8)"0"b);


/*

   Now get things set up for a $ ETC card following this card.

*/


	gcos_ext_stat_$save_data.write_etc = "1"b;			/* in case it is continued */
	gcos_ext_stat_$etc_filecode = fc;

	return;

%include gcos_ext_stat_;

     end gcos_cc_directive_cards_;
