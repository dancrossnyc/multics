/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


/* *****************************************************************************************
   *******************************************************************************************
   *
   *
   *
   *	$    S N U M B  C A R D  P R O C E S S O R
   *
   *
   *  This routine processes $ snumb cards which have the following format:
   *
   *
   *     CONTROL CARD:	SNUMB
   *
   *
   *     FORMAT:		$     SNUMB     Job_Identifier,Urgency
   *
   *
   *     FIELDS:		Job Identifier:
   *
   *     One to five characters used to identify job. Must not be
   *     blank or 00000.
   *
   *     Urgency:
   *
   *     A number from 1 to 63 which represents the relative
   *     importance of the job.
   *
   *     COMMENTS:	Must be the first card of the job.
   *		Urgency field is currently ignored.
   *
   *
   *
   *
   * WRITTEN BY DICK SNYDER AUGUST 18,1970
   * MODIFIED BY T.CASEY DECEMBER 1972
   * Modified by M. R. Jordan, August 1977
   * Modified by R. Barstad  Nov 1982  Fix format of actid for console messages
   *
   *
   ********************************************************************************************
   ****************************************************************************************** */




gcos_cc_snumb_: proc (card);

dcl  ZEROS char (5) static internal options (constant) init ("00000");
dcl  addr builtin;
dcl  card char (80);						/* card image of snumb card */
dcl  gcos_error_ ext entry options (variable);
dcl  gcos_et_$cc_bad_card fixed bin(35) ext;
dcl  gcos_et_$cc_bad_field fixed bin(35) ext;
dcl  gcos_et_$cc_missing_field fixed bin(35) ext;
dcl  i fixed bin(24);						/* temp */
dcl  search builtin;
dcl  substr builtin;
dcl  verify builtin;

/*

   Make sure this is the only $ SNUMB card.

*/


	if gcos_ext_stat_$save_data.snumb then call gcos_error_ (gcos_et_$cc_bad_card, "Only one $ SNUMB card is allowed per job.^/^a^2x^a",
	     gcos_ext_stat_$card_num, card);
	gcos_ext_stat_$save_data.snumb = "1"b;				/* indicate that snumb processed */


/*

   Save the activity number (initialized to 01) and snumb (from the card).

*/


	i = search (substr (card, 16, 5), " ,")-1;
	if i < 0 then i = 5;


	if i = 0 then call gcos_error_ (gcos_et_$cc_missing_field,
	     "The snumb is missing from the follwing $ SNUMB card:^/^a^2x^a",
	     gcos_ext_stat_$card_num, card);


	if substr (card, 16, i) = substr (ZEROS, 1, i) then /* snumb value cannot be zeros */
	     call gcos_error_ (gcos_et_$cc_bad_field, "Illegal snumb value.  ""^a""^/^a^2x^a",
	     substr (card, 16, i), gcos_ext_stat_$card_num, card);


	if verify (substr (card, 16, i), "0123456789ABCDEFGHIJKMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz") ^= 0 then
	     call gcos_error_ (gcos_et_$cc_bad_field, "Illegal snumb value.  ""^a""^/^a^2x^a",
	     substr (card, 16, i), gcos_ext_stat_$card_num, card);


	save_data.actid = substr (card, 16, i); /* save activity no and accnt i.d. */
	substr(save_data.actid,6,3) = "-01";

	return;					/* that's all there is to do */

%include gcos_ext_stat_;



     end gcos_cc_snumb_;
