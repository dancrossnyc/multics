/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */



gcos_cc_data_: proc (card);

/* *****************************************************************************************
   *******************************************************************************************
   *
   *
   *	G C O S   $   D A T A   C A R D   P R O C E S S I N G
   *
   *
   *  This procedure handles the processing of the $  DATA card. This card has the
   *  following format:
   *
   *	$  DATA  FC,Options
   *
   *	Where FC is a two character file code and options are as follows:
   *
   *		C_K_S_U_M_	Binary checksums will be checked.
   *		NCKSUM	No checksums will be checked.
   *		COPY	All $ control cards will be copied
   *			up to a $ ENDCOPY card.
   *		N_C_O_P_Y_	No $ control cards will be copied.
   *		TAKEc	Card decks not punched by GE punches
   *			will be read. Any invalid punches will
   *			be replaced by the character following
   *			the TAKE (c).
   *		SEQ	Check sequence and delete activity if error.
   *			The COPY option overrides SEQ.
   *		CKSEQ	Check sequence and flag errors but don't
   *			delete activity.  The COPY option overrides CKSEQ.
   *		N_S_E_Q_	No sequence check.
   *		ENDFC	Match this $ DATA card with corresponding $ ENDCOPY.
   *		IBMF	IBM Fortran set
   *		IBMC	IBM Cobol set
   *		IBMEL	IBM Extended Language set (029 keypunch codes)
   *		IBMPL	PL/I set
   *		GE225	Model G-225 set
   *
   *	NOTE: If no options are specified, the underlined options
   *		  will be in effect.
   *
   *	CAUTION: The following options are the only ones implemented currently:
   *		COPY, NCOPY, CKSUM, NCKSUM, ENDFC, and NSEQ.
   *                Other options are recognized, and a warning message is issued.
   *
   *	WRITTEN BY DICK SNYDER JANUARY 8,1971
   *      MODIFIED BY T.CASEY DECEMBER 1972, DECEMBER 1973
   *      MODIFIED BY R.H. MORRISON ON APRIL 5, 1974
   *	MODIFIED BY D. KAYDEN APRIL 1974
   *	Modified by M. R. Jordan, April 1977 to process ENDFC option
   *	Modified by M. R. Jordan, August 1977 to process incode specifications.
   *	Change: Dave Ward	07/28/81 Allow period in name (By Dick Hemes)
   *      Change: Ron Barstad  84-11-19  Added # and $ as valid file code chars
   *
   *********************************************************************************************
   ****************************************************************************************** */

dcl  END_OF_CARD fixed bin(24)init (2) static int options (constant);
dcl  NULL_FIELD fixed bin(24)init (1) static int options (constant);
dcl  addr builtin;
dcl  card char (80);						/* input card image */
dcl  field char (6);						/* holder for field */
dcl  gcos_error_ ext entry options (variable);
dcl  gcos_et_$cc_bad_fc fixed bin(35) ext;
dcl  gcos_et_$cc_bad_field fixed bin(35) ext;
dcl  gcos_get_cc_field_ ext entry (char (*), char (6), fixed bin(24));
dcl  gcos_write_to_er_ entry options (variable);
dcl  result fixed bin(24);						/* result from gcos_get_cc_field_ */
dcl  substr builtin;
dcl  verify builtin;

/*

   Begin processing the $ DATA control card.  If the user has specified a DATA file outside an activity
   let him know about our ignoring it.

*/


	if ^gcos_ext_stat_$save_data.activ then do;
	     call gcos_write_to_er_ (
		"Warning:  The following $ DATA card is outside an activity definition.  It is being ignored.^/^a^2x^a",
		gcos_ext_stat_$card_num, card);
	     return;
	end;


/*

   Get the file code from the $ DATA card.  If there is no file code,
   let the user know about our assumption of the file code i*.

*/


	call gcos_get_cc_field_ (card, field, result);

	if result ^= 0 then do;
	     field = "i*";
	     call gcos_write_to_er_ ("Warning:  i* used as default for data.^/^a^2x^a", gcos_ext_stat_$card_num, card);
	end;

/*

   Make sure the file code value is good (i.e., meets all of the requirements
   for a good file code).  Then save the file code for gcos_gein_ to use.

*/


	if verify (substr (field, 1, 2), "abcdefghijklmnopqrstuvwxyz0123456789.*#$") ^= 0 then
	     call gcos_error_ (gcos_et_$cc_bad_fc, "File code characters must be alphanumeric or .*#$   ""^a""^/^a^2x^a",
	     field, gcos_ext_stat_$card_num, card);
	if substr (field, 3) = " " then ;
	else if substr (field, 3) ^= "s" then
	     call gcos_error_ (gcos_et_$cc_bad_fc, "Disposition must be ""s"".  ""^a""^/^a^2x^a",
	     field, gcos_ext_stat_$card_num, card);
	else if verify (substr (field, 2, 1), "0123456789.*#$") ^= 0 then
	     call gcos_error_ (gcos_et_$cc_bad_fc, "Second file code character must be numeric or * when s disposition is specified.  ""^a""^/""^a^4x^a""",
	     field, gcos_ext_stat_$card_num, card);
	else do;
	     call gcos_error_ (0,
		"The saving of DATA files is not yet supported by the Multics GCOS Environment Simulator.^/^a^2x^a",
		gcos_ext_stat_$card_num, card);
	end;

	gcos_ext_stat_$nondollar = substr (field, 1, 2);
	gcos_ext_stat_$save_data.nondollar = "1"b;


/*

   If no options appear then quit now.  Otherwise, initialize things and continue processing.

*/


	gcos_ext_stat_$save_data.copy, gcos_ext_stat_$save_data.cksum, gcos_ext_stat_$save_data.endfc = "0"b;
	gcos_ext_stat_$incode = 0;

	if result = END_OF_CARD then return;

/*

   Now process the optins on the $ DATA card one at a time.

*/


get:
	call gcos_get_cc_field_ (card, field, result);

	if result = END_OF_CARD then do;
	     if gcos_ext_stat_$save_data.endfc then
		if ^gcos_ext_stat_$save_data.copy then call gcos_error_ (gcos_et_$cc_bad_field,
		     "The ENDFC option requires the COPY option.^/^a^2x^a",
		     gcos_ext_stat_$card_num, card);
	     if gcos_ext_stat_$incode ^= 0 then
		if ^gcos_ext_stat_$save_data.copy then call gcos_error_ (gcos_et_$cc_bad_field,
		     "Incode specifications require the COPY option.^/^a^2x^a",
		     gcos_ext_stat_$card_num, card);
	     return;
	end;
	if result = NULL_FIELD then go to get;


/*

   For COPY simply set the flag to say watch for a $ ENDCOPY card.

*/


	if field = "copy" then do;
	     gcos_ext_stat_$save_data.copy = "1"b;
	     go to get;
	end;


/*

   For ENDFC we need to set the flag and remember the file code.

*/


	if field = "endfc" then do;
	     gcos_ext_stat_$endfc = gcos_ext_stat_$nondollar;
	     gcos_ext_stat_$save_data.endfc = "1"b;
	     goto get;
	end;

/*

   The CKSUM and NCOPY options are defaults so we need to do very little.

*/


	if field = "cksum" then do;
	     gcos_ext_stat_$save_data.cksum = "0"b;
	     goto get;
	end;


	if field = "ncopy" then do;
	     gcos_ext_stat_$save_data.copy = "0"b;
	     goto get;
	end;


/*

   For NCKSUM mark no checksum checking.

*/


	if field = "ncksum" then do;
	     gcos_ext_stat_$save_data.cksum = "1"b;
	     go to get;
	end;


/*

   Process incode specifications.

*/


	if field = "ibmf" then do;
	     gcos_ext_stat_$incode = 1;
	     goto get;
	end;

	if field = "ibmc" then do;
	     gcos_ext_stat_$incode = 2;
	     goto get;
	end;

	if field = "ibmel" then do;
	     gcos_ext_stat_$incode = 3;
	     goto get;
	end;


/*

   The following processing is of options we recognize but do not support.

*/


	if field = "seq" | field = "nseq" | field = "ckseq" | substr (field, 1, 4) = "take" | field = "ge225"
	| field = "ibmpl" then do;
	     call gcos_write_to_er_ ("Warning:  ""^a"" is an unimplemented option on $ DATA cards.^/^a^2x^a",
		field, gcos_ext_stat_$card_num, card);
	     go to get;
	end;


/*

   We have found an unrecognized option.  Abort processing.

*/


	call gcos_error_ (gcos_et_$cc_bad_field, """^a""^/^a^2x^a", field, gcos_ext_stat_$card_num, card);

%include gcos_ext_stat_;


     end gcos_cc_data_;
