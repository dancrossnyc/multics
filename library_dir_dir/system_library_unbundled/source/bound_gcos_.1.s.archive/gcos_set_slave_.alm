" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" ***********************************************************
" Provide for setting the BAR register and transfering
" into GCOS user code.
"
"	WRITTEN BY DICK SNYDER, JANUARY 31, 1973 for the 6180
"	MODIFIED BY T. CASEY, MAY 1974  TO ADD no_bar ENTRY
"	MODIFIED BY D. KAYDEN DECEMBER 1974, JUNE 1975
"	Modified by M. R. Jordan, August 1977
"
	name	gcos_set_slave_
	temp	temp
"
	entry	gcos_set_slave_
"
" dcl gcos_set_slave_ entry(new_bar,code,bar_mode);
" dcl gcos_set_slave_ entry(fixed bin(18),ptr,bit(1)aligned);
"
" Set the BAR register to the "new_bar" value.
" The right 18 bits are used (9 for bar base and 9 for bar bound).
" If "bar_mode" is "0"b execute in bar mode.
" Transfer to the code specified by pointer "code".
" Note that the pointer "code" word offset (addrel offset) is
" in relation to the bar base setting (i.e., bar-base*512+offset)
" is the offset into the Multics segment located by pointer code.
" "bar_mode" = "1"b implies do a TRA rather than TSS machine
" operation, i.e., don't run in bar mode. This nullifies any bar
" base setting.
"
gcos_set_slave_:
	push
	sprisp	sb|stack_header.bar_mode_sp save sp so signaller can reset
"				 it in case gcos uses adr6
	lda	ap|2,*		get the BAR setting
	als	18		position it
	sta	temp
	lbar	temp		set the BAR
	eppbp	ap|4,*		get the ptr
	eppbp	bp|0,*		..

	stz	sp|stack_frame.entry_ptr  make stack traces look nice
	stz	sp|stack_frame.entry_ptr+1
	szn	ap|6,*		test no bar switch
	tmi	bp|0		bit on means do tra instead of tss
	tss	bp|0		transfer to the gcos program and set BAR mode
"
	entry	load_bar
"
" dcl gcos_set_slave_$load_bar entry(new_bar);
" dcl gcos_set_slave_$load_bar entry(fixed bin(18));
"
" Perform just the BAR register setting, "new_bar" treated the
" same as for the gcos_set_slave_ entry.
"
load_bar:
	push
	lda	ap|2,*		get the BAR setting
	als	18		position it
	sta	temp
	lbar	temp		set the BAR
	return		that's it
"
	include	stack_header
"
	include	stack_frame
	end
