/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


gcos_cc_abort_: proc;

/* This procedure processes the $ ABORT card.

   When this card is encountered, we set up to put UTILITY directive cards
   onto U*, and continue processing until a terminator is found, at which
   time we run the activity. If the activity aborts, gcos_run_activity_ will
   build a MME GECALL UTILITY in the slave prefix, and transfer control to it,
   with U* being there and waiting for it.

   We turn on gcos_ext_stat_$save_data.abort_card to tell the rest of the simulator that the
   $ ABORT card was encountered.

   If PSW bit 1 is off, we turn on bit 12 so the slave program can look to see
   if a $ ABORT card was encountered. We use gcos_ext_stat_$save_data.abort_card rather than
   PSw bit 12 to decide whether to run UTILITY after an abort, and we will
   only do so in an EXECUTE activity. It is not clear to us whether this is
   correct: should the slave program be able to create a U* file and turn
   on bit 12 (in its wrapup, for example) to force an abort subactivity even
   though there was no $ ABORT card? is it true that abort subactivities are
   only run in EXECUTE activities, or are they run in all but FORTY and GMAP
   activities? and what is done if a $ ABORT card is encountered in an illegal
   context?


   WRITTEN BY T. CASEY DECEMBER 1973
   MODIFIED BY T. CASEY FEBRUARY 1974

   */

%include gcos_ext_stat_;

dcl (addr, substr) builtin;


	gcos_ext_stat_$nongcos = "u*";

	gcos_ext_stat_$save_data.abort_card = "1"b;

	if ^substr (save_data.psw, 2, 1) then	/* if bit 1 off */
	     substr (save_data.psw, 13, 1) = "1"b;	/* turn on bit 12 */

	return;

     end gcos_cc_abort_;
