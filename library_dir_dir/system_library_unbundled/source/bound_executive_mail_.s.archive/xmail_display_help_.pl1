/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */



/****^  HISTORY COMMENTS:
  1) change(86-01-22,LJAdams), approve(86-01-22,MCR7327),
     audit(86-04-22,RBarstad), install(86-04-25,MR12.0-1048):
     Added ssu references so subsystem calls to help_ will work properly.
     Added include files "help_args" and "xmail_data".
  2) change(86-04-21,Blair), approve(86-04-21,MCR7358),
     audit(86-04-22,RBarstad), install(86-05-28,MR12.0-1062):
     Changed to use a cds segment to provide the help dir pathname. This has
     caused xmail_help.incl.pl1 to be replaced by xmail_help_data_.incl.pl1.
  3) change(87-09-03,LJAdams), approve(87-09-03,MCR7766),
     audit(88-08-04,GDixon), install(88-09-13,MR12.2-1109):
     Changed Vhelp_args_2 to Vhelp_args_3.
                                                   END HISTORY COMMENTS */

xmail_display_help_: proc (P_seg_name, P_info_name, P_code);

	dcl     (P_seg_name, P_info_name) char (*);
	dcl     P_code		 fixed bin (35);

	dcl     code		 fixed bin (35);
	dcl     ME_CHAR		 char (19) init ("xmail_display_help_") int static options (constant);
          dcl     ME_HELP_SUFFIX         char (10) init ("info") int static options (constant);
          dcl     ME_SEARCH_LIST         char (4) init ("info") int static options (constant);
	dcl     (error_table_$nomatch, xmail_err_$no_help_available, xmail_err_$unable_to_get_help) fixed bin (35) ext;

	dcl     (addr, dim, null)		builtin;

          dcl     cleanup condition;
		 

	P_code = 0;
          Phelp_args = null;
	
          on cleanup
             call help_$term ("xmail", Phelp_args, (0));
	
	call help_$init (ME_CHAR, ME_SEARCH_LIST, "", Vhelp_args_3, Phelp_args, code);
	if code ^= 0 then go to DH_ERR;

	help_args.Nsearch_dirs = dim(xmail_HELP_DIRS.path, 1);
	help_args.search_dirs  = xmail_HELP_DIRS.path;
	help_args.Sctl.all = "1"b;			/* No questions asked */
	help_args.Npaths = 1;
	help_args.path (1).value = P_seg_name;
	help_args.path (1).info_name = P_info_name;
	help_args.path (1).S.pn_ctl_arg = "0"b;
	help_args.path (1).S.info_name_not_starname = "0"b;
	
	call help_ (ME_CHAR, Phelp_args, ME_HELP_SUFFIX, (0), code);
	if code ^= 0 then go to DH_ERR;

	go to DH_EXIT;

DH_ERR:

	if code = error_table_$nomatch
	then P_code = xmail_err_$no_help_available;
	else P_code = xmail_err_$unable_to_get_help;

DH_EXIT:

          call help_$term ("xmail", Phelp_args, (0));

%page;
%include xmail_help_data_;
%page;
%include help_args_;
%page;
%include xmail_data;
%page;
%include iox_dcls;

     end xmail_display_help_;
