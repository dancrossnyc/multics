/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


xmail_Review_Mlist_: proc ();

/* Author unknown

   83-07-27 DJ Schimke: Changed the mailing list suffix to "mls" to conform 
   with the mail_system_ standard.  Note that xmail_dir_manager_$open will
   add names with ".mls" suffix to any mailing lists with the ".mlist" suffix.
   This is part of the conversion to the new mail_system_ interfaces using
   version 2 mailboxes.

   83-10-04  DJ Schimke: Changed OPT (4): of PERFORM_OPTION to call
   xmail_get_str_$yes_no rather than xmail_get_str_. Also added cleanup
   handler and cleaned up other problems uncovered by audit.

   83-11-01  DJ Schimke: Changed the calling sequence of xmail_select_file_.

   84-07-03  DJ Schimke: Modified to use a three-column menu format changing
   the calls to xmail_create_emnu_ to include a N_COLUMNS parameter.
*/

/* Automatic */

	dcl     prompt_string	 char (80) var;
	dcl     default_list	 char (24) var;
	dcl     choice		 fixed bin;
	dcl     code		 fixed bin (35);
	dcl     dir		 char (168);
	dcl     list_display	 char (38) varying;
	dcl     file		 char (32) var;
	dcl     new_dir		 char (168);
	dcl     new_file		 char (32) var;
	dcl     redisplay_menu	 bit (1) aligned;
	dcl     unused_bit		 bit (1) aligned;
	dcl     unused_bit2		 bit (1) aligned;

/* Entries */

	dcl     get_system_free_area_	 entry () returns (ptr);
	dcl     hcs_$star_		 entry (char (*), char (*), fixed bin (2), ptr, fixed bin, ptr, ptr, fixed bin (35));
	dcl     ioa_$rsnnl		 entry () options (variable);
	dcl     ioa_		 entry () options (variable);
	dcl     ioa_$nnl		 entry () options (variable);
	dcl     window_$bell	 entry (ptr, fixed bin (35));
	dcl     window_$clear_window	 entry (ptr, fixed bin (35));
	dcl     xmail_create_menu_	 entry (char (*), (*) char (*) var, fixed bin, ptr, fixed bin (35));
	dcl     xmail_delete_mlist_	 entry (char (*), char (*));
	dcl     xmail_display_help_	 entry (char (*), char (*), fixed bin (35));
	dcl     xmail_display_mlist_	 entry (char (*), char (*));
	dcl     xmail_dprint_mlist_	 entry (char (*), char (*));
	dcl     xmail_error_$no_code	 entry () options (variable);
	dcl     xmail_get_choice_	 entry (ptr, char (*), char (*), char (*), char (*), bit (1) aligned, char (*), fixed bin, fixed bin (35));
	dcl     xmail_select_file_$caller_msg entry (char (*), char (*), char (*), bit (1) aligned, bit (1) aligned,
				 char (168), char (32) var, char (*), bit (1) aligned, bit (1) aligned, fixed bin (35));
	dcl     xmail_create_mlist_	 entry (char (*), fixed bin (35));
	dcl     xmail_update_mlist_	 entry (char (*), char (*));

/* Internal Static */

	dcl     menup		 ptr init (null) int static;

/* Constants */

	dcl     ALLOW_NEW		 bit (1) aligned init ("1"b) static options (constant);
	dcl     ALLOW_OLD		 bit (1) aligned init ("1"b) static options (constant);
	dcl     DONT_ALLOW_NEW	 bit (1) aligned init ("0"b) static options (constant);
	dcl     DONT_ALLOW_OLD	 bit (1) aligned init ("0"b) static options (constant);
	dcl     MLIST_SUFFIX	 char (3) init ("mls") int static options (constant);
	dcl     NAME		 char (19) init ("xmail_Review_Mlist_") int static options (constant);
	dcl     N_COLUMNS		 fixed bin static options (constant) init (3);

	dcl     OPTION_NAMES	 static options (constant) init (
				 "Create",
				 "Display",
				 "Update",
				 "Discard",
				 "Rename",
				 "Print") dim (6) char (15) varying;

/* External Static */

	dcl     (xmail_err_$help_requested,
	        xmail_err_$exit_now,
	        error_table_$nomatch)	 fixed bin (35) ext static;

	dcl     iox_$user_output	 ptr ext;
	dcl     msg_to_user		 static options (constant) init
				 ("You have no mailing lists.") char (26);


	dcl     (cleanup, program_interrupt, quit, xmail_redisplay_menu) condition;

	dcl     (null, rtrim, sum, translate) builtin;

	star_names_ptr = null ();
	star_entry_ptr = null ();
	on condition (cleanup) call CLEAN_UP;

	on condition (xmail_redisplay_menu) begin;
		if menup ^= null
		then call menu_$display (xmail_windows.menu.iocb, menup, (0)); /* ignore errors, can't recover */
	     end;

	if menup = null then do;
	     call xmail_create_menu_ (" Mailing Lists ", OPTION_NAMES, N_COLUMNS, menup, code);
	     if code ^= 0 then call review_mlists_err (code, "While creating menu.");
	end;

	default_list = "";
	list_display = "";
	file = " ";

	on condition (quit)
	     begin;
		dcl     xmail_window_manager_$reconnect entry ();
		call xmail_window_manager_$reconnect ();
		go to START;
	     end;

	on condition (program_interrupt) go to START;

	call window_$clear_window (iox_$user_output, (0));/* ignore errors, can't recover */
	call ioa_ (" ");

START:

	call hcs_$star_ ((xmail_data.mail_dir), "**." || MLIST_SUFFIX, 2, get_system_free_area_ (), star_entry_count, star_entry_ptr, star_names_ptr, code);
	if code ^= 0 & code ^= error_table_$nomatch
	then call review_mlists_err (code, "While getting mailing list count.");
	redisplay_menu = "1"b;
	do while ("1"b);
	     call xmail_get_choice_ (menup, (list_display), "", "", xmail_data.normal_usage, redisplay_menu, "", choice, code);
	     redisplay_menu = "0"b;
	     if code = 0
	     then call PERFORM_OPTION (choice, redisplay_menu);
	     else if code = xmail_err_$help_requested
	     then call EXPLAIN_OPTION (choice);
	     else if code = xmail_err_$exit_now
	     then go to EXIT;
	     else call window_$bell (iox_$user_output, (0));
	end;					/* do while */

EXIT:

	return;
%page;
PERFORM_OPTION: proc (P_opt, P_redisplay);

	dcl     P_opt		 fixed bin;
	dcl     P_redisplay		 bit (1) aligned;
	dcl     new_mlist_name	 char (24) varying;
	dcl     new_seg_prefix	 char (32) varying;
	dcl     seg_dir		 char (168);

	dcl     hcs_$chname_file	 entry (char (*), char (*), char (*), char (*),
				 fixed bin (35));
	dcl     xmail_get_str_$yes_no	 entry (char (*) var, bit (1) aligned);
	dcl     yes_sw		 bit (1) aligned;



	call window_$clear_window (iox_$user_output, (0));
	go to OPT (P_opt);


OPT (1):						/* Create option */

	new_mlist_name = "";
	call xmail_create_mlist_ ((new_mlist_name), code);
	if code = 0
	then do;
	     default_list = new_mlist_name;
	     star_entry_count = star_entry_count + 1;
	end;
	return;

OPT (2):						/* Display option */

	if star_entry_count = 0
	then do;
	     call ioa_ (msg_to_user);
	     return;
	end;

	call SELECT_NEW_FILE ("displayed", (default_list));

	call xmail_display_mlist_ (dir, file || "." || MLIST_SUFFIX);
	return;



OPT (3):						/* Update option */

	if star_entry_count = 0
	then do;
	     call ioa_ (msg_to_user);
	     return;
	end;

	call SELECT_NEW_FILE ("updated", (default_list));

	call xmail_update_mlist_ (dir, file || "." || MLIST_SUFFIX);
	return;

OPT (4):						/* Discard option */

	if star_entry_count = 0
	then do;
	     call ioa_ (msg_to_user);
	     return;
	end;
	call SELECT_NEW_FILE ("discarded", (default_list));

	call ioa_$rsnnl ("Do you want to discard mailing list ""^a"" ? ", prompt_string, (0), file, code);
	call xmail_get_str_$yes_no (prompt_string, yes_sw);
	if yes_sw then do;
	     call xmail_delete_mlist_ (dir, file || "." || MLIST_SUFFIX);
	     default_list = "";
	     star_entry_count = star_entry_count - 1;
	     if star_entry_count = 0 then call ioa_ ("You have no mail list.");
	end;
	return;

OPT (5):						/* Rename option */

	if star_entry_count = 0
	then do;
	     call ioa_ (msg_to_user);
	     return;
	end;
	call SELECT_NEW_FILE ("renamed", (default_list));

	call ioa_$nnl ("Renaming ""^a"": ", file);
	call xmail_select_file_$caller_msg ("mailing list", MLIST_SUFFIX, "", DONT_ALLOW_OLD, ALLOW_NEW, seg_dir, new_seg_prefix, "New name", unused_bit, unused_bit2, code);
	if code ^= 0
	then do;
	     call ioa_ ("Selection of new mailing list name not successful.");
	     return;
	end;

	call hcs_$chname_file (rtrim (seg_dir), file || "." || MLIST_SUFFIX,
	     file || "." || MLIST_SUFFIX,
	     rtrim (new_seg_prefix) || "." || MLIST_SUFFIX, code);
	call ioa_ ("Mailing list name changed from ""^a"" to ""^a"".", file,
	     new_seg_prefix);
	file = new_seg_prefix;
	default_list = file;
	return;

OPT (6):						/* Print option */

	if star_entry_count = 0
	then do;
	     call ioa_ (msg_to_user);
	     return;
	end;
	call SELECT_NEW_FILE ("printed", (default_list));

	call xmail_dprint_mlist_ (dir, file || "." || MLIST_SUFFIX);
	return;

     end PERFORM_OPTION;

%page;
EXPLAIN_OPTION: proc (opt);

	dcl     opt		 fixed bin;

	call window_$clear_window (iox_$user_output, (0));
	call xmail_display_help_ (NAME || ".gi.info",
	     translate (OPTION_NAMES (opt), "_", " "), code);
	if code ^= 0 then call review_mlists_err (code, "Unable to display help for this option.");

     end EXPLAIN_OPTION;

review_mlists_err: proc (P_code, P_str);

	dcl     P_code		 fixed bin (35);
	dcl     P_str		 char (*);

	call xmail_error_$no_code (code, NAME, "l", P_str);
	go to EXIT;

     end review_mlists_err;

SELECT_NEW_FILE: proc (P_text, P_default);

	dcl     P_text		 char (*) parameter;
	dcl     P_default		 char (*) parameter;

	dcl     message		 char (78) varying;

	message = "Enter name of list to be " || P_text || " ";

	call xmail_select_file_$caller_msg ("list", MLIST_SUFFIX, (P_default), ALLOW_OLD, DONT_ALLOW_NEW, new_dir, new_file, (message), unused_bit, unused_bit2, code);
	if code ^= 0 then return;
	dir = new_dir;
	file = new_file;
	default_list = file;
	return;

     end SELECT_NEW_FILE;

CLEAN_UP: proc;
	if star_names_ptr ^= null () then free star_names;/* order is important */
	if star_entry_ptr ^= null () then free star_entries;
     end CLEAN_UP;

%page;
%include menu_dcls;
%page;
%include star_structures;
%page;
%include xmail_windows;
%page;
%include xmail_data;
%page;

     end xmail_Review_Mlist_;
