/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(86-02-26,Blair), approve(86-02-26,MCR7358),
     audit(86-04-18,RBarstad), install(86-05-28,MR12.0-1062):
     On a cleanup exit ( user hits break when in Multics mode) we come here to
     undelete any messages marked for deletion, but we don't want to put out
     the message to the user.
                                                   END HISTORY COMMENTS */


xmail_undelete_msgs_: proc (P_mailbox_ptr, P_curr_msgsp, P_pos_line, P_flavor);

/* Author unknown

   83-07-27  DJ Schimke: Modified to use new mail_system calls and version 2
   mailboxes.
*/

/* Parameter */

	dcl     P_mailbox_ptr	 ptr;
	dcl     P_curr_msgsp	 ptr;
	dcl     P_pos_line		 char (*);
	dcl     P_flavor		 char (*);

/* Automatic */

	dcl     add_more_msg	 bit (1) aligned;
	dcl     code		 fixed bin (35);
	dcl     deleted_msgsp	 ptr;
	dcl     i			 fixed bin;
	dcl     message_num		 fixed bin;
	dcl     message_ptr		 ptr;

/* Builtin */

	dcl     (length, maxlength, null, rtrim) builtin;

/* Entries */

	dcl     ioa_		 entry () options (variable);
	dcl     mail_system_$read_message entry (ptr, fixed bin, fixed bin (35));
	dcl     mail_system_$unmark_message_for_deletion entry (ptr, fixed bin (35));
	dcl     xmail_error_$no_code	 entry () options (variable);
	dcl     xmail_select_msgs_$deleted entry (ptr, ptr, char (*));
	dcl     xmail_select_msgs_$replace_curr entry (ptr, ptr, char (*));

/* Constant */

	dcl     ME_CHAR		 char (20) init ("xmail_undelete_msgs_") int static options (constant);
	dcl     MORE_MSG		 char (9) init (" MORE ...") int static options (constant);

	mailbox_ptr = P_mailbox_ptr;


	call xmail_select_msgs_$deleted (mailbox_ptr, deleted_msgsp, P_flavor);

	if deleted_msgsp = null then goto EXIT;
	do i = 1 to deleted_msgsp -> curr_msgs.count;
	     message_num = deleted_msgsp -> curr_msgs.numbers (i);
	     if mailbox.messages (message_num).message_ptr = null
	     then do;
		call mail_system_$read_message (mailbox_ptr, message_num, code);
		if code ^= 0
		then call xmail_error_$no_code (code, ME_CHAR, "l", "Unable to read message ^d. This is an internal programming error.", message_num);
	     end;
	     message_ptr = mailbox.messages (message_num).message_ptr;
	     call mail_system_$unmark_message_for_deletion (message_ptr, code);
	     if code ^= 0 then call xmail_error_$no_code (code, ME_CHAR, "l", "Unable to retrieve message ^d. This is an internal programming error.", message_num);
	end;

	call xmail_select_msgs_$replace_curr (P_curr_msgsp, deleted_msgsp, P_pos_line);



	if length (rtrim (P_pos_line)) > maxlength (P_pos_line) - length (MORE_MSG) then add_more_msg = "1"b;
	else add_more_msg = "0"b;
	if ^xmail_data.cleanup_signalled
	then call ioa_ ("Message^[s^;^] ^a ^[^a^] retrieved.", (deleted_msgsp -> curr_msgs.count > 1), rtrim (P_pos_line), add_more_msg, MORE_MSG);

EXIT:

	return;

%page;
%include xmail_curr_msg_info;
%page;
%include mlsys_mailbox;
%page;
%include xmail_prompts;
%page;
%include xmail_data;

     end xmail_undelete_msgs_;
