/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


xmail_display_mlist_: proc (P_dname, P_ename);

/*  Author unknown.

    83-06-27  DJ Schimke: Deleted unreferenced seg and substr. Declared length
    builtin. Replaced call to hcs$initiate_count with initiate_file_ and call
    to hcs$_terminate_noname with terminate_file.
*/
/* Parameter */

	dcl     (P_dname, P_ename)	 char (*);

/* Automatic */

	dcl     bit_count		 fixed bin (24);
	dcl     code		 fixed bin (35);
	dcl     seg_len		 fixed bin (21);
	dcl     seg_ptr		 ptr;


/* Entries */

	dcl     initiate_file_	 entry (char (*), char (*), bit (*), ptr, fixed bin (24), fixed bin (35));
	dcl     ioa_		 entry () options (variable);
	dcl     iox_$control	 entry (ptr, char (*), ptr, fixed bin (35));
	dcl     iox_$put_chars	 entry (ptr, ptr, fixed bin (21), fixed bin (35));
	dcl     terminate_file_	 entry (ptr, fixed bin (24), bit (*), fixed bin (35));
	dcl     window_$clear_window	 entry (ptr, fixed bin (35));
	dcl     xmail_error_$code_first entry () options (variable);
	dcl     xmail_error_$no_print	 entry () options (variable);

/* External Static */

	dcl     iox_$user_output	 ptr ext static;
	dcl     xmail_err_$int_prog_err fixed bin (35) ext static;

/* Constant */

	dcl     LOG		 char (1) init ("l") int static options (constant);
	dcl     MLIST_SUFFIX	 char (3) init ("mls") int static options (constant);
	dcl     NAME		 char (20) init ("xmail_display_mlist_") int static options (constant);
	dcl     READ		 bit (3) init ("100"b) int static options (constant);
	dcl     TERM_FILE_TERM	 bit (3) init ("001"b) int static options (constant);

/* Builtin */

	dcl     (addr, before, divide, length, null) builtin;

	seg_ptr = null;

	call initiate_file_ (P_dname, P_ename, READ, seg_ptr, bit_count, code);
	if seg_ptr = null then call display_mlist_err (xmail_err_$int_prog_err, "Cannot initiate mailing list.");

	seg_len = divide (bit_count + 8, 9, 21, 0);

	call window_$clear_window (iox_$user_output, (0));/* ignore error */

	call format_and_display_header ();

	call iox_$put_chars (iox_$user_output, seg_ptr, seg_len, code);
	if code ^= 0 then call display_mlist_err (xmail_err_$int_prog_err, "Cannot display mailing list");

	call term_seg ();

EXIT:

	return;

%page;

term_seg: proc ();

	if seg_ptr ^= null
	then call terminate_file_ (seg_ptr, bit_count, TERM_FILE_TERM, code);
	if code ^= 0 then call xmail_error_$no_print (code, NAME, LOG, "Unable to terminate mailing list. This is an internal error.");
     end term_seg;

display_mlist_err: proc (P_code, P_str);

	dcl     P_code		 fixed bin (35);
	dcl     P_str		 char (*);

	call xmail_error_$code_first (P_code, NAME, LOG, "^a", P_str);
	call term_seg ();
	go to EXIT;

     end display_mlist_err;

format_and_display_header: proc ();

	dcl     1 auto_window_position_info like window_position_info;

	dcl     pad_len		 fixed bin;
	dcl     text_len		 fixed bin;
	dcl     code		 fixed bin (35);

	auto_window_position_info.version = window_position_info_version;
	call iox_$control (iox_$user_output, "get_window_info", addr (auto_window_position_info), code);
	if code ^= 0 then call display_mlist_err (xmail_err_$int_prog_err, "While getting window info.");
	text_len = length ("*** Mailing List:  " || before (P_ename, "." || MLIST_SUFFIX) || " ***");
	pad_len = divide (auto_window_position_info.width - text_len, 2, 17, 0);

	call ioa_ ("^vx*** Mailing List:  ^a ***^/", pad_len, before (P_ename, "." || MLIST_SUFFIX));

     end format_and_display_header;

%page;
%include window_control_info;

     end xmail_display_mlist_;
