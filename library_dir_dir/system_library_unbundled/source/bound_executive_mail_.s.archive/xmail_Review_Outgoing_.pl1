/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1985 *
        *                                                         *
        *********************************************************** */


/****^  HISTORY COMMENTS:
  1) change(86-03-05,Blair), approve(86-03-05,MCR7358),
     audit(86-04-18,RBarstad), install(86-05-28,MR12.0-1062):
     Written by Joanne Backs from xmail_Review_Defaults_.pl1.
                                                   END HISTORY COMMENTS */

xmail_Review_Outgoing_: proc;

/* BEGIN DESCRIPTION

function:	This procedure provides the xmail user with a menu for the
	purpose of inspecting and updating default values which control
	outgoing messages during the operation of xmail.

END DESCRIPTION
*/

/* AUTOMATIC */

	dcl     choice                 fixed bin;
	dcl     code                   fixed bin (35);
	dcl     display_needed         bit (1) aligned;

/* CONSTANTS */

	dcl     NAME                   init ("xmail_Review_Outgoing_") char (22) int static options (constant);
	dcl     N_COLUMNS              fixed bin int static options (constant) init (2);
	dcl     OPTION_NAMES	 int static options (constant) init (
				 "Message Acknowledgment",
				 "Save Outgoing Messages",
			           "Set Outgoing Savefile",
			           "Set Full Name",
			           "Include Original in Reply",
			           "File Original Before Reply"
				 ) dim (6) char (28) var;
	dcl     TITLE		 init ("Personalize Outgoing Message Options") char (36)
				 int static options (constant);

/* EXTERNAL STATIC */

	dcl     iox_$user_output	 ptr ext static;
	dcl     xmail_err_$help_requested ext static fixed bin (35);
	dcl     xmail_err_$exit_now	 ext static fixed bin (35);

/* INTERNAL STATIC */

	dcl     menu		 int static ptr init (null);

/* ENTRIES */

	dcl     ioa_		 entry options (variable);
	dcl     xmail_create_menu_	 entry (char (*), (*) char (*) var, fixed bin, ptr, fixed bin (35));
	dcl     xmail_display_help_	 entry (char (*), char (*), fixed bin (35));
	dcl     xmail_error_$no_code	 entry () options (variable);
	dcl     xmail_get_choice_	 entry (ptr, char (*), char (*), char (*), char (*), bit (1) aligned, char (*), fixed bin, fixed bin (35));
	dcl     xmail_Review_Defaults_$acknowledge entry (char (*));
	dcl     xmail_Review_Defaults_$file_original entry (char (*));
	dcl     xmail_Review_Defaults_$full_name entry (char (*));
	dcl     xmail_Review_Defaults_$include_original entry (char (*));
	dcl     xmail_Review_Defaults_$save_mailbox entry (char (*));
	dcl     xmail_Review_Defaults_$save_messages entry (char (*));
	dcl     xmail_window_manager_$reconnect entry options (variable);

/* CONDITIONS */

	dcl     (program_interrupt, xmail_redisplay_menu, quit) condition;

/* BUILTINS */

	dcl     (null, translate) builtin;

/* INCLUDE FILES */

%include menu_dcls;
%page;
%include xmail_data;
%page;
%include xmail_help_infos;
%page;
%include xmail_windows;
%page;
%include window_dcls;

/* BEGIN */
	on condition (xmail_redisplay_menu) begin;
		if menu ^= null
		then call menu_$display (xmail_windows.menu.iocb, menu, (0));
	     end;

	if menu = null then do;
	     call xmail_create_menu_ (TITLE, OPTION_NAMES, N_COLUMNS, menu, code);
	     if code ^= 0 then call xmail_error_$no_code (status, NAME, "q",
		     "A programming error has been detected which prevents " ||
		     "the use of the ^a menu.", TITLE);

	end;

	on condition (program_interrupt) go to START;
	on condition (quit) begin;
		call xmail_window_manager_$reconnect ();
		go to START;
	     end;

	call window_$clear_window (iox_$user_output, (0));
	call ioa_ (" ");

START:	display_needed = "1"b;
	do while ("1"b);
	     call xmail_get_choice_ (menu, "", "", "", xmail_data.normal_usage,
		display_needed, "", choice, code);
	     display_needed = "0"b;
	     if code = 0 then call PERFORM_OPTION (choice, display_needed);
	     else if code = xmail_err_$help_requested then call EXPLAIN_OPTION (choice);
	     else if code = xmail_err_$exit_now then go to EXIT;
	     else call window_$bell (iox_$user_output, (0));
	end;
EXIT:	return;

/* INTERNAL PROCEDURES */

PERFORM_OPTION: proc (opt, redisplay);

/* PARAMETERS */

	dcl     redisplay		 bit (1) aligned parameter;
	dcl     opt		 fixed bin parameter;

/* AUTOMATIC */

	 dcl    name                   char (28) varying; /* name of option*/

/* BEGIN PERFORM_OPTION */

	call window_$clear_window (iox_$user_output, (0));
	name = OPTION_NAMES (opt);                        /* include name of option */
	go to OPT (opt);

OPT (1):	redisplay = "0"b;
	call xmail_Review_Defaults_$acknowledge ((name));
	go to OPT_EXIT;

OPT (2):	redisplay = "0"b;
	call xmail_Review_Defaults_$save_messages ((name));
	go to OPT_EXIT;

OPT (3):	redisplay = "0"b;
	call xmail_Review_Defaults_$save_mailbox ((name));
	go to OPT_EXIT;

OPT (4):	redisplay = "0"b;
	call xmail_Review_Defaults_$full_name ((name));
	go to OPT_EXIT;

OPT (5):	redisplay = "0"b;
	call xmail_Review_Defaults_$include_original ((name));
	go to OPT_EXIT;

OPT (6):	redisplay = "0"b;
	call xmail_Review_Defaults_$file_original ((name));
	go to OPT_EXIT;

OPT_EXIT: return;
     end PERFORM_OPTION;

EXPLAIN_OPTION: proc (opt);

	dcl     opt		 fixed bin parameter;

	call window_$clear_window (iox_$user_output, (0));
	call xmail_display_help_ (REVIEW_DEFAULTS_HELP,
	     translate (OPTION_NAMES (opt), "_", " "),
	     (0));

     end EXPLAIN_OPTION;

  end xmail_Review_Outgoing_;
