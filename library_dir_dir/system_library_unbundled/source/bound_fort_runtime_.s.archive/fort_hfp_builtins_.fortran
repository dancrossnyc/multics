c ******************************************
c *                                        *
c * Copyright, (C) Honeywell Limited, 1984 *
c *                                        *
c ******************************************

      %global ansi77, hfp
      real function abs_(arg)
      real arg
      abs_ = abs(arg)
      end
      real function acos_(arg)
      real arg
      acos_ = acos(arg)
      end
      real function aimag_(arg)
      complex arg
      aimag_ = aimag(arg)
      end
      real function aint_(arg)
      real arg
      aint_ = aint(arg)
      end
      real function amod_(arg1, arg2)
      real arg1, arg2
      amod_ = amod(arg1, arg2)
      end
      real function anint_(arg)
      real arg
      anint_ = anint(arg)
      end
      real function asin_(arg)
      real arg
      asin_ = asin(arg)
      end
      real function atan2_(arg1, arg2)
      real arg1, arg2
      atan2_ = atan2(arg1, arg2)
      end
      real function atan_(arg)
      real arg
      atan_ = atan(arg)
      end
      real function cabs_(arg)
      complex arg
      real major, minor, temp
      real max_real, max_real_by_root_2, max_real_by_16
      data max_real/o376777777777/, max_real_by_root_2/o376552023631/,
     &     max_real_by_16/o375777777777/
      major = abs(real(arg))
      minor = abs(aimag(arg))
      if (major.lt.minor) then
         temp = major
         major = minor
         minor = temp
      endif
      if (major.eq.0.0) then
         cabs_ = 0.0
      else if (major.le.max_real_by_root_2) then
         temp = minor/major
         cabs_ = major*sqrt(temp*temp + 1.0)
      else
         temp = minor/major
         temp = 0.0625*major*sqrt(temp*temp + 1.0)
         cabs_ = 16.0*temp
         if (temp.gt.max_real_by_16) cabs_ = max_real
      endif
      end
      complex function ccos_(arg)
      complex arg
      real x, y
      x = real(arg)
      y = aimag(arg)
      ccos_ = cmplx(cos(x)*cosh_(y), -sin(x)*sinh_(y))
      end
      complex function cexp_(arg)
      complex arg
      real x, y
      x = real(arg)
      y = aimag(arg)
      cexp_ = exp(x)*cmplx(cos(y), sin(y))
      end
      complex function clog_(arg)
      complex arg
      real r, x, y
      r = cabs_(arg)
      x = real(arg)
      y = aimag(arg)
      clog_ = cmplx(log(r), atan2(y, x))
      end
      complex function conjg_(arg)
      complex arg
      conjg_ = conjg(arg)
      end
      real function cos_(arg)
      real arg
      cos_ = cos(arg)
      end
      real function cosh_(arg)
      real arg
      real f, max_real, x
      data max_real/o376777777777/
      external signal (descriptors)
      x = abs(arg)
      if (x .gt. 352.8119) then
         call signal ("error", "-info_string", " sinh(x) or cosh(x), |x| > 352.8119, not allowed.  Type ""start"" to set result to + or - .83798798+153")
         cosh_ = max_real
      else if (x .gt. 9.704) then
         f = exp(0.5*x)
         cosh_ = 0.5*f*f
      else
         f = exp(x)
         cosh_ = 0.5*(f + 1/f)
      endif
      end
      complex function csin_(arg)
      complex arg
      real x, y
      x = real(arg)
      y = aimag(arg)
      csin_ = cmplx(sin(x)*cosh_(y), cos(x)*sinh_(y))
      end
      complex function csqrt_(arg)
      complex arg
      real factor, scaled_r, scaled_x, scaled_y
      if (abs(real(arg)).ge.1 .or. abs(aimag(arg)).ge.1) then
         factor = 4
         scaled_x = 0.03125*real(arg)
         scaled_y = 0.03125*aimag(arg)
      else
         factor = 0.25
         scaled_x = 8*real(arg)
         scaled_y = 8*aimag(arg)
      endif
      scaled_r = cabs_(cmplx(scaled_x, scaled_y))
      csqrt_ = cmplx(factor*sqrt(scaled_r + scaled_x),
     &        sign(factor*sqrt(scaled_r - scaled_x), scaled_y))
      end
      complex function cxp2_(arg1, arg2)
      complex arg1, arg2
      double precision f, x1, x2, x3, x4, y1, y2, y3, y4

c     Set (x1, y1) = arg1 and (x2, y2) = arg2.
      x1 = real(arg1)
      y1 = aimag(arg1)
      x2 = real(arg2)
      y2 = aimag(arg2)

c     Set (x3, y3) = log(arg1).
      x3 = 0.5*dlog(x1*x1 + y1*y1)
      y3 = datan2(y1, x1)

c     Set (x4, y4) = log(arg1)*arg2.
      x4 = x3*x2 - y3*y2
      y4 = x3*y2 + y3*x2

c     Set cxp2_ = exp(log(arg1)*arg2).
      f = exp(x4)
      cxp2_ = cmplx(f*dcos(y4), f*dsin(y4))
      end
      double precision function dabs_(arg)
      double precision arg
      dabs_ = dabs(arg)
      end
      double precision function dacos_(arg)
      double precision arg
      dacos_ = dacos(arg)
      end
      double precision function dasin_(arg)
      double precision arg
      dasin_ = dasin(arg)
      end
      double precision function datan2_(arg1, arg2)
      double precision arg1, arg2
      datan2_ = datan2(arg1, arg2)
      end
      double precision function datan_(arg)
      double precision arg
      datan_ = datan(arg)
      end
      double precision function dcos_(arg)
      double precision arg
      dcos_ = dcos(arg)
      end
      double precision function dcosh_(arg)
      double precision arg
      double precision f, max_double, x
      data max_double/o376777777777777777777777/
      external signal (descriptors)
      x = dabs(arg)
      if (x .gt. 352.8119149050121623d0) then
         call signal ("error", "-info_string", " sinh(x) or cosh(x), |x| > 352.8119, not allowed. Type ""start"" to set result to + or - .83798798+153")
         dcosh_ = max_double
      else if (x .gt. 22.18) then
         f = dexp(0.5*x)
         dcosh_ = 0.5*f*f
      else
         f = dexp(x)
         dcosh_ = 0.5*(f + 1/f)
      endif
      end
      double precision function ddim_(arg1, arg2)
      double precision arg1, arg2
      ddim_ = ddim(arg1, arg2)
      end
      double precision function dexp_(arg)
      double precision arg
      dexp_ = exp(arg)
      end
      real function dim_(arg1, arg2)
      real arg1, arg2
      dim_ = dim(arg1, arg2)
      end
      double precision function dint_(arg)
      double precision arg
      dint_ = dint(arg)
      end
      double precision function dlog10_(arg)
      double precision arg
      dlog10_ = dlog10(arg)
      end
      double precision function dlog_(arg)
      double precision arg
      dlog_ = dlog(arg)
      end
      double precision function dmod_(arg1, arg2)
      double precision arg1, arg2
      dmod_ = dmod(arg1, arg2)
      end
      double precision function dnint_(arg)
      double precision arg
      dnint_ = dnint(arg)
      end
      double precision function dprod_(arg1, arg2)
      real arg1, arg2
      dprod_ = dprod(arg1, arg2)
      end
      double precision function dsign_(arg1, arg2)
      double precision arg1, arg2
      dsign_ = dsign(arg1, arg2)
      end
      double precision function dsin_(arg)
      double precision arg
      dsin_ = dsin(arg)
      end
      double precision function dsinh_(arg)
      double precision arg
      double precision f, max_double, x, xx
      data max_double/o376777777777777777777777/
      external signal (descriptors)
      x = dabs(arg)
      if (x .gt. 352.8119149050121623d0) then
         call signal ("error", "-info_string", " sinh(x) or cosh(x), |x| > 352.8119, not allowed. Type ""start"" to set result to + or - .83798798+153")
         dsinh_ = max_double
      else if (x .gt. 22.18) then
         f = dexp(0.5*x)
         dsinh_ = 0.5*f*f
      else if (x .gt. 0.332) then
         f = dexp(x)
         dsinh_ = 0.5*(f - 1/f)
      else if (x .gt. 8.06e-10) then
         xx = x*x
         dsinh_ = x*(1 + xx*(1.666666666666666667d-1
     &                 + xx*(8.333333333333333333d-3
     &                 + xx*(1.984126984126984127d-4
     &                 + xx*(2.755731922398589065d-6
     &                 + xx*(2.505210838544171878d-8
     &                 + xx*(1.60590438368216146d-10)))))))
      else
         dsinh_ = x
      endif
      if (arg .lt. 0) dsinh_ = -dsinh_
      end
      double precision function dsqrt_(arg)
      double precision arg
      dsqrt_ = dsqrt(arg)
      end
      double precision function dtan_(arg)
      double precision arg
      dtan_ = dtan(arg)
      end
      double precision function dtanh_(arg)
      double precision arg
      double precision dcosh_, dsinh_
      if (abs(arg) .gt. 22.18) then
         dtanh_ = dsign(1d0, arg)
      else
         dtanh_ = dsinh_(arg)/dcosh_(arg)
      endif
      end
      real function exp_(arg)
      real arg
      exp_ = exp(arg)
      end
      integer function idnint_(arg)
      double precision arg
      idnint_ = idnint(arg)
      end
      real function alog10_(arg)
      real arg
      alog10_ = log10(arg)
      end
      real function alog_(arg)
      real arg
      alog_ = log(arg)
      end
      integer function nint_(arg)
      real arg
      nint_ = nint(arg)
      end
      real function sign_(arg1, arg2)
      real arg1, arg2
      sign_ = sign(arg1, arg2)
      end
      real function sin_(arg)
      real arg
      sin_ = sin(arg)
      end
      real function sinh_(arg)
      real arg
      real f, max_real, x
      double precision xx
      data max_real/o376777777777/
      external signal (descriptors)
      x = abs(arg)
      if (x .gt. 352.8119) then
         call signal ("error", "-info_string", " sinh(x) or cosh(x), |x| > 352.8119, not allowed. Type ""start"" to set result to + or - .83798798+153")
         sinh_ = max_real
      else if (x .gt. 9.704) then
         f = exp(0.5*x)
         sinh_ = 0.5*f*f
      else if (x .gt. 0.419) then
         f = exp(x)
         sinh_ = 0.5*(f - 1/f)
      else if (x .gt. 2.11e-4) then
         xx = dprod(x, x)
         sinh_ = x*(1 + xx*(1.666666666666666667d-1
     &                + xx*(8.333333333333333333d-3
     &                + xx*(1.984126984126984127d-4))))
      else
         sinh_ = x
      endif
      if (arg .lt. 0) sinh_ = -sinh_
      end
      real function sqrt_(arg)
      real arg
      sqrt_ = sqrt(arg)
      end
      real function tan_(arg)
      real arg
      tan_ = tan(arg)
      end
      real function tanh_(arg)
      real arg
      if (abs(arg) .gt. 9.704) then
         tanh_ = sign(1e0, arg)
      else
         tanh_ = sinh_(arg)/cosh_(arg)
      endif
      end
