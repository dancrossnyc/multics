/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
yes_no_: proc (answer);

/* to accept the next line from "user_input" and test it for any legitimate yes/no response.
   Responses may be any of the following: yes, no, y or n. */

/* Bob May 12/20/72 */

dcl  answer char (*);

dcl  buffer char (8),				/* buffer for user_input */
     nelemt fixed bin,
     io_status bit (72) aligned,
     sp ptr,
     1 phake_io_status aligned based (sp),
     2 io_stat_1 bit (36),
     2 io_stat_2 bit (36),
     bp ptr,
     yes_mask char (3) based (bp),
     no_mask char (2) based (bp),
     y_n_mask char (1) based (bp);

dcl  yes char (3) init ("yes"),
     no char (2) init ("no"),
     y char (1) init ("y"),
     n char (1) init ("n");

dcl  ios_$read_ptr entry (ptr, fixed bin, fixed bin),
     ios_$resetread entry (char (*), bit (72) aligned),
     com_err_ entry options (variable),
     com_err_$suppress_name entry (fixed bin, char (*), char (*));

/* * * * * * * * * * * * * * * * * * * */

start:
	sp = addr (io_status);
	bp = addr (buffer);
	call ios_$read_ptr (bp, 8, nelemt);
	if nelemt = 2 then do;
	     if y_n_mask = y | y_n_mask = n then go to good;
	end;
	else if nelemt = 3 then do;
	     if no_mask = no then go to good;
	end;
	else if nelemt = 4 then do;
	     if yes_mask = yes then go to good;
	end;

bad:
	call com_err_$suppress_name (0, "yes_no_", "please answer:yes, no, y or n");
	call ios_$resetread ("user_input", io_status);
	if io_stat_1 ^= "0"b then do;
	     call com_err_ (fixed (io_stat_1, 35), "yes_no_");
	     go to bad;
	end;
	go to start;

good:
	answer = y_n_mask;
ret:	return;
     end yes_no_;
