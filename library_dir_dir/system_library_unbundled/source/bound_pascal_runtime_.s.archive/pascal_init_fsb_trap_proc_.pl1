/****^  *************************************************************************
        *                                                                       *
        * Copyright (c) 1980 by Centre Interuniversitaire de Calcul de Grenoble *
        * and Institut National de Recherche en Informatique et Automatique     *
        *                                                                       *
        ************************************************************************* */


/****^  HISTORY COMMENTS:
  1) change(86-10-05,JMAthane), approve(86-10-05,MCR7521),
     audit(86-10-09,JPFauche), install(86-11-12,MR12.0-1212):
     Pascal version for MR12.
                                                   END HISTORY COMMENTS */

pascal_init_fsb_trap_proc_: proc (p1);

	dcl     p1		 ptr;		/* ptr to link to info */

	dcl     lp_ptr		 ptr;
	dcl     i			 fixed bin (35);
	dcl     based_ptr		 ptr based;
	dcl     1 bp		 based,
		2 pad		 bit (66) unal,
		2 tm_td		 bit (6) unal;
	dcl     (temp1, temp2)	 ptr;
	dcl     null		 builtin;
	dcl     1 init_fsb_info,
		2 info_fsb_ptr_ptr	 ptr,
		2 info_name_ptr	 ptr,
		2 info_type	 fixed bin (35),
		2 info_length	 fixed bin (35),
		2 info_size	 fixed bin (35),
		2 info_dim	 fixed bin (35),
		2 info_sp		 ptr,
		2 info_lp		 ptr;

	dcl     pascal_io_$init_fsb_alloc entry (1 like init_fsb_info);

/* This procedure is a first reference trap procedure called to initialise
file control blocks at the first reference to the segment, instead of
during the "BEGIN" sequence of the main procedure.
   It is usefull when the segment exports files, or procedures using global
files and when these files or procedures are referenced when the main procedure
is not active. */

/* get ptr to linkage for concerned segment */
	lp_ptr = addrel (p1, p1 -> object_link.header_relp);

/* get ptr to info */
	fsb_trap_info_ptr = p1 -> based_ptr;

	init_fsb_info.info_size = 0;			/* not used */
	init_fsb_info.info_sp = null;
	init_fsb_info.info_lp = lp_ptr;
	if version = 2 then
	     do i = 1 to n_files;
		temp1 = addrel (lp_ptr, fsb_ptr_offset (i));
		do while (temp1 -> tm_td = "20"b3);
		     temp1 -> tm_td = "00"b3;
		     temp2 = temp1 -> based_ptr;
		     temp1 -> tm_td = "20"b3;
		     temp1 = temp2;
		end;
		init_fsb_info.info_fsb_ptr_ptr = temp1;
		init_fsb_info.info_name_ptr = ptr (fsb_trap_info_ptr, file_name_offset (i));
		init_fsb_info.info_type = file_type (i);
		init_fsb_info.info_length = file_data_length (i);
		init_fsb_info.info_dim = file_dim (i);
		call pascal_io_$init_fsb_alloc (init_fsb_info);
	     end;
	else /* version 1 - obsolete */
	     do i = 1 to v1_n_files;
		temp1 = addrel (lp_ptr, fsb_ptr_offset (i));
		do while (temp1 -> tm_td = "20"b3);
		     temp1 -> tm_td = "00"b3;
		     temp2 = temp1 -> based_ptr;
		     temp1 -> tm_td = "20"b3;
		     temp1 = temp2;
		end;
		init_fsb_info.info_fsb_ptr_ptr = temp1;
		init_fsb_info.info_name_ptr = ptr (fsb_trap_info_ptr, v1_file_name_offset (i));
		init_fsb_info.info_type = v1_file_type (i);
		init_fsb_info.info_length = v1_file_data_length (i);
		init_fsb_info.info_dim = v1_file_dim (i);
		call pascal_io_$init_fsb_alloc (init_fsb_info);
	     end;
%page;
%include pascal_fsb_trap_info;
%include object_link_dcls;

     end pascal_init_fsb_trap_proc_;
