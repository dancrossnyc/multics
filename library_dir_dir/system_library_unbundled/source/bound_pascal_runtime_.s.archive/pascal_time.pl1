/* *************************************************************************
   *                                                                       *
   * Copyright (c) 1980 by Centre Interuniversitaire de Calcul de Grenoble *
   * and Institut National de Recherche en Informatique et Automatique     *
   *                                                                       *
   ************************************************************************* */
pascal_time: proc;

/* entries for time operators */

	dcl     sys_info$time_delta	 fixed bin ext;


	dcl     pascal_operators_$date_return entry;
	dcl     pascal_operators_$time_return entry;

	dcl     (month, day, year, sec, date) fixed bin;
	dcl     clk		 float bin (63);
	dcl     digit		 (0:9) char (1) aligned static init ("0", "1", "2", "3", "4", "5", "6", "7", "8", "9");

	dcl     pascal_string	 char (8);

	dcl     (clock, min, mod, substr) builtin;

date: entry (pascal_string);

	date = (clock - sys_info$time_delta) / 8.64e10 + 694266; /* days from 3-1-0000 */
	day = mod (date, 146097);			/* days into 400 year cycle */
	year = 400 * divide (date, 146097, 35, 0);	/* year set to beginning of cycle */
	date = 3 + 4 * (day + min (3, divide (date, 36534, 17, 0))); /* prepare year estimator */
	day = mod (date, 1461);			/* day = 4 * day_of_year (0 ... 365) */
	year = year + divide (date, 1461, 17, 0);	/* add in year of cycle */
	date = 2 + 5 * divide (day, 4, 17, 0);		/* prepare month estimator */
	day = mod (date, 153);			/* day = 5 * day_of_month (0 ... 30) */
	month = 1 + mod (2 + divide (date, 153, 17, 0), 12); /* get month */
	if month < 3 then year = year + 1;		/* correct for jan, feb */
	day = 1 + divide (day, 5, 17, 0);		/* get day */
	substr (pascal_string, 8, 1) = digit (mod (year, 10));
	year = year / 10;
	substr (pascal_string, 7, 1) = digit (mod (year, 10));
	substr (pascal_string, 6, 1) = "/";
	substr (pascal_string, 5, 1) = digit (mod (day, 10));
	substr (pascal_string, 4, 1) = digit (day / 10);
	substr (pascal_string, 3, 1) = "/";
	substr (pascal_string, 2, 1) = digit (mod (month, 10));
	substr (pascal_string, 1, 1) = digit (month / 10);

	call pascal_operators_$date_return;

time: entry (pascal_string);

	clk = mod (clock - sys_info$time_delta, 8.64e10);
	sec = mod (clk / 1.e6, 86400);
	substr (pascal_string, 8, 1) = digit (mod (sec, 10));
	sec = sec / 10;
	substr (pascal_string, 7, 1) = digit (mod (sec, 6));
	sec = sec / 6;
	substr (pascal_string, 6, 1) = ":";
	substr (pascal_string, 5, 1) = digit (mod (sec, 10));
	sec = sec / 10;
	substr (pascal_string, 4, 1) = digit (mod (sec, 6));
	sec = sec / 6;
	substr (pascal_string, 3, 1) = ":";
	substr (pascal_string, 2, 1) = digit (mod (sec, 10));
	sec = sec / 10;
	substr (pascal_string, 1, 1) = digit (mod (sec, 10));

	call pascal_operators_$time_return;

     end pascal_time;
