/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
dfast_set_system_: proc (name, basic_system, tag, code);

/*  This procedure parses the name and sets basic_system if there is an appropriate language suffix.
   If basic_system is changed, a warning message is printed.

   _s_u_f_f_i_x		_c_o_d_e		_b_a_s_i_c___s_y_s_t_e_m

   .basic		0		"1"b

   .fortran		0		"0"b

   neither		no_suffix		not changed

*/

dcl  name char (256) var;				/* name to be parsed for language suffix */
dcl  basic_system bit (1) unal;			/* ON if basic;  OFF if fortran */
dcl  tag char (*);
dcl  code fixed bin (35);				/* fast error code */

dcl  len fixed bin;					/* length of the object name */

dcl (length, substr, reverse) builtin;

dcl  iox_$user_output ptr ext static;
dcl  ioa_$ioa_switch entry options (variable);

%include dfast_error_codes;

/*  */

	tag = "";
	if substr (reverse (name), 1, 6) = reverse (".basic") then do;
	     len = length (name) - 6;
	     if len > 0 then do;
		if ^basic_system then call message;
		tag = "basic";
		return;
	     end;
	end;
	else if substr (reverse (name), 1, 8) = reverse (".fortran") then do;
	     len = length (name) - 7;
	     if len > 0 then do;
		if basic_system then call message;
		tag = "fortran";
		return;
	     end;
	end;

	code = error_no_suffix;

	return;

/*  */

/*  This procedure changes the system and prints a warning message. */
message:	proc;

dcl  system_name char (7);

	     basic_system = ^basic_system;
	     if basic_system then system_name = "basic";
	     else system_name = "fortran";
	     call ioa_$ioa_switch (iox_$user_output, "system changed to ^a", system_name);

	     return;

	end message;

     end dfast_set_system_;
