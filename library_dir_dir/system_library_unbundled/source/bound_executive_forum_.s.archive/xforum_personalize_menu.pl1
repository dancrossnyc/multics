/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1985 *
        *                                                         *
        *********************************************************** */

/****^  HISTORY COMMENTS:
  1) change(85-01-14,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Written.
     
     85-01-28 Davids: Added handlinf of F3 (previous menu) and
     corrected initial values for FK_**2 which where wrong.
     
     85-02-13 Davids: Renamed module to xforum_personalize_menu
     
     85-02-13 Davids: Changed calling sequence of
     xforum_help_line_$change and $push to include the new F3_message
     argument.
     
     85-02-14 Davids: Modified so that after the call to xforum_help_
     the status windows is reset and the menu window resizxed and menu
     redisplayed.  This is needed because The call to help could have
     resulted in the general help topics menu being displayed in the
     menu window.
     
     85-04-22 Davids: Added a "0"b paramater to the call of the
     xforum_im_mgr$restor_origial entry.
  2) change(87-04-07,LJAdams), approve(87-04-22,MCR7684),
     audit(87-07-30,Blair), install(87-08-06,MR12.1-1065):
     Added call to xforum_user_profile$set_user_fk_value to save user set value
     (function or escape).
  3) change(87-04-09,LJAdams), approve(87-04-22,MCR7684),
     audit(87-07-30,Blair), install(87-08-06,MR12.1-1065):
     Get wakeup state for msgs from xforum_im_mgr (state can be UNSET, ACCEPT,
     or DEFER).
                                                   END HISTORY COMMENTS */

xforum_personalize_menu: proc (xp_spy_ptr, xp_xforum_system_area_ptr);

/*
   BEGIN DESCTIPTION

   function:
      This module creates, displays, and destroys the Personalize Executive
      Forum menu. Based on the options selected by the user calls are made to
      the xforum_user_profile module to record the personaliztion choices of
      the user.

   description of entry points:
      xforum_personalize_menu: This entry manages the creation, display, and
      destruction of the personalization menu. It also contains the loop which
      displays the menu and gets a user choice. The function keys implemented
      are HELP, FIRST_MENU, QUIT, REDISPLAY, and MULTICS. The internal
      procedure personalize_item is called if the user selects a choice off of
      the menu. Condition handlers for quit, and xforum_redisplay and also
      set up. This entry also assigns entry values into the two arrays that
      correspond to xforum_user_profile$get and $set entries. 
      Before returning to its caller this entry also destroys the menu and
      call xforum_user_profile$update_profile to record the changes made by the
      user so they will be around in new processes.

   description of internal procedures:
      personalize_item: This internal procedure clears the user_io window,
      outputs the current state of the option the user selected. Gives the
      instructions for what kind of input is required, gets the input, and
      checks to be sure it is legal. If it is a help query (?) a call is
      made to xforum_help_. If its one of the choices a call is made to set
      the appropriate choice. If the call is successful a confirmation message
      is output. If the call is not successful nothing is output, it is
      assumed that xforum_user_profile output an appropriate message. All
      text messages, the text of the choices, confirmation messages, etc. are
      stored as internal static option constant arrays where the index of the
      array and the index of the menu option selected are the same.
      This procedure also handles the special actions that may need to be done
      for each choice. This procedure also has a quit condition handler so that
      if quit is "selected" the user still gets a confirmation message
      describing the current state of the option that he selected.
      Note that the user does not have to enter the full text of an option
      choice, the first letter of the input is tested.

      collect_spy_data: This procedure records the user choices from the
      personalization menu and whether quit was hit while in the menu or while
      changiong the state of an option.
   END DESCRIPTION
*/

/* PARAMETERS */

	dcl     xp_spy_ptr		 ptr;		/* (input) */
	dcl     xp_xforum_system_area_ptr ptr;		/* (input) */

/* EXTERNAL STATIC */

	dcl     iox_$user_io	 ptr ext static;

/* ENTRIES */

	dcl     com_err_		 entry () options (variable);
	dcl     ioa_		 entry () options (variable);
	dcl     window_$bell	 entry (ptr, fixed bin (35));
	dcl     window_$clear_window	 entry (ptr, fixed bin (35));
	dcl     xforum_create_menu_	 entry ((*) char (*) var, ptr, ptr, fixed bin (35));
          dcl     xforum_get_str_	 entry (char(*) var, ptr, char(*), char(*), char(*) var, fixed bin(35));
	dcl     xforum_help_$get_help	 entry (ptr, char (*), (*) char (*) var, ptr, ptr);
	dcl     xforum_help_line_$change entry (bit(8), char(*), char(*), char(*));
          dcl     xforum_help_line_$pop	 entry options (variable);
	dcl     xforum_help_line_$push entry (bit(8), char(*), char(*), char(*));
          dcl     xforum_im_mgr$get_wakeup_state entry () returns (fixed bin (2));
	dcl     xforum_im_mgr$defer_messages entry ();
	dcl     xforum_im_mgr$restore_original entry (bit(1) aligned);
	dcl     xforum_multics_mode	 entry (fixed bin);
	dcl     xforum_user_profile$get_handle_interactive_messages entry () returns (bit (1));
	dcl     xforum_user_profile$set_handle_interactive_messages entry (bit (1)) returns (bit (1));
	dcl     xforum_user_profile$get_multics_mode entry () returns (bit (1));
	dcl     xforum_user_profile$set_multics_mode entry (bit (1)) returns (bit (1));
	dcl     xforum_user_profile$get_menu_always entry () returns (bit (1));
	dcl     xforum_user_profile$set_menu_always entry (bit (1)) returns (bit (1));
	dcl     xforum_user_profile$get_read_comments_by_subject entry () returns (bit (1));
	dcl     xforum_user_profile$set_read_comments_by_subject entry (bit (1)) returns (bit (1));
	dcl     xforum_user_profile$get_use_function_keys entry () returns (bit (1));
	dcl     xforum_user_profile$set_use_function_keys entry (bit (1)) returns (bit (1));
          dcl     xforum_user_profile$set_user_fk_value entry (fixed bin (2));
          dcl     xforum_user_profile$get_user_fk_value entry returns (fixed bin (2));
          dcl     xforum_user_profile$valid_user_fk_FUNCTION entry returns (bit (1));
	dcl     xforum_user_profile$get_remove_menu_while_editing entry () returns (bit (1));
	dcl     xforum_user_profile$set_remove_menu_while_editing entry (bit (1)) returns (bit (1));
	dcl     xforum_user_profile$update_profile entry options (variable);
	dcl     xforum_redisplay_	 entry options (variable);
	dcl     xforum_status_$redisplay entry (fixed bin (35));
	dcl     xforum_status_$update_banner entry (char (*));
	dcl     xforum_status_$update_title entry (char (*));
	dcl     xforum_window_mgr$check_window_status entry options (variable);
	dcl     xforum_window_mgr$menu_display entry (ptr);
	dcl     xforum_window_mgr$menu_get_choice entry (ptr, bit (1) aligned, fixed bin);
	dcl     xforum_window_mgr$resynch_windows entry (fixed bin, bit (1));


/* CONDITIONS */

	dcl     exit_executive_forum	 condition;
	dcl     quit		 condition;
	dcl     xforum_redisplay_menu	 condition;

/* INTERNAL AUTOMATIC */

	dcl     xp_choice		 fixed bin;
	dcl     xp_code		 fixed bin (35);
	dcl     xp_fkey		 bit (1) aligned;
	dcl     xp_menu_ptr		 ptr;
	dcl     xp_menu_window_height	 fixed bin;
	dcl     xp_xforum_user_profile_get_entry (6) entry () variable returns (bit (1));
	dcl     xp_xforum_user_profile_set_entry (6) entry (bit (1)) variable returns (bit (1));
	dcl     01 xp_menu_requirements like menu_requirements;
		     

/* INTERNAL STATIC */
     
          dcl     USE_ESCAPE_KEYS        fixed bin (2) internal static options (constant) init (1);
          dcl     USE_FUNCTION_KEYS      fixed bin (2) internal static options (constant) init (2);
          dcl     UNSET                  fixed bin (2) internal static options (constant) init (0);
		     

/* CONSTANTS */

	dcl     (
	        xp_CHOICE_1		 (6) char (15) init ("subject", "function", "menu", "clear", "xforum", "allow"),
	        xp_CHOICE_1_c	 (6) char (1) init ("s", "f", "m", "c", "x", "a"),
	        xp_CHOICE_1_MSG	 (6) char (150) init (
				 "You will now be using the subject oriented attending meeting menu.",
				 "You will now be using function keys.",
				 "You will now make list selections from a menu",
				 "The menu will be cleared when you are entering a comment with a new subject.",
				 "You will now use the Executive Forum interactive message processor.",
				 "Multics Command Mode is now allowed."),
	        xp_CHOICE_1_VALUE	 (6) bit (1) init ("1"b, "1"b, "1"b, "1"b, "1"b, "1"b),
	        xp_CHOICE_2		 (6) char (15) init ("entry", "escape", "query", "keep", "own", "disallow"),
	        xp_CHOICE_2_c	 (6) char (1) init ("e", "e", "q", "k", "o", "d"),
	        xp_CHOICE_2_MSG	 (6) char (150) init (
				 "You will now be using the entry order oriented attending meeting menu.",
				 "You will now be using escape sequences.",
				 "You will now be queried for list options.",
				 "The menu will be kept on the screen when you are entering a comment with^/   a new subject.",
				 "You will now use your own interactive message processor.",
				 "Multics Command Mode is now not allowed."),
	        xp_CHOICE_2_VALUE	 (6) bit (1) init ("0"b, "0"b, "0"b, "0"b, "0"b, "0"b),
	        xp_CHOICES_MSG	 (6) char (150) init (
				 "You can now choose between the subject and entry order oriented attending^/   menu menus.",
				 "You can now choose to use either function keys or escape sequences.",
				 "You can now choose to have lists displayed as menus or to be queried^/   for a list item",
				 "You can now choose to leave the menu on the screen or clear it and use the^/   space for entering comments.",
				 "You can now choose to use either the Executive Forum or your own interactive^/   message processor.",
				 "You can now choose to allow Multics Command Mode or to disallow it."),
	        xp_CURRENT_STATUS_MSG_ITEM_FALSE (6) char (150) init (
				 "You are currently using the entry order oriented attending meeting menu.",
				 "You are currently using escape sequences.",
				 "You are currently being queried for list items",
				 "Currently the menu is not cleared from the screen when you are entering a^/   comment with a new subject.",
				 "You are currently using your own interactive message processor.",
				 "Multics Command  Mode is currently not allowed."),
	        xp_CURRENT_STATUS_MSG_ITEM_TRUE (6) char (150) init (
				 "You are currently using the subject oriented attending meeting menu.",
				 "You are currently using function keys.",
				 "Lists are currently displayed as menus in the lower part of the screen.",
				 "Currently the menu is cleared from the screen when you are entering a^/   comment with a new subject",
				 "You are currently using the Executive Forum interactive message processor.",
				 "Multics Command Mode is currently allowed."),
	        xp_FK_FIRST_MENU	 fixed bin init (2),
	        xp_FK_FIRST_MENU2	 fixed bin init (9),
	        xp_FK_HELP		 fixed bin init (1),
	        xp_FK_MULTICS	 fixed bin init (8),
	        xp_FK_MULTICS2	 fixed bin init (15),
	        xp_FK_PREVIOUS	 fixed bin init (3),
	        xp_FK_PREVIOUS2	 fixed bin init (10),
	        xp_FK_QUIT		 fixed bin init (4),
	        xp_FK_QUIT2		 fixed bin init (11),
	        xp_FK_REDISPLAY	 fixed bin init (5),
	        xp_FK_REDISPLAY2	 fixed bin init (12),
	        xp_FOREVER		 bit (1) init ("1"b),
	        xp_HELP_ID		 (6) char (32) init (
				 "read_comments", "escape_keys", "prompts_or_menus", "editing_space", "message_window", "multics_mode"),
	        xp_HELP_LINE	 bit (8) init ("11010000"b),
	        xp_MENU_CHOICES	 (6) char (32) varying init (
				 "Read Comments By Subject",
				 "Always Use Escape Sequences",
				 "Display Lists As Menus",
				 "Remove Menu While Editing",
				 "Process Interactive Messages",
				 "Multics Command Mode"),
	        xp_MENU_HEIGHT	 fixed bin init (4)
	        )			 internal static options (constant);


/* BUILTINS */

          dcl     addr                   builtin;
	dcl     char		 builtin;
	dcl     length		 builtin;
	dcl     ltrim		 builtin;
	dcl     rtrim		 builtin;
	dcl     substr		 builtin;
	dcl     translate		 builtin;

/* BASED */

		     
/* INCLUDES */

%include menu_dcls;
%page;
%include xforum_spy;
%page;
%include xforum_prompts;

%include xforum_answers;

%include xforum_help_infos;


	spy_ptr = xp_spy_ptr;

	xp_xforum_user_profile_get_entry (1) = xforum_user_profile$get_read_comments_by_subject;
	xp_xforum_user_profile_get_entry (2) = xforum_user_profile$get_use_function_keys;
	xp_xforum_user_profile_get_entry (3) = xforum_user_profile$get_menu_always;
	xp_xforum_user_profile_get_entry (4) = xforum_user_profile$get_remove_menu_while_editing;
	xp_xforum_user_profile_get_entry (5) = xforum_user_profile$get_handle_interactive_messages;
	xp_xforum_user_profile_get_entry (6) = xforum_user_profile$get_multics_mode;

	xp_xforum_user_profile_set_entry (1) = xforum_user_profile$set_read_comments_by_subject;
	xp_xforum_user_profile_set_entry (2) = xforum_user_profile$set_use_function_keys;
	xp_xforum_user_profile_set_entry (3) = xforum_user_profile$set_menu_always;
	xp_xforum_user_profile_set_entry (4) = xforum_user_profile$set_remove_menu_while_editing;
	xp_xforum_user_profile_set_entry (5) = xforum_user_profile$set_handle_interactive_messages;
	xp_xforum_user_profile_set_entry (6) = xforum_user_profile$set_multics_mode;

	xp_menu_requirements.version = menu_requirements_version_1;
	call xforum_create_menu_ (xp_MENU_CHOICES, addr (xp_menu_requirements), xp_menu_ptr, xp_code);
	if xp_code ^= 0
	then do;
	     call com_err_ (xp_code, "", "Could not create Personalize Executive Forum menu.");
	     goto quick_exit_xforum_personalize_menu;
	end;

	on quit
	     begin;
		call xforum_window_mgr$check_window_status;
		call window_$bell (iox_$user_io, (0));
		call xforum_status_$redisplay ((0));
		call collect_spy_data (SPY_AT_16, "QUIT");
		goto get_choice;
	     end;

	call xforum_window_mgr$resynch_windows (xp_MENU_HEIGHT, "1"b);

	call xforum_status_$update_title ("Personalize");
	call xforum_status_$update_banner ("Executive Forum");
	call xforum_status_$redisplay ((0));

	call xforum_window_mgr$menu_display (xp_menu_ptr);

	on xforum_redisplay_menu call xforum_window_mgr$menu_display (xp_menu_ptr);
	call xforum_help_line_$push (xp_HELP_LINE, "", "", "");
get_choice:
	do while (xp_FOREVER);
	     call xforum_help_line_$change (xp_HELP_LINE, "", "", "");
	     call xforum_window_mgr$menu_get_choice (xp_menu_ptr, xp_fkey, xp_choice);

	     if xp_fkey
	     then call collect_spy_data (SPY_AT_16, "F" || rtrim (ltrim (char (xp_choice))));
	     else call collect_spy_data (SPY_AT_16, rtrim (ltrim (char (xp_choice))));

	     if xp_fkey
	     then do;
		if xp_choice = xp_FK_HELP
		then do;
		     call xforum_help_$get_help (xp_menu_ptr, "Personalize", xp_MENU_CHOICES,
			spy_ptr, xp_xforum_system_area_ptr);
		     call xforum_window_mgr$resynch_windows (xp_MENU_HEIGHT, "0"b);
		     call xforum_status_$update_title ("Personalize");
		     call xforum_status_$update_banner ("Executive Forum");
		     call xforum_status_$redisplay ((0));
		     call xforum_window_mgr$menu_display (xp_menu_ptr);
		     end;
		else
		     if xp_choice = xp_FK_FIRST_MENU | xp_choice = xp_FK_FIRST_MENU2
		then goto exit_xforum_personalize_menu;
		else
		     if xp_choice = xp_FK_PREVIOUS | xp_choice = xp_FK_PREVIOUS2
		then goto exit_xforum_personalize_menu;
		else
		     if xp_choice = xp_FK_QUIT | xp_choice = xp_FK_QUIT2
		then do;
		     call xforum_user_profile$update_profile;
		     call menu_$destroy (xp_menu_ptr, (0));
		     signal exit_executive_forum;
		end;
		else
		     if xp_choice = xp_FK_REDISPLAY | xp_choice = xp_FK_REDISPLAY2
		then call xforum_redisplay_;
		else
		     if (xp_choice = xp_FK_MULTICS | xp_choice = xp_FK_MULTICS2) & xforum_user_profile$get_multics_mode ()
		then do;
		     call xforum_multics_mode (xp_menu_window_height);
		     call xforum_window_mgr$resynch_windows (xp_menu_window_height, "0"b);
		     call xforum_redisplay_;
		end;
		else call window_$bell (iox_$user_io, (0));
	     end;
	     else call personalize_item (xp_choice);
	end;

exit_xforum_personalize_menu:
	call xforum_user_profile$update_profile;
	call menu_$destroy (xp_menu_ptr, (0));
	call xforum_help_line_$pop;

quick_exit_xforum_personalize_menu:
	call window_$clear_window (iox_$user_io, (0));
	return;

personalize_item: proc (pi_item_index);

/* PARAMETERS */

	dcl     pi_item_index	 fixed bin;	/* (input) */

/* CONDITIONS */
	dcl     quit		 condition;

/* INTERNAL AUTOMATIC */

          dcl     pi_code                fixed bin (35);
	dcl     pi_input_line	 char (256);
          dcl     reply		 char (256) var;
          dcl     prompt		 char (256) var;
          dcl     user_set_fk_value      fixed bin (2);
	        
/* CONSTANTS */

          dcl     (
                  MAX_LEN                 fixed bin init (256),
                  GET_FK_ESC_CHOICE       fixed bin init (2),
                  PROCESS_IM_MSG          fixed bin init (5)
                  );

	on quit
	     begin;
		call xforum_window_mgr$check_window_status;
		call xforum_status_$redisplay ((0));
		call collect_spy_data (SPY_AT_17, "QUIT");
		call window_$clear_window (iox_$user_io, (0));
		if xp_xforum_user_profile_get_entry (pi_item_index) ()
		then call ioa_ (xp_CHOICE_1_MSG (pi_item_index));
		else call ioa_ (xp_CHOICE_2_MSG (pi_item_index));
		goto exit_personalize_item;
	     end;

	call window_$clear_window (iox_$user_io, (0));

          if pi_item_index = GET_FK_ESC_CHOICE
          then do;
               if xforum_user_profile$valid_user_fk_FUNCTION ()
						/* both function & escape keys are valid for ttp	*/
              then do;
	        call ioa_ (xp_CHOICES_MSG (pi_item_index));
	        user_set_fk_value = xforum_user_profile$get_user_fk_value ();
	        if user_set_fk_value = USE_FUNCTION_KEYS &
                     ^xforum_user_profile$get_use_function_keys ()
                  then if xp_xforum_user_profile_set_entry (pi_item_index) (xp_CHOICE_1_VALUE (pi_item_index)) then ;
						/* reset original user value; this can get reset  */
						/* per invocation by the system if the terminal	*/
						/* does not support function key usage.		*/
	    end;
              else do;
                   call ioa_ ("This terminal type only supports escape sequences.");
                   goto exit_personalize_item;
	    end;
           end;

	call xforum_help_line_$change (""b, "", "", "Press  ? and RETURN:help   BREAK:To leave things unchanged");

	if xp_xforum_user_profile_get_entry (pi_item_index) ()
	then call ioa_ (xp_CURRENT_STATUS_MSG_ITEM_TRUE (pi_item_index));
	else call ioa_ (xp_CURRENT_STATUS_MSG_ITEM_FALSE (pi_item_index));
   
          answer_array.N = FOUR;
          answer_array.max_length = MAX_LEN;
          answer_array.answer (1) = xp_CHOICE_1 (pi_item_index);
	answer_array.answer (2) = xp_CHOICE_1_c (pi_item_index);
	answer_array.answer (3) = xp_CHOICE_2 (pi_item_index);
          answer_array.answer (4) = xp_CHOICE_2_c (pi_item_index);
          prompt = "Please enter only " || rtrim(xp_CHOICE_1(pi_item_index)) || " or " || rtrim(xp_CHOICE_2(pi_item_index));
          call xforum_get_str_ ((prompt), addr(answer_array), PROMPT_HELP, xp_HELP_ID (pi_item_index), reply, pi_code);

get_user_response:
	pi_input_line = substr (reply, 1, length(reply));
	pi_input_line = translate (pi_input_line, "abcdefghjiklmnopqrstuvwxyz", "ABCDEFGHJIKLMNOPQRSTUVWXYZ");

	if pi_input_line = xp_CHOICE_1 (pi_item_index) |
	   substr (pi_input_line, 1, 1) = xp_CHOICE_1_c (pi_item_index)
	then do;
	     call window_$clear_window (iox_$user_io, (0));
	     
	     if pi_item_index = GET_FK_ESC_CHOICE
	     then call xforum_user_profile$set_user_fk_value (USE_FUNCTION_KEYS);
	     if xp_xforum_user_profile_set_entry (pi_item_index) (xp_CHOICE_1_VALUE (pi_item_index))
	     then call ioa_ (xp_CHOICE_1_MSG (pi_item_index));
	end;
	else if pi_input_line = xp_CHOICE_2 (pi_item_index) |
	        substr (pi_input_line, 1, 1) = xp_CHOICE_2_c (pi_item_index)
	then do;
	     call window_$clear_window (iox_$user_io, (0));
	        
	     if pi_item_index = GET_FK_ESC_CHOICE
	     then call xforum_user_profile$set_user_fk_value (USE_ESCAPE_KEYS);
	     if xp_xforum_user_profile_set_entry (pi_item_index) (xp_CHOICE_2_VALUE (pi_item_index))
              then call ioa_ (xp_CHOICE_2_MSG (pi_item_index));
	    end;

	 if pi_item_index = PROCESS_IM_MSG		/* process interactive messages */
	then do;
               if xforum_im_mgr$get_wakeup_state () = UNSET 
               then ;				/* User has neither accept or defer set	*/
	     else if xforum_user_profile$get_handle_interactive_messages ()
	     then call xforum_im_mgr$defer_messages;
	     else call xforum_im_mgr$restore_original ("0"b);
	end;

exit_personalize_item:
	return;

     end personalize_item;

collect_spy_data: proc (csd_where, csd_response);


/* PARAMETERS */

	dcl     csd_where				/* (input) */
				 fixed bin;
	dcl     csd_response			/* (input) */
				 char (*);



	spy.count = spy.count + 1;
	spy.choices (count).at = csd_where;
	spy.choices (count).choice = csd_response;

	return;

     end collect_spy_data;


     end xforum_personalize_menu;
