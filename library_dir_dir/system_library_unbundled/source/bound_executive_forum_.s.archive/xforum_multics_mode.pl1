/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        *                                                         *
        *********************************************************** */


/****^  HISTORY COMMENTS:
  1) change(85-01-08,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Removed the handle_interactive_messages input arg and replaced it
     with a call to xforum_user_profile$get_handle_interactive_messages
     and an automatic handle_interactive_messages.  There is no way
     that the value in the user's profile will change while in this
     module so the call to xforum_user_profile has to be made only
     once.
     
     85-01-14 Davids: replaced calls to accept_messages and
     defer_messages with calls to xforum_im_mgr$restore_original and
     defer_messages.
     
     85-02-13 Davids: Changed calling sequence of
     xforum_help_line_$change to include the new F3_message argument.
     
     85-04-22 Davids: Added a "0"b paramater to the call of the
     xforum_im_mgr$restor_origial entry.
  2) change(87-07-21,LJAdams), approve(87-07-21,MCR7684),
     audit(87-07-24,Blair), install(87-08-06,MR12.1-1065):
     Eliminated two unreferenced variables.
                                                   END HISTORY COMMENTS */


xforum_multics_mode: proc (menu_window_height);

/*
   BEGIN DESCRIPTION

   function:
      This module implements xforum multics mode. The major aspects of this
      mode are that the user_io window is expanded to include the status and
      menu windows and that the user is queried for a command via a prompt.
      After the command completes the user is prompted for another command,
      a null command, i.e. just a return will return the user to the Xforum
      he was in before he invoked multics mode.

   description of entry points:
      xforum_multics_mode: Quits are traped by a condition handler which causes
      all stack frames above xforum_multics_mode to be unwound and another
      prompt to be issued to the user. The user is not allowed to escape to a
      new command level. The conditions command_question, command_error,
      finish, and stringsize are handled by the standard systen handlers.
      Any other system condition (except quit) is handled by printing the
      messages assocaited with the handler, unwinding the stack, and prompting
      the user for a another command.

   description of internal procedures:
      error: This procedure is called if the command line that the user enters
      cannot be read, it indicates that something is very wrong. The
      xforum_fatal_error condition is signaled, this will cause xforum to
      terminate.

   known bugs:

   notes:

   history:

      84-07-28 Davids: Extracted from the xforum module. 
   
      84-08-13 Davids: Removed the special handling of active_function_error
      which allowed the system handler to be called. The any_other handler
      works just fine. Added a n_read = 0 to the any_other handler. The lack
      of this statement was causing fatal process errors when "pi" was signaled
      (don't understand why). Also added the handle_interactive_messages
      parameter and the code to handle interactive messages. If the flag is set
      then before the prompt is output messages will be accepted. Messages
      already recieved will be printed in the user_io window and then deleted.
      After the user indicates that he wants to return to the menu messages
      will again be defered

      84-08-30 Davids: Changed the any_other handler so that the call to
      find_condition_info_ used the address to an automatic copy of the
      condition_info structure. It was being passed an UNINITIALIZED pointer
      which was causing some very strange problems. Its a wonder it ever
      worked. Added a call to xforum_window_mgr$check_window_status to the quit
      handler so that in case the windows have a screwy status (like from a
      disconnect) they will be reset. Also added a xforum_redisplay_menu
      handler.

      84-09-28 Davids: Removed references to xforum_status_$update_usage and
      redisplay_usage. Replaced them with a call to xforum_help_line$change.

      84-10-22 Davids: Changed message handling so that it is the same as
      Xmail's, except for the -brief control arg for print_messages. Xforum
      will not start using the MR11 message system control args until after a
      controlled release tape is cut.

      84-11-06 Davids: Changed references to xforum_help_line to
      xforum_help_line_.

      84-11-08 Davids: Audit changes: 1) Some spelling and typo corrections
      to the comments. 2) Took all the n_read = 0 statements outof the
      condition handlers and before the first prompt is output and put an
      n_read = 0 after the multics_mode_loop label and before the actual loop.

      84-11-16 Davids: Added the "-brief" argument to the call to
      print_messages This is needed so that the call does not result in a "You
      have no messages" message being output. print_message was incompatibly
      changed.
   END DESCRIPTION
*/

/* PARAMETERS */

	dcl     menu_window_height	 fixed bin;	/* (output) */

/* EXTERNAL STATIC */

	dcl     iox_$user_io	 ptr ext static;

/* ENTRIES */

	dcl     condition_interpreter_ entry (ptr, ptr, fixed bin, fixed bin, ptr, char (*), ptr, ptr);
	dcl     cu_$cp		 entry (ptr, fixed bin (21), fixed bin (35));
	dcl     find_condition_info_	 entry (ptr, ptr, fixed bin (35));
	dcl     ioa_$nnl		 entry () options (variable);
	dcl     iox_$control	 entry (ptr, char (*), ptr, fixed bin (35));
	dcl     iox_$get_line	 entry (ptr, ptr, fixed bin (21), fixed bin (21), fixed bin (35));
	dcl     signal_		 entry () options (variable);
	dcl     window_$sync	 entry (ptr, fixed bin (35));
	dcl     xforum_help_line_$change entry (bit(8), char(*), char(*), char(*));
	dcl     xforum_im_mgr$defer_messages entry ();
	dcl     xforum_im_mgr$restore_original entry (bit(1) aligned);
	dcl     xforum_user_profile$get_handle_interactive_messages entry () returns (bit (1));
	dcl     xforum_window_mgr$check_window_status entry options (variable);
	dcl     xforum_window_mgr$resynch_windows entry (fixed bin, bit (1));

/* CONDITIONS */

	dcl     (
	        any_other,
	        command_error,
	        command_question,
	        finish,
	        quit,
	        stringsize,
	        xforum_redisplay_menu
	        )			 condition;

/* INTERNAL AUTOMATIC */

	dcl     code		 fixed bin (35);
	dcl     handle_interactive_messages bit (1);
	dcl     line		 char (256);
	dcl     n_read		 fixed bin (21);
	dcl     unused_ptr		 ptr;
	dcl     unused_fb		 fixed bin;
	dcl     01 local_condition_info like condition_info;

/* INTERNAL STATIC */

	dcl     01 xmm_xforum_error_info like xforum_error_info internal static;

/* CONSTANTS */

	dcl     (
	        FIRST_PROMPT	 char (80) init ("Enter the command and press RETURN (to return to Xforum just press RETURN):"),
	        LINE_LEN		 fixed bin (21) init (256)
	        )			 internal static options (constant);

/* BUILTINS */

          dcl     addr                   builtin;
	dcl     null		 builtin;
	dcl     substr		 builtin;

/* BASED */

/* INCLUDE FILES */

%page;
%include condition_info;
%page;
%include xforum_error_info;
%page;
%include xforum_windows;

	on command_question system;

	on command_error system;

	on finish system;

	on stringsize system;

	on any_other
	     begin;
		call find_condition_info_ (null (), addr (local_condition_info), code);
		call condition_interpreter_ (null (), unused_ptr, unused_fb, 3,
		     local_condition_info.mc_ptr, (local_condition_info.condition_name),
		     local_condition_info.wc_ptr, local_condition_info.info_ptr);
		call xforum_help_line_$change ("0"b, "", "", FIRST_PROMPT);
		call iox_$control (iox_$user_io, "reset_more", null, (0));
		call ioa_$nnl ("^/Command: ");
		goto multics_mode_loop;
	     end;

	on quit
	     begin;
		call xforum_window_mgr$check_window_status;
		call xforum_help_line_$change ("0"b, "", "", FIRST_PROMPT);
		call iox_$control (iox_$user_io, "reset_more", null, (0));
		call ioa_$nnl ("^/Command: ");
		goto multics_mode_loop;
	     end;

	on xforum_redisplay_menu
	     begin;
		call xforum_help_line_$change ("0"b, "", "", FIRST_PROMPT);
		call iox_$control (iox_$user_io, "reset_more", null, (0));
		call ioa_$nnl ("^/Command: ");
		goto multics_mode_loop;
	     end;

	handle_interactive_messages = xforum_user_profile$get_handle_interactive_messages ();

	menu_window_height = xforum_windows.menu.position.extent.height;

	call xforum_window_mgr$resynch_windows (-2, "0"b);

	call xforum_help_line_$change ("0"b, "", "", "Xforum Multics Mode");

	call ioa_$nnl (FIRST_PROMPT || "^/");

	if handle_interactive_messages
	then call xforum_im_mgr$restore_original ("0"b);

multics_mode_loop:
	n_read = 0;
	do while (n_read ^= 1);
	     call iox_$get_line (iox_$user_io, addr (line), LINE_LEN, n_read, code);
	     if code ^= 0
	     then call error (code, "Could not read command line");
	     if n_read > 1
	     then do;
		call xforum_help_line_$change ("0"b, "", "", "Xforum Multics Mode executing: " || substr (line, 1, n_read - 1));
		call window_$sync (iox_$user_io, code);
		call cu_$cp (addr (line), n_read - 1, code);
		call xforum_help_line_$change ("0"b, "", "", FIRST_PROMPT);
		call iox_$control (iox_$user_io, "reset_more", null (), (0));
		call ioa_$nnl ("^/Command: ");
	     end;
	end;

	if handle_interactive_messages
	then call xforum_im_mgr$defer_messages;

	return;

error: proc (e_code, e_reason);

/* PARAMETERS */

	dcl     e_code		 fixed bin (35);
	dcl     e_reason		 char (512);

	xmm_xforum_error_info.name = "xforum_multics_mode";
	xmm_xforum_error_info.entry = "";
	xmm_xforum_error_info.doing = "";
	xmm_xforum_error_info.code = e_code;
	xmm_xforum_error_info.reason = e_reason;

	if handle_interactive_messages
	then call xforum_im_mgr$defer_messages;

	call signal_ ("xforum_fatal_error", null (), addr (xmm_xforum_error_info), null ());

     end error;

     end xforum_multics_mode;

