/* ***********************************************************
   *                                                         *
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
   *                                                         *
   *                                                         *
   *********************************************************** */

/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

linus_assign_data:
     proc (desc, type, length);

/* DESCRIPTION:

   This procedure returns the assign_ type code and length, given a descriptor.



   HISTORY:

   77-07-01 J. A. Weeldreyer: Initially written.

   80-01-07  Rickie  E.  Brinegar: Modified to use mdbm_util_$string_data_class
   to determine which algorithm to use for the descriptor length.

   80-06-24  Jim  Gray  : Modified to correctly extract negative scale factors
   from the descriptor.

*/

%include mdbm_descriptor;

	dcl     (
	        a_len_ptr		 init (null),
	        fbl_ptr		 init (null)
	        )			 ptr;

	dcl     desc		 bit (36);

	dcl     type		 fixed bin;

	dcl     length		 fixed bin (35);

	dcl     fixed_bin_11_ovrly	 fixed bin (11) unal based;

	dcl     1 arith_len		 aligned based (a_len_ptr),
		2 scale		 fixed bin (17) unal,
		2 prec		 fixed bin (17) unal;

	dcl     1 fb_len		 unal based (fbl_ptr),
		2 q		 fixed bin (11) unal,
		2 p		 fixed bin (11) unal;

	dcl     (addr, fixed, null, string, substr) builtin;

	dcl     mdbm_util_$string_data_class entry (ptr) returns (bit (1));

	a_len_ptr = addr (length);			/* initialize */
	num_dims = 0;
	desc_ptr = addr (desc);

	type = 2 * descriptor.type + fixed (descriptor.packed);
	if ^mdbm_util_$string_data_class (desc_ptr) then do;
		fbl_ptr = addr (descriptor.size);
		arith_len.scale = addr (descriptor.size.scale) -> fixed_bin_11_ovrly;
		arith_len.prec = fixed (descriptor.size.precision);
	     end;
	else length = fixed (string (descriptor.size));	/* if string data */


	return;

     end linus_assign_data;
