/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
use_big_tape_blocks_: proc (code);

/* Determine whether caller has access to Multics facilities
   (see dir, ent arrays) to provide for tape blocks larger than
   11888 bytes (See "tape_nstd_" I/O module, AX49.
   The parameter "code" is returned in one of three categories:
   1) zero implies the caller has access,
   2) error_table_$big_ws_req the caller does not,
   3) any other value implies there was failure in attempting to
   determine (a normal multics status code).
   Include file "use_big_tape_blocks.incl.pl1" provides declarations
   for dir, ent arrays.

   Author: Dave Ward	04/21/81
*/
dcl  code                     fixed bin(35)parm;
	code = 0;					/* Assume caller has access. */
	call user_info_ (per, prj, act);
	per_prj = rtrim (per)||"."||rtrim (prj)||".*";
	do i = 1 to hbound (dir, 1);
	     mode = 0;
	     call hcs_$get_user_effmode (
		dir (i), ent (i)			/* (input) directory and entry name. */
		, per_prj				/* (input) PERSON.PROJECT.* */
		, get_ring_ ()
		, mode				/* (output). */
		, code				/* (output) status. */
		);
	     if code ^= 0 then return;		/* Failure to determine. */
	     if read then
		if nex (i) then do;
		     if exec then return;		/* Success, has access. */
		end;
		else do;
		     if writ then return;		/* Success, has access. */
		end;
	end;
	code = error_table_$big_ws_req;
	return;					/* Success, does not have access. */
%page;
/*   Variables for use_big_tape_blocks_:	 */
/*   IDENTIFIER		ATTRIBUTES	 */
dcl  act                      char(32);
dcl  error_table_$big_ws_req  fixed bin(35) ext static;
dcl  get_ring_                entry() returns(fixed bin(3));
dcl  hcs_$get_user_effmode    entry (char(*), char(*), char(*), fixed bin, fixed bin(5), fixed bin(35));
dcl  i                        fixed bin;
dcl  mode                     fixed bin(5);
dcl  per                      char(22);
dcl  per_prj                  char(32);
dcl  prj                      char(9);
dcl  user_info_               entry (char(*), char(*), char(*));

dcl 1 mode2 aligned based(addr(mode))
,     3 skip1	bit(32)unal
,     3 read	bit( 1)unal
,     3 exec	bit( 1)unal
,     3 writ	bit( 1)unal
,     3 skip2	bit( 1)unal
;
%page;
%include use_big_tape_blocks;
     end use_big_tape_blocks_;
