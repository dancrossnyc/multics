/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
gfms_file_name_: proc (nf, fn)returns (bit (1));

/* Hash file name "fn" as selected or not
   selected (nf="0"b or nt="1"b).
   Return "1"b if failure.

   Author: Dave Ward	10/19/80
   Change: Dave Ward	10/30/80 provide catalog (/) and file name.
*/
dcl  fn                       char(*)parm;
dcl  nf                       bit(1)parm;
	if number_names >= hbound (file_name, 1) then do;
	     if number_names = hbound (file_name, 1) then
		call com_err_ (
		0
		, "gfms_file_name_"
		, "Exhausted ^i entries available in file name list."
		, hbound (file_name, 1)
		);
	     number_names = number_names+1;
	     return ("1"b);				/* Failure. */
	end;
	if index (fn, "/")>0 then sp = addr (cat_start);
	else sp = addr (file_start);
	uc_fn = translate (
	     fn
	     , "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
	     , "abcdefghijklmnopqrstuvwxyz"
	     );
	k = gfms_hash_ ((uc_fn), hbound (start, 1)+1);
	number_names = number_names+1;
	file_name (number_names).not = nf;
	file_name (number_names).link = start (k);
	start (k) = number_names;
	file_name (number_names).name = uc_fn;
	return ("0"b);				/* Success. */
%page;
/*   Variables for gfms_file_name_:		*/
/*   IDENTIFIER		ATTRIBUTES	*/
dcl  com_err_                 entry() options(variable);
dcl  gfms_hash_               entry (char(*), fixed bin) returns(fixed bin);
dcl  index                    builtin;
dcl  k                        fixed bin;
dcl  sp                       ptr;
dcl  start                    (0:1020)fixed bin based(sp);
dcl  translate                builtin;
dcl  uc_fn                    char(168)var;
%page;
%include gfms_do_files;
%page;
%include gfms_ext;
     end gfms_file_name_;
