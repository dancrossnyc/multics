/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
gfms_end_of_input_: proc (bp, bl, nb)returns (bit (1));

/* End of information reached attempting to read a record.
   Determine if tape is multi-reel, in which case, proceed
   to the next reel, fill the remainder of the record (based
   on "bp" of length "bl" bytes of which "nb" have been input)
   and return "0"b. If trailing label indicates EOF (end of file)
   then return "1"b, there is no more input.

   Author: Dave Ward	10/18/80
*/
dcl  bl                       fixed bin(21) parm	/* Length of buffer (bytes). */;
dcl  bp                       ptr parm	/* Pointer to input buffer. */;
dcl  nb                       fixed bin(21) parm	/* Number of bytes no in buffer. */;
	if gfms_trailer_label_ () then return ("1"b);	/* Multireel tape concluded. */

/* Continue file from next tape reel. */

	call gfms_header_label_;			/* Process label from next reel. */

/* Obtain the next FILE CONTENT record from tape.
*/
	call iox_$read_record (
	     cbp					/* (input) pointer to control block. */
	     , addr (rec_space)			/* (input) record buffer. */
	     , size (rec_space)*4			/* (input) buffer length in bytes. */
	     , nbr				/* (output) number of bytes read. */
	     , code				/* (output) I/O system status. */
	     );
	if code ^= 0 then do;
	     call com_err_ (
		code
		, "gfms_file_content_records_"
		, "Attempting to read EOI record."
		||"^/Tape status ^4.3b"
		||"^/buffer length ^i (bytes)."
		||"^/bytes read ^i."
		||"^/attach description ""^a"""
		, gfms_tape_status_ (cbp)
		, size (rec_space)*4
		, nbr
		, attach_description
		);
fail:	     ;
	     signal cond (gfms_fail);
	end;

	if (nb + nbr) > bl then do;			/* Exceeded bytes in buffer. */
	     call com_err_ (
		0
		, "gfms_end_of_input_"
		, "Record split over reels exceeds buffer bytes ^i"
		||"^/^i bytes read from last reel, ^i bytes from current reel."
		, bl
		, nb
		, nbr
		);
	     signal cond (gfms_fail);
	end;

	buffer.new = substr (rec_space, 1, nbr);
	nb = nb+nbr;				/* Reset to total bytes now in buffer. */
	return ("0"b);
%page;
/*   Variables for gfms_end_of_input_:		*/
/*   IDENTIFIER		ATTRIBUTES	*/
dcl  code                     fixed bin(35);
dcl  com_err_                 entry() options(variable);
dcl  divide                   builtin;
dcl  error_table_$long_record fixed bin(35) ext static;
dcl  gfms_fail                condition ext;
dcl  gfms_header_label_       entry;
dcl  gfms_tape_status_        entry (ptr) returns(bit(12));
dcl  gfms_trailer_label_      entry() returns(bit(1));
dcl  iox_$read_record         entry (ptr, ptr, fixed bin(21), fixed bin(21), fixed bin(35));
dcl  nbr                      fixed bin(21);
dcl  rec_space                char(15624)aligned /* 15624 = 3906 words (file content data records). */;

dcl 1 buffer	aligned based(bp)
,     3 old	char(nb)unal
,     3 new	char(nbr)unal
;
%page;
%include gfms_ext;
     end gfms_end_of_input_;
