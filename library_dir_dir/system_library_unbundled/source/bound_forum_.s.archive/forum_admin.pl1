/****^  ***************************************************************
        *                                                             *
        * Copyright, (C) Massachusetts Institute of Technology, 1986  *
        *                                                             *
        * Copyright (c) 1982 by Massachusetts Institute of Technology *
        *                                                             *
        *************************************************************** */



/****^  HISTORY COMMENTS:
  1) change(86-07-29,Pattin), approve(86-07-29,MCR7354),
     audit(86-08-07,Margolin), install(86-08-16,MR12.0-1128):
     CHanged to use check_gate_access_, handle versions better.
                                                   END HISTORY COMMENTS */


forum_admin:
	procedure ();
	
/* Jay Pattin 03/29/82  Privileged forum interface - don't have to be chairman
  Use of this command requires access to the forum_admin_ gate

  added eligiblility message stuff 5/20/82 Jay Pattin */

declare	arg_count			fixed bin,
	arg_len			fixed bin (21),
	arg_ptr			ptr,
	arg			char (arg_len) based (arg_ptr),
	1 fi			aligned like forum_info,
	forum_dir			char (168),
	forum_name		char (32),
	status			fixed bin (35),
	whoami			char (16) static options (constant) init ("forum_admin");

declare	(addr, codeptr, index)	builtin;

declare	(error_table_$entlong, forum_et_$not_eligible, forum_et_$no_such_forum)
				fixed bin (35) external;

declare	check_gate_access_		entry (char (*), ptr, fixed bin (35)),
	cu_$arg_count		entry (fixed bin, fixed bin (35)),
	cu_$arg_ptr		entry (fixed bin, ptr, fixed bin (21), fixed bin (35)),
	(com_err_, com_err_$suppress_name)
				entry options (variable),
	expand_pathname_$add_suffix	entry (char(*), char(*), char(*), char(*), fixed bin (35)),
	forum_$get_forum_path	entry (char (*), char (*), char (*), char (*), fixed bin (35)),
	forum_admin_$change_chairman	entry (char (*), char (*), char (*), fixed bin (35)),
	forum_admin_$v1_change_chairman	entry (char (*), char (*), char (*), fixed bin (35)),
	forum_admin_$convert	entry (char (*), char (*), fixed bin (35)),
	forum_admin_$init_notifications
				entry (fixed bin (35)),
	forum_admin_$set_forum_acl	entry (char (*), char (*), char (*), bit (1) aligned, bit (1) aligned,
				bit (1) aligned, fixed bin (35)),
	forum_admin_$set_switch	entry (char (*), char (*), char (*), char (*), bit (1) aligned, fixed bin (35)),
	forum_admin_$set_global_switch
				entry (char (*), bit (1) aligned, fixed bin (35)),
	forum_$forum_info		entry (char (*), char (*), char (*), fixed bin (71), ptr, fixed bin (35)),
	ioa_			entry options (variable),
	pathname_			entry (char (*), char (*)) returns (char (168));
%page;
%include forum_info;
%page;
	call cu_$arg_count (arg_count, status);
	if status ^= 0 then do;
	     call com_err_ (status, whoami);
	     return;
	end;

	if arg_count = 0 then do;
	     call com_err_$suppress_name (0, "", "Usage:  forum_admin key {arguments}");
	     return;
	end;

	call check_gate_access_ ("forum_admin_", codeptr (forum_admin), status);
	if status ^= 0 then do;
	     call com_err_ (status, whoami, "This command requires access to the forum_admin_ gate");
	     return;
	end;

	call get_arg (1);

	if arg = "init_notifications" then do;
	     if arg_count ^= 1 then do;
WRONG_ARGS:	call com_err_ (0, whoami, "Wrong number of arguments for this keyword.");
		return;
	     end;
	     call forum_admin_$init_notifications (status);
	     if status ^= 0 then call com_err_ (status, whoami);
	end;
	
	else if arg = "convert" then do;
	     if arg_count ^= 2 then goto WRONG_ARGS;
	     call get_path (2, "1"b);
	     call forum_admin_$convert (forum_dir, forum_name, status);
	     if status ^= 0 then call com_err_ (status, whoami, "Converting meeting.");
	end;

	else if arg = "change_chairman" then do;
	     if arg_count ^= 3 then goto WRONG_ARGS;
	     call get_path (2, "0"b);
	     call get_arg (3);
	     fi.version = forum_info_version_1;
	     call forum_$forum_info (forum_dir, forum_name, "", (0), addr (fi), status);
	     if status = 0 | status = forum_et_$not_eligible then do;
		call ioa_ ("Changing chairman from ^a.^a to ^a.", fi.chairman.username, fi.chairman.project, arg);
		call forum_admin_$change_chairman (forum_dir, forum_name, arg, status);
		if status ^= 0 then call com_err_ (status, whoami, "Changing chairman.");
	     end;
	     else call com_err_ (status, whoami, "Getting forum info.");
	end;
	else if arg = "switch_on" | arg = "swn" then call set_switch ("1"b);
	else if arg = "switch_off" | arg = "swf" then call set_switch ("0"b);
	else call com_err_ (0, whoami, "Unrecognized key. ""^a""", arg);

PUNT:	return;
%page;
get_arg:
     procedure (arg_num);

declare	arg_num			fixed bin;

	call cu_$arg_ptr (arg_num, arg_ptr, arg_len, status);
	if status ^= 0 then do;
	     call com_err_ (status, whoami, "Argument #^d.", arg_num);
	     goto PUNT;
	end;

	return;
     end get_arg;


get_path:
     procedure (path_arg, must_be_v1);

declare	path_arg			fixed bin,
	must_be_v1		bit (1) aligned;

	call get_arg (path_arg);
	if must_be_v1 then goto VERSION1;
	call expand_pathname_$add_suffix (arg, "forum", forum_dir, forum_name, status);
	if status ^= 0 then do;
	     if status = error_table_$entlong then goto VERSION1;
EXPANDERR:    
	     call com_err_ (status, whoami, "Expanding ""^a"".", arg);
	     goto PUNT;
	end;

	call forum_$get_forum_path (forum_dir, forum_name, forum_dir, forum_name, status);
	if status = 0 then return;

VERSION1:	call expand_pathname_$add_suffix (arg, "control", forum_dir, forum_name, status);
	if status ^= 0 then goto EXPANDERR;
	
	return;
     end get_path;
%page;
set_switch:
     procedure (value);

declare	value			bit (1) aligned,
	switch_name		char (32);

	if arg_count < 2 then goto WRONG_ARGS;
	call get_arg (2);
	switch_name = arg;

	if switch_name = "meeting_eligibility_messages" | switch_name = "mtg_emsg" |
	     switch_name = "adjourned" | switch_name = "adj" then do;
	     if arg_count ^= 3 then goto WRONG_ARGS;
	     call get_path (3, "0"b);
	     call forum_admin_$set_switch (forum_dir, forum_name, "", switch_name, value, status);
	     if status ^= 0 then
		call com_err_ (status, whoami, "^[S^;Res^]etting ""^a"" switch for the ^a meeting",
		value, switch_name, pathname_ (forum_dir, forum_name));
	end;
	else do;
	     if arg_count ^= 2 then goto WRONG_ARGS;
	     call forum_admin_$set_global_switch (arg, value, status);
	     if status ^= 0 then call com_err_ (status, whoami, "^[S^;Res^]etting ""^a"" switch.", value, arg);
	end;

     end set_switch;

end forum_admin;
