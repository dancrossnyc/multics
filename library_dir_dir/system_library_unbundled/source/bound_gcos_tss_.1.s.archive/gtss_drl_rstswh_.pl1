/* ***********************************************************
   *                                                         *
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
   *                                                         *
   *                                                         *
   *********************************************************** */

/* *************************************************************
   *						   *
   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
   *						   *
   ************************************************************* */
gtss_drl_rstswh_: proc (mcpp, increment);

/*	Reset switch word.

   Authors: Robert J. Grimes	Created
   -	  Albert N. Kepner	  1978
   -	  Robert M. May
   -	  David B. Ward
*/
dcl  mcpp                     ptr parm;
dcl  increment                fixed bin parm;
	mcp = mcpp;

/*


   DRL RSTSWH, RESET SWITCH WORD (octal 11)


   8_________1_6______

   DRL      RSTSWH  or RSTSWH,* (Refer to  DRL  SETSWH  for  the
   latter usage)

   (See TSS SYSTEM PROGRAMMER'S
   REFERENCE MANUAL DD17C, Rev. 0, July 1976
   Page 3-23)

*/

	scup = addr (mc.scu);
	increment = 0;				/* no parameter words */

	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_) ; /* GCOS memory. */
	qin = mc.regs.q;
	drl_ptr = addrel (
	     gseg, fixed (scu.ilc));			/* find the modifier to find out which on to do */

	if drl_word.modifier = "0"b then do;
	     mc.regs.q, string (gtss_ust.lswth) = string (gtss_ust.lswth) & ^string (mc.regs.q); /* or q into psw */
	     wh = "1";
	end;
	else do;
	     mc.regs.q, string (gtss_ust.lswt2) = string (gtss_ust.lswt2) & ^string (mc.regs.q); /* or q into psw 2) */
	     wh = "2";
	end;

	if db_drl_rstswh then call pr_sw (wh, "OFF", qin, mc.regs.q);
	return;

/*  Variables for gtss_drl_rstswh_:
   IDENTIFIER		ATTRIBUTES */
dcl  qin                      bit(36);
dcl  wh                       char(1);
dcl  ioa_                     entry options(variable);
dcl  gseg                     pointer;
dcl  drl_ptr                  ptr init(null());
dcl 1 drl_word aligned based (drl_ptr),
    2 fill bit (30) unaligned,
    2 modifier bit (6) unaligned;

%include gtss_ust_ext_;

%include gtss_ext_;

%include mc;

%include gtss_db_names;

%include gtss_pr_sw;
     end						/* gtss_drl_rstswh_ */;
