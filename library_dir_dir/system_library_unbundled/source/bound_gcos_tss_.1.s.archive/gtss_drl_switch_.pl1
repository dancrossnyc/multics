/* ***********************************************************
   *                                                         *
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
   *                                                         *
   *                                                         *
   *********************************************************** */

/* *************************************************************
   *						   *
   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
   *						   *
   ************************************************************* */
gtss_drl_switch_: proc (mcpp, increment);

/* *	gtss exchange two temp files.

   Authors: Robert J. Grimes	Created
   -	  Albert N. Kepner	  1978
   -	  Robert M. May
   -	  David B. Ward
   Change:  Dave Ward	03/28/79 Added aborts, debug code.
   * */
dcl  mcpp ptr parm;
dcl  increment fixed bin parm;
	mcp = mcpp;

/* *

   DRL SWITCH, SWITCH TEMPORARY FILE NAMES (octal 53)


   8_________1_6_____________________

   DRL      SWITCH
   ZERO     L(fileid1),L(fileid2)
   Error return location.
   Successful return location.

   (See TSS SYSTEM PROGRAMMER'S
   REFERENCE MANUAL DD17B, Rev. 0, July 1976
   Page 3-54)

*/
dcl  arg_ptr ptr init(null());

dcl 1 arglist aligned based (arg_ptr),
    2 file_id_1 fixed bin (18) unsigned unaligned,
    2 file_id_2 fixed bin (18) unsigned unaligned;

dcl  file_id_1_ptr ptr init(null());

dcl  file_id_1_name char (8) based (file_id_1_ptr);

dcl  file_id_2_ptr ptr init(null());

dcl  file_id_2_name char (8) based (file_id_2_ptr);

dcl  status fixed bin (24);
dcl  code fixed bin (35);

dcl  file_no_1 fixed bin (24);
dcl  file_no_2 fixed bin (24);

dcl  gseg ptr init(null());

dcl 1 T aligned like gtss_file_attributes;


/*		P R O C E D U R E 			*/


	scup = addr (mc.scu);			/* get the system conditions */

	increment = 1;				/* set up for possible error */

	mc.regs.a = "0"b;				/* set up for error possiblity */

	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_); /* save pointer to this segment */

/* Check for arguments out of bounds. */
	if (fixed (scu.ilc, 18)+2) >= fixed (gtss_ust.lsize.limit, 18) then
	     call gtss_abort_subsystem_ (
	     mcp,
	     "gtss_drl_switch_",
	     4,
	     gtss_pnterr.err4,
	     fixed (scu.ilc, 18));

	arg_ptr = addrel (gseg, fixed (scu.ilc) + 1);	/* wrap pointer around the arguments */

/* Check for arguments out of bounds. */
	if (arglist.file_id_1+1) > fixed (gtss_ust.lsize.limit, 18) then
	     call gtss_abort_subsystem_ (
	     mcp,
	     "gtss_drl_switch_",
	     4,
	     gtss_pnterr.err4,
	     fixed (scu.ilc, 18));

/* Check for arguments out of bounds. */
	if (arglist.file_id_2+1) > fixed (gtss_ust.lsize.limit, 18) then
	     call gtss_abort_subsystem_ (
	     mcp,
	     "gtss_drl_switch_",
	     4,
	     gtss_pnterr.err4,
	     fixed (scu.ilc, 18));

	file_id_1_ptr = addrel (gseg, arglist.file_id_1);
	file_id_2_ptr = addrel (gseg, arglist.file_id_2);

	call gtss_aft_$find (file_id_1_name, file_no_1, code);
	if code ^= 0 then
	     call gtss_abort_subsystem_ (
	     mcp
	     , 0
	     , "1st name ""^a"" not in aft."
	     , file_id_1_name
	     );

	call gtss_aft_$find (file_id_2_name, file_no_2, code);
	if code ^= 0 then
	     call gtss_abort_subsystem_ (
	     mcp
	     , 0
	     , "2nd name ""^a"" not in aft."
	     , file_id_2_name
	     );

	call gtss_ios_exchange_names_ (file_no_1, file_no_2, status, code);
	if status = 13 then mc.regs.a = (36)"1"b;	/* => Exchanging perm file. */
	else
	if status = 14 then do;			/* => file not open. */
	     call com_err_ (0, "gtss_drl_switch_",
		"File not open but in aft ""^a"" (^i) ""^a"" (^i).",
		file_id_1_name, file_no_1,
		file_id_2_name, file_no_2);
	     call gtss_abort_subsystem_ (
		mcp,
		"gtss_drl_switch_",
		0,
		"DRL_SWITCH: IN AFT BUT NOT OPEN (BUG?) at (^60)",
		fixed (scu.ilc, 18));
	end;
	else
	if status = 15 then do;			/* Bad file number. */
	     call com_err_ (0, "gtss_drl_switch_",
		"Bad file nos for exchange ^i ^i.",
		file_no_1, file_no_2);
	     call gtss_abort_subsystem_ (
		mcp,
		"gtss_drl_switch_",
		0,
		"DRL_SWITCH: BAD FILE NUMBERS? at (^6o)",
		fixed (scu.ilc, 18));
	end;
	else
	increment = 2;				/* go back to good return */

	if db_drl_switch then
	     call com_err_ (0, "gtss_drl_switch_"
	     , "file ""^a"" (aft ^i) switched with ""^a"" (^i)."
	     , file_id_1_name, file_no_1
	     , file_id_2_name, file_no_2
	     );

/* Exchange attributes blocks for files being switched */

	T = temp_file (file_no_1);
	temp_file (file_no_1) = temp_file (file_no_2);
	temp_file (file_no_2) = T;

	return;

%include gtss_ext_;

%include gtss_pnterr;

%include mc;

%include gtss_entry_dcls;

%include gtss_ust_ext_;

%include gtss_tfa_ext_;

%include gtss_db_names;
     end						/* gtss_drl_switch_ */;
