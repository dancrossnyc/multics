/* ***********************************************************
   *                                                         *
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
   *                                                         *
   *                                                         *
   *********************************************************** */

/* *************************************************************
   *						   *
   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
   *						   *
   ************************************************************* */
gtss_drl_t_err_: proc (mcpp, increment);

/**	gtss error detected by a subsystem.

   Authors:	Robert J. Grimes	Created
		Albert N. Kepner	  1978
		Robert M. May
		David B. Ward

   Changed:	Al Dupuis	10/09/79. Added tests for lflg2.b8,
				lflg2.b4 and lswt2.b5.
   * */
dcl  mcpp ptr parm;
dcl  increment fixed bin parm;
	mcp = mcpp;

/* *

   DRL T.ERR, ERROR DETECTED (octal 103)


   8_________1_6_____________________

   DRL      T.ERR

   (See TSS SYSTEM PROGRAMMER'S
   REFERENCE MANUAL DD17C, Rev. 0, July 1976
   Page 3-33.1)

*/

	increment = 0 ;				/* Zero arguments */
	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);
	gtss_spa.lwrap.b23 = "1"b;
	if gtss_ust.lflg2.b8 then gtss_ust.lcfst.start_term = 14;
	initial_lxxx = fixed (rel (addr (gtss_ust.lxxx)))-fixed (rel (addr (gtss_ust)));
	ssname = gtss_prgdes_ext_$prgdes.ss_name
	     (gtss_ust.lprgs.b0_17 (gtss_ust.lxxx.b0_17 - initial_lxxx));
	ssname = translate (ssname, "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
	     "abcdefghijklmnopqrstuvwxyz");
	if gtss_ust.lswt2.b6 then do;
	     gtss_ext_$flags.gtss_com_err_sw = "1"b;
	     call gtss_abort_subsystem_ (mcp, "gtss_drl_t_err_", 0,
		"<67> ERROR DETECTED IN ^a PROCESSING", ssname);
	     return;
	end;
	if ^((gtss_ust.lflg2.b8) & (^gtss_ust.lflg2.b4))	/* If CFP on  and TALK off go on, else return */
	then return;
	if gtss_ust.lswt2.b5 then return;		/* trap mode disabled */
	gtss_ext_$flags.gtss_com_err_sw = "1"b;
	call gtss_abort_subsystem_ (mcp, "gtss_drl_t_err_", 0,
	     "<67> ERROR DETECTED IN ^a PROCESSING", ssname);
	return;

/* *	Variables for gtss_drl_t_err_:
   IDENTIFIER		ATTRIBUTES	* */
dcl  code fixed bin (35);
dcl  gseg ptr init (null ());
dcl  initial_lxxx fixed bin (17);
dcl  ssname char (4) init ("????");
dcl  status fixed bin (24);

%include gtss_ext_;

%include mc;

%include gtss_ust_ext_;

%include gtss_spa;

%include gtss_entry_dcls;

%include gtss_prgdes_;
     end						/* gtss_drl_t_err_ */;
