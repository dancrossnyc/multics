/* ***********************************************************
   *                                                         *
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
   *                                                         *
   *                                                         *
   *********************************************************** */

/* *************************************************************
   *						   *
   * Copyright (c) 1979 by Honeywell Information Systems, Inc. *
   *						   *
   ************************************************************* */
gtss_drl_t_linl_: proc (mcpp, increment);

/**	gtss obtain or reset terminal input line length.

   Author: Dave Ward	07/03/79
 **/
dcl  mcpp			ptr parm;
dcl  increment		fixed bin parm;
	mcp = mcpp;

/**

   DRL T.LINL, CHANGE TERMINAL INPUT LINE LENGTH (octal 74)


   8_________1_6_____________________

   DRL      T.LINL

    (See TSS SYSTEM PROGRAMMER'S
         REFERENCE MANUAL DD17C, Rev. 0, July 1976
         Page 3-33)

*/

	increment = 0 ;				/* Zero arguments */
	scup = addr (mc.scu);
	gseg = gtss_ext_$gtss_slave_area_seg (gtss_ext_$stack_level_);

	if mc.regs.q = "0"b then do;			/* Caller wants current line length. */
	     QL = gtss_ust.lrtll.char_length;
	     AL = 4;				/* Success. */
	     return;
	end;

	if (QL<81) | (QL>161) then do;		/* Line length out of range. */
	     AL = 0;				/* ^=4 => failure. */
	     return;
	end;

	gtss_ust.lrtll.char_length = QL;		/* Set new line length. */
	AL = 4;					/* Success. */
	return;

/**	Variables for gtss_drl_t_linl_:
     IDENTIFIER		ATTRIBUTES	**/
dcl  gseg			ptr init(null());

dcl  1 A_reg		aligned based(addr(mc.regs.a)),
       2 AU		fixed bin(17)unal,
       2 AL		fixed bin(17)unal;

dcl  1 Q_reg		aligned based(addr(mc.regs.q)),
       2 QU		fixed bin(17)unal,
       2 QL		fixed bin(17)unal;

%include gtss_ext_;

%include mc;

%include gtss_ust_ext_;
     end						/* gtss_drl_t_linl_ */;
