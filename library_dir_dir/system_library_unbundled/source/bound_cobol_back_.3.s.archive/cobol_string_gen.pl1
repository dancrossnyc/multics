/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
     MCR8060 cobol_string_gen.pl1 Reformatted code to new Cobol standard.
                                                   END HISTORY COMMENTS */


/* format: style3 */
cobol_string_gen:
     proc (mp_ptr, passed_tag);

dcl	mp_ptr		ptr;
dcl	passed_tag	fixed bin;

dcl	1 mp		based (mp_ptr),
	  2 n		fixed bin,
	  2 pt		(0 refer (mp.n)) ptr;

dcl	1 s		auto,
	  2 n		fixed bin,
	  2 tag		fixed bin,
	  2 rtp		ptr,
	  2 ptp		ptr,
	  2 str		(256),
	    3 stp		ptr,
	    3 dtp		ptr;


dcl	(i, j, k, startj)	fixed bin;
dcl	into_key		fixed bin static init (116);
dcl	size_key		fixed bin static init (161);
dcl	delimited_key	fixed bin static init (90);

dcl	dn_ptr		ptr;
dcl	tptr		ptr;

dcl	cobol_string	entry (ptr);


/*************************************/
start:
	eos_ptr = mp.pt (mp.n);
	if end_stmt.b
	then do;
		passed_tag = cobol_$next_tag;
		cobol_$next_tag = cobol_$next_tag + 1;
		s.tag = passed_tag;
	     end;
	else s.tag = 0;

	j = 0;
	startj = 1;
	do i = 2 to mp.n - 1;
	     dn_ptr = mp.pt (i);
	     if data_name.type = 1
	     then do;
		     if dn_ptr -> reserved_word.key = into_key
		     then do;			/* INTO */
			     i = i + 1;
			     s.rtp = mp.pt (i);
			     if end_stmt.c
			     then do;
				     i = i + 1;
				     s.ptp = mp.pt (i);
				end;
			     else s.ptp = null ();
			end;
		     else if dn_ptr -> reserved_word.key = delimited_key
		     then do;
			     i = i + 1;
			     dn_ptr = mp.pt (i);
			     tptr = dn_ptr;
			     if data_name.type = 1
			     then if dn_ptr -> reserved_word.key = size_key
				then tptr = null ();
			     do k = startj to j;
				s.str.dtp (k) = tptr;
			     end;
			     startj = j + 1;
			end;
		     else do;			/* fig con */
			     j = j + 1;
			     s.stp (j) = mp.pt (i);
			end;
		end;
	     else do;				/* non-type1 */
		     j = j + 1;
		     s.stp (j) = mp.pt (i);
		end;
	end;
	s.n = j;					/*	s.str.dtp(s.n)=null();*/
	call cobol_string (addr (s));
	return;


/*************************************/

/*****	Declaration for builtin function	*****/

dcl	(substr, mod, binary, fixed, addr, addrel, rel, length, string, unspec, null, index)
			builtin;

/*****	End of declaration for builtin function	*****/

%include cobol_type1;
%include cobol_type9;
%include cobol_type19;
%include cobol_;
     end cobol_string_gen;
