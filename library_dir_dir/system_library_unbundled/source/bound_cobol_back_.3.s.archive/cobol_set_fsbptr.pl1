/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
     MCR8060 cobol_set_fsbptr.pl1 Reformatted code to new Cobol standard.
                                                   END HISTORY COMMENTS */


/* Modified on 1/25/77 by Bob Chang to implement profile option.	*/
/* Modified on 11/11/76 by Bob Chang to change mft into file_table.	*/
/* Modified since Version 2.0.	*/
/* format: style3 */
cobol_set_fsbptr:
     proc (ft_ptr);

dcl	ft_ptr		ptr;

dcl	1 basic_struct	static,
	  2 type		fixed bin init (1),
	  2 operand_no	fixed bin init (0),
	  2 lock		fixed bin init (0),
	  2 seg		fixed bin,
	  2 offset	fixed bin,
	  2 send_receive	fixed bin init (0);

dcl	instr		(3) bit (36);
dcl	reloc		(6) bit (5) aligned;
dcl	instr_ptr		ptr;
dcl	reloc_ptr		ptr;

/* fixup directive for link, used when profile options is specified.	*/
dcl	1 fixup_directive	aligned static,
	  2 operation	bit (1) unal init ("0"b),
	  2 type		bit (4) unal init ("1111"b),
	  2 reserved	bit (9) unal init ("000000000"b),
	  2 location	unal,
	    3 half	bit (1) unal init ("0"b),
	    3 base	bit (3) unal init ("001"b),
	    3 offset	fixed bin unal,
	  2 tag_number	fixed bin aligned;
dcl	epp1		bit (12) static init ("011101001101"b);
dcl	epp1_indmod	bit (18) static init ("011101001101010000"b);

dcl	utemp		fixed bin;
dcl	i		fixed bin;
dcl	ic		fixed bin;

dcl	cobol_addr	entry (ptr, ptr, ptr);
dcl	cobol_make_fixup	entry (ptr);
dcl	cobol_emit	entry (ptr, ptr, fixed bin);


/*************************************/
start:
	instr_ptr = addr (instr);
	reloc_ptr = addr (reloc);
	do i = 1 to 6;
	     reloc (i) = ""b;
	end;
	ic = 1;
	if file_table.fsb.seg < 0
	then do;					/* external file - link to fsb */
		utemp = -file_table.fsb.seg;
		instr (1) = "100"b || substr (unspec (utemp), 22, 15) || epp1_indmod;
		if file_table.fsb.off ^= 0
		then do;
			instr (2) = "001"b || substr (unspec (file_table.fsb.off), 22, 15) || epp1;
			ic = 2;
		     end;
		reloc (1) = "10100"b;
	     end;
	else do;					/* internal file - fsb in cobol data segment */
		instr (1) = (18)"0"b || epp1_indmod;
		basic_struct.seg = file_table.fsb.seg;
		basic_struct.offset = file_table.fsb.off;
		call cobol_addr (addr (basic_struct), instr_ptr, reloc_ptr);
	     end;
	if fixed_common.options.profile
	then do;
		fixup_directive.location.offset = cobol_$text_wd_off;
		call cobol_make_fixup (addr (fixup_directive));
	     end;
	call cobol_emit (instr_ptr, reloc_ptr, ic);
exit:
	return;


/*************************************/
%include cobol_file_table;
%include cobol_ext_;
%include cobol_fixed_common;
%include cobol_;
     end cobol_set_fsbptr;
