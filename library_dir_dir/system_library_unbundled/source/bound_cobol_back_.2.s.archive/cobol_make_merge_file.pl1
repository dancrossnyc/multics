/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8082),
     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
     MCR8082 cobol_make_merge_file.pl1 Fix wild array subscript.
                                                   END HISTORY COMMENTS */


/* Modified on 02/22/85 by FCH, [5.3-1], dont clobber fixed common, BUG561 */
/* Modified on 02/20/85 by FCH, [5.3...], Trace added */
/* Modified on 11/23/76 by Bob Chang to change the external bit of merge file table.	*/
/* Created on 11/17/76 by Bob Chang to set up the temporary merge file.	*/





/* format: style3 */
cobol_make_merge_file:
     proc (name_ptr, file_ptr, type12_ptr, type9_ptr);

dcl	name_ptr		ptr,
	dn_ptr		ptr,
	ft_ptr_save	(20) ptr static,
	first_call	fixed bin static init (0),
	merge_count	fixed bin static,
	ft_ptr		ptr;
dcl	stop_bit		bit (1),
	temp_id		char (5),
	temp_no		fixed bin,
	status_code	fixed bin (35),
	(i, j)		fixed bin,
	rec_id		char (5);
dcl	1 temp_type9	static,
	  2 header	(4) fixed bin init (112, 0, 0, 9),
	  2 repl_ptr	(2) ptr init ((2) null ()),
	  2 fill1		bit (108) init (""b),
	  2 file_key_info,
	    3 fb1		(3) fixed bin init (0, 0, 0),
	    3 size	fixed bin init (0),
	    3 fb2		(2) fixed bin init (0, 0),
	    3 flags1	bit (36) init ("000000100100000000010000000100000000"b),
	    3 flags2	bit (36) init (""b),
	    3 seg		fixed bin init (0),
	    3 off		fixed bin,
	  2 fill2		(7) fixed bin init (0, 0, 0, 0, 0, 0, 0);
dcl	temp_type12	char (60),
	(merge_ft_ptr, merge_file_ptr)
			ptr,
	temp_file_ptr	(20) ptr static,
	temp_type12_ptr	(20) ptr static,
	(file_ptr, type12_ptr, type9_ptr)
			ptr,
	temp_based	char (1024) based,
	temp_file		char (1024),
	temp_type9_ptr	(20) ptr static;

dcl	cobol_read_rand	entry (fixed bin, char (5), ptr),
	cobol_read_ft	entry (fixed bin, ptr),
	cobol_alloc$stack	entry (fixed bin, fixed bin, fixed bin),
	cobol_io_$cobol_vdwf_sput
			entry (ptr, fixed bin (35), ptr, fixed bin, char (5)),
	cobol_make_fsb_link entry (ptr);

start:	/***.....	if Trace_Bit then call cobol_gen_driver_$Tr_Beg(MY_NAME);/**/
						/*[5.3-1]*/
	merge_file_ptr = addrel (cobol_com_ptr, 8 + size (fixed_common));
	if first_call = cobol_$compile_count
	then do i = 1 to merge_count;
		if ft_ptr_save (i) -> file_table.max_cra_size = temp_file_ptr (i) -> file_table.max_cra_size
		then do;
			file_ptr = temp_file_ptr (i);
			type9_ptr = temp_type9_ptr (i);
			type12_ptr = temp_type12_ptr (i);
			go to mfex;
		     end;
	     end;
	else do;
		merge_count = 0;
		first_call = cobol_$compile_count;
	     end;

	merge_count = merge_count + 1;
	i = fd_token.file_no;
	call cobol_read_ft (i, ft_ptr_save (merge_count));

	temp_type12_ptr (merge_count) = addr (temp_type12);
	temp_file_ptr (merge_count) = addr (temp_file);
	temp_type9_ptr (merge_count) = addr (temp_type9);
	rec_id = fixed_common.filedescr_offsets (1);
	stop_bit = "0"b;

	do while (^stop_bit);
	     call cobol_read_rand (1, rec_id, ft_ptr);
	     rec_id = file_table.next;
	     if rec_id = "00000"
	     then stop_bit = "1"b;
	end;

	substr (temp_type12, 1, 60) = substr (name_ptr -> temp_based, 1, 60);
	temp_no = file_table.file_no + 1;
	temp_type12_ptr (merge_count) -> fd_token.file_no = temp_no;
	i = fd_token.file_no;
	call cobol_read_ft (i, merge_ft_ptr);

	substr (temp_file, 1, 1024) = substr (merge_ft_ptr -> temp_based, 1, 1024);
						/*[5.3-1]*/
	call cobol_io_$cobol_vdwf_sput (merge_file_ptr, status_code, addr (temp_file), 1024, temp_id);

	file_table.next = temp_id;
	if temp_no <= 20
	then fixed_common.filedescr_offsets (temp_no) = temp_id;
	call cobol_read_rand (1, temp_id, ft_ptr);

/*	setup temporary file table.	*/
	file_table.temp = "1"b;
	file_table.ao_len = 0;
	file_table.cat_nm = "cobol_temp_merge_file_";
	file_table.id = "cobol_temp_merge_switch_";
	file_table.device = 6;
	file_table.catalogued = 0;
	file_table.ifn = "cobol_merge_ifn_";
	file_table.external = "1"b;
	file_table.file_status = "0"b;
	file_table.extra_status = "0"b;
	file_table.cra_seg = 1000;
	i = file_table.max_cra_size;
	file_table.file_no = temp_no;
	file_table.max_cra_size = ft_ptr_save (merge_count) -> file_table.max_cra_size;
	file_table.rec_do = ft_ptr_save (merge_count) -> file_table.rec_do;
	call cobol_alloc$stack (i, 2, j);

	file_table.cra_offset = j * 4;
	cobol_$init_stack_off = cobol_$stack_off;

	call cobol_make_fsb_link (ft_ptr);

	temp_file_ptr (merge_count) = ft_ptr;
	temp_type12_ptr (merge_count) -> fd_token.type = 12;
	temp_type9_ptr (merge_count) -> data_name.seg_num = file_table.cra_seg;
	temp_type9_ptr (merge_count) -> data_name.offset = file_table.cra_offset;
	temp_type9_ptr (merge_count) -> data_name.file_num = file_table.file_no;
	temp_type9_ptr (merge_count) -> data_name.item_length = file_table.max_cra_size;

/*[5.3-1]*/
	call cobol_io_$cobol_vdwf_sput (merge_file_ptr, status_code, temp_type9_ptr (merge_count), 112, temp_id);
	call cobol_read_rand (1, temp_id, temp_type9_ptr (merge_count));
						/*[5.3-1]*/
	call cobol_io_$cobol_vdwf_sput (merge_file_ptr, status_code, temp_type12_ptr (merge_count), 60, temp_id);
	call cobol_read_rand (1, temp_id, temp_type12_ptr (merge_count));

	file_ptr = temp_file_ptr (merge_count);
	type12_ptr = temp_type12_ptr (merge_count);
	type9_ptr = temp_type9_ptr (merge_count);

mfex:	/***.....	if Trace_Bit then call cobol_gen_driver_$Tr_End(MY_NAME);/**/
	return;

	/***.....	dcl cobol_gen_driver_$Tr_Beg entry(char(*));/**/
	/***.....	dcl cobol_gen_driver_$Tr_End entry(char(*));/**/

	/***.....	dcl Trace_Bit bit(1) static external;/**/
	/***.....	dcl Trace_Lev fixed bin static external;/**/
	/***.....	dcl Trace_Line char(36) static external;/**/
	/***.....	dcl ioa_ entry options(variable); /**/
	/***..... dcl MY_NAME char (21) int static init ("COBOL_MAKE_MERGE_FILE");/**/

/*****	Declaration for builtin function	*****/

dcl	(substr, mod, binary, fixed, addr, addrel, rel, length, string, unspec, null, size, index)
			builtin;

/*****	End of declaration for builtin function	*****/


%include cobol_fixed_common;

%include cobol_file_table;

%include cobol_type12;

%include cobol_type9;

%include cobol_ext_;
%include cobol_;


     end cobol_make_merge_file;
