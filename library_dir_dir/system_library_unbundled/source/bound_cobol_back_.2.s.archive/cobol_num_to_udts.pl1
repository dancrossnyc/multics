/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
     MCR8060 cobol_num_to_udts.pl1 Reformatted code to new Cobol standard.
                                                   END HISTORY COMMENTS */


/*{*/

/* format: style3 */
cobol_num_to_udts:
     proc (sf_ptr, rf_ptr);

/*
This procedure is called to generate code to convert any
numeric data item to an unpacked decimal, trailing separate
sign value.
*/

/*  DECLARATION OF THE PARAMETERS  */

dcl	sf_ptr		ptr;
dcl	rf_ptr		ptr;

/*  DESCRIPTION OF THE PARAMETERS  */

/*
PARAMETER		DESCRIPTION
sf_ptr		Pointer to the data name token for the
		variable to be converted .  (input)
rf_ptr		Pointer to a buffer in which the data name
		token for the unpacked decimal trailing
		separate sign variable is built by this
		procedure.  If rf_ptr is null() on input,
		then this procedure provides the buffer for
		the token.  (input)
*/

/*}*/

/*  DECLARATION OF INTERNAL VARIABLES  */



/*  DECLARATIONS OF EXTERNAL ENTRIES  */

dcl	cobol_move_gen	ext entry (ptr);
dcl	cobol_make_type9$decimal_9bit
			ext entry (ptr, fixed bin, fixed bin (24), fixed bin, fixed bin);
dcl	cobol_alloc$stack	ext entry (fixed bin, fixed bin, fixed bin);

/*  DECLARATIONS OF INTERNAL STATIC VARIABLES  */

/*  Definition of an EOS token used in calls to the MOVE genarator.  */

dcl	1 move_eos_token	int static,
	  2 size		fixed bin (15),
	  2 line		fixed bin (15),
	  2 column	fixed bin (15),
	  2 type		fixed bin (15),
	  2 verb		fixed bin (15) init (18),	/*  MOVE  */
	  2 e		fixed bin (15) init (1);	/*  One receiving field in the move  */

/*  DECLARATIONS OF INTERNAL VARIABLES  */

dcl	work_item_length	fixed bin;
dcl	dn_ptr		ptr;
dcl	ret_offset	fixed bin;
dcl	dum_buff		(1:10) ptr;


/**************************************************/
/*	START OF EXECUTION			*/
/*	external procedure cobol_num_to_udts	*/
/**************************************************/


	if sf_ptr -> data_name.bin_18
	then work_item_length = 7;
	else if sf_ptr -> data_name.bin_36
	then work_item_length = 12;
	else work_item_length = sf_ptr -> data_name.places_left + sf_ptr -> data_name.places_right + 1;
						/*  Add one for sign byte  */

/*  Allocate space on the stack to receive the unpacked decimal value.  */
	call cobol_alloc$stack (work_item_length, 0, ret_offset);

/*  Make a data name token for the decimal value just allocated on the stack.  */
	call cobol_make_type9$decimal_9bit (rf_ptr, 1000 /*STACK*/, fixed (ret_offset, 24),
	     fixed (sf_ptr -> data_name.places_left, 15), fixed (sf_ptr -> data_name.places_right, 15));

/*  Change the sign type in the token just built to trailing separate.  */
	rf_ptr -> data_name.sign_type = "011"b;

/*  Set up the input token for calling the move generator.  */
	in_token_ptr = addr (dum_buff);

	in_token.n = 4;
	in_token.code = 0;
	in_token.token_ptr (1) = null ();
	in_token.token_ptr (2) = sf_ptr;
	in_token.token_ptr (3) = rf_ptr;
	in_token.token_ptr (4) = addr (move_eos_token);

/*  Call the MOVE generator to generate code to move the data (and convert it to unpacked deciaml)  */

	call cobol_move_gen (in_token_ptr);


/*  INCLUDE FILES USED BY THIS PROCEDURE  */


/*****	Declaration for builtin function	*****/

dcl	(substr, mod, binary, fixed, addr, addrel, rel, length, string, unspec, null, index)
			builtin;

/*****	End of declaration for builtin function	*****/

%include cobol_type9;


%include cobol_in_token;

     end cobol_num_to_udts;
