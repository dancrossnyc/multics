/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
     MCR8060 cmcs_fillin_hdr_.pl1 Reformatted code to new Cobol standard.
                                                   END HISTORY COMMENTS */


/* Modified since Version 4.3 */

/* format: style3 */
cmcs_fillin_hdr_:
     proc (a_hdr_ptr, a_hdr_version, a_hdr_len, a_entry_len, a_code);

/* This COBOL MCS subroutine is used to fill in the standard infoirmation in all CMCS control headers */

/* Bob May, 5/31/77 */

dcl	a_hdr_ptr		ptr,
	a_hdr_version	fixed bin,
	a_hdr_len		fixed bin,
	a_entry_len	fixed bin,
	a_code		fixed bin (35);

%include cmcs_control_hdr;

dcl	sys_info$max_seg_size
			fixed bin (18) external;

dcl	divide		builtin;

dcl	clock_		entry () returns (fixed bin (71)),
	get_group_id_$tag_star
			entry () returns (char (32)),
	get_process_id_	entry () returns (bit (36));

/* */

	control_hdr_ptr = a_hdr_ptr;

	control_hdr.version = a_hdr_version;
	control_hdr.clock_created = clock_ ();
	control_hdr.group_id = get_group_id_$tag_star ();
	control_hdr.process_id = get_process_id_ ();

	if a_entry_len ^= 0				/* don't hiccup for structures with no entries */
	then control_hdr.max_size =
		divide ((sys_info$max_seg_size - (control_hdr_len + a_hdr_len)), a_entry_len, 18, 0);
	else control_hdr.max_size = 0;

	control_hdr.current_size, control_hdr.entry_count = 0;

	a_code = 0;
	return;

     end /* cmcs_fillin_hdr_ */;
