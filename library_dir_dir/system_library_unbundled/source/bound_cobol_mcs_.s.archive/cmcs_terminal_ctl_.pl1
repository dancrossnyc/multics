/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
     MCR8060 cmcs_terminal_ctl_.pl1 Reformatted code to new Cobol standard.
                                                   END HISTORY COMMENTS */


/* Modified since Version 4.3 */

/* format: style3 */
cmcs_terminal_ctl_:
     proc;					/* must never enter here */

/* This COBOL MCS subroutine is used to obtain the default station_name for a given terminal subchannel (device_channel) */

/* Bob May, 5/31/77 */

	return;

/* */

dcl	a_device_channel	char (8),
	a_station_name	char (12),
	a_code		fixed bin (35);

dcl	my_name		char (18) init ("cmcs_terminal_ctl_");

%include cmcs_control_hdr;
%include cmcs_entry_dcls;
%include cmcs_terminal_ctl;
%include cmcs_user_ctl;

dcl	hcs_$initiate	entry (char (*), char (*), char (*), fixed bin (1), fixed bin (2), ptr, fixed bin (35));
dcl	hcs_$initiate_count entry (char (*), char (*), char (*), fixed bin (24), fixed bin (2), ptr, fixed bin (35));
dcl	hcs_$make_ptr	entry (ptr, char (*), char (*), ptr, fixed bin (35));
dcl	hcs_$make_seg	entry (char (*), char (*), char (*), fixed bin (5), ptr, fixed bin (35));

dcl	get_pdir_		entry () returns (char (168));

dcl	(ioa_, com_err_)	entry options (variable);


dcl	i		fixed bin (35);

dcl	(cmcs_error_table_$bad_term_devchn)
			fixed bin (35) external;

find:
     entry (a_device_channel, a_station_name, a_code);

	if ^(external_user_ctl_ptr -> user_ctl.init_sw.terminal_ctl)
	then do;
		user_ctl_ptr = external_user_ctl_ptr;
		terminal_ctl_ptr = user_ctl.terminal_ctl_ptr;
		user_ctl.init_sw.terminal_ctl = "1"b;
	     end;

	do i = 1 to terminal_ctl.current_size;
	     if ^terminal_ctl.inactive_sw (i)
	     then if terminal_ctl.device_channel (i) = a_device_channel
		then do;
			a_station_name = terminal_ctl.station_name (i);
			a_code = 0;
			return;
		     end;
	end;

	a_station_name = "Undefined!";
	a_code = cmcs_error_table_$bad_term_devchn;
	return;

     end /* cmcs_terminal_ctl_ */;
