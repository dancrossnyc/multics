/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
/* format: off */
%skip(1);
/*

     This module is called by the the linus_display module to delete
     the environment set up by linus_fr_new_report.

 
     Known Bugs:
 
     Other Problems:

     History:

     Written - Al Dupuis - August 1983

*/
%page;
linus_fr_delete_report: proc (

	lcb_ptr_parm,	/* input: ptr to the linus control block */
	code_parm		/* output: success or failure */
		         );
%skip(3);
dcl code_parm fixed bin (35) parm;
dcl lcb_ptr_parm ptr parm;
%skip(3);
	lcb_ptr = lcb_ptr_parm;
	code_parm = 0;
	sci_ptr = lcb.subsystem_control_info_ptr;
%skip(1);
	/* Truncate the work area. */
%skip(1);
	report_cip = lcb.report_control_info_ptr;
	work_area_ptr = report_control_info.report_work_area_ptr;
	call release_area_ (work_area_ptr);
%skip(1);
	/* If we kept a copy of the original report while we were making it then delete it. */
%skip(1);
	if report_control_info.flags.permanent_report
	then do;
	     format_report_ip = report_control_info.format_report_info_ptr;
	     iocb_ptr = format_report_info.report_iocb_ptr;
	     if iocb_ptr = null ()
	     then return;
	     call iox_$close (iocb_ptr, code);
	     if code ^= 0
	     then call ssu_$print_message (sci_ptr, code,
		"While trying to close ^p.", iocb_ptr);
	     call iox_$detach_iocb (iocb_ptr, code);
	     if code ^= 0
	     then call ssu_$print_message (sci_ptr, code,
		"While trying to detach ^p.", iocb_ptr);
	     call iox_$destroy_iocb (iocb_ptr, code);
	     if code ^= 0
	     then call ssu_$print_message (sci_ptr, code,
		"While trying to destroy ^p.", iocb_ptr);
	     call delete_$path (format_report_info.report_directory_name,
		format_report_info.report_entry_name,
		"100111"b, "display", code);
	     if code ^= 0
	     then call ssu_$print_message (sci_ptr, code,
		"While trying to delete ^a in directory^/^a.",
		format_report_info.report_entry_name,
		format_report_info.report_directory_name);
	     format_report_info.report_iocb_ptr = null ();
	     code_parm = code;
	end;
%skip(1);
	return;
%page;
dcl addr builtin;
dcl code fixed bin (35);
dcl delete_$path entry (char(*), char(*), bit(6), char(*), fixed bin(35));
dcl fixed builtin;
dcl iocb_ptr ptr;
dcl iox_$close entry (ptr, fixed bin(35));
dcl iox_$destroy_iocb entry (ptr, fixed bin(35));
dcl iox_$detach_iocb entry (ptr, fixed bin(35));
dcl null builtin;
dcl rel builtin;
dcl release_area_ entry (ptr);
dcl sci_ptr ptr;
dcl ssu_$print_message entry() options(variable);
dcl sys_info$max_seg_size fixed bin(35) ext static;
dcl work_area_ptr ptr;
%page;
%include linus_options_extents;
%page;
%include linus_lcb;
%page;
%include linus_report_info;
%page;
%include linus_report_structures;
%skip(3);
     end linus_fr_delete_report;
