/* **************************************************************
   *                                                            *
   * Copyright, (C) Massachusetts Institute of Technology, 1973 *
   *                                                            *
   ************************************************************** */
lisp_boot_: proc;

/* Modified 10/14/82 by Richard Lamson to correct declaration of ACC string */

/* lisp bootstrap procedure */

dcl tempp ptr,
    i fixed bin,
    foo fixed bin(71) aligned,
    lisp_static_vars_$dollar_p_atom fixed bin(71) aligned external,
    dollar_p_atom fixed bin(71) aligned def (lisp_static_vars_$dollar_p_atom),
    make_lisp_subr_block_ entry(fixed bin(71)aligned,fixed bin(2)aligned, char(*) aligned,
				char(*) aligned, fixed bin(17)aligned,fixed bin(17)aligned),
     lisp_alloc_ entry  (fixed bin(17), ptr),
    lisp_subroutine_maker_ entry,
    lisp_obarray_utils_$init_ht entry,
    lisp_reader_init_$reader_init entry,
    lisp_io_control_$boot entry,
    lisp_get_atom_ entry(char(*)aligned, fixed bin(71)aligned),
    (substr, divide, addr, addrel) builtin;

dcl 1 acc aligned based(accptr),
      2 len fixed bin(9) unaligned unsigned,
      2 str char(0 refer (acc.len)) unaligned,
    accptr pointer,
    lisp_static_vars_$number_of_atomic_constants fixed bin external,
    lisp_static_vars_$atomic_constants fixed bin ext,	/* dummy */
    lisp_static_vars_$atomic_constants_names fixed bin ext,	/* dummy */
    number_of_atomic_constants fixed bin defined (lisp_static_vars_$number_of_atomic_constants),
    atomic_constants(1:number_of_atomic_constants) fixed bin(71) aligned based(addr(lisp_static_vars_$atomic_constants));


dcl (lisp_static_vars_$divov_flag,
     lisp_static_vars_$prinlevel,
     lisp_static_vars_$prinlength) fixed bin(71) external;		/* atoms that must be inited to nil */

%include lisp_initial_atoms;
%include lisp_nums;
%include lisp_common_vars;
%include lisp_atom_fmt;
%include lisp_ptr_fmt;
%include lisp_cons_fmt;
%include lisp_io;

/* clear hash table for atom lookup */

		call lisp_obarray_utils_$init_ht();
	call lisp_subroutine_maker_;			/* initialize all subroutines */


	/* set up pointers to atoms in lisp_static_vars_ */

	accptr = addr(lisp_static_vars_$atomic_constants_names);
	do i = 1 to number_of_atomic_constants;
	     call lisp_get_atom_((acc.str), atomic_constants(i));
	     accptr = addrel(accptr, divide(acc.len+4, 4, 17, 0));
	     end;


	addr(errlist)->based_ptr->atom.value,
	addr(ctrlD)->based_ptr->atom.value = nil;	/* init values  of atoms */
	addr(t_atom)->based_ptr->atom.value = t_atom;

	addr(base)->based_ptr->fixnum_fmt.type_info,
	addr(ibase)->based_ptr->fixnum_fmt.type_info = fixnum_type;
	addr(base)->based_ptr->fixedb,
	addr(ibase)->based_ptr->fixedb = 8;	/* default is octal */

	addr(user_intr_array(20))->based_ptr->atom.value = nil;	/* gc-daemon function */
	plus_status, toplevel, lisp_static_vars_$divov_flag = nil;
	status_gctwa = nil;
	addr(star_rset) -> based_ptr -> atom.value,
	 addr(lisp_static_vars_$prinlevel) -> based_ptr -> atom.value,
	 addr(lisp_static_vars_$prinlength) -> based_ptr -> atom.value = nil;
	call lisp_get_atom_("*nopoint",stnopoint);
	addr(stnopoint)->based_ptr->atom.value = nil;
	call lisp_get_atom_("tty",tty_atom);
	addr(tty_atom)->based_ptr->fixedb = 0;	/* type of tty */
	addr(tty_atom)->based_ptr->fixnum_fmt.type_info = fixnum_type;



	call lisp_io_control_$boot;
	call lisp_reader_init_$reader_init();

     end lisp_boot_;
