/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */


/****^  HISTORY COMMENTS:
  1) change(2016-01-15,Swenson), approve(2016-01-15,MCR10003):
     Fix to support 4-character time zone abbreviations.
                                                   END HISTORY COMMENTS */

/* format: style3 */
apl_date_time_:
     procedure (P_time) returns (char (17));

/* program to format date/time into APL/360 format.
   Written by PG on 740208
   Modified 800116 by PG to use pictures, and put in colons (like VS APL)
*/

/* parameters */

declare	P_time		fixed binary (71) parameter;

/* entries */

declare	decode_clock_value_ entry (fixed bin (71), fixed bin (17), fixed bin (17), fixed bin (17), fixed bin (71),
			fixed bin (17), char (4) aligned);

/* automatic */

declare	(day_of_month, day_of_week, hour, minute, month, second, seconds_since_midnight, year)
			fixed bin (17),
	time_of_day	fixed bin (71),
	time_zone		char (4) aligned;

declare	1 apl_time	unaligned,
	  2 hour		picture "99",
	  2 colon1	char (1),
	  2 minute	picture "99",
	  2 colon2	char (1),
	  2 second	picture "99",
	  2 space		char (1),
	  2 month		picture "99",
	  2 slash1	char (1),
	  2 day		picture "99",
	  2 slash2	char (1),
	  2 year		picture "99";

/* builtin */

declare	(divide, float, max, string)
			builtin;

/* APL time format:
	"HH:MM:SS MM/DD/YY" */

/* program */

	call decode_clock_value_ (P_time, month, day_of_month, year, time_of_day, day_of_week, time_zone);

	string (apl_time) = "  :  :     /  /";

	seconds_since_midnight = float (time_of_day, 63) / 1e6;
						/* convert microseconds to seconds */

	hour = divide (seconds_since_midnight, 3600, 16, 0);
	minute = divide (seconds_since_midnight - 3600 * hour, 60, 16, 0);
	second = seconds_since_midnight - 3600 * hour - 60 * minute;

	apl_time.hour = hour;
	apl_time.minute = minute;
	apl_time.second = second;
	apl_time.month = month;
	apl_time.day = day_of_month;
	apl_time.year = max (year - 1900, 0);		/* don't bomb if year is 0 */

	return (string (apl_time));

     end /* apl_date_time_ */;
