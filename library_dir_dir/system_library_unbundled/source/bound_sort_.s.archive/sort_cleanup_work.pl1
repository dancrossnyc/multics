/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
%;
/* ***************************************
   *				 *
   *				 *
   * Copyright (c) 1975, 1976 by         *
   * Honeywell Information Systems, Inc. *
   *				 *
   *				 *
   *************************************** */
sort_cleanup_work:  proc;

/*   EXTERNAL ENTRIES   */
dcl  hcs_$delentry_seg  entry(ptr, fixed bin(35));
dcl  hcs_$truncate_seg  entry(ptr, fixed bin(24), fixed bin(35));
dcl  hcs_$delentry_file  entry(char(*) aligned, char(*), fixed bin(35));
dcl  hcs_$truncate_file  entry(char(*) aligned, char(*), fixed bin(24), fixed bin(35));

/*   EXTERNAL STATIC   */

% include sort_ext;

/*   AUTOMATIC   */
dcl  hcs_code fixed bin(35);
dcl  i fixed bin(35);

/*   Start   */
     if debug_sw = "0"b then do;
	call hcs_$delentry_seg(sip, hcs_code);
	sip = null();
	call hcs_$delentry_file(wf_dir_name, unique_prefix||"sort_work.SR", hcs_code);
	call hcs_$delentry_file(wf_dir_name, unique_prefix||"sort_work.SS", hcs_code);
		    /*   Ignore any error on deletion   */
	if mii > 0 then do;
	     do i = 1 to mii;
		call hcs_$delentry_seg(msp(i), hcs_code);
	     	/*   Ignore any error on deletion   */
		msp(i) = null();	/*  If segment number gets reused, later call by sort_(merge_) will be ok.  */
		end;
	     if substr(whoami, 1, 5) = "merge" then do;
		call hcs_$delentry_seg(msp(mii+1), hcs_code);  /* extra buffer */
		msp(mii+1) = null();
		end;
	     end;
	end;
     else do;		/*   debug_sw on   */
	call hcs_$truncate_seg(sip, 0, hcs_code);
	call hcs_$truncate_file(wf_dir_name, unique_prefix||"sort_work.SR", 0, hcs_code);
	call hcs_$truncate_file(wf_dir_name, unique_prefix||"sort_work.SS", 0, hcs_code);
	if mii > 0 then do;
	     do i = 1 to mii;
		call hcs_$truncate_seg(msp(i), 0, hcs_code);
		/*   No need to null() pointers, since segment is still initiated.   */
		end;
	     if substr(whoami, 1, 5) = "merge" then do;
		call hcs_$truncate_seg(msp(mii+1), 0, hcs_code);  /* extra buffer */
		end;
	     end;
	end;
     state = 8;
end sort_cleanup_work;
