/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1981 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */

/* PL/1 utilities for the Emacs video_system terminal controller.
   Cleaned up and installed June 1981 Richard Mark Soley
   Modified 810811 by William M. York to add get_terminal_capabilities
	entry so video_system ctl can set flags properly.
   Modified 3 June 1982 by B Margolin to subtract one from width (for
	end-of-line cursor positioning) and to divide line_speed by
	10 when setting ospeed.
   Modified 3 December 1983 by B. Margolin to fix get_terminal_capabilities
	and get_window_info to check codes before using the returned info
	(prevents arithmetic faults).
   Modified 2 November 1984 by B. Margolin to make $get_window_info return
          the correct starting column, even though video_system.ctl doesn't
	actually care about that parameter.
*/

video_system_ctl_util_: procedure ();
	return;	/* Dummy */

/* System Entries */
dcl  iox_$control entry(ptr, char(*), ptr, fixed bin(35));

/* Automatic */
dcl  code fixed bin(35);
dcl  iocb_ptr ptr;

dcl  1 WPI aligned like window_position_info;
dcl  1 capabilities like capabilities_info;

/* Builtin */
dcl  (addr, divide) builtin;

/* Parameters */
dcl (P_line, P_col, P_width, P_height) fixed bin parameter;
dcl (P_constant_t, P_constant_nil) fixed bin(71) parameter;
dcl (P_scroll_region_availablep, P_idel_chars_availablep, P_overstrike_availablep)
	fixed bin(71) parameter;
dcl  P_line_speed fixed bin parameter;
dcl  P_code fixed bin(35) parameter;
dcl  P_iocb_ptr ptr parameter;

/* Include Files */
%include window_control_info;
%include terminal_capabilities;

get_window_info:
    entry(P_iocb_ptr, P_line, P_col, P_width, P_height, P_code);

	WPI.version = window_position_info_version_1;

	call iox_$control (P_iocb_ptr, "get_window_info", addr (WPI), code);

	if code = 0 then do;
	     P_line = WPI.line;
	     P_col = WPI.column;
	     P_width = WPI.width - 1;			/* Leave an extra column */
	     P_height = WPI.height;
	end;
	P_code = code;

	return;

get_terminal_capabilities:
	entry (P_iocb_ptr, P_constant_t, P_constant_nil, P_scroll_region_availablep, P_idel_chars_availablep, P_overstrike_availablep, P_line_speed, P_code);

/* This subroutine is called from Lisp with the symbols "t" and "nil" so
   it can return Lisp logical values without having to call into the Lisp
   world to get their values. */

	capabilities.version = capabilities_info_version_1;

	call iox_$control (P_iocb_ptr, "get_capabilities", addr (capabilities), P_code);

	if P_code = 0 then do;
	     if capabilities.flags.scroll_region
		then P_scroll_region_availablep = P_constant_t;
		else P_scroll_region_availablep = P_constant_nil;

	     if (capabilities.flags.insert_chars & capabilities.flags.delete_chars)
		then P_idel_chars_availablep = P_constant_t;
		else P_idel_chars_availablep = P_constant_nil;

	     if capabilities.flags.overprint
		then P_overstrike_availablep = P_constant_t;
		else P_overstrike_availablep = P_constant_nil;

	     P_line_speed = divide (capabilities.line_speed, 10, 17, 0);
	end;
	return;

     end video_system_ctl_util_;
