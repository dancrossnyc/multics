04/15/88  "EDITOR" EXAMPLE

/*
 * 	EDITOR. A screen-oriented editor.  The user
 * 	interface is similar to a subset of vi.
 * 	The buffer is kept in stdscr itself to simplify
 * 	the program.
 */

#include <curses.h>

FILE *outf;

#define CTRL(c) (c - 'A' + 1)


int len(), edit();

main(argc, argv)
char **argv;
{
	int i, n, l;
	int c;
	FILE *fd;


	if(argc !=2) {
		fprintf(stderr, "Usage: edit file0\n");
		exit(1);
	}

	fd = fopen(argv[1], "r");
	if (fd == NULL) {
	perror(argv[1]);
	exit(2);
	}


	initscr();
	cbreak();
	nonl();
	noecho();
	idlok(stdscr, TRUE);
	keypad(stdscr, TRUE);

	/* Read in the file */

	while ((c = getc(fd)) != EOF)
		addch(c);
	fclose(fd);


	move(0,0);
	refresh();
	edit();

	/* Write out the file */
	fd = fopen(argv[1], "w");

	for (l=0; l<23; l++) {
		n = len(l);
		for (i=0; i<n; i++)
			putc(mvinch(l, i), fd);
		putc('0', fd);
	}
	fclose(fd);


	echo();
	endwin();
	exit(0);
}

int len(lineno)
int lineno;
{
	int linelen = COLS-1;

	while (linelen >=0 && mvinch(lineno, linelen) ==  ' ')
		linelen--;

	return linelen + 1;
}


/* Global value of current cursor position */

int row, col;

int edit()
{
	int c;

	for (;;) {
		move (row, col);
		refresh();
		c=getch();

		switch (c) {  /* Editor commands */


		/* hjkl and arrow keys: move cursor */
		/* in direction indicated */
		case 'h':
		case KEY_LEFT:
		case CTRL('H'):

			if (col>0)
				col--;
			break;

		case 'j':
		case KEY_DOWN:
			if (row<LINES-1)
				row ++;
			break;


		case 'k':
		case KEY_UP:
			if (row>0)
				row--;
			break;

		case 'l':
		case KEY_RIGHT:
			if (col < COLS-1)
				col++;
			break;


		/* i: enter input mode */

		case KEY_IC:
		case 'i':
                              move(row,col);
			input();
			break;

		/* x: delete current character */
		case KEY_DC:
		case 'x':
		          move(row,col);
			delch();
			refresh();
			break;


		/*  o: open up a new line and enter input mode */

		case KEY_IL:
		case 'o':
		          row++;col=0;
			move(row, col);
			insertln();
			refresh();
			input();
			break;


		/* d: delete current line */

		case KEY_DL:
		case 'd':
		     move(row,col);
			deleteln();
			refresh();
			break;


		/* ^R: redraw screen */

		case KEY_CLEAR:
		case CTRL('R'):
			clearok(curscr);
			refresh();
			break;

		/* w:  write and quit */
		case 'w':
			return;


		/* q: quit without writing */
		case 'q':
			endwin();
			exit(1);
		default:
			flash();
			break;
		}
	}
}

/*
 *Insert mode: accept characters and insert them.
 * End with ^D or EIC
 */


int input()
{
	int c;

	standout();
	mvaddstr(LINES-1, COLS-20, "INPUT MODE");
	standend();
	move(row, col);
	refresh();

	for(;;) {
	          c = 0;
		c = getch();


		if (c == CTRL('D') || c == KEY_EIC
		    || c == '.')
			break;

/* for Multics echo cr nl or lf cr */

		else if (c == CTRL('J') || c == CTRL('M'))
		     {
		     row++;
		     col=0;
		     move(row,col);
		     }


		else {
		     insch(c);
		     move(row, ++ col);}
		     refresh();
		     }

	move(LINES-1, COLS-20);
	clrtoeol();
	move(row, col);
	refresh();

}
