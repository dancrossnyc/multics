04/15/88  TERM

Name:

term - format of compiled term file.


Synopsis:

term


Description:

Compiled terminfo descriptions are placed under the directory
>sl3p>cc>e>terminfo.  In order to avoid a linear search of a huge UNIX
system directory, a two-level scheme is used:
>sl3p>cc>e>terminfo>c>name where name is the name of the terminal, and
c is the first character of name.  Thus, act4 can be found in the
file >sl3p>terminfo>a>act4.  Synonyms for the same terminal are
implemented by multiple links to the same compiled file.

The format has been chosen so that it will be the same on all
hardware.  An 8 or more bit byte is assumed, but no assumptions about
byte ordering or sign extension are made.


The compiled file is created with the terminfo compile program (tic),
and read by the routine setupterm.  Both of these pieces of software
are part of curses(3X).  The file is divided into six parts: the
header, terminal names, boolean flags, numbers, strings, and string
table.

The header section begins the file.  This section contains six
integers in the format described below.  These integers are (1) the
magic number (octal 0432); (2) the size, in bytes, of the names
section; (3) the number of bytes in the boolean section; (4) the
number of short integers in the numbers section; (5) the number of
offsets (short integers) in the strings section; (6) the size, in
bytes, of the string table.


The integers are stored as a character array of size int, starting at
the address of the int.

The terminal names section comes next.  It contains the first line of
the terminfo description, listing the various names for the terminal,
separated by the '|' character.  The section is terminated with an
ASCII NULL character.

The boolean flags have one byte for each flag.  This byte is either 0
or 1 as the flag is present or absent.  The capabilities are in the
same order as the file <term.h>.


Between the boolean section and the number section, a null byte will
be inserted, if necessary, to ensure that the number section begins
on an even byte.  All integers are aligned on a integer word
boundary.

The numbers section is similar to the flags section.  Each capability
takes up two bytes, and is stored as a integer.  If the value
represented is -1, the capability is taken to be missing.


The strings section is also similar.  Each capability is stored as a
integer, in the format above.  A value of -1 means the capability is
missing.  Otherwise, the value is taken as an offset from the
beginning of the string table.  Special characters in ^X or \c
notation are stored in their interpreted form, not the printing
representation.  Padding information $<nn> and parameter information
%x are stored intact in uninterpreted form.

The final section is the string table.  It contains all the values of
string capabilities referenced in the string section.  Each string is
NULL terminated.


Note that it is possible for setupterm to expect a different set of
capabilities than are actually present in the file.  Either the
database may have been updated since setupterm has been recompiled
(resulting in extra unrecognized entries in the file) or the program
may have been recompiled more recently than the database was updated
(resulting in missing entries).  The routine setupterm must be
prepared for both possibilities - this is why the numbers and sizes
are included.  Also, new capabilities must always be added at the end
of the lists of boolean, number, and string capabilities.

Limitations include total compiled entries cannot exceed 4096 byte;
the name field cannot exceed 128 bytes.


Files:

>sl3p>cc>e>terminfo>*>*    compiled terminal capability data base


See also:

curses.gi.info, terminfo.gi.info
