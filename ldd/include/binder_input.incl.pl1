/* BEGIN INCLUDE FILE ... binder_input.incl.pl1 ... 01/14/81 W. Olin Sibert */
/* Input structure for binder_. Modified to contain more useful information 01/14/81 */

/* This file is used only by bind.pl1, bind_.pl1 and parse_bindfile_.pl1 */

/* Modified 9/24/84 by M Sharpe to hold a few new flags (originally done
   by Henry Bodzin, Ford Motor Co.), and to allow "unlimited" number of 
   input archives/segments and object components. */

dcl 1 inp aligned based (inpp),			/* Really based on bx_$inpp */
    2 version char (4) aligned,
    2 caller_name char (32) unaligned,			/* Name of command on whose behalf binder is being invoked */

    2 bound_seg_name char (32) unaligned,		/* name of new bound segment */

    2 narc fixed bin,				/* number of input archive files */
    2 nupd fixed bin,				/* number of update archive files */
    2 ntotal fixed bin,				/* total number of input and update files */
    2 nobj fixed bin,				/* number of objects to be bound */

    2 bindfilep pointer,				/* pointer to bindfile */
    2 bindfile_bc fixed bin (24),			/* bitcount of bindfile */
    2 bindfile_name char (32) unaligned,		/* name of bindfile */
    2 bindfile_time_up fixed bin (71),			/* date updated in archive */
    2 bindfile_time_mod fixed bin (71),			/* date last modified */
    2 bindfile_idx fixed bin,				/* index of archive bindfile was in */

    2 options aligned,
      3 debug bit (1) unaligned,			/* 1-> debug option ON */
      3 list_seg bit (1) unaligned,			/* 1 -> make list seg */
      3 map_opt bit (1) unaligned,			/* 1 -> map option  */
      3 list_opt bit (1) unaligned,			/* 1 -> list option */
      3 brief_opt bit (1) unaligned,			/* 1 -> brief option */
      3 force_order_opt bit (1) unaligned,		/* 1 -> force_order option from command line */
      3 zeroseg_seen bit (1) unaligned,			/* 1 -> a zero-length object is in the obj array */
      3 flags_pad bit(29) unaligned,
						/* ---- any additions to the include file must be made before
						   the "archive" substructure, as inp.ntotal is incremented
						   and the structure is extended as we pick up the names of
						   archives/segs from the command line arguments. Similarly,
						   after inp.ntotal is determined, the "obj" substructure is
						   filled and inp.nobj is incremented as we open up each
						   archive and take the necessary information from the
						   components.  To allocate the structure, the user must first
						   set NTOTAL and NOBJ, allocate the structure and then set
						   inp.notal and inp.nobj; otherwise, this structure must be
						   declared in a temporary segment.  */

    2 archive (NTOTAL refer (inp.ntotal)) aligned,	/* info about input archives/segs, for source map, etc. */
      3 path char (168) unaligned,			/* for identifying archive */
      3 real_path char (168) unaligned,			/* determined by translator_info_ */
      3 ptr pointer,				/* pointer to archive */
      3 bc fixed bin (24),				/* and its bitcount */
      3 standalone_seg bit (1) unaligned,		/* 1 -> standalone_seg;0 -> archive */
      3 entryname char (32),				/* entryname of segment */
      3 uid bit (36) aligned,				/* unique id of archive */
      3 dtm fixed bin (71),				/* date-time modified of archive */


    2 obj (NOBJ refer (inp.nobj)) aligned like obj;


dcl 1 obj aligned based (p),				/* declaration of single input entry */
    2 filename char (32) unaligned,
    2 base pointer,					/* pointer to base of object segment */
    2 bitcount fixed bin (24),			/* bitcount of object segment */
    2 option bit (18) unaligned,			/* pointer into option structure */
    2 new_order fixed bin(9) unsigned unaligned,		/* new position from XXX_Order statement */
    2 to_be_ignored bit(1) unaligned,			/* mentioned in Ignore statement or is zero-length */
    2 objectname_stmt bit(1) unaligned,			/* mentioned in objectname: statement */
    2 flag bit (1) unaligned,				/* This word of unaligned bits ought to be a substructure, */
    2 pad bit (6) unaligned,				/* but if it is, pl1 scope-of-names stupidly rejects refs */
						/* to obj.flag as "ambiguous", because of inp.obj.flag */
    2 archive_idx fixed bin,				/* index of archive from which this component comes */
    2 time_mod fixed bin (71),			/* DTCM of component (from archive) */
    2 time_up fixed bin (71); 			/* Time updated in archive */


dcl  BINDER_INPUT_VERSION_2 char (4) aligned internal static options (constant) init ("BI.2");
dcl  (NOBJ, NTOTAL)    fixed bin init (0);


/* END INCLUDE FILE ... binder_input.incl.pl1 */
