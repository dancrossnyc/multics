/* BEGIN INCLUDE FILE ... cpm_internal_data.incl.pl1 */

/****^  HISTORY COMMENTS:
  1) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
     audit(86-10-08,Fawcett), install(86-11-03,MR12.0-1206):
     Written to support control point management in March 1985 by G. Palter.
                                                   END HISTORY COMMENTS */

/* format: style3,linecom */

/* NOTE: This include file references structures contained in the following independent include files --
	cpm_control_point_data.incl.pl1	cpm_ctrl_pt_meters.incl.pl1
	process_usage.incl.pl1	*/


/* Constants defined by the Control Point Manager for internal use only */

dcl	cpm_data_$subsystem_name			/* our name for use in error messages, etc. */
			character (32) external;


/* Static data defined by the Control Point Manager for internal use only */

dcl	1 cpm_data_$root_control_point_data		/* definition of the root control point */
			like control_point_data aligned external;

dcl	cpm_data_$gc_control_points			/* ON => there are destroyed control points to ... */
			bit (1) aligned external;	/* ... be garbage collected */

dcl	cpm_data_$saved_cl_intermediary		/* the process' original CL intermediary */
			entry (bit (36) aligned) variable external;

dcl	cpm_data_$preferred_control_point		/* -> definition of the preferred control point */
			pointer external;

dcl	1 cpm_data_$preferred_control_point_stack	/* preferred control points stacked by ... */
			aligned external,		/* ... event calls and timers */
	  2 stack_depth	fixed binary,		/* ... # of entries in the stack at present */
	  2 pad		bit (36) aligned,
	  2 cpd_ptr_stack	(16) pointer;		/* ... the actual stack */

dcl	1 cpm_data_$ready_queue			/* ordered list of ready control points in the process */
			aligned external,
	  2 first		pointer,
	  2 last		pointer;

dcl	cpm_data_$previous_control_point		/* -> definition of control point which ran before current */
			pointer external;

dcl	1 cpm_data_$valid_control_points		/* maps stack segment numbers into an indication of ... */
			aligned external,		/* ... whether there is a live control point there */
	  2 map		(0:4095) bit (1) unaligned;

dcl	1 cpm_data_$global_meters			/* global meters kept by the control point manager */
			aligned external,
	  2 overhead	like control_point_meters,	/* ... scheduling overhead */
	  2 last_meters	like control_point_meters;	/* ... used to compute meters (not really a meter) */

/* END INCLUDE FILE ... cpm_internal_data.incl.pl1 */
