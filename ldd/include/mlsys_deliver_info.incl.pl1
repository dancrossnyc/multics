/* BEGIN INCLUDE FILE ... mlsys_deliver_info.incl.pl1 */
/* Created:  June 1983 by G. Palter */

/* Options for the mail_system_$deliver_message and mail_system_$redistribute_message entrypoints */

dcl  1 deliver_options aligned based (deliver_options_ptr),
       2 version character (8) unaligned,
       2 delivery_mode fixed binary,			/* deliver as an ordinary/interactive/express message */
       2 queueing_mode fixed binary,			/* when to queue the message */
       2 queued_notification_mode fixed binary,		/* when to notify sender about queued mail success/failure */
       2 flags,
         3 abort bit (1) unaligned,			/* ON => don't send it if any fatal errors are detected */
         3 send_if_empty bit (1) unaligned,		/* ON => send the message even if its body is empty */
         3 recipient_notification bit (1) unaligned,	/* ON => send "You have mail." notification */
         3 acknowledge bit (1) unaligned,		/* ON => request ACK message when recipients read it */
         3 queue_mailing_lists bit (1) unaligned,		/* ON => always queue the message for mailing lists */
         3 mbz bit (31) unaligned;			/* must be set to ""b by the caller */

dcl  DELIVER_OPTIONS_VERSION_2 character (8) static options (constant) initial ("mlsdlo02");

dcl  deliver_options_ptr pointer;

/* Defined modes of delivery */

dcl  (ORDINARY_DELIVERY		initial (1),	/* send as an ordinary message */
      INTERACTIVE_DELIVERY		initial (2),	/* send as an interactive message */
      EXPRESS_DELIVERY		initial (3))	/* send as an express interactive message; ie: deliver the
						   message only if the user is logged in */
	fixed binary static options (constant);

/* Defined modes for queuing mail on transient errors */

dcl  (NEVER_QUEUE			initial (1),	/* never queue: convert into a fatal error */
      QUEUE_FOREIGN_WHEN_NEEDED	initial (2),	/* never queue local mail; queue foreign mail on error */
      QUEUE_WHEN_NEEDED		initial (3),	/* queue all mail on any transient error */
      ALWAYS_QUEUE_FOREIGN		initial (4),	/* queue local mail on error; always queue foreign mail */
      ALWAYS_QUEUE			initial (5))	/* always queue all mail */
	fixed binary static options (constant);

/* Defined modes of notification of success/failure to deliver queued mail */

dcl  (NEVER_NOTIFY			initial (1),	/* never notify the sender */
      NOTIFY_ON_ERROR		initial (2),	/* notify the sender only if it can not be delivered */
      ALWAYS_NOTIFY			initial (3))	/* always notify the sender */
	fixed binary static options (constant);
%page;
/* Definition of the recipients of a message and the results of the attempted transmission */

dcl  1 recipients_info aligned based (recipients_info_ptr),
       2 header, 
         3 version character (8) unaligned,
         3 area_ptr pointer,				/* -> area for following structures; null => system free */
         3 expanded_recipients_result_list_ptr pointer,	/* set -> expanded_recipients_result_list (if any) */
         3 n_recipients fixed binary,			/* set to total # of recipients after expanding lists */
         3 n_unique_recipients fixed binary,		/* set to total # of unique recipients */
         3 n_failed_recipients fixed binary,		/* set to # of recipients that failed or would fail */
         3 n_lists fixed binary,			/* # of address lists of recipients */
       2 lists (recipients_info_n_lists refer (recipients_info.n_lists)),
         3 address_list_ptr pointer,			/* -> an address list containing recipients */
         3 recipients_result_list_ptr pointer;		/* set -> recipients_result_list for this address list */

dcl  RECIPIENTS_INFO_VERSION_2 character (8) static options (constant) initial ("mlsrcpt2");

dcl  (recipients_info_ptr, recipients_result_list_ptr, expanded_recipients_result_list_ptr) pointer;

dcl  (recipients_info_n_lists, recipients_result_list_n_addresses, expanded_recipients_result_list_n_entries)
	fixed binary;				/* used to allocate these structures */


/* Data structure returned by the mail system recording the results of the mailing for one of the input address lists */

dcl  1 recipients_result_list aligned based (recipients_result_list_ptr),
       2 n_addresses fixed binary,			/* set to # of address in corresponding address list */
       2 pad bit (36),
       2 results (recipients_result_list_n_addresses refer (recipients_result_list.n_addresses)),
         3 code fixed binary (35),			/* set to describe results of attempted delivery */
         3 expanded_list_info,			/* set to identify any failing addresses found in the
						   expansion of this address ... */
	 4 first_entry_idx fixed binary (18) unaligned unsigned,
						/* ... index of first such address in structure below ... */
	 4 n_entries fixed binary (18) unaligned unsigned,/* ... # of such addresses there for this address */
         3 duplicate_info,				/* set to identify the prior address (if any) for which this
						   is a duplicate ... */
	 4 list_idx fixed binary (18) unaligned unsigned, /* ... in which list ... */
	 4 address_idx fixed binary (18) unaligned unsigned,   /* ... and which address in that list */
         3 explanation character (128) varying;		/* explanation associated with a fatal error or the message
						   being queued due to a transient error */


/* Describes fatal or transient errors for those recipients which are part of mailing lists of named groups in one of the
   caller's address lists */

dcl  1 expanded_recipients_result_list aligned based (expanded_recipients_result_list_ptr),
       2 n_entries fixed binary,			/* set to # of failing expanded recipients */
       2 pad bit (36),
       2 entries (expanded_recipients_result_list_n_entries refer (expanded_recipients_result_list.n_entries)),
         3 address_ptr pointer,			/* -> the failing address from the list/group */
         3 code fixed binary (35),			/* set to describe why delivery failed */
         3 parent_address,				/* set to identify the original recipient of whose expansion
						   this address is a part ... */
	 4 list_idx fixed binary (18) unaligned unsigned, /* ... in which list ... */
	 4 address_idx fixed binary (18) unaligned unsigned,   /* ... and which address in that list */
         3 explanation character (128) varying;		/* explanation associated with a fatal error or the message
						   being queued due to a transient error */

/* END INCLUDE FILE ... mlsys_deliver_info.incl.pl1 */
