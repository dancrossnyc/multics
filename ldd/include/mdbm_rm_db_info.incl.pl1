/* BEGIN mdbm_rm_db_info.incl.pl1 -- jaw, 11/7/78 */



/****^  HISTORY COMMENTS:
  1) change(86-08-13,Hergert),, approve(88-06-28,MCR7903),
     audit(88-06-28,Dupuis), install(88-08-01,MR12.2-1073):
     Removed change of 84-11-02. i.e. replaced even_word_pad.
                                                   END HISTORY COMMENTS */


/* WARNING
          If the rm_db_info structure is changed then the mrds_data_
          item saved_res_version MUST be incremented to invalidate all
          existing saved resultants
*/

/*  DESCRIPTION:  This  structure   is   based   on   a   segment
   {unique_name}.mrds.rdbi that represents the secure portion of the
   resultant model that is created partially at database open  time,
   (the rm_file_array, and rm_rel_array) and partially at ready_file
   time,    (the    rm_file_info,     rm_rel_info,     rm_attr_info,
   rm_domain_info, rm_plink_info and rm_clink_info). it's purpose is
   to  provide  an  efficient  means  of  accessing  database  model
   information, as seen from the possibly submodel view of the user,
   and his current state of "files readied". it is the  secure  part
   because  it  contains  the  model  information  which needs to be
   protected  from  general  knowledge,  and   this   segment   will
   eventually  be  capable  of  being in a lower ring. the structure
   itself points to four arrays that are  allocated  in  it's  area,
   that  in  turn point to the other structures mentions above, also
   allocated in  the  rm_db_info.static_area.  the  arrays  are  the
   rm_file_array,  and  rm_rel_array. their are a pair for temporary
   relations,  initially  empty,  and  a  pair  for   normal   model
   files/relations.  the  normal  rm_file_array  is initialized to a
   list of all known file names, the rm_rel_array only gets relation
   names   as   files  are  readied.  the  rm_file_array  points  to
   rm_file_infos for each file (see mdbm_rm_file_info.incl.pl1)  and
   the   rm_rel_array   points  to  rm_rel_info  for  each  relation
   "readied". (see mdbm_rm_rel_info.incl.pl1). (the  arrays  are  in
   mdbm_rm_file_array.incl.pl1  and mdbm_rm_rel_array.incl.pl1). the
   file infos point to contained rel infos, the rel infos  point  to
   contained  attr  infos,  and  those in turn to domain infos. (see
   mdbm_rm_attr_info.incl.pl1   and    mdbm_rm_domain_info.incl.pl1)
   foreign     keys    are    represented    by    the    structures
   mdbm_rm_plink_info.incl.pl1, and mdbm_rm_clink_info.incl.pl1. the
   pathnames  of the model and submodel, if any, are also maintained
   in rm_db_info. the pointer to this rm_db_info segment is obtained
   from  the  dbcb  segment tructure(see mrds_dbcb.incl.pl1) see the
   individual include files for  further  organization  information,
   and particular data structures.

   HISTORY:

   80-02-01 Jim Gray : Modified to put area on even  word  boundary,
   so that define_area_ could be used to make it an extensible area

   81-1-9 Jim  Gray  :  added  like  reference  to  make  the  phony
   resultant in mu_database_index easier to keep, since no reference
   to the area is needed.

   81-1-12 Jim Gray : added version of submodel used in  opening  to
   resultant.

   81-05-13 Rickie E. Brinegar: added the administrator bit  to  the
   structure.

   81-05-28 Jim Gray : removed pointers to file_arrays,  since  they
   are  now  combined  into  the rel_array. Removed the control file
   info which was unused. Added pointer  to  head  of  domain  list,
   which is to be used to insure only one copy of each domain info.

   83-05-19 Davids: Added the  saved_res_version element.

   84-11-02 Thanh Nguyen:   Replaced  the  even_word_pad   by   the 
   ref_name_proc_ptr  to point  to list  of reference  name of  the
   check, encode, or decode proc.

   CAUTION: The structure entries from db_version to sm_path  should
   not  be moved or have their declarations changed because they are
   used in the handling of old version database openings.


*/

     dcl	   1 rm_db_info	      aligned based (rdbi_ptr), /* data base info, located at base of res. dm. seg. */
	     2 data	      like rm_db_info_data,
	     2 static_area	      area (sys_info$max_seg_size - fixed (rel (addr (rm_db_info.static_area))));

     dcl	   rdbi_ptr	      ptr;

     declare 1 rm_db_info_data      based,		/* separate declaration of info, so others can use
						   like reference to it without getting the area as well */
	     2 db_version	      fixed bin,		/* version no. of db */
	     2 sm_version	      fixed bin unal,	/* version of submodel used unal, 0 if model opening */
	     2 val_level	      fixed bin unal,	/* validation level for this db. */
	     2 db_path	      char (168),		/* abs. path of db. */
	     2 sm_path	      char (168),		/* path of submodel or model */
	     2 mdbm_secured	      bit (1) unal,		/* ON => database is secured */
	     2 administrator      bit (1) unal,		/* ON => user is an administrator */
	     2 pad	      bit (34) unal,	/* for future use */
	     2 saved_res_version  char (8),		/* version of the saved resultant in the 
                                                               dbcb and rdbi segments in the db dir */
	     2 domain_list_ptr    ptr,		/* pointer to head of list of domain_info's */
	     2 ra_ptr	      ptr,		/* pointer to rel. array */
	     2 tra_ptr	      ptr,		/* to rel array for temp rels */
	     2 even_word_pad      fixed bin (71) aligned; /* padding to put area on even word boundary */

/* END mdbm_rm_db_info.incl.pl1 */


