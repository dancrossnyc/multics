/* BEGIN INCLUDE FILE ... rldr_data_.incl.pl1 ... March 1976 */


/****^  HISTORY COMMENTS:
  1) change(86-04-21,Fawcett), approve(86-04-21,MCR7383),
     audit(86-05-22,GWMay), install(86-07-18,MR12.0-1098):
     Add device_name to support the -pvname_device argument to reload.
  2) change(88-10-05,GWMay), approve(88-10-05,MCR8005), audit(88-10-12,Farley),
     install(88-10-17,MR12.2-1173):
     Added pointer and length values for use as an input_buffer for
     intermediate reads.
                                                   END HISTORY COMMENTS */


/* Severely modified 3/1/83 by GA Texada to support multiple physical */
/*          volume reloading.				          */
/*          Modified: 3/5/84 by GA Texada to make restart a per pv attribute */
/*		  and add stranger flag.			*/

/* format: style1,ind2,^inddcls,ifthenstmt,dclind2,declareind2,ifthendo,ifthen*/


dcl rldr_datap	     ptr,
  rldr_data_max_pvs	     fixed bin,

  1 rldr_data_	     aligned based (rldr_datap),
    2 common	     like rldr_data_common,		/* only one of each needed			*/
    2 per_pv	     (rldr_data_max_pvs refer (rldr_data_.npvs)) like rldr_data_perpv,

  1 rldr_data_common     aligned,
    2 bits,
    ( 3 save	     bit (1),			/* if on can use disk pack restored by BOS */
      3 first_volume     bit (1),			/* if on indicates we are on first volume */
      3 rpv	     bit (1),			/* if on indicates we are reloading rpv */
      3 data_init	     bit (1),			/* if on data structure initialized to null state */
      3 arg_init	     bit (1),			/* on if arguments have been processed */
      3 disable_error_report bit (1),			/* if on will disable error messages */
      3 no_object	     bit (1),			/* if on only vtoces will be reloaded */
      3 err_online	     bit (1),			/* if on error messages written to error output */
      3 detach	     bit (1),			/* if on attached media will  be detached */
      3 brief	     bit (1),			/* if on brief mode enabled */
      3 manual	     bit (1),			/* if on operator will select input volumes */
      3 restart	     bit (1),			/* -restart was supplied			*/
      3 stranger	     bit (1),			/* ON if the pv's do not belong to the mounted RPV*/
      3 pad0	     bit (23)) unal,
      3 old_256K_switch  bit (2) aligned,		/* state of 256KW connection switch before we came along*/
      (3 last_pvid,					/* pvid of last good object read		*/
      3 rpv_pvid,					/* rpv pvid */
      3 rpv_lvid)	     bit (36),			/* rpv lvid */
      3 last_valid_puid  (0:15) bit (36),		/* last non-zero path uid read from input medium */
    2 chars,
    ( 3 sys_dir,					/* directory where vologs are */
      3 default_sys_dir) char (168),			/* default directory where vologs are */
      (3 last_valid_vtoce_ename,			/* last valid entry name from VTOCE */
      3 operator,					/* operator's name or initials */
      3 io_module)	     char (32),			/* name of io outer module used to read input */
      (3 input_volume_desc,				/* optional input medium attach description */
      3 output_volume_desc) char (256),			/* optional output medium attach description */
    2 fixed,
    ( 3 num_abandoned,				/* count these as we go along			*/
      3 last_vtocx,					/* vtocx of last valid object read		*/
      3 npvs,					/* the number of pv names given to the reload_volume command*/
      3 rpv_disk_type)   fixed bin,			/* model index of rpv disk drive */
      (3 start_time,				/* time reload started */
      3 from_time)	     fixed bin (71),		/*  time from which dump tapes should be skipped */
      3 input_buffer_len fixed bin (21),		/* length of the data in the read buffer */
      3 input_buffer_start fixed bin (21),		/* position in read buffer where new data begins */
    2 ptrs,
    ( 3 inputvol_iocbp,				/* iocb ptr for input */
      3 error_iocbp,				/* iocb ptr for error output */
      3 skip,					/* ptr to skip list */
      3 volume_record_bp,				/* ptr to temp seg containing most recent volume record */
      3 infop,					/* ptr to temp seg containig tdump info */
      3 data_object_bp,				/* ptr to temp seg containing most recent object from input medium */
      3 input_vol_lstp  ptr,				/* ptr to temp seg containing list of input media */
      3 input_buffer_ptr)  ptr,			/* ptr to read buffer */
 

  1 rldr_data_perpv	     aligned,			/* one entry per physical volume to be reloaded	*/
    2 flags,
      3 abandoned	     bit (1) unal,			/* we quit due to some error			*/
      3 restart	     bit (1),			/* if on unitialized volume ok and reload will restart */
      3 mbz0	     bit (34) unal,			/* beware, RFU				*/
    (2 pvname,					/* physical volume name */
    2 lvname,					/* logical volume name of physical volume being reloaded */
    2 disk_model)	     char (32),			/* model name of disk drive */
    2 device_name	     char (8),
    (2 lvid,					/* logical volume id of volume being reloaded */
    2 pvid)	     bit (36),			/* physical volume id of volume being reloaded */
    (2 prev_wordx,					/* index to fsmap */
    2 prev_bitx,					/* index to fsmap */
    2 disk_type,					/* model index of disk drive */
    2 usable_sectors,				/* usable sectors per cylinder of disk pack */
    2 unusable_sectors,				/* unusable sectors per cylinder of disk pack */
    2 n_vtoce)	     fixed bin,			/* number of vtoce on disk pack */
    (2 vtocbp,					/* ptr to vtoc buffer seg */
    2 vtoc_headerp,					/* ptr to temp seg containing the vtoc header */
    2 labelp,					/* ptr to temp seg containing pack label */
    2 bvlp,					/* ptr to volume log */
    2 outputvol_iocbp,				/* iocb ptr for output */
    2 controlp,					/* ptr to seg containing reload control info about vtoc */
    2 vol_mapp)	     ptr,				/* ptr to temp seg containing volume map */

  1 rldr_data_nulled_pv  aligned int static options (constant),
    2 flags,
      3 abandoned	     bit (1) init ("0"b) unal,
      3 restart	     bit (1) init ("0"b) unal,
      3 mbz0	     bit (34) init ((34)"0"b) unal,
      (2 pvname,
    2 lvname,
    2 disk_model)	     char (32) init (""),
    2 device_name	     char (8) init (""),
    (2 lvid,
    2 pvid)	     bit (36) init ("0"b),
    (2 prev_wordx,
    2 prev_bitx,
    2 disk_type,
    2 usable_sectors,
    2 unusable_sectors,
    2 n_vtoce)	     fixed bin init (0),
    (2 vtocbp,
    2 vtoc_headerp,
    2 labelp,
    2 bvlp,
    2 outputvol_iocbp,
    2 controlp,
    2 vol_mapp)	     ptr init (null ());


/* END INCLUDE FILE rldr_data_.incl.pl1 */
