/*	BEGIN INCLUDE FILE comp_font.incl.pl1			       */

/* Fonts already loaded into the compose (pdir) database */

/* format: style2,ind2,ll79,dclind4,idind15,comcol41,linecom */

     dcl 1 fnttbldata   aligned based (const.fnttbldata_ptr),
	 2 count	    fixed bin,	/* number of fonts loaded */
	 2 ndx	    fixed bin,	/* index of current font */
	 2 medsel_ptr ptr,		/* -> media select table */
	 2 ptr	    (100) ptr;	/* 100 fonts should be plenty! */

     dcl fnttbl_ptr	    ptr init (null);
     dcl 1 fnttbl	    aligned based (fnttbl_ptr),
	 2 min_wsp    fixed bin,	/* min wordspace - in strokes	       */
	 2 avg_wsp    fixed bin,	/* nominal wordspace - in strokes */
	 2 max_wsp    fixed bin,	/* max wordspace - in strokes	*/
	 2 rel_units  fixed bin,	/* stroke value for this font */
	 2 siztbl_ptr ptr,		/* -> loaded size table */
	 2 entry			/* stack entry for this font */
		    like fntstk_entry,
	 (			/* for each font character */
	 2 devfnt	    fixed bin,	/* font in the device */
	 2 replptr    ptr,		/* replacement string ptrs */
	 2 units	    fixed bin,	/* width in strokes */
	 2 white	    bit (1) unal	/* white space flags */
	 )	    dimension (0:511);

     dcl repl_str_ptr   ptr;		/* replacement strings */
     dcl 1 repl_str	    based (repl_str_ptr),
	 2 len	    fixed bin (35),
	 2 str	    char (256);
     dcl replstr	    char (256) var based (repl_str_ptr);
				/* media select strings */
				/* (indexed on fnttbldata.ndx) */
     dcl medsel	    (100) char (12) based (fnttbldata.medsel_ptr);

     dcl 1 siztbl	    based (fnttbl.siztbl_ptr),
	 2 ct	    fixed bin,	/* number of sizes */
	 2 size	    (siztbl.ct) fixed bin (31);

/* This is the storage referred by family.member_r in comp_dvt

   If member.count is 1 and member.name(1) is null, then the font is a
   'bachelor'.

   The font stack will hold the family/member names which were used to
   originally get to the font. When a bachelor is accessed, the member name
   will remain but the bachelor flag will be set to tell any displayers not
   to include it.

   %FontName% will contain either "family" or "family/member" depending on
   the setting of the bachelor switch. */

     dcl member_ptr	    ptr;
     dcl 1 member	    based (member_ptr),
	 2 count	    fixed bin,	/* # members present	       */
	 2 e	    (member.count), /* members defined for this device   */
	   3 font_r   bit (18) unal,	/* font character table relptr       */
	   3 size_r   bit (18) aligned,
				/* point size list relptr            */
	   3 Scalex   fixed bin (35), /* X (hor) scaling * 1e8 - FUTURE    */
	   3 Scaley   fixed bin (35), /* Y (ver) scaling * 1e8 - FUTURE    */
	   3 name	    char (32);	/* member name		       */

/* Storage referred by member.font_r */
     dcl font_ptr	    ptr;
     dcl 1 font	    based (font_ptr),
         ( 2 oput_r,		/* offset of output data array */
	 2 units_r		/* offset of width array */
	 )	    bit (18) aligned,
	 2 rel_units  fixed bin,	/* stroke value for this table  */
	 2 footsep    char (1),	/* footref separator */
	 2 fill	    char (3),
	 2 min_wsp    fixed bin,	/* min wordspace */
	 2 avg_wsp    fixed bin,	/* nominal wordspace */
	 2 max_wsp    fixed bin;	/* max wordspace */

/* storage referred by font.units_r */
     dcl units_ptr	    ptr;		/* width in strokes */
     dcl units	    (0:511) fixed bin based (units_ptr);

/* media select table in the device table */
     dcl medsel_table_ptr
		    ptr;
     dcl 1 medsel_table based (medsel_table_ptr),
	 2 count	    fixed bin,
	 2 ref_r	    (medsel_table.count) bit (18) aligned;

/* storage referred by font.oput_r */
     dcl oput_p	    ptr;
     dcl 1 oput	    based (oput_p),
	 2 data_ct    fixed bin,	/* highest char defined */
	 2 e	    (0:oput.data_ct),
	   3 which		/* index into view array */
		    fixed bin (17) unal,
	   3 what_r		/* output string */
		    bit (18) unal;

/* storage referred by member.size_r */

     dcl sizel_p	    ptr;
     dcl 1 sizel	    based (sizel_p),/* list of allowed point sizes       */
	 2 val_ct	    fixed bin,
	 2 val	    (sizel.val_ct) fixed bin (31);

/* storage referred by oput.what_r */

     dcl medchar_sel_p  ptr;		/* MediaChar select string */
     dcl 1 medchar_sel  based (medchar_sel_p),
	 2 str_l	    fixed bin,
	 2 str	    char (medchar_sel.str_l);
     dcl medchar	    char (medchar_sel.str_l) var based (medchar_sel_p);

     dcl med_sel_p	    ptr;		/* media select string */
     dcl 1 med_sel	    based (med_sel_p),
	 2 str_l	    fixed bin,
	 2 str	    char (med_sel.str_l);

/*	END INCLUDE FILE comp_font.incl.pl1	*/
