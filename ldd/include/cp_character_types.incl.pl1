/* BEGIN INCLUDE FILE ... cp_character_types.incl.pl1 */
/* Created:  June 1982 by G. Palter */

/* Character types used to define Multics command language and subsystem request languages */

dcl (NORMAL_CHARACTER		initial ( 0),	/* normal everyday character */

     WHITESPACE			initial ( 1),	/* separates tokens but is otherwise ignored (ie: does not
						   appear in the command/request name or any arguments */

     COMMAND_SEPARATOR		initial ( 2),	/* separate multiple commands/requests on the line but is
						   otherwise ignored (as above) (semi-colon) */
     COMMAND_SEPARATOR_OR_WHITESPACE	initial ( 3),	/* separate multiple commands/requests on the line and is also
						   treated as whitespace when rescanning |[...] return values
						   (newline) */

     SINGLE_TOKEN			initial ( 4),	/* appears as a one character argument to the command/request
						   even if not surrounded by whitespace (causes a break) */

     COMPOUND_TOKEN			initial ( 5),	/* appears as an argument to the command/request even if not
						   surrounded by whitespace; if several of this type character
						   appear on the line without any intervening characters, they
						   are merged into a single argument (eg: ^=) */

     QUOTE_CHARACTER		initial ( 6),	/* begin and end a quoted string ("): only the same character
						   ends the quoted string (ie: "' isn't a completed string);
						   within the string, any occurence of this character must be
						   doubled */

     ACTIVE_STRING_MODIFIER		initial ( 7),	/* modifies interpretation of an active string (|) */

     BEGIN_ITERATION_1		initial (17),	/* starts an iteration set; only matches END_ITERATION_1 */
     BEGIN_ITERATION_2		initial (18),	/* starts an iteration set; only matches END_ITERATION_2 */
     BEGIN_ITERATION_3		initial (19),	/* ... */
     BEGIN_ITERATION_4		initial (20),	/* ... */
     BEGIN_ITERATION_5		initial (21),	/* ... */
     BEGIN_ITERATION_6		initial (22),	/* ... */
     BEGIN_ITERATION_7		initial (23),	/* ... */
     BEGIN_ITERATION_8		initial (24),	/* ... */

     END_ITERATION_1		initial (25),	/* ends an iteration set; only matches BEGIN_ITERATION_1 */
     END_ITERATION_2		initial (26),	/* ends an iteration set; only matches BEGIN_ITERATION_2 */
     END_ITERATION_3		initial (27),	/* ... */
     END_ITERATION_4		initial (28),	/* ... */
     END_ITERATION_5		initial (29),	/* ... */
     END_ITERATION_6		initial (30),	/* ... */
     END_ITERATION_7		initial (31),	/* ... */
     END_ITERATION_8		initial (32),	/* ... */

     BEGIN_ACTIVE_STRING_1		initial (33),	/* starts active string; only matches END_ACTIVE_STRING_1 */
     BEGIN_ACTIVE_STRING_2		initial (34),	/* starts active string; only matches END_ACTIVE_STRING_2 */
     BEGIN_ACTIVE_STRING_3		initial (35),	/* ... */
     BEGIN_ACTIVE_STRING_4		initial (36),	/* ... */
     BEGIN_ACTIVE_STRING_5		initial (37),	/* ... */
     BEGIN_ACTIVE_STRING_6		initial (38),	/* ... */
     BEGIN_ACTIVE_STRING_7		initial (39),	/* ... */
     BEGIN_ACTIVE_STRING_8		initial (40),	/* ... */

     END_ACTIVE_STRING_1		initial (41),	/* ends active string; only matches BEGIN_ACTIVE_STRING_1 */
     END_ACTIVE_STRING_2		initial (42),	/* ends active string; only matches BEGIN_ACTIVE_STRING_2 */
     END_ACTIVE_STRING_3		initial (43),	/* ... */
     END_ACTIVE_STRING_4		initial (44),	/* ... */
     END_ACTIVE_STRING_5		initial (45),	/* ... */
     END_ACTIVE_STRING_6		initial (46),	/* ... */
     END_ACTIVE_STRING_7		initial (47),	/* ... */
     END_ACTIVE_STRING_8		initial (48))	/* ... */
	fixed binary (9) unsigned static options (constant);

/* END INCLUDE FILE ... cp_character_types.incl.pl1 */
