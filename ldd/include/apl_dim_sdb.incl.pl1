/* ====== BEGIN INCLUDE SEGMENT	apl_dim_sdb.incl.pl1 ====================================== */

/* format: style3,initlm0,idind30 */
dcl	sdb_ptr			ptr;

dcl	1 stream_data_block		aligned based (sdb_ptr),
	  2 outer_module_name	char (32) init (my_name),
						/* standard I/O System SDB header */
	  2 device_name_list_ptr	ptr init (addr (stream_data_block.device_name)),
	  2 device_name		aligned,
	    3 next_ptr		ptr init (null ()),
	    3 name_size		fixed bin init (length (att_stream)),
	    3 name		char (32) init (att_stream),
	  2 device_iocb_ptr		ptr,		/* ptr to IOCB for sdb.name */
	  2 iocb_ptr		ptr,		/* ptr to IOCB for this attachment */
						/* info about conversion tables */
	  2 sequence_table_ptr	ptr,		/* points to escape sequences in use */
	  2 device_info_ptr		ptr init (null ()), /* pointer to dev-info table */
	  2 conv_tab_ptr		ptr init (null ()), /* pointer to conversion tables */
	  2 compression_in_ptr	ptr initial (null ()),
						/* pointer to compression input table */
	  2 compression_out_ptr	ptr initial (null ()),
						/* pointer to compression output table */
						/* parameters of the device */
	  2 keying_time		fixed bin (71) init (0),
						/* keying time of device */
	  2 max_col		fixed bin init (-1),/* number of columns per line */
	  2 max_line		fixed bin init (-1),/* number of lines per frame */
	  2 actcol		fixed bin init (0), /* present column */
	  2 actline		fixed bin init (0), /* present line */
	  2 actshift		unal bit (2) init ("11"b),
						/* present shift */
						/* modes of the device */
	  2 tabm			unal bit (1) init ("1"b),
						/* tabs may be used */
	  2 conm			unal bit (1) init ("1"b),
						/* canonicalization should be performed */
	  2 graphic		unal bit (1) init ("0"b),
						/* graphic mode */
	  2 escm			unal bit (1) init ("1"b),
						/* processing escapes on input */
	  2 erklm			unal bit (1) init ("1"b),
						/* erase/kill on */
	  2 rawim			unal bit (1) init ("0"b),
						/* raw input mode */
	  2 red_mode		unal bit (1) init ("1"b),
						/* red/black shifts may be transmitted */
	  2 escape_out_seen		unal bit (1) init ("0"b),
						/* user typed overstruck O-U-T */
	  2 tabsin_mode		unal bit (1) init ("0"b),
						/* ON means let tabs thru, OFF means change to spaces */
	  2 hndlquit_mode		unal bit (1) init ("1"b),
						/* ON means dim does reset(read write), OFF it doesn't */
	  2 padding		unal bit (24),
	  2 read_back		fixed bin init (0), /* input processing mode */
						/* info about read/write buffers */
	  2 canonicalization_index	fixed bin init (1), /* offset in canonicalization_buffer of next "free" char */
	  2 read_offset		fixed bin init (-1),/* offset in canonicalization_buffer of first character */
	  2 character_error_index	fixed bin init (-1),/* index of last good character */
	  2 error_mark_column	fixed bin init (0), /* column error marker goes in */
	  2 inimax		fixed bin init (0), /* index of last char (0-origin) + 1 */
	  2 tab_width		fixed bin init (10),/* how wide a tab stop is. */
	  2 baud_rate		fixed bin init (0), /* see apl_dim_table.incl.pl1 */
	  2 internal_type		unal dim (0:255) bit (9),
						/* copied from device_info.code_move */
	  2 canonicalization_buffer	char (512),
	  2 normal_read_buffer	char (512),
	  2 quit_read_buffer	char (512);

dcl	1 type			unal dim (0:255) defined (stream_data_block.internal_type (0)),
						/* indexed by internal code */
	  2 white			bit (1),		/* on if white space char */
	  2 red			bit (1),		/* on if red/black shift char */
	  2 action		bit (4),		/* 0 none, 1 esc, 2 erase, 3 kill, 4 delim, 5 break */
	  2 move			bit (3);		/* 0=+1, 1=0, 2=-1, 3=tab, 4=cr, 5=nl, 6=np, 7=vt */

/* constants for stream_data_block.read_back field. */

declare	read_back_names		char (16) dimension (0:2) internal static options (constant)
				initial ("read_back_spaces", "read_back_input", "read_back_output");

dcl	(
	read_back_spaces		init (0),		/* just keep track of column input starts in */
	read_back_input		init (1),		/* just read what user typed */
	read_back_output		init (2)		/* remember output & recanonicalize entire line */
	)			fixed bin internal static options (constant);

dcl	status			bit (72);

dcl	1 status_bits		based (addr (status)),
	  2 status_code		fixed bin (35),
	  (
	  2 logical_initiation	bit (1),
	  2 logical_completion	bit (1),
	  2 physical_initiation	bit (1),
	  2 physical_completion	bit (1),
	  2 transaction_terminated	bit (1),
	  2 unused_42_45		bit (4),
	  2 end_of_logical_data	bit (1),
	  2 end_of_physical_data	bit (1),
	  2 unused_48_51		bit (4),
	  2 stream_detached		bit (1),
	  2 unused_53		bit (1),
	  2 transaction_aborted	bit (1),
	  2 transaction_index	bit (18)
	  )			unaligned;

/* ------ END INCLUDE SEGMENT		apl_dim_sdb.incl.pl1 -------------------------------------- */
