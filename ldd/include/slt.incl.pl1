/* BEGIN INCLUDE FILE slt.incl.pl1 --- Last modified 2/76 SHW */

/* Declarations for Segment Loading Table header and array.

   Used by Initialization and MST Checker subroutines */

dcl sltp ptr,					/* pointer to base of SLT segment */
    names_ptr ptr,					/* pointer to base of SLT names segment */
    namep ptr,					/* pointer to segment name list block */
    pathp ptr,					/* pointer to segment's directory path name */
    aclp ptr;					/* pointer to acl structure */

declare 1 slt based (sltp) aligned,			/* declaration of Segment Loading Table (SLT) */
	2 name_seg_ptr ptr,				/* words 0-1, pointer (ITS pair) to name segment */
	2 free_core_start fixed bin (24),		/* word 2, start of free core after perm-wired */
	2 first_sup_seg fixed bin (18),		/* word 3, first supervisor segment number */
	2 last_sup_seg fixed bin (18), 		/* word 4, last supervisor segment number */
	2 first_init_seg fixed bin (18),		/* word 5, first initializer segment number */
	2 last_init_seg fixed bin (18),		/* word 6, last initializer segment number */
	2 free_core_size fixed bin (24),		/* size (in words) of free core after perm-wired */
	2 seg (0:8191) aligned,			/* segment entries (4 words each) */
	  3 slte (4) fixed bin (35);			/* Space for SLT entries */

/* auxiliary segment of SLT for storing of segment names and directory path names */

declare 1 name_seg based (names_ptr) aligned,		/* name segment header */
	2 pad bit (18) unal,
	2 next_loc bit (18) unal,			/* Next available free location in name seg */
	2 ht (0:127) bit (18) aligned;		/* Names hash table */

declare 1 segnam based (namep) aligned,			/* declaration for segment name block */
	2 count fixed bin (17),			/* number of segment names in this block */
	2 names (50 refer (segnam.count)),		/* segment name array */
	  3 hp bit (18) unal,			/* hash thread pointer */
	  3 ref bit (1) unal,			/* "1"b if name referenced */
	  3 pad bit (5) unal,
	  3 segno bit (12) unal,			/* segment number associated with this name */
	  3 name char (32) unal;			/* space for name (max 32 characters) */

declare 1 path based (pathp) aligned,			/* declaration for directory path name */
	2 size fixed bin (17),			/* length of pathname */
	2 name char (168 refer (path.size)) unal,	/* directory path name */
	2 acls fixed bin;				/* ACL list starts here */

declare 1 acls based (aclp) aligned,			/* declaration for acl list */
	2 count fixed bin,				/* number of entries in acl list */
	2 acl (50 refer (acls.count)),		/* array of acl entries */
	  3 userid char (32),			/* user specification */
	  3 mode bit (36) aligned,			/* mode for the specified user */
	  3 pad bit (36) aligned,
	  3 code fixed bin;


/* END INCLUDE FILE slt.incl.pl1 */
