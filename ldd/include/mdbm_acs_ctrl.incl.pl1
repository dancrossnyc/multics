/* BEGIN INCLUDE FILE mdbm_acs_ctrl.incl.pl1 -- jccj 5/26/78 */
/* modified by Mary Ward -- October, 1979 */

dcl 1 acs_ctrl aligned based (ac_ptr),			/* base of segment */
    2 version fixed bin unal,				/* version number of this structure */
    2 first_offset bit (18) unal,			/* point to first name */
    2 lock bit (36),				/* inconsistent when lock is not zero */
    2 user_id char (32) unaligned,			/* user who has lock set */
    2 ac_area area (sys_info$max_seg_size - fixed (rel (addr (acs_ctrl.ac_area))) - 1);

dcl  ac_ptr ptr;


dcl 1 rel_att aligned based (ra_ptr),			/* info about relation or attribute that is secured */
    2 item char (98),				/* complete name of secured relation or attribute */
   (2 u_name char (24),				/* unique name created for this entry */
    2 acs_used char (24),				/* acs acl that is used. acs's are created before
						   this variable is set */
    2 orig_name char (24),				/* acs name that was previously associated with this entry */
    2 next_offset bit (18),				/* offset to next in threaded list */
    2 to_be_modified bit (1),				/* on if acl is to be modified.
						   a
						   reset after modification is complete */
    2 modified bit (1),				/* on if acl has been modified. */
    2 shared_acs bit (1),				/* the acl of acs_used is shared by
						   many secured relations or attributes */
    2 last bit (1),					/* make this the last entry.. used for recovery
						   free rel_att structure pointed to by next_offset */
    2 extended_access bit (1),			/* extended access rights have been specified */
    2 relation bit (1),				/* on if this is a relation entry */
    2 delete bit (1),				/* for error recovery - entry must be deleted */
    2 pad bit (11)) unaligned;

dcl  ra_ptr ptr;

/* END INCLUDE FILE mdbm_acs_ctrl.incl.pl1 */
