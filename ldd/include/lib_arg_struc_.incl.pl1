/* START OF	lib_arg_struc_.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */

	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
	/*									*/
	/* NAME:  lib_arg_struc_.incl.pl1						*/
	/*									*/
	/*      This include segment defines structures used by the library maintenance tools	*/
	/* to process their input arguments.  These structures are the arguments to the		*/
	/* lib_args_ subroutine.							*/
	/*									*/
	/* STATUS									*/
	/*									*/
	/* 0) Created on:   May 25, 1976 by   Gary C. Dixon				*/
	/* 1) Modified:     October 24, 1983 by Jim Lippard to add page_length		*/
	/*									*/
	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */


%include lib_args_;

     dcl	Parg_struc		ptr;		/* ptr to the structure described below.	*/

     dcl	1 arg_struc		structure based (Parg_struc),
	  2 version		fixed bin,	/* version number (currently 1).		*/
	  2 program		char(32) varying,	/* name of calling program. 			*/
	  2 Parg_list		ptr,		/* ptr to calling program's argument list. 	*/
	  2 Iarg_list		fixed bin,	/* first arg of calling program's argument list	*/
						/*   to be processed.			*/
	  2 Larg_list		fixed bin,	/* total number of arguments in calling pgm's list*/
	  2 put_error		entry options(variable),
						/* program to call to output an error.		*/
	  2 Srequirements_allowed	bit(72) aligned,	/* bits on if control argument associated with	*/
						/*   that bit is acceptable to the program. 	*/
	  2 Scontrol_allowed	bit(36) aligned,	/* bits on if control operation associated with	*/
						/*   that bit is acceptable to the program. 	*/
	  2 Srequirements_initial	bit(72) aligned,	/* bits on indicating initial settings for 	*/
						/*   Srequirements. 			*/
	  2 Scontrol_initial	bit(36) aligned,	/* bits on indicating initial settings for	*/
						/*   Scontrol.  				*/
	  2 descriptor		char(168) varying,	/* name of library descriptor to be used. 	*/
	  2 footing		char(45) varying,	/* footing to be used on output pages. 		*/
	  2 heading		char(120) varying,	/* heading to be used on 1st output page.	*/
	  2 into_path		char(168) varying,	/* path into which library entries to be fetched.	*/
	  2 output_file		char(168) varying,	/* path of output file to be written.		*/
	  2 page_length		fixed bin,	/* length of output page			*/
	  2 time			fixed bin;	/* grace period (in days) for library_cleanup.	*/
     dcl	1 Sreq_allowed		aligned like Svalid_req based (addr(arg_struc.Srequirements_allowed));
						/* allowed requirements switches.		*/
     dcl	1 Sreq_init		aligned like Svalid_req based (addr(arg_struc.Srequirements_initial));
						/* initial values for requirements switches.	*/
     dcl	1 Sc_allowed		aligned like Sc based (addr(arg_struc.Scontrol_allowed));
						/* allowed control switches.			*/
     dcl	1 Sc_init			aligned like Sc based (addr(arg_struc.Scontrol_initial));
						/* initial values for control switches.		*/
     dcl	Varg_struc_1		fixed bin int static init (1);

/* END OF		lib_arg_struc_.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
