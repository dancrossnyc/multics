" BEGIN INCLUDE FILE lisp_stack_seg.incl.alm

"	lisp stack segment header format
"	Last modified by Reed 6/21/72
"
	equ	marked_stack_bottom,0	offset of ptr to bottom of marked stack
	equ	unmkd_stack_bottom,2	offset of ptr to bottom of unmkd_stack
	equ	stack_ptr_ptr,4		offset of ptr to lisp_static_vars_$stack_ptr
	equ	unmkd_ptr_ptr,6		offset of ptr to lisp_static_vars_$unmkd_ptr's offset word
	equ	array_pointer,8		points at cell of array most recently referenced
	equ	nil,10			offset of cell containing pointer to nil...
	equ	true,12			offset of cell containing pointer to t...
	equ	in_pl1_code,14		offset of flag saying whether stack_ptr
"					& unmkd_ptr or ap and ab|.,x7 are valid...if zero, ap,ab arevalid.
" table of pointers to operators

	equ	bind_op,16
	equ	unbind_op,18
	equ	errset1_op,20
	equ	errset2_op,22
	equ	unerrset_op,24
	equ	call_op,26
	equ	catch1_op,28
	equ	catch2_op,30
	equ	uncatch_op,32
	equ	gensym_data,34	" data for gensym function

	equ	system_lp,36		pointer to common linkage section for bound segment.
	equ	iogbind_op,38		operator to help out with compiled iog.
	equ	unseen_go_tag_op,40
	equ	throw1_op,42
	equ	throw2_op,44
	equ	signp_op,46
	equ	type_fields,48
	equ	return_op,50
	equ	err_op,52
	equ	pl1_interface,54
	equ	pl1_lsubr_interface,56
	equ	cons_op,58		operator for compiled cons
	equ	ncons_op,60		opeator for compiled cons with nil
	equ	xcons_op,62		operator for compiled xcons
	equ	begin_list_op,64		operator to begin compiled list code
	equ	append_list_op,66		operator to get new list cell and hook on end
	equ	terminate_list_op,68	operator to finish off list.
	equ	compare_op,70
	equ	link_opr,72
	equ	array_operator,74
	equ	dead_array_operator,76
	equ	store_operator,78
	equ	floating_store_operator,80
	equ	array_info_for_store,82
	equ	array_offset_for_store,84
	equ	array_link_snap_opr,86
	equ	create_string_desc_op,88	string desc for PL/I call
	equ	create_array_desc_op,90	array desc for PL/I call
	equ	pl1_call_op,92		PL/I call operator
	equ	cons_string_op,94		operator to cons up a string
	equ	create_varying_string_op,96
	equ	unwp1_op,98		unwind-protect start
	equ	unwp2_op,100		ditto, for compat.
	equ	ununwp_op,102		End unwind-protect.
	equ	irest_return_op,104 	Interrupt restore return
	equ	pl1_call_nopop_op,106	PL1 call, dont pop PL1 frame
	equ	rcv_char_star_op,108	Receive char * result, pop pl1frame
	" spare 110
	equ	begin_unmkd_stack,124	beginning of unmkd_stack

" END INCLUDE FILE lisp_stack_seg.incl.alm

