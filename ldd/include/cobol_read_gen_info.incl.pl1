/*

	The procedure cobol_read_gen.pl1 generates code which realizes the COBOL
read statement .

	READ fn [id] eos

		eos	a=000	neither
			  001	END
			  010	INVALID

			b=0	no INTO
			  1	INTO

			c=0	no KEY
			  1	KEY

			d=00	no NEXT
			  01	NEXT

			e	key number

			f=00	no NOT
			  01	NOT

		verb=21

	mp.n		3-4
	mp.ptr(1)		type-1("READ")
	mp.ptr(2)		type-12(file-name)
	mp.ptr(3)		type-9(INTO id)
	mp.ptr(n)		eos

	org=rel	acc=seq	1: read[next][end]
		acc=ran	1: read[invalid]
		acc=dyn	1: read next[end]
			2: read[invalid]

	org=ind	acc=seq	1: read[next]
		acc=ran	2: read[key][invalid]
		acc=dyn	1: read next[end]
			2: read[key][invalid]

Flow Chart

			read_next_sw =	file_table.access < 2	seq
					|
					end_stmt.d = "01"b		read next

			alt_sw =	file_table.organization = 3	ind
				&
				file_table.alternate_keys ^= 0


TAG(ioerror.retry_error):

	OP63(init_read,ntag)
	GEN_IOERROR

TAG(ntag):

	if file_table.organization = 4	stream
	then	do;	OP64(get_line,ntag);GEN_IOERROR

TAG(ntag):

		end;
	else	do;	if	file_table.access = 3	dyn
				&
				(	file_table.external
					|
					file_table.open_ext
				)

			then	do;	INCR_NTAG
					OP54(delete_error,ntag);GEN_ERROR

TAG(ntag):

				end;

			iosw =	file_table.access < 2	seq
				&
				(	file_table.external
					|
					file_table.delete
					|
					file_table.write
				)

		if	read_next_sw

		then	do;	if	(	file_organization>1	not-seq
						&
						iosw
						&
						file_table.access < 2	seq
					)
					|
					(	file_table.organization = 2	rel
						&
						file_table.relative_key
					)

				then	do;	INCR_NTAG

						OP69(read_key_for_read,ntag);GEN_IOERROR

TAG(ntag):

					end;
				else	do;

			if alt_sw
			then	do;	INCR_NTAG
					IO_UTIL$FILE_DESC
					OP92(alt_find_rec,ntag,skip_read_tag)
TAG(ntag):
					SET_FSBPTR
				end;
					end;

			end
		else	do;	if alt_sw
				then	do;	IO_UTIL$FILE_KEY(0,0)
						IO_UTIL$FILE_DESC
						IO_UTIL$FILE_NUM
						OP84(alt_read_key)
						SET_FSBPTR
					end;

				INCR_NTAG
				OP67(read_seek_key,ntag);GEN_IOERROR


TAG(ntag):

			end;

			INCR_NTAG


			if	read_next_sw

			then	do;	OP65(read_record,ntag)

					if alt_sw then	do;

TAG(skip_read_tag):

							end;
			else	OP66(nonseq_read_tag,ntag)

TAG(ntag):

			if alt_sw
			then	do;	IO_UTIL$FILE_DESC
					SET_FSBPTR

					if read_next_sw
					then	OP80(alt_read_next,0)
					else	OP81(alt_read_key,0)
				end;

		end;

*/

%include cobol_opr_read;

