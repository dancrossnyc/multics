/* BEGIN mdbm_rs_info.incl.pl1 -- jaw, 6/15/78 (from mda, 6/15/77) */

dcl 1 rs_info aligned,
    2 version fixed init (2),				/* must be set to 1 or 2 (Input) */
    2 flags aligned,
      3 lock_sw bit (1) unal,				/* Input -- if ="1"b  try to lock record */
      3 unlock_sw bit (1) unal,			/* Input -- if ="1"b try to unlock record */
      3 create_sw bit (1) unal,			/* Input--if set creat new record */
      3 locate_sw bit (1) unal,			/* Input--if set causes current rec to be
						   located outside the index by descrip, or created without key */
      3 inc_ref_count bit (1) unal,			/* Input--bump reference count of record, if stationary */
      3 dec_ref_count bit (1) unal,			/* Input--decrement ref count if this flag set and
						   record stationary */
      3 locate_pos_sw bit (1) unal,			/* Input--if set the record_length is taken
						   as an input arg. spec. the abs. logical record position
						   \	  to which both current and next will be set */
      3 mbz1 bit (29) unal,				/* must be set to "0"b, reserved for future use */
    2 record_length fixed (21),			/* length in bytes, Input if create_sw set */
    2 max_rec_len fixed (21),				/* max length of contained record
						   Input if create_sw is set--overrides min_block_size */
    2 record_ptr ptr,				/* points to first byte of record--will be word aligned */
    2 descriptor fixed (35),				/* Input if locate_sw set and create_sw="0"b */
    2 ref_count fixed (34),				/* Output--should match number of keys on this record--
						   = -1 if non-stationary record */
    2 time_last_modified fixed (71),			/* Output */
    2 modifier fixed (35),				/* Output--also Input when locking */
    2 block_ptr ptr unal,				/* Output */
    2 mbz2 (2) fixed init (0, 0);

/* END mdbm_rs_info.incl.pl1 */

