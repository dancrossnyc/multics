/* BEGIN include file toehold.incl.pl1 */

/* Various reserved entrypoints into the bce toehold.
Also, only those things one really needs to know about the toehold.
Keith Loepere, October 1983. */

/* Exclude prn, prv and pad when converting to alm version. */

/* format: style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */

dcl  1 toe_hold		        aligned based,	/* name so alm likes */
       2 entry_sequences	        (0:15) bit (72) aligned, /* described below */
       2 flagbox		        (64) bit (36) aligned,
       2 pad1		        (48) bit (36) aligned,
       2 paths		        (4) like io_path,
       2 n_paths_used	        fixed bin,
       2 memory_state	        fixed bin,		/* of memory/disk swapping, etc. */
       2 bce_dbr		        bit (72) aligned,	/* of bce */
       2 pad2		        (1355) bit (36) aligned,
       2 multics_state	        aligned like mc_state;

dcl  1 io_path		        aligned based,
       2 pcw		        fixed bin (71) aligned,

       2 port_number	        fixed bin (3) uns unal, /* these fields form the word that */
       2 iom_number		        fixed bin (15) uns unal, /* must be changed upon */
       2 channel_number	        fixed bin unal,	/* reconfiguration of channels */

       2 pad		        bit (36) aligned;

dcl  TOE_HOLD_CRASH_ENTRY	        fixed bin init (0) static options (constant); /* operator causes crash by xed'ind here */
dcl  TOE_HOLD_ESD_ENTRY	        fixed bin init (1) static options (constant);
dcl  TOE_HOLD_DUMP_ENTRY	        fixed bin init (2) static options (constant); /* place that causes an early dump */
dcl  TOE_HOLD_MULTICS_ENTRY	        fixed bin init (3) static options (constant); /* Multics crashes by drl'ing here */
dcl  TOE_HOLD_RESTART_ENTRY	        fixed bin init (4) static options (constant); /* bce restarts Multics by drl'ing here */
dcl  TOE_HOLD_BOOT_ENTRY	        fixed bin init (5) static options (constant); /* bootload_tape_label starts init by tra'ing here */
dcl  TOE_HOLD_BOS_ENTRY	        fixed bin init (12) static options (constant);
dcl  TOE_HOLD_BOS_NO_SAVE_ENTRY       fixed bin init (13) static options (constant);
dcl  TOE_HOLD_BOS_MULTICS_ENTRY       fixed bin init (14) static options (constant);

declare  mc_state_ptr	        ptr;	/* to toehold$.multics_state */
declare 1 mc_state		        aligned based (mc_state_ptr),
       2 mc_		        aligned like mc,		        
       2 masks		        (16) bit (36) aligned,
       2 interrupt		        bit (72) aligned,
       2 mode_reg		        bit (36) aligned,	/* mode_reg and cache_mode_reg form a double word pair */
       2 cache_mode_reg	        bit (36) aligned,
       2 dbr		        bit (72) aligned,
       2 cfg		        bit (72) aligned,
       2 bar		        bit (36) aligned,
       2 old_memory_state	        fixed bin,
       2 pad16		        (6) bit (36) aligned,
       2 ou_history_registers	        (0: 15) bit (72) aligned,
       2 cu_history_registers	        (0: 15) bit (72) aligned,
       2 du_history_registers	        (0: 15) bit (72) aligned,
       2 apu_history_registers        (0: 15) bit (72) aligned,
       2 ptwam_ptrs		        (0: 63) bit (36) aligned,	/* word alignment (mod 16, 32) of these am's matters */
       2 ptwam_regs		        (0: 63) bit (36) aligned,
       2 sdwam_ptrs		        (0: 63) bit (36) aligned,
       2 sdwam_regs		        (0: 63) bit (72) aligned;

/* values for memory_state */

dcl  Initial_undefined	        fixed bin init (0) static options (constant);  /* initial coming to bce */
dcl  At_bce__early		        fixed bin init (1) static options (constant);
dcl  At_bce__boot		        fixed bin init (2) static options (constant);  /* at bce during cool boot phase */
dcl  Multics		        fixed bin init (3) static options (constant);  /* Multics coming up */
dcl  Undefined_saving_state	        fixed bin init (4) static options (constant);  /* saving state during coming down */
dcl  Undefined_reading_bce	        fixed bin init (5) static options (constant);  /* reading in bce */
dcl  At_bce__crash		        fixed bin init (6) static options (constant);  /* disk holds Multics, at bce */
dcl  At_bce__shutdown	        fixed bin init (7) static options (constant);  /* disk holds (nothing), coming to bce */
dcl  Undefined_continue	        fixed bin init (8) static options (constant);  /* swapping memory back */
dcl  Undefined_saving_mem	        fixed bin init (9) static options (constant);

%page; %include mc;

/* END include file toehold.incl.pl1 */
