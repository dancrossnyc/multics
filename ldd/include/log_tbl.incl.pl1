
/*             "log_tbl.incl.pl1" -- include file to declare the format of the  */
/*        data base maintained by the Network portion of the Answering Service. */

/*        Originally created by D. M. Wells, Jan. 17, 1976 from an older        */
/*                  version of the same information                             */
/*        Version 5 created by D. M. Wells, July 1977, to remove ftp state and  */
/*                  to change management of TTY terminal type info.             */

     declare
         (READ      initial (0),                            /* like socket gender, read is even               */
          WRITE     initial (1))                            /* like socket gender, write is odd               */
               fixed binary (1) internal static options (constant);

     declare
          cur_ltbl_version_5 fixed binary (17) initial (5)  /* current version number of these tables         */
                    internal static options (constant);

     declare
          1 lt based aligned,
             2 attachment_attributes,                       /* attributes associated with AS attachment       */
                3 active fixed binary (17),                 /* zero if this is a vacant entry                 */
                3 tty_name character (8) unaligned,         /* channel name (as assigned by the AS)           */
                3 tty_index fixed binary (17),              /* assigned index for this pseudo-tty             */
                3 as_event_chn fixed binary (71),           /* event channel to inform overseer via           */
                3 ansp pointer,                             /* ptr to answer table entry                      */
                3 tty_state fixed binary (3),               /* TTY pseudo-state (1 to 5)                      */
                3 net_socket_group fixed binary (24),       /* Network socket group for this pseudo-TTY       */

                3 wakeup_count fixed binary (17),           /* num network events rcvd for this channel       */
                3 sig_sw bit (1),

             2 mode_attributes,                             /* Attributes and modes influencing connection    */
                3 pseudo_tty_attributes aligned,
                   4 answerback character (4) unaligned,
                   4 line_type fixed binary (17),
                   4 assigned_service_type fixed binary (17),
                   4 line_length fixed binary (17),         /* current tty output carriage length             */
                   4 old_terminal_type fixed binary (17),   /* pre-MR 6.0 type of terminal                    */
                   4 terminal_type_name character (32) unaligned,     /* used in MR6.0 and later systems      */

                3 current_modes unaligned,                  /* representation of the modes of this stream     */
                   4 can bit (1),                           /* whether the input should be canonicalized      */
                   4 erkl bit (1),                          /* whether erase and kill should be done          */
                   4 esc bit (1),                           /* whether escape sequences sb understood         */
                   4 half bit (1),                          /* terminal like TTY33                            */
                   4 edited bit (1),                        /* whether output non-graphics are deleted        */
                   4 hndlquit bit (1),                      /* we will do all processing of quits             */
                   4 tabs bit (1),                          /* whether tabs should be output directly         */
                   4 pad bit (29),

                   4 cr_seen bit (1),                       /* from net_converter_, has CR been seen?         */
                   4 escape_seen bit (1),                   /* ditto for escape (backslash)                   */
                   4 pad2 bit (34),

                3 special_control unaligned,                /* special bits not controlled by modes changes   */
                   4 printer_off_capability_asserted bit (1),         /* user claims to have printer_off      */
                   4 spec_ctl_pad bit (35),

             2 connection_attributes aligned,               /* associated with the net connection             */
                3 ncp_event_chn fixed binary (71),          /* event channel that NCP signals over            */
                3 state_change_timeout fixed binary (71),   /* timeout clock reading                          */
                3 sock_handle (0 : 1) bit (36) unaligned,   /* NCP indicies of read and write sockets         */
                3 ftp_sock_handle (0 : 1) bit (36) unaligned,
                3 passed_off_process_id bit (36) aligned,
                3 line_state fixed binary (3),              /* Network LINE state                             */
                3 foreign_socket,                           /* identification of foreign read socket          */
                   4 host_num fixed binary (16),
                   4 socket_num fixed binary (32),
                3 hostname character (4) unaligned,         /* short name of host computer at other end       */
                3 cur_service_type fixed binary (17),
                3 service_index fixed binary (17),          /* 1 if Telnet, 2 if FTP                          */
                3 contact_pin fixed binary (8),             /* Logger socket contacted for this service       */
                3 service_name char (8) unaligned,          /* Name of this service: "Telnet", "FTP", etc.    */

             2 communication_attributes,
                3 using_new_TELNET bit (1) unaligned,       /* whether we are using new TELNET                */
                3 need_Go_Ahead bit (1) unaligned,
                3 telnet_state unaligned,                   /* all bits off if telnet protocol is happy       */
                   4 last_was_IAC bit (1),                  /* ON -> last char was Interpret As Command       */
                   4 last_was_DO bit (1),                   /* last char was DO for some option               */
                   4 last_was_WILL bit (1),                 /* last char was WILL for some option             */
                   4 last_was_DONT bit (1),                 /* last char was DONT for some option             */
                   4 last_was_WONT bit (1),                 /* last char was WONT for some option             */
                3 telnet_field_pad bit (29) unaligned,
                3 rcte_info unaligned,                      /* If RCTE TELNET option in effect, its state     */
                   4 rcte_in_effect bit (1),
                   4 waiting_for_break_char bit (1),                  /* whether we have a <cmd> out          */
                   4 printer_on bit (1),                              /* should user TELNET echo or not       */
                   4 last_rcte_echo_cmd bit (3),
                   4 rcte_pad bit (30),

                3 option_in_effect (0 : 1),
                   4 option (0 : 35) bit (1) unaligned,
                3 option_in_negotiation (0 : 1),
                   4 option (0 : 35) bit (1) unaligned,

                3 bufidx fixed binary (24),                 /* current length of lt.buf                       */
                3 buffer aligned,
                   4 buf (262) character (1) unaligned,     /* buffer for undelivered characters              */

             2 meters aligned,
                3 cumulative_dialed_up_time fixed binary (71),
                3 last_dialup_time fixed binary (71),
                3 num_connections fixed binary (30),
                3 num_activations fixed binary (30),
                3 num_wakeups_to_net_as fixed binary (30),
                3 num_wakeups_to_as fixed binary (30),
                3 num_listens fixed binary (30),
                3 num_hangup_orders fixed binary (30),
                3 num_channel_errors fixed binary (30),
                3 num_force_clears fixed binary (30),

             2 history aligned,
                3 num_state_changes fixed binary (30),
                3 history_padd fixed binary (35),
                3 state_block (0 : 8),
                   4 entry_time fixed binary (71),
                   4 status_code fixed binary (35),
                   4 netstate fixed binary (5) unaligned,
                   4 socket_state fixed binary (5) unaligned,
                   4 function fixed binary (5) unaligned,
                   4 ptty_state fixed binary (5) unaligned,
                   4 history_pad bit (12) unaligned,
                   4 comment character (8) unaligned,

             2 space (6) bit (36) aligned;

     declare
           1 cs based aligned,                              /* Structure for each contact socket              */
             2 logger_event_chn fixed binary (71),          /* Event channel for this contact socket          */
             2 logger_state_timeout fixed binary (71),      /* Timeout cell for this contact socket           */
             2 service_index fixed binary (17),             /* Index of this structure in array of structures */
             2 service_type fixed binary (17),              /* AS Service type -- LOGIN, FTP, etc.            */
             2 log_pin fixed binary (8),                    /* Pin number of this service                     */
             2 log_type character (8) unaligned,            /* name of this service type                      */
             2 ptty_info bit (36),                          /* random bits to be given to net_tty_            */

             2 log_sock_handle bit (36) unaligned,          /* NCP index of ICP contact socket                */
             2 tty_idx fixed binary (17),                   /* Index of pseudo-tty found for caller           */
             2 logger_state fixed binary (3),               /* Contact socket state variable                  */
             2 socket32 bit (32),                           /* Name of socket we're going to send connect on  */
             2 num_logger_wakeups fixed binary (30),
             2 num_logger_contacts fixed binary (30),
             2 num_logger_rejects fixed binary (30),
             2 num_force_clears fixed binary (30),
             2 num_activations fixed binary (30),
             2 num_timeouts fixed binary (35),
             2 history aligned,
                3 num_state_changes fixed binary (30),
                3 state_block (0 : 11),
                   4 entry_time fixed binary (71),
                   4 status_code fixed binary (35),
                   4 netstate fixed binary (5) unaligned,
                   4 socket_state fixed binary (5) unaligned,
                   4 function fixed binary (5) unaligned,
                   4 log_state fixed binary (5) unaligned,
                   4 history_pad bit (12) unaligned,
                   4 comment character (8) unaligned,

             2 space (2) bit (36) aligned;

     declare
           1 ltbl based aligned,
             2 time_initialized fixed binary (71),          /* time this segment was last initialized         */
             2 version_number fixed binary (17),            /* stored value of existing ltbl                  */
             2 max_length fixed binary (17),                /* max number of lt entries we will allow         */
             2 max_inuse fixed binary (17),                 /* max number of lt entries ever in use           */
             2 num_services fixed binary (17),              /* number of contact sockets in table             */
             2 logger_grace_period fixed binary (71),       /* interval before log socket is force-closed     */
             2 ptty_grace_period fixed binary (71),         /* interval before pseudo-TTY is force-closed     */
             2 ncp_global_channel fixed binary (71),        /* channel to be informed about NCP state changes */
             2 as_processid bit (36) aligned,               /* processid of the answering service             */
             2 as_lockid bit (36) aligned,                  /* lock is of the answering service               */
             2 logger_service_state fixed binary (3),
             2 ptty_net_state fixed binary (17),
             2 num_net_state_changes fixed binary (30),
             2 reserved (47) bit (36) aligned,

             2 contact_socket (1 : 10) aligned like cs,     /* Structure for each contact socket, the         */
                                                            /* actual high bound used is num_services         */
             2 entry (512) aligned like lt;                 /* Structure for each pseudo-tty channel          */

/*        end of include file "log_tbl.incl.pl1"                      */

