/* BEGIN INCLUDE FILE ... _imft_driver_info.incl.pl1 */

/* Created:  April 1982 by G. Palter */
/* Modified: July 1982 by G. Palter for true AIM support */
/* Modified: February 1983 by Robert Coren to add single_switch and old_version flags */
/* Modified: August 1983 by Robert Coren to add access_floor */

/* format: style4 */


/****^  HISTORY COMMENTS:
  1) change(87-11-15,Oke), approve(88-08-01,MCR7948), audit(88-10-14,Farley),
     install(88-10-14,MR12.2-1165):
     Added variables to support in-dial and out-dial driver configurations.
  2) change(88-07-12,Beattie), approve(88-08-01,MCR7948),
     audit(88-10-14,Farley), install(88-10-14,MR12.2-1165):
     Add imft_version to local and foreign system structures.
                                                   END HISTORY COMMENTS */


/* Description of an IMFT driver process */

dcl  1 imft_driver_info aligned based (imft_driver_info_ptr),
       2 function fixed binary,			/* type of driver (file transfer) */
       2 flags,
         3 input_driver bit (1) unaligned,		/* ON => this driver is receiving input */
         3 debug_mode bit (1) unaligned,		/* ON => someone is debugging the driver in test mode */
         3 automatic_operation bit (1) unaligned,		/* ON => running without operator intervention */
         3 auto_go bit (1) unaligned,			/* ON => start processing output requests immediately */
         3 auto_receive bit (1) unaligned,		/* ON => start receiving input requests immediately */
         3 single_switch bit (1) unaligned,		/* ON => same switch for input and output */
         3 old_version bit (1) unaligned,		/* ON => foreign system uses old (HASP-only) software */
         3 copy_data bit (1) unaligned,			/* ON => imft_io_ will copy all data records to vfiles */
         3 remote_request_allowed bit (1) unaligned,	/* ON => foreign system is allowed to request transfers */
         3 explicit_access_required bit (1) unaligned,	/* ON => remote request requires explicit ACL term for driver */
         3 idle_line_drop bit (1) unaligned,		/* ON => drop when idle and dialup when something to do */
         3 validate_system_id bit (1) unaligned,		/* ON => validate foreign system ident/pass in PNT */
         3 debug_connect bit (1) unaligned,		/* ON => display data during connection phase in master log */
         3 dial_service bit (1) unaligned,		/* ON => connect only when there are requests to transfer */
         3 pad bit (22) unaligned,
       2 sleep_time fixed bin,			/* connect retry wait */
       2 idle_delay_count fixed bin,			/* number of idles til line drop */
       2 idle_delay fixed bin,			/* the idle counter */
       2 min_time_to_log fixed bin (35),		/* transfer must take at least this time to put est time in log */
       2 io_info,					/* data required to connect to the remote system */
         3 input_attach_description character (256) unaligned,
         3 output_attach_description character (256) unaligned,
         3 in_dial_qualifier character (256) unaligned,
         3 out_dial_text character (256) unaligned,
         3 trigger_text character (256) unaligned,
       2 local_system,				/* our system's description ... */
         3 name character (32) unaligned,		/* ... system name */
         3 password character (8) aligned,		/* ... card input password */
         3 imft_version character (8),			/* ... version of driver software */
         3 access_ceiling bit (72),			/* ... maximum AIM level permitted for transfer */
         3 access_floor bit (72),			/* ... minimum AIM level permitted for transfer */
         3 aim_attributes_ptr pointer,			/* ... -> definition of AIM attributes on system */
       2 foreign_system,				/* descirption of foreign system (see above) */
         3 name character (32) unaligned,
         3 password character (8) aligned,
         3 imft_version character (8),
         3 access_ceiling bit (72),
         3 access_floor bit (72),
         3 aim_attributes_ptr pointer;

dcl  imft_driver_info_ptr pointer;


/* Presently available types of IMFT driver (with short descriptions) */

dcl  FILE_TRANSFER initial (1)			/* file transfer driver */
	fixed binary static options (constant);

dcl  FUNCTION_NAMES (1) character (32) static options (constant) initial (
	"file transfer");

/* END INCLUDE FILE ... _imft_driver_info.incl.pl1 */
