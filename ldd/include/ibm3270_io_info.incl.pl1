/* Begin include file ..... ibm3270_io_info.incl.pl1 */

/* 3270 input/output information structure */
/* Initially constructed 09/08/77 by Larry Johnson and Warren Johnson */

/* Following structure must be supplied for "read" order */

dcl  read_ctlp ptr;

dcl 1 read_ctl aligned based (read_ctlp),
    2 version fixed bin,				/* Currently one */
    2 areap ptr,					/* Pointer to area where "read_info" is allocated */
    2 read_infop ptr,				/* Pointer to read_info structure, allocatd by I/O module */
    2 max_len fixed bin,				/* Max character length */
    2 max_fields fixed bin;				/* Max number of fields in array */

/* The following structure is allocate by the I/O module on a read order */
/* It must be freed by the caller when no longer needed */

dcl 1 read_info aligned based (read_ctl.read_infop),
    2 version fixed bin,				/* Currently 1 */
    2 next_read_infop ptr,				/* Used by I/O module internally for chaining blocks */
    2 controller fixed bin,				/* Controller which data is for */
    2 device fixed bin,				/* Which device on that controller */
    2 reason,					/* Reason for this data */
      3 key fixed bin,				/* Indicates which key pressed, see codes below */
      3 sub_key fixed bin,				/* For PF or PA, which one */
      3 code fixed bin (35),				/* If reason is error, an error code */
    2 status,					/* If reason STATUS, the status data */
      3 bits bit (12) unal,
      3 fill bit (24) unal,
    2 cursor_position fixed bin,			/* Current cursor position */
    2 max_fields fixed bin,				/* Used to define array */
    2 max_len fixed bin,				/* Used to define array */
    2 mod_fields fixed bin,				/* Number of elements in array actually filled in */
    2 data (read_ctl.max_fields refer (read_info.max_fields)),
      3 field_position fixed bin,			/* Address of field */
      3 contents char (read_ctl.max_len refer (read_info.max_len)) var;

/* Possible values for read_info.key */

dcl (ERROR init (1),				/* Serious error, see read_info.code */
     STATUS init (2),				/* Device reported status */
     ENTER init (3),				/* Entry key hit */
     PF_KEY init (4),				/* One of PF keys hit, see read_info.sub_key */
     PA_KEY init (5),				/* One of PA keys hit, see read_info.sub_key */
     CLEAR init (6),				/* Clear key hit */
     ID_READER init (7),				/* Operatior identification card reader */
     LIGHT_PEN init (8),				/* Light pen used */
     TEST_REQ init (9))				/* Test request key hit */
     int static options (constant);

dcl  write_infop ptr;
dcl  max_write_fields fixed bin;
dcl  max_write_len fixed bin;

dcl 1 write_info aligned based (write_infop),
    2 version fixed bin,
    2 controller fixed bin,
    2 device fixed bin,
    2 from_device fixed bin,				/* used with COPY command */
    2 command fixed bin,				/* write, erase/write, copy, etc. */
    2 write_ctl_char,
      3 bits unal,
        4 print_format bit (2) unal,			/* 00 = use NL order, 01 = 40, 10 = 60, 11 = 80 */
        4 start_printer bit (1) unal,
        4 sound_alarm bit (1) unal,
        4 keyboard_restore bit (1) unal,
        4 reset_mdt bit (1) unal,
      3 copy_bits bit (2) unal,			/* which fields to copy */
      3 pad bit (28) unal,
    2 max_fields fixed bin,
    2 max_len fixed bin,				/* max length of data.contents */
    2 mod_fields fixed bin,				/* number of fields actually filled in */
    2 data (max_write_fields refer (write_info.max_fields)),
      3 orders unal,				/* orders to precede this block of data */
        4 set_buffer_addr bit (1),			/* defines starting address */
        4 start_field bit (1), 			/* define field, using attribute char */
        4 insert_cursor bit (1),
        4 program_tab bit (1),
        4 repeat_to_addr bit (1),			/* repeat supplied char */
        4 erase_to_addr bit (1),
      3 attributes unal,				/* used in field definition if start_field = "1"b */
        4 protected bit (1),
        4 numeric bit (1),
        4 display_form bit (2),			/* 00 = display, ^pen, 01 = display,pen, 10 = intensified */
						/* 11 = invisible */
        4 reserved bit (1),
        4 mdt bit (1),				/* modified data tag */
      3 pad1 bit (12) unal,
      3 field_position fixed bin,
      3 contents char (max_write_len refer (write_info.max_len)) varying;

/* possible values for write_info.command */

dcl (WRITE init (1),
     ERASE_WRITE init (2),
     COPY init (3),
     ERASE_UNPROTECTED init (4),
     READ_MODIFIED init (5),
     READ_BUFFER init (6))
     fixed bin int static options (constant);

/* End include file ..... ibm3270_io_info.incl.pl1 */
