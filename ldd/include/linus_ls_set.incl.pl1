/* BEGIN INCLUDE FILE linus_ls_set.incl.pl1 -- jaw 7/27/78 */

dcl 1 ls_set aligned based (lss_ptr),			/* lila stack frame for lila set */
%include linus_ls_common;
    2 nselects fixed bin,				/* number of items selected */
    2 nblocks fixed bin,				/* number of lila blocks in stack */
    2 nops fixed bin,				/* number of set operators in stack */
    2 op_stack (linus_data_$max_set_stack_size),		/* the set op stack */
      3 br_cnt fixed bin (17) unal,			/* bracket count of oper. */
      3 key fixed bin (17) unal,			/* token key of operator */
    2 br_cnt fixed bin,				/* current bracket count */
    2 dup_flag bit (1) unal,				/* on if DUP encountered */
    2 unique_flag bit (1) unal,			/* on if UNIQUE encountered */
    2 rb_flag bit (1) unal,				/* on if right bracket allowed */
    2 lb_flag bit (1) unal,				/* on if left bracket allowed */
    2 setop_flag bit (1) unal,			/* on if set op allowed */
    2 select_flag bit (1) unal,			/* on if lila block allowed */
    2 end_flag bit (1) unal,				/* on if end of set allowed */
    2 first_block bit (1) unal,			/* on if no lila block yet processed */
    2 inv_setop bit (1) unal,				/* on if a lila block cannot be included in a set oper. */
    2 reserved bit (9) unal,
    2 var_ind fixed bin (17) unal,			/* number for next generated variable */
    2 domain_info (mrds_data_$max_select_items),		/* domain info for each selected attr. */
      3 name char (32),				/* domain name */
      3 bit_length fixed bin (35),			/* bit length of domain */
      3 desc bit (36),				/* descriptor for domain */
      3 assn_ptr ptr,				/* ptr to receiving field for this attr. */
      3 assn_type fixed bin,				/* assign_ type code for this domain */
      3 assn_len fixed bin (35),			/* assign_ length for this domain */
    2 si_ptr ptr,					/* pointer to select info structure */
    2 blk_hd_ptr ptr;				/* pointer to top item of block stack */

dcl  lss_ptr ptr;

/* END INCLUDE FILE linus_ls_set.incl.pl1 */
