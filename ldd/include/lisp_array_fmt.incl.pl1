	/***** BEGIN INCLUDE FILE lisp_array_fmt.incl.pl1 *****/

/* This include file defines the format of the "new" LISP arrays.
   Written 74.05.13 by DAM */

	/* Info block in static space.  pointed at by array ptr */

dcl 1 array_info aligned based structure,		/* 8 words long */
    2 ndims fixed bin(17) unaligned,			/* number of dimensions */
    2 gc_mark bit(18) unaligned,			/* alternating bits for garbage coll. */
    2 call_array_operator bit(36),			/* tspbp instruction to array opr */
    2 array_data_ptr pointer,				/* -> array_data structure */
    2 array_load_sequence(3) bit(36),			/* lda, ldq, tra bp|0 */
    2 type fixed bin(17) unaligned,			/* type of array, see dcl below */
    2 minus_2_times_ndims fixed bin(17) unaligned;	/* for convenience of array opr */

	/* Codes for the different types of arrays:
     Name		Value		arg to *array to create one      */

dcl (S_expr_array init(0),		/* t */
     Un_gc_array init(1),		/* nil */
     Fixnum_array init(2),		/* fixnum */
     Flonum_array init(3),		/* flonum */
     Readtable_array init(4),		/* readtable */
     Obarray_array init(5),		/* obarray */
     Dead_array init(6)		/* (*rearray a) */
    ) fixed bin(17) static;

	/* Block of array data and dimensions, in garbage-collected Lists space */

dcl 1 array_data aligned based structure,
      2 dope_vector(ZERO),		/* address by dope_vector(i-ndims).  no way to dcl in PL/I */
        3 bounds fixed bin(35),	/* 0 <_ subscript < bounds */
        3 multiplier fixed bin(35),	/* multiplier in polynomial-type subscript calc. */
      2 data(0:1000) fixed bin(71);	/* single or double words depending on type of array */

dcl ZERO fixed bin static init(0);	/* Circumvent a compiler bug causing reference through null pointer in get_array_size$multf */

	/***** END INCLUDE FILE lisp_array_fmt.incl.pl1 *****/
