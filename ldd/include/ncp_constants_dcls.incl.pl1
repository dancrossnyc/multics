
/*             "ncp_constants_dcls.incl.pl1" -- include file to       */
/*        declare some constants used throughout the Multics Network  */
/*        Control Program (NCP).                                      */

/*        Originally created by D. M. Wells, 1975, May 19.            */

     declare
         (NCP_DOWN            initial (0),                  /* the NCP has been shutdown normally             */
          NCP_UP_IMP_DOWN     initial (1),                  /* the NCP is up, but the IMP is unreachable      */
          NCP_UP              initial (2),                  /* the NCP is up and running normally             */
          NCP_CRASHED         initial (-1))                 /* the NCP has crashed itself                     */
               fixed binary (3) internal static options (constant);

     declare
         (READ_GENDER         initial ("0"b),               /* Read sockets are even numbers                  */
          WRITE_GENDER        initial ("1"b))               /* Write sockets ar odd numbers                   */
               bit (1) internal static options (constant);

     declare
         (HOST_OFF            initial (0),                  /* this host is not enabled for communications    */
          HOST_UP             initial (1),                  /* Host is up and everything ok                   */
          HOST_RST            initial (2),                  /* a Host-Host RST command has been sent          */
          HOST_DOWN           initial (3),                  /* Foreign host is down                           */
          HOST_ON             initial (4))                  /* Foreign host is enabled, but not RST yet       */
               fixed binary (6) internal static options (constant);

     declare
         (SOCK_UNASSIGNED     initial (0),                  /* This socket entry is not in use currently      */
          SOCK_ASSIGNED       initial (1),                  /* Socket has been assigned and is quiescent      */
          SOCK_LISTENING      initial (2),                  /* Socket is listening for incoming-RFCs          */
          SOCK_RFC_RCVD       initial (3),                  /* Socket has received RFC from foreign socket    */
          SOCK_RFC_ABORTED    initial (4),                  /* CLS  received for unacknowledged RFC           */
          SOCK_RFC_SENT       initial (5),                  /* RFC sent to foreign socket, but no reply       */
          SOCK_CONNECTED      initial (6),                  /* Socket is connected to foreign socket          */
          SOCK_CLS_WAIT       initial (7),                  /* CLS issued, waiting for reply CLS              */
                                                            /* State 8 is not currently defined               */
          SOCK_DATA_WAIT      initial (9),                  /* User requested close, but data still here      */
          SOCK_RFNM_WAIT      initial (10),                 /* User requested close, but waiting on last RFNM */
          SOCK_CLS_READ       initial (11),                 /* CLS received, but data still in buffers        */
                                                            /* State 12 is not currently defined              */
          SOCK_BROKEN         initial (13),                 /* Socket has been involved in some NCP anomaly   */
          SOCK_RESET          initial (14))                 /* Socket was connected to host that was reset    */
               fixed binary (6) internal static options (constant);

     declare
         (SOCK_INDX_MASK      initial ("000000777777"b3),   /* mask to get out actual array index             */
          SOCK_UNIQUE_MASK    initial ("377777000000"b3))   /* mask to get out incrementing part of indx      */
               bit (36) internal static options (constant);

     declare
         (ANY_TRACING         initial ("400000000000"b3),             /* if any tracing is occurring          */
          PRINTER_TRACING     initial ("200000000000"b3),             /* if tracing to the ptr is happening   */
          SYSERR_LOG_TRACING  initial ("100000000000"b3),             /* if tracing to syserr log mechanism   */

          TRACE_CTL_MSGS      initial ("004000000000"b3),             /* if host-host ctl msgs should be trcd */
          TRACE_PROCESS_INFO  initial ("002000000000"b3),             /* if process control should be trcd    */
          TRACE_DATA_FLOW     initial ("001000000000"b3),             /* if flow of user data to be traced    */

          TRACE_NCP_RING      initial ("000400000000"b3),             /* if ncp_ring_ should be traced        */
          TRACE_NCP_ACCESS    initial ("000200000000"b3),             /* if ncp_access_ should be traced      */
          TRACE_NCP_DAEMON    initial ("000100000000"b3),             /* if ncp_daemon_ should be traced      */
          TRACE_NCP_CONTROL   initial ("000040000000"b3),             /* if ncp_control_ should be traced     */
          TRACE_NCP_TBOP      initial ("000020000000"b3),             /* if ncp_tbop_ should be traced        */
          TRACE_NCP_IO        initial ("000010000000"b3))             /* if ncp_io_ should be traced          */
               bit (36) aligned internal static options (constant);

/*        end of include file "ncp_constants_dcls.incl.pl1            */

