/* ====== BEGIN INCLUDE SEGMENT	apl_operator_bead.incl.pl1 ================================ */

declare
	1 operator_bead		aligned based,

	  2 type			unaligned like general_bead.type,

	  2 bits_for_lex		unaligned,
	    3 allow_brackets	bit(1),		/* operator may have dimension info in brackets */
	    3 allow_product		bit(1),		/* operator may be used in inner and outer product */
	    3 allow_reduction	bit(1),		/* operator may be used in reduction and scan */
	    3 special_assignment	bit(1),		/* doesn't use standard assignment operator */
	    3 ignores_assignment	bit(1),		/* assignment has no effect */
	    3 allow_subscripted_assignment
				bit(1),		/* system variable that can be subscripted assigned */
	    3 pad			bit(12),

	  2 bits_for_parse		unaligned,
	    3 stop_trace_control	bit(1),		/* next lexeme is function being stopped/traced
						   (op1 tells which) */
	    3 quad		bit(1),		/* this is a quad type */
	    3 system_variable	bit(1),		/* this is a system variable, not an op */
	    3 dyadic		bit(1),		/* operator may be dyadic */
	    3 monadic		bit(1),		/* operator may be monadic */
	    3 function		bit(1),		/* operator is a user defined function */
	    3 semantics_valid	bit(1),		/* if semantics has been set */
	    3 has_list		bit(1),		/* semantics is a list */
	    3 inner_product		bit(1),		/* op2 is valid */
	    3 semantics_on_stack	bit(1),		/* semantics points to value stack */
	    3 is_external_function	bit(1),		/* semantics points to function bead for ext function */
	    3 pad			bit(7),
	    3 op2			fixed bin(8) unaligned,	/* secondary operator code */
	    3 op1			fixed bin(8) unaligned,	/* primary operator code */
	  2 type_code		fixed bin;	/* for parse */

/* ------ END INCLUDE SEGMENT		apl_operator_bead.incl.pl1 -------------------------------- */
