/* BEGIN INCLUDE FILE ... mc_anstbl.incl.pl1 */


/****^  HISTORY COMMENTS:
  1) change(85-12-19,MSharpe), approve(87-05-25,MCR7690),
     audit(87-03-30,GDixon), install(87-08-04,MR12.1-1056):
     Added the pending and virtual flags and virtual_tty_name to mc_ate;
     changed mc_ate.tty_name to mc_ate.real_tty_name; added mc_ate.ls_procid,
     mc_ate.ls_term_ev_chn, mc_ate.ls_resp_ev_chn, mc_ate.ls_handle.
  2) change(87-02-04,GDixon), approve(87-05-25,MCR7690),
     audit(87-06-01,Parisek), install(87-08-04,MR12.1-1056):
     Add mc_ate.vchn_requires_accept in support of virtual channels. Explicitly
     declare implicit pad fields which the compile adds for element alignment
     purposes.  Declare mc_ansp and mc_atep, on which major structures are
     based, rather than depending upon includers do to so.
  3) change(87-03-27,Parisek), approve(87-05-25,MCR7690),
     audit(87-06-11,GDixon), install(87-08-04,MR12.1-1056):
     Added the dsa_ring_number element to provide a constant for determining
     the DSA ring.
                                                   END HISTORY COMMENTS */


/* format: style3,idind30 */

dcl	1 mc_anstbl		based (mc_ansp) aligned,
						/* Structure of answer table */
	  2 max_size		fixed bin,	/* max number of entries table can grow */
	  2 current_size		fixed bin,	/* actual size of table (in entries) */
	  2 mc_procid		bit (36),		/* process ID of message coordinator */
	  2 sysdir		char (168),	/* name of main system control directory */
	  2 pad_ptrs		bit (36),
	  2 mrtp			ptr,
	  2 vconsp		ptr,
	  2 cons_cont_proc		entry,		/* mc_tty_ */
	  2 con_rec,				/* Data for console recovery. */
	    3 mc_ate_ptr		ptr,		/* Pts to recovery device. */
	    3 ec_id		fixed bin (71),	/* Recovery event chan. */
	    3 seq_num		fixed bin (35),	/* Syserr sequence number. */
	    3 offset		bit (18),		/* Log entry offset. */
	    3 flags,
	    ( 4 enabled		bit (1),		/* ON => recovery possible. */
	      4 active		bit (1),
	      4 pad_flags		bit (16)
	      )			unaligned,	/* ON => recovery going on. */
	  2 n_sources		fixed bin,	/* number of communicating sources */
	  2 max_sources		fixed bin,	/* maximum number of sources allowed */
	  2 current_time		fixed bin (71),	/* Time of last transaction */
	  2 trace			bit (1) aligned,
	  2 dsa_ring_number           fixed bin,	/* DSA ring number */
	  2 pad_entries		(30) bit (36) aligned,
	  2 entry			(0 refer (mc_anstbl.current_size)) aligned like mc_ate,
	mc_ansp			ptr;

dcl	1 mc_ate			based (mc_atep) aligned,
						/* declaration of a single answer table entry */
	  2 flags			aligned,
	    3 virtual		bit (1) unaligned,	/* 1 => login -vchn XXX */
	    3 pending		bit (1) unaligned,	/* 1 => pending entry created for DSA channel
						   since we can't keep info in cdte for it */
	    3 active		bit (1) unaligned,
	    3 the_system_console	bit (1) unaligned,	/* otw_/ocd_ */
	    3 a_system_console	bit (1) unaligned,	/* Not yet implemented -- a random opc through a	*/
						/*  nonexistent I/O module			*/
	    3 pad001		bit (1) unaligned,
	    3 signed_on		bit (1) unaligned,
	    3 reply_restricted	bit (1) unaligned,
	    3 broadcast		bit (1) unaligned,
	    3 broadcast_all		bit (1) unaligned,
	    3 vchn_requires_accept	bit (1) unaligned,
	    3 pad_flags		bit (25) unaligned,
	  2 virtual_tty_name	char (32) unaligned,
	  2 real_tty_name		char (32) unaligned,
	  2 pad_ptrs		bit (36),
	  2 cdtep			pointer,		/* we get info from cdt */
	  2 iocb			pointer,		/* do I/O here */
	  2 sci_ptr		pointer,
	  2 tra_vec		fixed bin,
	  2 restrict_reply		char (32),	/* Source name. if "", everybody. */
						/* Broadcasting information. */
	  2 n_casts		fixed bin,	/* If flag is 1 */
	  2 cast			(10) char (32),	/* If flag is 1, list of consoles. */
	  2 oper_info,				/* for oper assigned this console... */
	    3 personid		char (32),
	    3 last_input_time	fixed bin (71),	/* time of last input on this console... */
	  2 queue_ptr		ptr,
	  2 queue_event		fixed bin (71),
	  2 event			fixed binary (71),	/* name of event call channel associated with TTY */
	  2 ls_procid		bit (36),		/* ID of login_server who will wake us up with connect
						   and disconnect -- used only for network channels */
	  2 pad_ev_chn		bit (36),
	  2 ls_term_ev_chn		fixed bin (71),	/* event channel to send terminate response to ls */
	  2 ls_resp_ev_chn		fixed bin (71),	/* event channel to send operator response to ls */
	  2 ls_handle		bit (72),		/* login server handle for this connection */
	  2 authority,
	    3 privilege		(36) bit (1) unaligned,
	  2 control,
	    3 inhibit		bit (1) unal,
	    3 output_wait		bit (1) unal,
	    3 output_pending	bit (1) unal,
	    3 pad_control		bit (33) unal,
	mc_atep			ptr;

declare	(
	MC_WAIT_DIALUP		init (1),
	MC_WAIT_ANSWERBACK		init (2),
	MC_WAIT_READY		init (3),
	MC_WAIT_COMMAND		init (4)
	)			fixed bin int static options (constant);

/* END INCLUDE FILE ... mc_anstbl.incl.pl1 */
