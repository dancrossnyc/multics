/*  BEGIN INCLUDE FILE:  dm_ci_parts.incl.pl1  */

/* DESCRIPTION:

        This include file contains the ci_parts structure.  This structure
   is used across the file_manager_ interface to specify the parts of a
   control interval to get or put.  If the number_of parts is equal to 0,
   modules which take ci_parts interpret this case to mean to do everything
   except the actual requested operation, i.e., lock the control interval
   but don't get anything.  offset_in_bytes is the 0-originned offset in
   bytes from the beginning of the addressable portion of the control interval.
   An offset_in_bytes which is in the addressable portion is in error.
   Likewise, if offset_in_bytes + length_in_bytes is outside of the addressable
   portion, it is in error.
*/

/* HISTORY:
Written by Matthew Pierret, 01/28/82.
  (01/28/82 Andre Bensoussan, Design.)
Modified:
11/07/84 by Matthew Pierret:  To add must_be_zero, initial attributes on
            automatic storge.
*/

/* format: style2,ind3 */

     dcl	   1 ci_parts	      aligned based (ci_parts_ptr),
	     2 number_of_parts    fixed bin (17),
	     2 must_be_zero	      fixed bin,
	     2 part	      (cip_number_of_parts refer (ci_parts.number_of_parts)),
	       3 offset_in_bytes  fixed bin (17),
	       3 length_in_bytes  fixed bin (17),
	       3 local_ptr	      ptr;

     dcl	   ci_parts_ptr	      ptr init (null ());
     dcl	   cip_number_of_parts    fixed bin (17) init (0);


/*  BEGIN INCLUDE FILE:   dm_ci_parts.incl.pl1   */
