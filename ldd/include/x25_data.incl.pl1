/*  BEGIN INCLUDE FILE ... x25_data.incl.pl1  */


/****^  HISTORY COMMENTS:
  1) change(89-03-20,Parisek), approve(89-06-01,MCR8110),
     audit(89-10-09,Farley), install(89-10-25,MR12.3-1100):
     Add support of protocol mpx.
                                                   END HISTORY COMMENTS */


/*       Created june 9, 1979 by B.Westcott   */
/* Revised January 1982 by C. Hornig */
/* Modified  May 1982, by D. W. Cousins for level 2 activation data */
/* Modified August 1983 by Jeff Schiller to implement the "reverse charging" facility. */
/* Modified October 1984 by R.J.C. Kissel to have a value for the idle timer to use for breakall mode. */
/* Modified October 1984 by R.J.C. Kissel to add the write_status_sync_sent flag. */

dcl  x25_data_ptr ptr;
dcl  x25_data_n_sc fixed bin;				/* number of Multics subchannels */

dcl  1 x25_data aligned based (x25_data_ptr),		/* level 3 data */
       2 name char (32),				/* channel name for messages */
       2 devx fixed bin,				/* device index of multiplexer */
       2 state fixed bin,				/* see below */
       2 n_lc fixed bin,				/* number of logical channels */
       2 n_sc fixed bin,				/* number of subchannels */
       2 n_pvc fixed bin,				/* number of Permanent Virtual Circuits */
       2 flags,
         3 send_output bit (1) unaligned,
         3 mpx_started bit (1) unaligned,
         3 bypass_restart bit (1) unaligned,
         3 no_d bit (1) unaligned,			/* end-to-end ack not available */
         3 out_calls_collect bit (1) unaligned,
         3 packet_trace_sw   bit (1) unaligned,		/* Log packets? */
         3 pad1 bit (30) unaligned,
       2 seq_mod uns fixed bin (8),			/* modulus for packet sequencing */
       2 gfid bit (2),				/* format code to use */
       2 load_proc_id bit (36),			/* bootload process id */
       2 load_ev_chan fixed bin (71),			/* bootload event channel */
       2 net_type char (8),				/* type of net this is */
       2 restart_time fixed bin (71),			/* time last restart sent */
       2 dialup_info like dialup_info,			/* dialup interrupt info */
       2 lc_ptr ptr,				/* LC table */
       2 (write_head, write_tail) ptr,			/* chain of packets to write */
       2 long_packet_size fixed bin (11),		/* smallest long packet */
       2 long_packet_head fixed bin,			/* head of long packet SC chain */
       2 long_packet_tail fixed bin,			/* tail of long packet SC chain */
       2 breakall_idle_timer fixed bin,			/* breakall idle timer in 1/20 sec. */
       2 my_address varying char (15),			/* local DTE address */
       2 sc (x25_data_n_sc refer (x25_data.n_sc)) like xsce;/* subchannel tables */

dcl  (
     X25_HUNGUP init (0),				/* values of x25_data.state */
     X25_LISTENING init (1),
     X25_RESTARTING init (2),
     X25_ACTIVE init (3)
     ) fixed bin static options (constant);

dcl  1 x25_lces aligned based (x25_data.lc_ptr),		/* logical channel table */
       2 lc (x25_data.n_lc) like xlce;

dcl  xlcep ptr;
dcl  1 xlce aligned based (xlcep),
       2 state fixed bin,				/* see definitions below */
       2 scx fixed bin,				/* index of associated subchannel */
       2 max_packet_size uns fixed bin (18),		/* maximum data packet allowed */
       2 max_window_size uns fixed bin (7),
       2 baud_rate fixed bin,				/* speed of remote correspondent */
       2 flags aligned,				/* start on a word. */
         3 iti_call bit (1) unaligned,			/* set if iti call */
         3 int_issued bit (1) unaligned,		/* interrupt packet issued */
         3 rnr_received bit (1) unaligned,		/* dce sent rnr packet */
         3 iti_break bit (1) unaligned,			/* iti break being serviced */
         3 rnr_sent bit (1) unaligned,			/* we sent a RNR */
         3 originate bit (1) unaligned,			/* we started this call */
         3 timer_set bit (1) unaligned,			/* timing out on RR */
         3 collect_call bit (1) unaligned,		/* who pays for call */
         3 write_status_sync_sent bit (1) unaligned,	/* we sent one, and haven't heard the result. */
         3 pad bit (27) unaligned,
       2 window_size fixed bin,			/* V (W) current window size */
       2 force_ack_time fixed bin (71),			/* deadline for sending RR */
       2 state_time fixed bin (71),			/* time of last state change */
       2 next_recv_seq unsigned fixed bin (7),		/* V(R) next receive sequence number */
       2 next_send_seq unsigned fixed bin (7),		/* V(S) next sequence for transmssion */
       2 last_recv_seq unsigned fixed bin (7),		/* P(R) last issued receive sequence */
       2 next_ack_seq unsigned fixed bin (7),		/* P(S) sequence of next ack to be issued */
       2 his_address varying char (15),			/* outgoing host number */
       2 call_data varying char (16),			/* call user data */
       2 iti_params (18) uns fixed bin (9) unaligned;	/* PAD simulation parameters */

/* state definitions */

dcl  (
     READY init (1),
     DTE_WAITING init (2),
     FLOW_CONTROL_READY init (3),
     DTE_CLEAR_REQUEST init (4),
     DTE_RESET_REQUEST init (5),
     CONRESP_WAITING   init (6)
     ) fixed bin static options (constant);

dcl  xscep ptr;
dcl  1 xsce aligned based (xscep),
       2 name char (32),				/* name of the channel */
       2 devx fixed bin,				/* device index */
       2 lcx fixed bin,				/* index of xlce */
       2 state fixed bin,				/* see definitions below */
       2 flags,
         3 output_ready bit (1) unaligned,		/* set if window full */
         3 end_of_page bit (1) unaligned,		/* set if output read end-of-page */
         3 wru_done bit (1) unaligned,			/* user has done a WRU */
         3 need_ftd bit (1) unaligned,			/* user has done get_foreign_terminal_data */
         3 long_packet_pending bit (1) unaligned,		/* there is a long packet "on hold" */
         3 pad bit (13) unaligned,
         3 mode (18) bit (1) unaligned,			/* rawi, echoplex, breakall, iflow, oflow, hndlquit, polite, lfecho, 8bit */
       2 long_packet_next_scx fixed bin,		/* thread of held sc's */
       2 service char (12),				/* name of service offered here */
       2 (write_head, write_tail) ptr,			/* data packet chain */
       2 trans_table_ptr ptr;				/* translation table */

dcl  (
     SC_HUNGUP init (0),
     SC_LISTENING init (1),
     SC_DIALING init (2),
     SC_DIALED init (3)
     ) fixed bin static options (constant);

%include mcs_interrupt_info;

/* End include file x25_data.incl.pl1 */
