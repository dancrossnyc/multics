/*  START OF:	kermit_transfer_info.incl.pl1		  *  *  *  *  *  */
		  
  

/****^  HISTORY COMMENTS:
  1) change(88-05-16,Huen), approve(88-05-16,MCR7841), audit(88-05-25,RWaters),
     install(88-07-05,MR12.2-1054):
     Fix kermit 15, 16, 17, and 18.
                                                   END HISTORY COMMENTS */


/********************************************************************/
  /*							*/
  /*n	kermit_transfer_info				*/
  /*							*/
  /*d	This data structure is the info structure used              */
  /*d	during file transfer.				*/
  /*							*/
  /*l	Written:	84-10-11	by Maureen Mallmes			*/
  /*l     Modified: 87-06-19  by Don Kozlowski - Add flags in kti     */
  /*l                         structure. (kermit 15)                  */
  /*l     Modified: 87-07-22  by Don Kozlowski - Add msf flag in      */
  /*l                         kti structure. (kermit 17)              */
  /*							*/
  /********************************************************************/
  
  dcl 01 kermit_transfer_info	aligned based (transfer_infop),
        02 retry_count	fixed bin (21),	/*  for current packet   */
        02 retry_threshold	fixed bin (8) unal,	/*  maximum retries	     */
        02 sequence_n	fixed bin,	/*  sequence number	     */
        02 filenamesp	ptr,		/*  ptr to filenames     */
        02 filenames_idx	fixed bin,	/*  current filename     */
        02 filep		ptr,		/*  start of file ptr    */
        02 buffp		ptr,		/*  file data ptr        */
        02 msf_count	fixed bin (21),	/*  msf segments to send */
        02 msf_current	fixed bin (21),	/*  current msf module   */
        02 file_count         fixed bin,	/*  per transaction	     */
        02 statisticsp	ptr,		/*  statistics info ptr  */
        02 flags,
	03 msf		bit (1), 		/*  Is this an MSF	     */
	03 owe_a_cr	bit (1), 		/*  Holding back a CR    */
	03 pad		bit (34),
        02 iocb_ptr		ptr;     		/*  for vfile_	     */
	
	

dcl transfer_infop ptr;
dcl kermit_transfer_info_version
			char (9) static options (constant)
			     init ("kti   1.1");




  /********************************************************************/
  /*							*/
  /*n	kermit_filenames					*/
  /*							*/
  /*d	This data structure defines the overlay for the filenames.	*/
  /*							*/
  /*l	Written:	84-10-11	by Maureen Mallmes			*/
  /*l	Modified:	84-11-05	by Dean Elhard to add archive support	*/
  /*							*/
  /********************************************************************/

dcl 01 kermit_filenames	aligned based (kermit_transfer_info.filenamesp),
	02 n_paths	fixed bin,
	02 pathname	(0 refer (kermit_filenames.n_paths)) aligned,
	 03 directory	char (168) unal,
	 03 entry_name	char (32) unal,
	 03 component	char (32) unal;


  /********************************************************************/
  /*							*/
  /*n	kermit_packets					*/
  /*							*/
  /*d	This data defines the packet types.			*/
  /*							*/
  /*l	Written:	84-10-11	by Maureen Mallmes			*/
  /*							*/
  /********************************************************************/


dcl Data_packet char (1) internal static options (constant) init ("D");
dcl Ack_packet char (1) internal static options (constant) init ("Y");
dcl Nak_packet char (1) internal static options (constant) init ("N");
dcl Send_init_packet char (1) internal static options (constant) init ("S");
dcl Eot_packet char (1) internal static options (constant) init ("B");
dcl File_header_packet char (1) internal static options (constant) init ("F");
dcl Eof_packet char (1) internal static options (constant) init ("Z");
dcl Error_packet char (1) internal static options (constant) init ("E");
dcl Reserved_packet char (1) internal static options (constant) init ("T");


  /********************************************************************/
  /*							*/
  /*n	kermit_states					*/
  /*							*/
  /*d	This data defines the transfer states.                      */
  /*							*/
  /*l	Written:	84-10-11	by Maureen Mallmes			*/
  /*							*/
  /********************************************************************/

dcl Rec_init  fixed bin internal static options (constant) init (0);
dcl Rec_file_header  fixed bin internal static options (constant) init (1);
dcl Rec_data  fixed bin internal static options (constant) init (2);
dcl Rec_file_abort  fixed bin internal static options (constant) init (3);
dcl Rec_abort  fixed bin internal static options (constant) init (4);
dcl Rec_complete  fixed bin internal static options (constant) init (5);

dcl Send_init fixed bin internal static options (constant) init (0);
dcl Send_file_header fixed bin internal static options (constant) init (1);
dcl Send_data fixed bin internal static options (constant) init (2);
dcl Send_eof fixed bin internal static options (constant) init (3);
dcl Send_break fixed bin internal static options (constant) init (4);
dcl Send_abort fixed bin internal static options (constant) init (5);
dcl Send_complete fixed bin internal static options (constant) init (6);


/*  END OF:	kermit_transfer_info.incl.pl1		  *  *  *  *  *  */
