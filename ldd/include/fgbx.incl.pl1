/* BEGIN INCLUDE FILE ... fgbx.incl.pl1 */
/* last modified 5/3/77 by Noel I. Morris	*/
/* Modified 8/79 by R.J.C. Kissel to add FNP blast message. */
/* Modified 7/82 BIM for recognizable sentinel field */

/* NOTE: THIS INCLUDE FILE DESCRIBES THE FLAGBOX WITHIN THE BOS TOEHOLD, WHICH
HAS NO VALUE WHATSOEVER.  THE REAL MULTICS/BCE TOEHOLD FLAGBOX IS DESCRIBED BY
THE FLAGBOX INCLUDE FILE. */

/* The contents of this segment are data shared by Multics and BOS.
   This segment occupies the 2nd, 3rd, 4th, and 5th 16-word blocks of the BOS toehold. */

dcl  flagbox$ ext;
dcl  fgbxp ptr;

dcl 1 fgbx based (fgbxp) aligned,
    2 flags (36) bit (1) unal,			/* communications switches */
    2 slt_segno bit (18),				/* segment # of the SLT */
    2 pad1 fixed bin,
    2 rtb,					/* return to BOS info */
     (3 ssenb bit (1),				/* "1"b if storage system enabled */
      3 call_bos bit (1),				/* "1"b if BOS called by operator */
      3 shut bit (1),				/* "1"b if BOS called after shutdown */
      3 mess bit (1),				/* "1"b if message has been provided */
      3 alert bit (1),				/* "1"b if audible alarm to be sounded */
      3 pad bit (25),
      3 bos_entry fixed bin (5)) unal,			/* type of entry into BOS
						   0 => XED 10002 (BOS entry)
						   1 => XED 10004 (Multics entry)
						   2 => XED 10000 (manual entry) */
    2 sentinel char (32) aligned,			/* set by BOS (for now) */
    2 sst_sdw bit (72),				/* set by init_sst */
    2 hc_dbr bit (72),				/* set by start_cpu, idle DBR */
    2 message char (64),				/* message for return to BOS */
    2 fnp_blast char (128);				/* message for FNP use when Multics is down. */

declare FLAGBOX_SENTINEL char (32) init ("Flagbox & Toehold Valid") int static options (constant);

/* END INCLUDE FILE ... fgbx.incl.pl1 */
