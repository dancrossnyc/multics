/* BEGIN INCLUDE FILE ... window_control_info.incl.pl1 JRD  */
/* format: style3 */

/* Modified 26 January 1982 by William York to add the set_more_handler
   and reset_more_handler control orders. */
/* Modified October 1982 by WMY to add set and get_token_characters,
   set and get_more_prompt. */
/* Modified February 1983 by WMY to add the line_editor_key_binding_info
   structure. */
/* Modified 30 September 1983 by Jon A. Rochlis to add the origin.column for
   partial screen width windows. */
/* Modified 9 October 1983 by JR to add version 1 window_edit_line_info. 
   This should be removed when window_info.incl.pl1 is created. */
/* Modified 29 February 1984 by Barmar to add version 1 
   get_editor_key_bindings_info. */
/* Modified 1 March 1984 by Barmar to add version 1 
   set_editor_key_bindings_info. */
/* Modified 2 March 1984 by Barmar to upgrade to version 3
   line_editor_key_bindings_info, which includes the name, description, and
   info path */

/* structure for the set_window_info and get_window_info
   control orders. */

dcl	1 window_position_info
			based (window_position_info_ptr),
	  2 version	fixed bin,
	  2 origin,
	    3 column	fixed bin,
	    3 line	fixed bin,
	  2 extent,
	    3 width	fixed bin,
	    3 height	fixed bin;

dcl	(window_position_info_version, window_position_info_version_1)
			fixed bin internal static init (1) options (constant);
dcl	window_position_info_ptr
			pointer;

/* structure for the set_window_status and get_window_status
   control orders */

declare	window_status_info_ptr
			pointer;
declare	1 window_status_info
			aligned based (window_status_info_ptr),
	  2 version	fixed bin,
	  2 status_string	bit (36) aligned;		/* string (window_status) */
/* see window_status.incl.pl1 for the contents of this string */


declare	(window_status_version, window_status_version_1)
			fixed bin internal static init (1) options (constant);

/* info structure for the set_more_responses and get_more_responses control 
   orders */


dcl	1 more_responses_info
			aligned based (more_responses_info_ptr),
	  2 version	fixed bin,
	  2 n_yeses	fixed bin, /* how many valid characters in the strings below */
	  2 n_noes	fixed bin,
	  2 yeses		char (32) unaligned,
	  2 noes		char (32) unaligned;

dcl	(more_responses_info_version_1, more_responses_version)
			fixed bin internal static init (1) options (constant);
dcl	more_responses_info_ptr
			pointer;

/* structure for the set_break_table and get_break_table
   control orders */

declare	break_table_ptr	pointer;
declare	1 break_table_info	aligned based (break_table_ptr),
	  2 version	fixed bin,
	  2 breaks	(0:127) bit (1) unaligned;

declare	(break_table_info_version, break_table_info_version_1)
			fixed bin init (1) internal static options (constant);

declare	1 more_handler_info aligned based (more_handler_info_ptr),
	  2 version	fixed bin,
	  2 flags		unaligned,
	    3 old_handler_valid
			bit(1),
	    3 pad		bit(35),
	  2 more_handler	entry (pointer, bit(1) aligned),
	  2 old_more_handler entry (pointer, bit(1) aligned);

declare	more_handler_info_ptr pointer;

declare	(more_handler_info_version, more_handler_info_version_3)
			fixed bin internal static options (constant) init (3);
			
declare   1 token_characters_info aligned based (token_characters_info_ptr),
	  2 version	char(8),
	  2 token_character_count
			fixed bin,
	  2 token_characters
			char (128) unaligned;

declare   token_characters_info_ptr pointer;

declare   token_characters_info_version_1 char(8) internal static options (constant) init ("wtci0001");

declare   1 more_prompt_info	aligned based (more_prompt_info_ptr),
	  2 version	char(8),
	  2 more_prompt	char(80);

declare   more_prompt_info_ptr pointer;

declare   more_prompt_info_version_1 char(8) static options (constant) init ("wsmp0001");

/* Line editor stuff ... */

dcl  line_editor_key_binding_info_ptr
			pointer;

dcl  line_editor_binding_count
			fixed bin;
dcl  line_editor_longest_sequence
			fixed bin;
/* For each binding, action defines what to do for that sequence. Constants
   are defined in window_editor_values.incl.pl1. Only if action is set to
   EXTERNAL_ROUTINE does the editor_routine entry variable get examined. */

dcl  1 line_editor_key_binding_info
			aligned based (line_editor_key_binding_info_ptr),
       2 version		char(8),
       2 binding_count	fixed bin,
       2 longest_sequence	fixed bin,
       2 bindings		(line_editor_binding_count refer
			(line_editor_key_binding_info.binding_count)),
         3 sequence		char(line_editor_longest_sequence refer
			(line_editor_key_binding_info.longest_sequence)) varying,
         3 action		fixed bin,
         3 numarg_action      fixed binary,
         3 editor_routine	entry (pointer, fixed bin(35)),
         3 name		char (64) varying unaligned,
         3 description	char (256) varying unaligned,
         3 info_path	unaligned,
	 4 info_dir	char (168),
	 4 info_entry	char (32);
	

dcl  line_editor_key_binding_info_version_3
			char(8) static options (constant) init ("lekbi003");

dcl 1 get_editor_key_bindings_info	aligned based (get_editor_key_bindings_info_ptr),
      2 version			char (8),
      2 flags,
        3 entire_state		bit (1) unaligned,
        3 mbz			bit (35) unaligned,
      2 key_binding_info_ptr		ptr,
      2 entire_state_ptr		ptr;

dcl get_editor_key_bindings_info_ptr	ptr;
dcl get_editor_key_bindings_info_version_1 char (8) int static options (constant) init ("gekbi_01");

dcl 1 set_editor_key_bindings_info	aligned
				based (set_editor_key_bindings_info_ptr),
      2 version			char (8),
      2 flags,
        3 replace			bit (1) unaligned,
        3 update			bit (1) unaligned,
        3 mbz			bit (34) unaligned,
      2 key_binding_info_ptr		ptr;

dcl set_editor_key_bindings_info_ptr	ptr;
dcl set_editor_key_bindings_info_version_1 char (8) int static options (constant) init ("sekbi_01");

/* This should be moved to window_info.incl.pl1 when that include file is
   created.  JR 2/1/84 */

dcl	1 window_edit_line_info
			based (window_edit_line_info_ptr),
	  2 version	char (8),
	  2 line_ptr	ptr,
	  2 line_length	fixed bin (21);		/* later we will hack initial cursor position, key bindings, etc. */

dcl	window_edit_line_info_version_1
			char (8) static options (constant) init ("wedl0001");

dcl	window_edit_line_info_ptr
			ptr;

/* END INCLUDE FILE window_control_info.incl.pl1 */
