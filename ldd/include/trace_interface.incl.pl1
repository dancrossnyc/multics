/*  START OF:	trace_interface.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
/* Written: May 1984 by Jeffrey D. Ives. */
/* format: style2,^inddcls,^indnoniterdo,^inditerdo,dclind5,idind35 */

/* IDENTIFICATION */

dcl  trace_$me			entry () returns (char (32));
dcl  trace_$version			entry () returns (char (32));

/* TRANSACTIONS */

dcl  trace_$transaction_begin		entry (fixed bin (71)) returns (bit aligned);
dcl  trace_$transaction_begin_force	entry (fixed bin (71));
dcl  trace_$transaction_end		entry (fixed bin (71)) returns (bit aligned);

/* ACTIONS */

dcl  trace_$update_default_parms	entry () returns (bit aligned);
dcl  trace_$update_global_parms	entry () returns (bit aligned);
dcl  trace_$add_specified_eps		entry (fixed bin, fixed bin);
dcl  trace_$add_specified_locs	entry (fixed bin, fixed bin);
dcl  trace_$remove_specified_eps	entry (fixed bin);
dcl  trace_$remove_specified_locs	entry (fixed bin);
dcl  trace_$turn_on_specified_eps	entry (fixed bin);
dcl  trace_$turn_off_specified_eps	entry (fixed bin);

/* CONVERSION */

dcl  trace_$cv_inout_to_bits		entry (char (8) aligned) returns (bit (2) aligned);
dcl  trace_$cv_bits_to_inout		entry (bit (2) aligned) returns (char (8) aligned);
dcl  trace_$cv_n_to_number		entry (char (16)) returns (fixed bin (34));
dcl  trace_$cv_onoff_to_bit		entry (char (8) aligned) returns (bit aligned);
dcl  trace_$cv_bit_to_onoff		entry (bit aligned) returns (char (8) aligned);
dcl  trace_$cv_entry_name_to_spp	entry (char (256) var, ptr) returns (1 like stop_proc aligned);
dcl  trace_$cv_file_path_to_osw	entry (char (256) var, ptr) returns (1 like output_switch aligned);
dcl  trace_$cv_stream_name_to_osw	entry (char (32) var) returns (1 like output_switch aligned);

/* METERS */

dcl  trace_$entrypoint_counts		entry (fixed bin) returns (1 aligned like counts);
dcl  trace_$entrypoint_global_meters	entry (fixed bin) returns (1 like meters aligned);
dcl  trace_$entrypoint_local_meters	entry (fixed bin) returns (1 like meters aligned);
dcl  trace_$metered			entry () returns (1 like meters aligned);
dcl  trace_$removed			entry () returns (1 like meters aligned);
dcl  trace_$reset_meters		entry ();

/* ENTRYPOINTS */

dcl  trace_$entrypoint_index		entry (ptr unal) returns (fixed bin);
dcl  trace_$entrypoint_name		entry (fixed bin) returns (char (65) var);
dcl  trace_$entrypoint_ptr		entry (fixed bin) returns (ptr);
dcl  trace_$entrypoint_seg_path	entry (fixed bin) returns (char (256) var);
dcl  trace_$entrypoint_status		entry (fixed bin) returns (char (32) var);
dcl  trace_$function		entry (fixed bin) returns (bit aligned);
dcl  trace_$num_entrypoints		entry () returns (fixed bin);
dcl  trace_$num_specified_entrypoints	entry () returns (fixed bin);
dcl  trace_$specified_entrypoint_index	entry (fixed bin) returns (fixed bin);
dcl  trace_$specify_entrypoints	entry (char (256) var, ptr);
dcl  trace_$translator_id		entry (fixed bin) returns (fixed bin);

/* LOCATIONS */

dcl  trace_$location_ptr		entry (fixed bin) returns (ptr);
dcl  trace_$location_seg_path		entry (fixed bin) returns (char (256) var);
dcl  trace_$location_values		entry (fixed bin) returns (1 aligned like watch_values);
dcl  trace_$num_locations		entry () returns (fixed bin);
dcl  trace_$num_specified_locations	entry () returns (fixed bin);
dcl  trace_$specified_location_index	entry (fixed bin) returns (fixed bin);
dcl  trace_$specify_locations		entry (char (256) var);
dcl  trace_$specify_changed_locations	entry ();

/* EVENT BUFFER */

dcl  trace_$buffer_counts		entry (fixed bin (34), fixed bin (34));
dcl  trace_$buffer_event		entry (fixed bin (34), fixed bin, char (2), ptr unal, 1 like counts aligned, 1 like meters aligned);
dcl  trace_$buffer_event_header	entry (fixed bin (34)) returns (char (256) var);
dcl  trace_$buffer_event_string	entry (fixed bin (34)) returns (char (256) var);
dcl  trace_$buffer_ptr		entry () returns (ptr unal);

/* TRACE PARAMETERS */

dcl  trace_$arguments		entry (fixed bin) returns (bit (2) aligned);
dcl  trace_$set_arguments		entry (bit (2) aligned);
dcl  trace_$call			entry (fixed bin) returns (char (256) var);
dcl  trace_$set_call		entry (char (256) var);
dcl  trace_$every			entry (fixed bin) returns (fixed bin (34));
dcl  trace_$set_every		entry (fixed bin (34));
dcl  trace_$first			entry (fixed bin) returns (fixed bin (34));
dcl  trace_$set_first		entry (fixed bin (34));
dcl  trace_$high			entry (fixed bin) returns (fixed bin (34));
dcl  trace_$set_high		entry (fixed bin (34));
dcl  trace_$last			entry (fixed bin) returns (fixed bin (34));
dcl  trace_$set_last		entry (fixed bin (34));
dcl  trace_$low			entry (fixed bin) returns (fixed bin (34));
dcl  trace_$set_low			entry (fixed bin (34));
dcl  trace_$new_high		entry (fixed bin) returns (bit aligned);
dcl  trace_$set_new_high		entry (bit aligned);
dcl  trace_$parms_string		entry (fixed bin, bit aligned) returns (char (256) var);
dcl  trace_$parms_specified		entry () returns (bit aligned);
dcl  trace_$stop			entry (fixed bin) returns (bit (2) aligned);
dcl  trace_$set_stop		entry (bit (2) aligned);
dcl  trace_$stop_every		entry (fixed bin) returns (fixed bin (34));
dcl  trace_$set_stop_every		entry (fixed bin (34));
dcl  trace_$stop_low		entry (fixed bin) returns (fixed bin (34));
dcl  trace_$set_stop_low		entry (fixed bin (34));
dcl  trace_$trace			entry (fixed bin) returns (bit (2) aligned);
dcl  trace_$set_trace		entry (bit (2) aligned);

/* GLOBAL PARAMETERS */

dcl  trace_$alm			entry () returns (bit aligned);
dcl  trace_$set_alm			entry (bit aligned);
dcl  trace_$automatic		entry () returns (bit aligned);
dcl  trace_$set_automatic		entry (bit aligned);
dcl  trace_$buffer			entry () returns (bit aligned);
dcl  trace_$set_buffer		entry (bit aligned);
dcl  trace_$calibrate		entry () returns (bit aligned);
dcl  trace_$set_calibrate		entry (bit aligned);
dcl  trace_$compensation		entry (fixed bin) returns (1 aligned like compensation);
dcl  trace_$set_compensation		entry (fixed bin, 1 aligned like compensation);
dcl  trace_$enabled			entry () returns (bit aligned);
dcl  trace_$set_enabled		entry (bit aligned);
dcl  trace_$global_parms_string	entry () returns (char (256) var);
dcl  trace_$long			entry () returns (bit aligned);
dcl  trace_$set_long		entry (bit aligned);
dcl  trace_$meter			entry () returns (bit aligned);
dcl  trace_$set_meter		entry (bit aligned);
dcl  trace_$output_switch		entry () returns (1 like output_switch aligned);
dcl  trace_$set_output_switch		entry (1 like output_switch aligned);
dcl  trace_$signals			entry () returns (bit aligned);
dcl  trace_$set_signals		entry (bit aligned);
dcl  trace_$stop_proc		entry () returns (1 like stop_proc);
dcl  trace_$set_stop_proc		entry (1 like stop_proc);
dcl  trace_$stop_routine		entry () returns (entry);
dcl  trace_$set_stop_routine		entry (entry);
dcl  trace_$trace_routine		entry () returns (entry);
dcl  trace_$set_trace_routine		entry (entry);
dcl  trace_$loud			entry () returns (bit aligned);
dcl  trace_$set_loud		entry (bit aligned);

/* MISCELLANEOUS */

dcl  trace_$in_trace		entry () returns (bit aligned);

/* STRUCTURES AND CONSTANTS */

dcl  1 watch_values			aligned,
       2 old			bit (36),
       2 new			bit (36);

dcl  1 counts			aligned,
       2 calls			fixed bin (53),	/* total number of calls			*/
       2 level			fixed bin (34),	/* current recursion level			*/
       2 max_level			fixed bin (34);	/* max ever recursion level			*/


dcl  1 meters			aligned,
       2 real_time			fixed bin (53),	/* The total amount of real time metered.	*/
       2 vcpu_time			fixed bin (53),	/* The total amount of virtual cpu time metered.	*/
       2 page_faults		fixed bin (34);	/* The total number of page faults metered.	*/

dcl  1 output_switch		aligned based,
       2 iocb_ptr			ptr,
       2 stream_name		char (32) var,
       2 file_path			char (256) var;

dcl  1 stop_proc			aligned based,
       2 entry_value		entry (),
       2 entry_name			char (256) var;

dcl  1 compensation			aligned,
       2 real_time			fixed bin (53),
       2 vcpu_time			fixed bin (53);

dcl  (
     COMPENSATION_FROM_ENTRY_TO_ENTRY	init (1),
     COMPENSATION_FROM_ENTRY_TO_RETURN	init (2),
     COMPENSATION_FROM_RETURN_TO_ENTRY	init (3),
     COMPENSATION_FROM_RETURN_TO_RETURN init (4)
     )				static options (constant);

/*  END OF:	trace_interface.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
