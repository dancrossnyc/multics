/*	BEGIN INCLUDE FILE ... dir_entry.incl.pl1 ...last modified August 1974 for nss */


/* Template for an entry. Length = 38 words */

dcl  ep ptr;

dcl 1 entry based (ep) aligned,

    (2 efrp bit (18),				/* forward rel ptr to next entry */
    2 ebrp bit (18)) unaligned,			/* backward rel ptr to previous entry */

    2 type bit (18) unaligned,			/* type of object = dir entry  */
    2 size fixed bin (17) unaligned,			/* size of dir entry */

    2 uid bit (36),					/* unique id of entry */

    2 dtem bit (36),				/* date-time entry modified */

    (2 bs bit (1),					/* branch switch = 1 if branch */
    2 pad0 bit (17),
    2 nnames fixed bin (17),				/* number of names for this entry */

    2 name_frp bit (18),				/* rel pointer to start of name list */
    2 name_brp bit (18),				/* rel pointer to end of name list */

    2 author,					/* user who created branch */
      3 pers_rp bit (18),				/* name of user who created branch */
      3 proj_rp bit (18),				/* project of user who created branch */

      3 tag char (1),				/* tag of user who created branch */
      3 pad1 char (3),

    2 primary_name bit (504),				/* first name on name list */

    2 dtd bit (36),					/* date time dumped */

    2 pad2 bit (36),


/* the declarations below are for branch only */


    2 pvid bit (36),				/* physical volume id */

    2 vtocx fixed bin (17),				/* vtoc entry index */
    2 pad3 bit (18),

    2 dirsw bit (1),				/* = 1 if this is a directory branch */
    2 oosw bit (1),					/* out of service switch  on = 1 */
    2 per_process_sw bit (1),				/* indicates segment is per process */
    2 copysw bit (1),				/* = 1 make copy of segment whenever initiated */
    2 safety_sw bit (1),				/* if 1 then entry cannot be deleted */
    2 multiple_class bit (1),				/* segment has multiple security classes */
    2 audit_flag bit (1),				/* segment must be audited for security */
    2 security_oosw bit (1),				/* security out of service switch */
    2 entrypt_sw bit (1),				/* 1 if call limiter is to be enabled */
    2 master_dir bit (1),				/* TRUE for master directory */
    2 tpd bit (1),					/* TRUE if this segment is never to go on the PD */
    2 pad4 bit (11),
    2 entrypt_bound bit (14)) unaligned,		/* call limiter */

    2 access_class bit (72) aligned,			/* security attributes : level and category */

    (2 ring_brackets (3) bit (3),			/* ring brackets on segment */
    2 ex_ring_brackets (3) bit (3),			/* extended ring brackets */
    2 acle_count fixed bin (17),			/* number of entries on ACL */

    2 acl_frp bit (18),				/* rel ptr to start of ACL */
    2 acl_brp bit (18),				/* rel ptr to end of ACL */

    2 bc_author,					/* user who last set the bit count */
      3 pers_rp bit (18),				/* name of user who set the bit count */
      3 proj_rp bit (18),				/* project of user who set the bit count */

      3 tag char (1),				/* tag of user who set the bit count */
      3 pad5 bit (2),
    2 bc fixed bin (24)) unaligned,			/* bit count for segs, msf indicator for dirs */

    2 sons_lvid bit (36),				/* logical volume id for immediat inf non dir seg */

    2 pad6 bit (36),

    2 checksum bit (36),				/* checksum from dtd */

    2 owner bit (36);				/* uid of containing directory */

/*	END INCLUDE FILE ... dir_entry.incl.pl1 ... */
