/* BEGIN INCLUDE FILE ... mlsys_internal_data.incl.pl1 */


/****^  HISTORY COMMENTS:
  1) change(86-06-11,Mills), approve(86-06-11,MCR7419),
     audit(86-06-17,Margolin), install(86-06-30,MR12.0-1080):
     Added mlsys_data_$domains_available.
                                                   END HISTORY COMMENTS */


/* Created:  May 1981 by G. Palter */
/* Modified: July 1983 by G. Palter to merge with mlsys_data_ */

/* Constants used internally by the Multics mail system */

dcl  mlsys_data_$max_opening_retries fixed binary external; /* maximum number of times to reopen a mailbox if it gets
                                                               damaged and salvaged while open */

dcl  mlsys_data_$max_lock_wait_retries fixed binary external;
                                                            /* maximum number of times to try to send a message while the
                                                               mailbox is locked (being salvaged?) */


/* Allocation overhead factors:  When allocating those structures with refer extents, insure that the variable portion of
   the structure contains a multiple of the appropriate constant number of slots.  These extra slots will be used for
   later additions to the structure; when a new element must be added to a full structure, add this many new slots (rather
   than a single new slot)

   The following expression should be used to determine the initial allocation:

          n_slots_to_allocate = n_slots_needed + CONSTANT - mod (n_slots_needed, CONSTANT); */

dcl (mlsys_data_$mailbox_allocation,                        /* mailbox.messages */
     mlsys_data_$message_body_sections_allocation,          /* message.body_sections */
     mlsys_data_$message_redistributions_list_allocation,   /* message_redistributions_list.redistributions */
     mlsys_data_$message_user_fields_allocation,            /* message_user_fields_list.user_fields */
     mlsys_data_$message_references_list_allocation,        /* message_references_list.references */
     mlsys_data_$address_list_allocation)                   /* address_list.addresses */
          fixed binary external;


/* Static data user by the Multics mail system */

dcl (mlsys_data_$forum_not_available,                       /* 1 => forum isn't available on the system or in this ring */
     mlsys_data_$ism_not_available,                         /* 1 => no inter-system mailer on this system */
     mlsys_data_$domains_available)                         /* 1 =>  domain name system software on this sytem */
          fixed binary (1) external;

dcl (mlsys_data_$subsystem_ring,                            /* ring in which the mail system is secured */
     mlsys_data_$highest_usable_ring,                       /* highest ring of execution which may use the mail system */
     mlsys_data_$lowest_forum_ring)                         /* lowest ring of execution with access to forum */
          fixed binary (3) external;

dcl  mlsys_data_$temp_segment_list_ptr pointer external;    /* -> list of all mail system temporary segments */

dcl  mlsys_data_$valid_segments (0:4095) bit (1) unaligned external;
                                                            /* indicates which segments have been used by the mail system
                                                               for the allocation of user-visible data in order to
                                                               validate that pointers passed from the user-ring are OK */

dcl  mlsys_area area based (mlsys_data_$subsystem_area_ptr);/* area used for all user-visible allocations ... */
dcl  mlsys_data_$subsystem_area_ptr pointer external;       /* ... and the pointer on which it is based */

dcl  mlsys_data_$hash_tables_segment_ptr pointer external;  /* -> hash tables used by the mail system */

dcl  mlsys_data_$transmit_cache_ptr pointer external;       /* -> cache of recently used mailboxes for mlsys_transmit_ */

dcl  mlsys_data_$user_is_anonymous bit (1) aligned external;/* ON => the user is an anonymous user */

dcl  mlsys_data_$person_id character (24) varying external; /* the user's Person_id */
dcl  mlsys_data_$project_id character (12) varying external;/* the user's Project_id */
dcl  mlsys_data_$user_id character (32) varying external;   /* the user's User_id (Person_id.Project_id) */

/* END INCLUDE FILE ... mlsys_internal_data.incl.pl1 */
