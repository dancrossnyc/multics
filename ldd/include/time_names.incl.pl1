	/* START OF:	time_names_.incl.pl1	  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */

	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
	/*									*/
	/* Name:  time_names_.incl.pl1						*/
	/*									*/
	/* This include file defines the structure of values in the time_table_.  The table	*/
	/* includes a list of time zones known to the system, as well as lists of month names	*/
	/* and names of days of the week.  All names are expressed in several different languages */
	/* to facilitate transliteration of dates into these languages.  The table includes	*/
	/* the list of languages in which dates may be expressed.				*/
	/*									*/
	/* Status									*/
	/*									*/
	/* 0) Created  06/07/78:  J. Falksen						*/
	/* 1) Modified 07/04/78:  G. Dixon						*/
	/*									*/
	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */


dcl time_info_$version	char (8) ext static;	/* Version number of all structures in the	*/
						/* time_info_.  Currently = 1.		*/
dcl Vtime_info_2		char (8) int static options(constant) init("tinfo002");%skip(4);

dcl time_info_$gmt_zone_index fixed bin (17) ext static;
dcl time_info_$default_language_index fixed bin (17) ext static;

dcl time_info_$date_time_keywords fixed bin ext static;	/* Table of named date/time format strings	*/
dcl 1 ti_keyword	based (addr (time_info_$date_time_keywords)),
      2 number_kwd		fixed bin,		/* number of keywords present		*/
      2 pad		fixed bin,
      2 e (0 refer (ti_keyword.number_kwd)),
        3 name		char (32),
        3 str		char (128)var;
dcl (site_date	init (1),
     site_date_time init (2),
     site_time	init (3)
    )		fixed bin int static options (constant);

dcl time_info_$language_names fixed bin ext static;	/* Table of language names, in various languages	*/

dcl 1 ti_language	based (addr (time_info_$language_names)),
      2 number_lang		fixed bin,		/* number of language names present 		*/
      2 pad		fixed bin,
      2 name (0 refer (ti_language.number_lang), 0 refer (ti_language.number_lang))
			char(32) varying;		/* Name of the language.			*/
			/* All language names are expressed in all languages.  name(i,j) gives the	*/
			/*  jth language name in language i.  name(i,i) gives a language name in its	*/
			/*  own language.							*/%skip(4);
dcl time_info_$month_names   fixed bin ext static;	/* Table of month  names in various languages. 	*/

dcl 1 ti_month based (addr (time_info_$month_names)),
      2 number_lang		fixed bin,		/* number of languages in the table.		*/
      2 pad		fixed bin,
      2 e (0 refer (ti_month.number_lang), 12),
        3 short       	char(8) var,		/* short form of a month name, i.e., Nov 	*/
        3 long        	char(32) var;		/* long form of a month name, i.e. November 	*/%skip(4);
dcl time_info_$day_names     fixed bin ext static;	/* Table of day names in various languages.	*/

dcl 1 ti_day based (addr (time_info_$day_names)),
      2 number_lang		fixed bin,		/* number of languages in the table.		*/
      2 pad		fixed bin,
      2 e (0 refer (ti_day.number_lang), 7),
        3 short       	char(8) var,		/* short for of a day name, i.e. Sat 		*/
        3 long        	char(32) var;		/* long form of a day name, i.e. Saturday 	*/%skip(4);
dcl time_info_$offset_names  fixed bin ext static;	/* Table of offset names in various languages.	*/

dcl 1 ti_offset based (addr (time_info_$offset_names)),
      2 number_lang		fixed bin,		/* number of languages in the table.		*/
      2 number_offset	fixed bin,
      2 e (0 refer (ti_offset.number_lang), 0 refer (ti_offset.number_offset)),
        3 short        	char(32) var,		/* short form of an offset name, i.e. min 	*/
        3 plural        	char(32) var,		/* plural form of an offset name, i.e. minutes 	*/
        3 singular       	char(32) var,		/* singular for of an offset name, i.e. minute	*/
        3 this		char(32) var;		/* "this" which goes with singular		*/%skip(4);
dcl time_info_$word_names    fixed bin ext static;	/* Table of word names in various languages.	*/

dcl 1 ti_word based (addr (time_info_$word_names)),
      2 number_lang		fixed bin,		/* number of languages in the table.		*/
      2 number_word		fixed bin,
      2 short (0 refer (ti_word.number_lang), 0 refer (ti_word.number_word))
			char (8) var,
      2 word (0 refer (ti_word.number_lang), 0 refer (ti_word.number_word))
			char(32) var;		/* a "word", i.e. Midnight			*/

dcl time_info_$zone_names    fixed bin ext static;	/* Table of known time zones.			*/

dcl 1 ti_zone based (addr (time_info_$zone_names)),
      2 number_lang    	fixed bin,		/* number of languages in which zone names	*/
						/* are defined.				*/
      2 number_zone       	fixed bin,		/* number of zone names in the table.		*/
      2 e (0 refer (ti_zone.number_lang), 0 refer (ti_zone.number_zone)),
        3 short		char(4) var,		/* short form of the zone name.		*/
        3 long        	char(64) var,		/* long form of the zone name 		*/
        3 pad		fixed bin,
        3 delta		fixed bin(71);		/* offset, in microseconds, of this time zone	*/
						/* from GMT (Greenwich mean time).  This value	*/
						/* should be subtracted from a clock value	*/
						/* (which is expressed in GMT by definition).	*/
						/* to obtain a date/time expressed in the	*/
						/* named time zone.				*/
						/* NOTE:  zones are listed in order of descending */
						/* delta, from +11 to -12.  print_time_zones	*/
						/* requires this.				*/


dcl (tiw_FiscalIndicator init (11)
    )		fixed bin int static options (constant);

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* NOTE TO MAINTAINER: Before changing this file, see the comments in	       */
/*		        time_info_cds.incl.pl1		       */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

/* END OF:	time_names_.incl.pl1	  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
