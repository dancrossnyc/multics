/* BEGIN INCLUDE FILE gcos_ext_stat_.incl.pl1  */
/*
  Changes to gcos_ext_stat_ must be made here AND gcos_ext_stat_.cds
*/
/* July 77 (MRJ) Mike Jordan. */
/* Change: Mel Wilson Oct 1979 for gtss compatibility (Bell Canada). */
/* Change: A. N. Kepner, March, 1978 to allow courtesy call i/o  within cc routines. */
/* Change: Dave Ward 06/01/81 Reorganized to eliminate alm object (using cds). Use of like structures. */
/* Change: Scott C. Akers 01/26/82 Add tape_buffer_size for GEINOS processing. */
/* Change: Ron Barstad  83-08-02  Added activity_card_num for execution report */
/*                                Increased size of statistics for 4js3 MMEs  */

dcl  gcos_ext_stat_$abort_reason char(128) varying 	/* abort reason from gcos pgm */  ext;
dcl  gcos_ext_stat_$abort_return label	/* abort return point */  ext;
dcl  gcos_ext_stat_$activity_card_num pic "9999" ext;	/* card number defining current activity */
dcl  gcos_ext_stat_$activity_name char(8) 	/* name of activity to be run */  ext;
dcl  gcos_ext_stat_$activity_start_time fixed bin(71) 	/* TOD start of activity */  ext;
dcl  gcos_ext_stat_$card_num  pic "9999"	/* ordinal number of card in input stream */  ext;
dcl  gcos_ext_stat_$dbs       (36)bit(1)	/* Debugging switch. */  ext;
dcl  gcos_ext_stat_$default_nondollar char(2) 	/* filecode where nondollar cards go by default */  ext;
dcl  gcos_ext_stat_$dir_rings (3) fixed bin(3)	/* ring brackets for created catalogs */  ext;
dcl  gcos_ext_stat_$dpno      char(100) varying 	/* arguments for call to dpunch */  ext;
dcl  gcos_ext_stat_$dpo       char(100) varying 	/* arguments for call to dprint */  ext;
dcl  gcos_ext_stat_$endfc     char(2) 	/* endfc value for endcopy processing */  ext;
dcl  gcos_ext_stat_$er        ptr	/* fib pointer for *er */  ext;
dcl  gcos_ext_stat_$etc_filecode char(2) 	/* filecode where $ ETC cards should be written */  ext;
dcl  gcos_ext_stat_$gcos_slave_area_seg ptr	/* pointer to gcos slave area segment */  ext;
dcl  gcos_ext_stat_$gf        fixed bin(24)/* sw used by getfield rtn */  ext;
dcl  gcos_ext_stat_$incode    fixed bin(24)	/* switches to control incode processing */  ext;
dcl  gcos_ext_stat_$increment_hold fixed bin(24)	/* Holds increment for courtesy call returns. */  ext;
dcl  gcos_ext_stat_$initial_cpu_time fixed bin(71) 	/* vcu time at activity start */  ext;
dcl  gcos_ext_stat_$input_segment_path char(168) varying 	/* pathname of input segment */  ext;
dcl  gcos_ext_stat_$jcl_warnings fixed bin(24)	/* number warnings issued processing control cards */  ext;
dcl  gcos_ext_stat_$job_cpu_time fixed bin(71)	/* cpu usage at job start */  ext;
dcl  gcos_ext_stat_$job_id    char(18) varying 	/* unique job id for file naming */  ext;
dcl  gcos_ext_stat_$job_real_time fixed bin(71)	/* job start time in microseconds */  ext;
dcl  gcos_ext_stat_$last_mme  fixed bin(24)/* number of last mme executed */  ext;
dcl  gcos_ext_stat_$ldrss     fixed bin(24)	/* loader shared stg. */  ext;
dcl  gcos_ext_stat_$max_activities fixed bin(24)/* max activities in a job */  ext;
dcl  gcos_ext_stat_$max_mem   fixed bin(19) 	/* maximum memory available to an activity */  ext;
dcl  gcos_ext_stat_$mme_rtrn  label	/* where to return at activity end */  ext;
dcl  gcos_ext_stat_$nondollar char(2)	/* non-dollar card file code */  ext;
dcl  gcos_ext_stat_$nongcos   char(2) 	/* filecode where nongcos dollar cards go */  ext;
dcl  gcos_ext_stat_$normal_return label	/* nonlocal goto for normal termination */  ext;
dcl  gcos_ext_stat_$patchfile_ptr ptr	/* pointer to patchfile */  ext;
dcl  gcos_ext_stat_$pathname_prefix char(168)var ext;
dcl  gcos_ext_stat_$pch       ptr	/* pointer to fib for syspunch collector file */  ext;
dcl  gcos_ext_stat_$pdir      char(168) varying 	/* pathname of process directory */  ext;
dcl  gcos_ext_stat_$prt       ptr	/* pointer to fib for sysprint collector file */  ext;
dcl  gcos_ext_stat_$rs        ptr	/* pointer to fib for geload r* collector file */  ext;
dcl  gcos_ext_stat_$saveseg_ptr ptr 	/* pointer to save segment used by save/restart */  ext;
dcl  gcos_ext_stat_$save_dir  char(168) varying 	/* pathname of temp save directory */  ext;
dcl  gcos_ext_stat_$seg_rings (3) fixed bin(3)	/* ring brackets for created files */  ext;
dcl  gcos_ext_stat_$sig_ptr   ptr	/* saved pointer to signal_ */  ext;
dcl  gcos_ext_stat_$skip_umc  bit(1)  ext;
dcl  gcos_ext_stat_$snumb     bit (30) aligned 	/* snumb of the current job */  ext;
dcl  gcos_ext_stat_$sought_label char(8) 	/* Label from GOTO, IF, or WHEN card */  ext;
dcl  gcos_ext_stat_$statistics (3*44) fixed bin(24)	/* mme usage statistics- 3 per mme */  ext;
dcl  gcos_ext_stat_$stop_code fixed bin(24)	/* debugging, print results and stop. */  ext;
dcl  gcos_ext_stat_$storage_limit fixed bin(19) 	/* activity storage limit */  ext;
dcl  gcos_ext_stat_$sysout_limit fixed bin(35) 	/* sysout line limit */  ext;
dcl  gcos_ext_stat_$sysout_lines fixed bin(35)	/* sysout lines used */  ext;
dcl  gcos_ext_stat_$system_free_pointer ptr 	/* pointer to area for allocating in  ext; set by gcos */  ext;
dcl  gcos_ext_stat_$tape_buffer_size fixed bin(35) external static;	/* tape buffer size for GEINOS. */
dcl  gcos_ext_stat_$temp_dir  char(168) varying 	/* pathname of directory to hold temp files */  ext;
dcl  gcos_ext_stat_$temp_seg_ptr ptr ext;
dcl  gcos_ext_stat_$termination_code bit (18) 	/* termination code from gcos_mme_bort_ */  ext;
dcl  gcos_ext_stat_$time_limit fixed bin(71) 	/* activity time limit */  ext;
dcl  gcos_ext_stat_$userid    char(12) 	/* the USERID */  ext;
dcl  gcos_ext_stat_$validation_level fixed bin(3)	/* current ring of execution */  ext;

/*	Courtesy Call Queue
   A queue for courtesy call addresses which must be saved during
   execution of courtesy call routines. A courtesy call address is
   saved each time a MME GEROUT or MME GEINOS, which specifies a
   courtesy call, is executed within a courtesy call routine. Each
   time a MME GEENDC is executed a courtesy call address will be
   removed from this FIFO queue and the corresponding courtesy call
   routine executed until the queue is empty. The FIFO "queue" is
   implemented in a circular fashion. "next_avail" points to the
   next empty location in the queue. "next_out" points to the
   entry in the queue which has been in the queue longest. When
   entering or removing entries from the queue the appropriate index
   is incremented modulo the length of the queue. By convention the
   queue is empty when "next_avail" equals "next_out". A
   second convention is that the queue is considered to overflow
   during an attempt to add an entry to the queue which would force
   "next_avail" to "catch up" with "next_out". This means that
   the last empty position in the queue will never be used.
*/

dcl 1 gcos_ext_stat_$courtesy_call_control aligned ext
,     3 courtesy_call
,       4 hold             like save_machine_conditions	/* Mach. conds. restored on courtesy call returns. */
,       4 next_avail       fixed bin(24)		/* next available empty location in cc_queue. */
,       4 next_out         fixed bin(24)		/* next entry to remove from cc_queue. */
,       4 queue            (6) fixed bin(24)
;

%include gcos_save_mc;

dcl 1 gcos_ext_stat_$fct	aligned ext,
      3 fct		(40) like fct_entry;
%include gcos_fct_entry;

dcl 1 gcos_ext_stat_$save_data aligned ext,
      3 save_data like save_data_entry;
%include gcos_save_data_entry;

%include gcos_file_info_block_;

dcl 1 gcos_ext_stat_$mc like mc	/* machine condition from abort or fault */  ext;
%include mc;

dcl 1 gcos_ext_stat_$gcos_gtss	ext
,     3 gcos_gtss_ext
,       4 u_state_ptr ptr
,       4 snumb_index fixed bin(24)
,       4 home_path char(168)
;

/*   END INCLUDE FILE gcos_ext_stat_.incl.pl1 */
