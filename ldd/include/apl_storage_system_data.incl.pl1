/* ====== BEGIN INCLUDE SEGMENT	apl_storage_system_data.incl.pl1 ========================== */

/*
 * This include file contains a declaration of the data structure
 * kept in the "map segment" by the apl_storage_mngr_
 *
 * Written July 1973 by DAM
 * Modified Dec 1973 to change spelling of structure name from stroage to storage by PG
 */

	/* data in the map seg */

declare
    1 global_storage_system_data	aligned based (global_storage_system_data_pointer),
      2 seg_map_hash_table(0:88),			/* hash table for finding seg_list entry given pointer */
        3 seg_baseno bit(18) unaligned,			/* 0 if empty, or segment number */
        3 seg_list_idx fixed bin(17) unaligned,		/* 0 if empty, or index into seg_list for this seg */
      2 last_map unaligned pointer,			/* -> last seg_map in the storage_system_data segment */
      2 current_little_bead_seg fixed bin,		/* 0 or index in seg_list of little bead allocation seg. */
      2 current_big_bead_seg fixed bin,			/* 0 or index in seg_list of big bead allocation seg. */
      2 current_little_scan_pos fixed bin,		/* next map entry to scan in current_little_bead_seg */
      2 current_big_scan_pos fixed bin,			/* next map entry to scan in current_big_bead_seg */
      2 seg_list (30),				/* <--- one entry for each segment in use by storage mngr */
        3 words_free fixed bin(18),			/* total number of unallocated words in the segment */
        3 pointer unaligned pointer,			/* -> seg if usage = 1 or 2, else -> seg_map */
        3 usage fixed bin,				/* 0 = entry free, 1 = seg not currently in use,
						   2 = value_stack seg, 3 = little bead seg, 4 = big bead seg */

      2 metric,					/* METERING DATA, governed by ws_info.meter_mode */

        3 big_seg_balance,				/* meters for balancing of big-bead segs */
	4 count fixed bin,				/* number of times a balance occurred */
	4 thrown_away fixed bin,			/* number of times a bead had to be thrown away */
	4 amt_thrown_away fixed bin,			/* total number of words that had to be thrown away */
	4 time_spent_balancing fixed bin(71),		/* time spent balancing */
	4 space_left fixed bin(30),			/* sum of amounts space left in use by maps after balances */
        3 little_seg_balance,				/* same meters for balancing of little-bead segs */
	4 count fixed bin,
	4 thrown_away fixed bin,
	4 space_left fixed bin(30),
	4 amt_thrown_away fixed bin,
	4 time_spent_balancing fixed bin(71),
        3 get_next_value_stack_seg_calls fixed bin,	/* number of times new value stack seg was needed */
        3 copy_apl_value_calls fixed bin,		/* number of values copied */
        3 copy_apl_value_time fixed bin(71),		/* amount of time spent copying values */

        3 range(16),				/* alloc-free meters by size range */
	4 size fixed bin(18),			/* number of words have to be as big as to fit in range */
	4 free_count fixed bin,			/* number beads this size freed */
	4 map_free_count fixed bin,			/* number times freeing required search of map */
	4 free_time fixed bin(71),			/* amount of time spent freeing beads this size */
	4 words_freed fixed bin(24),			/* total number of words freed in beads this size */

	4 alloc_count fixed bin,			/* number beads this size allocated */
	4 alloc_end_count fixed bin,			/* number times allocated from end of segment */
	4 alloc_new_count fixed bin,			/* number times had to switch to a new segment */
	4 alloc_time fixed bin(71),			/* total time spent allocating */
	4 words_alloced fixed bin(24),		/* total number of words in beads alloc'ed this size */


      2 first_seg_map;				/* first seg_map is created at this address */


dcl 1 seg_map aligned based(seg_map_p),			/* there is one of these for each segment in APL heap-space */
      2 seg_ptr pointer unaligned,			/* -> base of segment */
      2 smallest_piece fixed bin(18),			/* minimum permissible size for a free bead */
      2 number_of_entries fixed bin,			/* size of map */
      2 last_entry_used fixed bin,			/* size of non-zero portion of map, used to speed up allocate */
      2 amount_of_seg_used fixed bin(18),		/* number of words in segment covered by the map */
      2 map (map_size refer (seg_map.number_of_entries)),	/* one entry per free bead, in binary tree form */
        3 size bit (18) unaligned,			/* 0 if not a free bead, else number of words in free bead */
        3 rel_loc bit (18) unaligned;			/* 0 if not a free bead, else position in segment of free bead */

/* pointers to above data */

dcl seg_map_p pointer;

/* ------ END INCLUDE SEGMENT		apl_storage_system_data.incl.pl1 -------------------------- */
