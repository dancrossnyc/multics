
/*        BEGIN include file "ncp_connection_dcls.incl.pl1" --                  */

/*             This include file contains declarations for the structures       */
/*        maintained by the NCP which contain information about Host-Host       */
/*        connections.  Currently, this is the information about sockets,       */
/*        hosts, and requests-for-connection.                                   */

/*        Originally created by D. M. Wells, Summer, 1975.                      */
/*	Modified by B. Greenberg, Spring '78 for new leader support */
/*	        Modified by C. Hornig, July 1979 for new host number format */

     declare
          1 socket aligned based,                           /* information we keep on a per-socket basis      */
             2 event_channel fixed binary (71),             /* event channel of using process                 */
             2 overseer_event_channel fixed binary (71),    /* event chanel of overseer process               */
             2 lock bit (36) aligned,                       /* lock to prevent simultaneous updating          */
             2 process_id bit (36) aligned,                 /* process id of using process                    */
             2 overseer_process_id bit (36) aligned,        /* process id of overseer process                 */
             2 bit_allocation fixed binary (32),            /* bit allocation outstanding on attached link    */
             2 msg_allocation fixed binary (16),            /* message allocation outstanding on link         */

             2 local_socket unaligned like socket.foreign_socket,     /* identification of local socket       */
             2 foreign_socket unaligned,                    /* identification of foreign socket               */
	      3 host,				/* id of this host				*/
	        4 net bit (8),			/* network id				*/
	        4 host bit (8),			/* port on imp				*/
	        4 imp bit (16),			/* imp id					*/
                3 socket_num bit (32),                      /* actual socket number                           */
                3 pad bit (8),

             2 rfc_queue fixed binary (17) unaligned,       /* RFC table index of next block for this         */
                                                            /* socket, 0 if queue is empty                    */
             2 link_number fixed binary (17) unaligned,     /* number of link assigned for connection         */

             2 host_entry_index fixed binary (17) unaligned,          /* index in host table of foreign       */
                                                                      /* host involved in connection          */
             2 impdim_index fixed binary (17) unaligned,    /* index by which IMPDIM knows about connection   */
             2 state bit (6) unaligned,                     /* finite-state-machine information               */
             2 byte_size bit (8) unaligned,                 /* byte-size of connections                       */
             2 send_gender bit (1) unaligned,               /* on iff this is a transmit socket               */
             2 allow_interrupts bit (1) unaligned,          /* on iff INS and INR should be signalled to user */
             2 deactivate bit (1) unaligned,                /* on iff this socket should be deactivated when  */
                                                            /* matching network messages are finally received */
             2 allow_rfc_queuing bit (1) unaligned,         /* on iff we should allow multiple outstanding    */
                                                            /* RFC's for this socket                          */
             2 extra_bits bit (12) unaligned,

             2 overseer_validation_level bit (3) unaligned,           /* ring of highest overseer control     */
             2 validation_level bit (3) unaligned,                    /* ring of highest operator control     */

             2 overseer_lock_id bit (36) aligned,           /* lock id of the overseer process                */
             2 umodes bit (36) aligned,                     /* 36 bits that the users can play with           */
             2 time_state_changed fixed binary (71),        /* time that the socket state last changed        */
             2 signal_event_channel fixed binary (71),      /* chanel to signal over when get INS or INR      */
             2 socket_index bit (36) aligned,               /* the handle we gave user for future reference   */
             2 history aligned,                             /* state of socket over recent past history       */
                3 num_state_changes fixed binary (11) unaligned,      /* small field, so only keep mod        */
                3 prev_state (0 : 3) fixed binary (5) unaligned;      /* past N states, kept in rotation      */

     declare
          1 host aligned based,                             /* information we retain about a foreign host     */
             2 lock bit (36) aligned,                       /* lock to prevent simultaneous updating          */
             2 rcv_link_index fixed binary (17) unaligned,  /* impdim index of read link for control msgs     */
             2 xmit_link_index fixed binary (17) unaligned, /* impdim index of write link for control msgs    */
             2 read_links_assigned bit (32) unaligned,      /* a bit is on iff we have assigned that link     */
             2 read_link_padd bit (4) unaligned,
	   2 xhost_number_pad bit (9) unaligned,
             2 host_state bit (6) unaligned,                /* stae of communications with this host          */
             2 previous_host_state bit (6) unaligned,       /* last state of this host                        */
             2 state_pad bit (15) unaligned,
             2 time_state_changed fixed binary (71),        /* time when host state last changed              */
             2 read_links_used bit (32) unaligned,          /* bit is on if link has been used "recently"     */
             2 read_link_used_pad bit (4) unaligned,
             2 num_connections fixed binary (17) unaligned, /* times we attached links for this host          */
             2 hash_index fixed binary (17) unaligned,      /* table index of this host entry                 */
	   2 host_number fixed bin (32) aligned,	/* host number of this host			*/
	   2 host_number_pad fixed bin (35);

     declare
          1 rcvd_rfc aligned based,                         /* info about a rcvd Request for Connection       */
             2 foreign_socket unaligned like socket.foreign_socket,   /* foreign socket in RFC msg            */
             2 foreign_hosts_choice fixed binary (17) unaligned,      /* link or size that other host chose   */
             2 next_entry fixed binary (17) unaligned,                /* next RFC entry in queue for socket   */
             2 padding (1) fixed binary (35);

     declare
	1 host_address based aligned,			/* Form of a host address			*/
	   2 net bit (8) unaligned,			/* Netwwork ID				*/
	   2 host bit (8) unaligned,			/* Host Port				*/
	   2 imp bit (16) unaligned;			/* IMP ID					*/
				/* Duplicated because of PL/I multi-like restriction */

/*        END of include file ncp_connection_dcls.incl.pl1                      */

