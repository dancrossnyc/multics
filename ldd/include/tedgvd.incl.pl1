/* BEGIN INCLUDE FILE ..... tedgvd.incl.pl1 ..... 06/29/82 J Falksen */

dcl (adr_op	init (01),	/* ( address processing	       */

    srepl_op	init (-1),	/* literal replace string	       */
    sself_op	init (-2),	/* "&" replace		       */
    sdup_op	init (-3),	/* "x\=" duplication	       */
    seval_op	init (-4),	/* "\g{}" processing	       */
    teval_op	init (-5),	/* evaluation test		       */
    tsrch_op	init (-6),	/* search test		       */
    tdone_op	init (-7)		/* test succeeds		       */
    )		fixed bin int static options (constant);

dcl comptr	ptr;
dcl 1 gvx		based (comptr),	/* compiled gv request	       */
      2 hdr,
        3 max_len	fixed bin (24),	/* max size available (words)	       */
        3 tot_len	fixed bin (24),	/* total size in use (words)	       */
        3 srch_len	fixed bin (24),	/* search size (words)	       */
        3 mk_list	fixed bin (24),	/* list of mk requests compiled      */
        3 printing	bit (1),		/* 1- contains "pP=lLtT"	       */
        3 ic	fixed bin,	/* instruction counter	       */
      2 word	(gvx.tot_len) fixed bin (35); /* compiled statement      */

dcl cfp		ptr;
dcl 1 cf		based (cfp),	/* compiled function	       */
      2 hdr,
        3 op	fixed bin,	/* operation		       */
        3 siz	fixed bin (24),	/* size of structure	       */
        3 len	fixed bin,	/* length of string		       */
      2 da	char (cf.len);	/* string data		       */

dcl 1 cfmk	based (cfp),	/* compiled mk		       */
      2 hdr	like cf.hdr,
      2 cb_r	bit (18) aligned,	/* offset of destination bcb	       */
      2 link	fixed bin;	/* link to next mk entry	       */

dcl 1 cfa		based (cfp),	/* compiled address		       */
      2 hdr	like cf.hdr,
      2 (ad1, ad2)	fixed bin (21);	/* 1st,2nd address values	       */

dcl 1 cft		based (cfp),	/* compiled test		       */
      2 hdr	like cf.hdr,
      2 (t, f)	fixed bin,	/* true/false next location offset   */
      2 cexpml	fixed bin,	/* max length of expr area	       */
      2 cexpl	fixed bin,	/* length set by tedsrch_$compile    */
      2 da	char (cft.len);	/* text of {}, compiled //	       */

dcl 1 cfx		based (cfp),	/* regexp / eval		       */
      2 hdr	like cf.hdr,
      2 cexpml	fixed bin,	/* max length of expr area	       */
      2 cexpl	fixed bin,	/* length set by tedsrch_$compile    */
      2 da	char (cft.len);	/* text of {}, compiled //	       */

/* END INCLUDE FILE ..... tedgvd.incl.pl1 ..... */
