/* BEGIN INCLUDE FILE ... hashst.incl.pl1 */
/* format: style4 */

/* General Utility hash table */

dcl  1 htable based (htp) aligned,			/* hash table entries of level 2 are statistical info */
       2 nb fixed bin,				/* number of buckets in hash table */
       2 ni fixed bin,				/* number of entries used */
       2 np fixed bin,				/* number of times hash_ called referincing this table */
       2 tnt fixed bin,				/* total # of tries to find, enter, or delete an entry */
       2 id char (4),				/* ht01 version 1 of hash_ */
       2 gnt fixed bin,				/* greatest number of tries for search etc. */
       2 loht fixed bin (18) unsigned,			/* length of hash table in words */
       2 pad bit (36) aligned,			/* padding */
       2 buckets (1:hash_table_size_ refer (htable.nb)),	/* 26111=((1024*255)/10 words per entry)-1 (8-word header) */
         3 name char (32) unaligned,			/* identifier of entry */
         3 value bit (36) aligned,			/* value corresponding to name */
         3 flags aligned,
	 4 ds bit (1) unal,				/* deleted switch="1"b if deleted */
	 4 empty bit (1) unal,
	 4 pad bit (34) unal,			/* empty switch="1"b if empty */
      2 end_of_table bit (0) aligned;			/* to get address */

declare  MAX_HT_BUCKETS_IN_SEG fixed bin init (26111) int static options (constant);
declare  hash_table_size_ fixed bin;

/* END INCLUDE FILE ... hashst.incl.pl1 */
