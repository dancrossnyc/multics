/*	Begin  include file ... mca_data.incl.pl1
   *
   *	Created on 09/14/84 by Paul Farley.
   *      Modified by R. A. Fawcett 10/25/84
*/

/****^  HISTORY COMMENTS:
  1) change(85-09-11,Fawcett), approve(85-09-11,MCR6979),
     audit(86-01-17,CLJones), install(86-03-21,MR12.0-1033):
     Created for MCA
     support
  2) change(86-08-19,Fawcett), approve(86-08-19,MCR7374),
     audit(86-08-26,Lippard), install(86-09-16,MR12.0-1159):
     Fix problems found in audit of the Online manager code.
                                                   END HISTORY COMMENTS */

dcl  MCA_data_version_1 char (8) int static options
	(constant) init ("MCA00001");

dcl  mca_data_seg_ptr ptr static init (null ());

dcl  mcad_ptr ptr;

dcl  ipcd_ptr ptr;

dcl  1 mca_data_seg based (mca_data_seg_ptr),
       2 version char (8),
       2 array (1:4) like mcad;


dcl  1 mcad based (mcad_ptr) aligned,
       2 lock bit (36),				/* The mca write lock. */
       2 state fixed bin,				/* Current mca state */
       2 attach_time fixed bin (71),			/* DT/time of attach */
       2 attach_pid bit (36),				/* PID of attaching process */
       2 name char (1),				/* name of this mca (a b c d) */
       2 imu_number fixed bin (17),			/* number of the IMU */
       2 ioi_idx fixed bin,				/* value to use with ioi_ */
       2 event_chn fixed bin (71),			/* ipc channel for IO processing ring_1 */
       2 ioi_wks_ptr ptr,				/* pointer to IOI Workspace */
       2 max_ws_size fixed bin (19),
       2 pad fixed bin,
       2 user_ptr ptr,				/* used for async_io */
       2 return_data_ptr ptr,				/* user for async_io */
       2 io_param_ptr ptr,				/* pointer to the io_parameter_block for mca returned data */
       2 entry_to_return_data entry (ptr, fixed bin (21), fixed bin (35)),
						/* entry that will return the data to the user for async_io */
       2 status_offset fixed bin,			/* offset into work space for status */
       2 current_ws_size fixed bin (18),		/* current work_space */
       2 rcp_id bit (36),
       2 flags unaligned,
         3 async_io bit (1),				/* 1 = outer ring will catch IO events */
						/* 0 = ring 1 will go blocked and wait for IO to complete */
         3 config_data_requested bit (1),		/* used during mca attachment */
         3 pad bit (34),
       2 max_time_out fixed bin (71),			/* maximum time for time out */
       2 last_status bit (71),			/* most recent MCA status return */

       2 ipcd_array (0:15) like ipcd aligned;

dcl  1 ipcd based (ipcd_ptr) aligned,
       2 ipc_name char (8),				/* "ipcXX" */
       2 channel fixed bin (17) unaligned,		/* base channel */
       2 nchan fixed bin (17) unaligned,		/* number of channels */
       2 type_info,					/* type of IPC */
         3 no_level_2_info bit (1) unaligned,
         3 is_micro_cont bit (1) unaligned,
         3 fbus_disable_latch bit (1) unaligned,
         3 pad bit (6) unaligned,
         3 type_index fixed bin (8) unaligned,
       2 state fixed bin (17) unaligned,		/* current state */
       2 level_1_state fixed bin (17),			/* LVL-1_STATE  */
       2 prph_attachments fixed bin (17),		/* # of RCP attachments */
       2 attach_data (8),
         3 prph_name char (4),			/* Multics prph name */
         3 flags unaligned,
	 4 attached_thru_rcp bit (1),			/* must detach when done */
	 4 io_suspended bit (1),			/* must resume IO when done */
	 4 pad (34) bit (1),
         3 attach_time fixed bin (71),			/* DT/time of attach */
         3 ipc_rcp_id bit (36),			/* rcp id */
         3 ipc_ioi_idx fixed bin;			/* index from rcp */

dcl  SYSTEM_DIR char (17) init (">system_library_1") static options (constant);
dcl  DATA_SEG char (12) init ("mca_data_seg") static options (constant);


dcl  (MCA_NOT_CONFIGURED init (0),			/* possible mcad.state values */
     MCA_FREE init (1),
     MCA_ATTACHING init (2),
     MCA_ATTACHED init (3),
     MAINT_SESSION init (10)) fixed bin internal static options (constant);

dcl  (IPC_NOT_CONFIGURED init (0),			/* possible ipcd.state values */
     IPC_FREE init (1),
     IPC_ATTACHED init (2)) fixed bin internal static options (constant);

/*	End of include file ... mca_data.incl.pl1	*/
