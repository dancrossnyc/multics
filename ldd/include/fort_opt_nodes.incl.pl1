/* BEGIN fort_opt_nodes.incl.pl1 */

/* Created:	22 November 1977 by Richard A. Barnes for the optimizing Fortran compiler */

/* Modified:	09 October 1978 by Paul E. Smee for larger common and arrays.
   Modified:	2 June 1979 by RAB to speed up intersection of optimizer
		machine states by adding operator.coordinate and
		flow_unit.is_active_operator
   Modified:	28 June 1979 by RAB to speed up compute_busy_on_exit by
		adding flow_unit.dim_or_alias_or_not_set.
   Modified:	02 July 1979 by RAB to fix 218 by moving loop_end_chain stuff
		to flow_unit node from loop node.
   Modified:	14 August 1979 by RAB to change flow_unit.dim_or_alias_or_not_set
		to flow_unit.always_completely_set.
   Modified:	17 September 1979 by RAB in preparation for register optimizer.
   Modified:	20 September 1979 by RAB for index_value_analysis of register optimizer.
   Modified:	03 November 1979 by RAB for flow_unit.refreshed for register optimizer.
   Modified:	30 November 1979 by RAB to add more info to the loop node
		for the register optimizer.
   Modified:	18 December 1979 by RAB to make remainder of register
		optimizer changes.
   Modified:	17 December 1980 by CRD to add opt_statement.removable.
*/

	/* CHAIN (2 words) */

dcl	1 chain			based aligned,
	2 next			pointer unaligned,
	2 value			pointer unaligned;

	/* EDGE (6 words) */

dcl	1 edge			based aligned,
	2 from			structure,
	  3 value			ptr unal,
	  3 next			ptr unal,
	  3 back			ptr unal,
	2 to			structure,
	  3 value			ptr unal,
	  3 next			ptr unal,
	  3 back 			ptr unal;


	/* FLOW_UNIT (22 words) */

dcl	1 flow_unit		based aligned,
	2 next			ptr unal,
	2 back			ptr unal,
	2 successors		ptr unal,
	2 predecessors		ptr unal,
	2 dominator		ptr unal,
	2 loop			ptr unal,
	2 next_in_loop		ptr unal,
	2 loop_end_chain		ptr unal,
	2 position		fixed bin(17) aligned,
	2 number			fixed bin(17) unal,
	2 n_in_loop_end		fixed bin(17) unal,
	2 level_number		fixed bin(17) aligned,
	2 first_statement		fixed bin (18) unsigned unal,
	2 last_statement		fixed bin (18) unsigned unal,
	2 insert_statement		fixed bin (18) unsigned unal,
	2 insert_operator		fixed bin (18) unsigned unal,
	2 info			structure unal,
	  3 processed		bit(1),
	  3 loop_entry		bit(1),
	  3 falls_through		bit(1),
	  3 has_label		bit(1),
	  3 entry_pt		bit(1),
	  3 in_queue		bit(1),
	  3 is_back_target		bit(1),
	  3 has_side_effects	bit(1),
	  3 removed		bit(1),
	  3 refreshed		bit(1),
	  3 pad			bit(26),
	2 used			ptr unal,
	2 set			ptr unal,
	2 busy_on_entry		ptr unal,
	2 set_multiple		ptr unal,
	2 busy_on_exit		ptr unal,
	2 dominated_by		ptr unal,
	2 is_active_operator	ptr unal,
	2 always_completely_set	ptr unal;


	/* INPUT_TO (3 words) */

dcl	1 input_to		based aligned,
	2 next			pointer unaligned,
	2 operator		pointer unaligned,
	2 which			fixed bin aligned;

	/* LCHAIN (2 words) */

dcl	1 lchain			based aligned,
	2 next			pointer unaligned,
	2 value			fixed bin(18) aligned;

	/* LOOP (33 words) */

dcl	1 loop			based aligned,
	2 number			fixed bin(18),
	2 depth			fixed bin(18),
	2 father			pointer unaligned,
	2 brother			pointer unaligned,
	2 prev_brother		pointer unaligned,
	2 son			pointer unaligned,
	2 last_son		pointer unaligned,
	2 entry_unit		pointer unaligned,
	2 members			pointer unaligned,
	2 back_target		pointer unaligned,
	2 exits			pointer unaligned,
	2 first_unit		pointer unaligned,
	2 last_unit		pointer unaligned,
	2 is_member		pointer unaligned,
	2 is_exit			pointer unaligned,
	2 articulation_blocks	pointer unaligned,
	2 used			pointer unaligned,
	2 set			pointer unaligned,
	2 busy_on_exit		pointer unaligned,
	2 set_multiple		pointer unaligned,
	2 ancestors_and_me		pointer unaligned,
	2 bits			structure unaligned,
	  3 has_side_effects	bit(1),
	  3 erases		structure unaligned,
	    4 xr(0:7)		bit(1),
	    4 pr(6)		bit(1),
	  3 avoid_pr(6)		bit(1),
	  3 all_xrs_globally_assigned	bit(1),
	  3 pad			bit(14),
	2 induction_var		pointer unaligned,
	2 may_keep_in_xr		pointer unaligned,
	2 computed		pointer unaligned,
	2 xregs_used		fixed bin(4),
	2 pregs_used		fixed bin(4),
	2 global_xr_items		pointer unaligned,
	2 global_pr_items		pointer unaligned,
	2 range_list		pointer unaligned,
	2 msp			pointer unaligned,
	2 eligible_ind_var_op_var	pointer unaligned,
	2 left_shift_chain		pointer unaligned;

	/* OPERATOR */

dcl	1 operator		based aligned,

	/* WORD 1 */

	  2 op_code		fixed bin(8) unal,
	  2 assigns_constant_to_symbol bit(1) unal,
	  2 freed			bit(1) unal,
	  2 number		fixed bin(7) unsigned unal,
	  2 coordinate		fixed bin(18) unsigned unal,

	/* WORD 2 */

	  2 next			fixed bin(18) unsigned unal,
	  2 back			fixed bin(18) unsigned unal,

	/* WORD 3 */

	  2 primary		pointer unal,

	/* WORD 4 */

	  2 output		fixed bin(18) aligned,

	/* WORDS 5 - n */

	  2 operand(n_operands refer (operator.number))	fixed bin (18) aligned;

dcl	n_operands		fixed bin;


	/* OPT_STATEMENT */

dcl	1 opt_statement		based aligned structure,

	/* WORD 1 */

	  2 op_code		fixed bin(8) unal,	/* must be stat_op */
	  2 number		fixed bin(8) unal,	/* must be 0 */
	  2 label 		fixed bin (18) unsigned unal,

	/* WORD 2 */

	  2 first_operator 		fixed bin (18) unsigned unal,
	  2 prev_operator		fixed bin (18) unsigned unal,

	/* WORD 3 */

	  2 next			bit(18) unal,	/* "0"b = no next statement */
	  2 back			bit(18) unal,	/* "0"b = no prev statement */

	/* WORD 4 */

	  2 source_id		structure unaligned,
	    3 file		fixed bin (8) unsigned,	/* 0 = first file */
	    3 line		bit(14),
	    3 statement		bit(5),	/* 1 = first statement */

	  2 length		bit(9) unaligned,

	/* WORD 5 */

	  2 bits			structure unaligned,
	    3 put_in_map		bit(1),
	    3 put_in_profile	bit(1),
	    3 processed_by_converter	bit(1),
	    3 referenced_backwards	bit(1),
	    3 referenced_by_assign	bit(1),
	    3 has_operator_list	bit(1),
	    3 moved		bit(1),
	    3 removable		bit(1),
	    3 pad			bit(1),

	  2 start			fixed bin(26) unaligned,

	/* WORD 6 */

	  2 location		bit(18) unaligned,	/* (18)"1"b = no code */
	  2 machine_state		fixed bin (18) unsigned unaligned,

	/* WORD 7 */

	  2 flow_unit		pointer unaligned,

	/* WORD 8 */

	  2 operator_list		pointer unaligned;


	/* PRIMARY (4 words) */

dcl	1 primary			based aligned,
	2 next			pointer unaligned,
	2 last			pointer unaligned,
	2 data			structure aligned,
	  3 expression		pointer unaligned,
	  3 flow_unit		pointer unaligned;

	/* RANGE (3 words) */

dcl	1 range			based aligned,
	2 next			pointer unaligned,
	2 variable		pointer unaligned,
	2 bits			structure unaligned,
	  3 range_bits		structure unaligned,
	    4 fb17		bit(1),
	    4 fb18_uns		bit(1),
	  3 mbz			bit(34);


/* END fort_opt_nodes.incl.pl1 */
