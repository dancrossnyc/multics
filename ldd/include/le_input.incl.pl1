/****  START OF:	le_input.incl.pl1			 *  *  *  *  *  */

  /****^  HISTORY COMMENTS:
  1) change(86-08-12,Elhard), approve(86-08-12,MCR7505),
     audit(86-12-10,DGHowe), install(86-12-10,MR12.0-1241):
     Orignally written to define the le_ input structures.
                                                   END HISTORY COMMENTS */

  /*** ****************************************************************/
  /***							*/
  /***	Name:	le_input					*/
  /***	Function:	This include file declares the input structure to	*/
  /***		to the le_ subroutine.  The structure consists of	*/
  /***		a set of standard data, and a variable length	*/
  /***		array of options.  The options have a type field	*/
  /***		which specified what the option means.  The	*/
  /***		options can have the following types:		*/
  /***							*/
  /***		PATH	  - specified a single input component	*/
  /***			    to be bound in with the object	*/
  /***		 name	  - is the name of the component	*/
  /***		 path_or_ep - is the pathname to the component	*/
  /***			    this may be an archive component	*/
  /***			    pathname.			*/
  /***		 flags      - link is used by the le command to	*/
  /***			    keep track of the pathnames that	*/
  /***			    were found via links for chase	*/
  /***			    processing.			*/
  /***		 bc	  - is the bit count of the component	*/
  /***		 optp	  - is a pointer to the component	*/
  /***							*/
  /***		LIBRARY	  - specifies a single library	*/
  /***			    component.  Library components are	*/
  /***			    only included if they are referred	*/
  /***			    to by a PATH component or a library	*/
  /***			    component that is referenced and	*/
  /***			    therefor included.		*/
  /***		 name	  - same as for PATH.		*/
  /***		 path_or_ep - same as for PATH.		*/
  /***		 flags	  - same as for PATH.		*/
  /***		 bc	  - same as for PATH.		*/
  /***		 optp	  - same as for PATH.		*/
  /***							*/
  /***		ADDNAME	  - specifies a name to be added to the	*/
  /***			    bound object.			*/
  /***		 name	  - is the name to be added to the	*/
  /***			    bound unit			*/
  /***							*/
  /***		SYNONYM	  - specifies a synonym to be added to	*/
  /***			    a particular component.  This is	*/
  /***			    reflected as a segname definition	*/
  /***			    added to the block for that	*/
  /***			    component.			*/
  /***		 name	  - specifies the name of the component	*/
  /***			    to which you are adding a name.	*/
  /***		 path_or_ep - is the name being added		*/
  /***							*/
  /***		RETAIN	  - gives a starname to be used when	*/
  /***			    determining if a definition should	*/
  /***			    be retained.  If the definition	*/
  /***			    matches the starname and no more	*/
  /***			    specific info is given, the name is	*/
  /***			    retained.			*/
  /***		 flags      - the "inhibit_error" flag indicates	*/
  /***			    that it is not an error if this	*/
  /***			    option is unused.		*/
  /***		 path_or_ep - is the starname to match		*/
  /***							*/
  /***		DELETE	  - gives a starname to be used when	*/
  /***			    determining if a definition should	*/
  /***			    be retained.  If the definition	*/
  /***			    matches the starname and no more	*/
  /***			    specific info is given, the name is	*/
  /***			    deleted.			*/
  /***		 flags      - the "inhibit_error" flag indicates	*/
  /***			    that it is not an error if this	*/
  /***			    option is unused.		*/
  /***		 path_or_ep - is the starname to match.		*/
  /***							*/
  /***		NO_LINK	  - gives a starname to be used when	*/
  /***			    determining if a definition should	*/
  /***			    be retained.  If the definition	*/
  /***			    matches the starname and no more	*/
  /***			    specific info is given, the name is	*/
  /***			    retained and references to the	*/
  /***			    definition within the bound uni	*/
  /***			    are not resolved but are generated	*/
  /***			    as external links.		*/
  /***		 flags      - the "inhibit_error" flag indicates	*/
  /***			    that it is not an error if this	*/
  /***			    option is unused.		*/
  /***		 path_or_ep - is the starname to match		*/
  /***							*/
  /***		TABLE	  - specifies that the table for a	*/
  /***			    particular component is to be	*/
  /***			    retained.			*/
  /***		 name	  - is the name of the component to	*/
  /***			    which the option applies.  If name	*/
  /***			    is "", this is a global option and	*/
  /***			    applies to all component for which	*/
  /***			    a specific option does not exist.	*/
  /***							*/
  /***		NO_TABLE	  - specifies that the table for a	*/
  /***			    particular component is to be	*/
  /***			    deleted.			*/
  /***		 name	  - is the name of the component to	*/
  /***			    which the option applies.  If name	*/
  /***			    is "", this is a global option and	*/
  /***			    applies to all component for which	*/
  /***			    a specific option does not exist.	*/
  /***							*/
  /*** ****************************************************************/
  
  dcl 01 le_input		aligned based,
       02 header		aligned,
        03 version		char (8),
        03 name		char (32),
        03 flags		aligned,
         04 perprocess_static	bit (1) unaligned,
         04 force		bit (1) unaligned,
         04 debug		bit (1) unaligned,
         04 list		bit (1) unaligned,
         04 map		bit (1) unaligned,
         04 auto_segnames	bit (1) unaligned,
         04 mbz		bit (30) unaligned,
        03 output_file	unaligned,
         04 dir		char (168),
         04 entry		char (32),
        03 component_size	fixed bin,
        03 display_severity	fixed bin,
        03 abort_severity	fixed bin,
        03 bindfile		aligned,
         04 name		char (32),
         04 dt_updated	fixed bin (71),
         04 dt_modified	fixed bin (71),
        03 pad		bit (36),
        03 n_opts		fixed bin,
       02 opt		dim (0 refer (le_input.n_opts)) like le_option;
  
  dcl 01 le_option		aligned based,
       02 name		char (32) unaligned,
       02 path_or_ep	char (194) unaligned,
       02 flags		unaligned,
        03 link		bit (1),
        03 ignore		bit (1),
        03 used		bit (1),
        03 inhibit_error	bit (1),
        03 mbz		bit (5),
       02 type		fixed bin (8) unaligned,
       02 bc		fixed bin (24),
       02 optp		ptr;
  
  dcl le_input_version_1	char (8) static options (constant)
			init ("le_ 1.0 ");
  
  /* constants for the defined option types */
  
  dcl PATH		fixed bin static options (constant) init (1);
  dcl LIBRARY		fixed bin static options (constant) init (2);
  dcl ADDNAME		fixed bin static options (constant) init (3);
  dcl SYNONYM		fixed bin static options (constant) init (4);
  dcl RETAIN		fixed bin static options (constant) init (5);
  dcl DELETE		fixed bin static options (constant) init (6);
  dcl NO_LINK		fixed bin static options (constant) init (7);
  dcl TABLE		fixed bin static options (constant) init (8);
  dcl NO_TABLE		fixed bin static options (constant) init (9);
  
/****  END OF:	le_input.incl.pl1			 *  *  *  *  *  */
