/* ====== BEGIN INCLUDE SEGMENT	apl_push_stack_fcn.incl.pl1 =============================== */

/* format: style3 */
apl_push_stack_:
     procedure (P_n_words) returns (ptr);

/* Function to (1) double-word align ws_info.value_stack_ptr, and
   (2) make sure allocation request will fit on current value stack.

   Written 770413 by PG
   Modified 780210 by PG to round allocations up to an even number of words.
*/

/* parameters */

declare	P_n_words		fixed bin (19) parameter;

/* automatic */

declare	block_ptr		ptr,
	num_words		fixed bin (19);

/* builtins */

declare	(addrel, binary, rel, substr, unspec)
			builtin;

/* entries */

declare	apl_get_value_stack_
			entry (fixed bin (19));

/* program */

	num_words = P_n_words;

	if substr (unspec (num_words), 36, 1) = "1"b	/* num_words odd */
	then num_words = num_words + 1;

	if binary (rel (ws_info.value_stack_ptr), 18) + num_words > ws_info.maximum_value_stack_size
	then call apl_get_value_stack_ (num_words);

	block_ptr = ws_info.value_stack_ptr;
	ws_info.value_stack_ptr = addrel (ws_info.value_stack_ptr, num_words);
	return (block_ptr);

     end apl_push_stack_;

/* ------ END INCLUDE SEGMENT		apl_push_stack_fcn.incl.pl1 ------------------------------- */
