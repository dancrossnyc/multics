/* BEGIN INCLUDE FILE ... pl1_macro_token_procs.incl.pl1 */
make_token:
     procedure;

/* Make a Token.    Conventions:
	token_type	set to the correct type
	token_start	set to index of first character of token
	source_index	set to index of first character after token */

	token_length = source_index - token_start;

	if token_type = identifier & token_length > max_identifier_length
	then call print_error (2, "Identifier too long.", token_start);

	tokenx = tokenx + 1;
	if tokenx >= replacement_token_index
	then call print_error (4, "Too many tokens.", token_start);

	token (tokenx).type = token_type;
	token (tokenx).string_size = token_length;
	token (tokenx).string_ptr, token_ptr = addr (source_string_array (token_start));
	token (tokenx).created = "0"b;
	token (tokenx).pct_type = pct_type;
	token (tokenx).replace_by = none;

     end make_token;

make_replacement_token:
     procedure (alias_index);

	declare alias_index		 fixed binary;	/* INPUT: index of token to be copied */

	tokenx = tokenx + 1;
	if tokenx >= replacement_token_index
	then call print_error (4, "Too many tokens.", token_start);

	token (tokenx) = token (alias_index);
	if token (tokenx).replace_by = alias_index
	then token (tokenx).replace_by = none;

     end make_replacement_token;
/* END INCLUDE FILE pl1_macro_token_procs.incl.pl1 */