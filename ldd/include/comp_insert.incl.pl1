/* BEGIN INSERT FILE ... comp_insert.incl.pl1  */

/* format: style2,ind2,ll79,dclind4,idind15,comcol41,linecom */

     dcl 1 insert_data  aligned based (const.insert_data_ptr),
	 2 count	    fixed bin,	/* count of allocated data blocks */
	 2 index	    fixed bin,	/* the current block */
	 2 ptr	    (1000) ptr,	/* insert file data block pointers */
	 2 ref_area,		/* ref name string area data */
	   3 count    fixed bin,	/* count of allocated areas */
	   3 ptr	    (100) ptr;	/* area pointers */
				/* insert call stack */
     dcl 1 call_stack   aligned based (const.call_stk_ptr),
	 2 count	    fixed bin,	/* count of allocated boxes */
	 2 index	    fixed bin,	/* current stack index */
	 2 ptr	    (0:50) ptr;	/* stack entry ptrs */
     dcl call_box_ptr   ptr;
     dcl 1 call_box	    aligned like insert.file based (call_box_ptr);
     dcl 1 call_box0    aligned like insert.file based (call_stack.ptr (0));

     dcl 1 insert_refs  aligned based,	/* ref names structure */
	 2 count	    fixed bin,	/* count of names in area */
	 2 index	    (60) fixed bin, /* insert_data index values */
	 2 name	    (60) char (32) unal;
				/* the ref names */

     dcl refname_str    char (refstr_len) based (refstr_ptr);
				/* for searching */
     dcl refstr_len	    fixed bin;	/* length of refname search string */
     dcl refstr_ptr	    ptr;		/* refname string pointer */
				/* data for an insert file */
     dcl 1 insert	    aligned based (shared.insert_ptr),
	 2 file,			/* also used for source files */
	   3 charcount
		    fixed bin (21), /* segment character count */
	   3 comp_no  fixed bin,	/* msf component number */
	   3 dir	    char (168),	/* containing dir */
	   3 entryname
		    char (32),	/* primary entryname */
	   3 exit_lineno
		    fixed bin (35), /* line number of .ifi */
	   3 fcb_ptr  ptr,		/* FCB pointer for msf manager */
	   3 info	    like text_entry.info,
	   3 insert_ptr		/* self pointer - needed when */
		    ptr,		/* struc is in the call stack */
				/*	   3 ntext    fixed bin (21), /* character count of text line */
	   3 path	    char (200) var, /* complete pathname */
	   3 pointer  ptr,		/* segment pointer */
	   3 posn	    fixed bin (21), /* input character position */
	   3 refname  char (200) var, /* for source files only */
	 2 callers_name
		    char (100),	/* refname of calling file */
	 2 dtcm	    bit (36),	/* fs date-time-modified */
	 2 refndx	    fixed bin,	/* CURRENT refname index for file */
	 2 thrb	    fixed bin unsigned,
				/* backward thread index in insert stack */
	 2 label,			/* label data per insert level */
	   3 count    fixed bin,
	   3 line	    (250) fixed bin unsigned,
	   3 position (250) fixed bin (21),
	   3 value    (250) char (32);

/* empty file data structure */
     dcl 1 init_file_data
		    static options (constant),
	 2 charcount  fixed bin (21) init (0),
				/* segment character count */
	 2 comp_no    fixed bin init (0),
				/* msf component number */
	 2 dir	    char (168) init (""),
				/* containing dir */
	 2 entryname  char (32) init (""),
				/* primary entryname */
	 2 exit_lineno
		    fixed bin (35) init (0),
				/* line number of .ifi */
	 2 fcb_ptr    ptr init (null),/* FCB pointer for msf manager */
	 2 info,			/* stuff created during line input */
	   3 fileno		/* input file index */
		    fixed bin init (0),
	   3 lineno		/* input file line number */
		    fixed bin init (0),
	   3 lineno0		/* call_box0 line number */
		    fixed bin init (0),
	 2 insert_ptr ptr init (null),/* self pointer - needed when */
				/* struc is in the call stack */
				/*	 2 ntext	    fixed bin (21) init (0),
/*				/* character count of text line */
	 2 path	    char (200) var init (""),
				/* complete pathname */
	 2 pointer    ptr init (null),/* segment pointer */
	 2 posn	    fixed bin (21) init (1),
				/* input character position */
	 2 refname    char (200) var init ("");
				/* for source files only */

/*	END INSERT FILE ... comp_insert.incl.pl1		*/
