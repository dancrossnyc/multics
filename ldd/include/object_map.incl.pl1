/* BEGIN INCLUDE FILE ... object_map.incl.pl1 */
/* coded February 8, 1972 by Michael J. Spier */
/* Last modified on 05/20/72 at 13:29:38 by R F Mabee. */
/* Made to agree with Spier's document on 20 May 1972 by R F Mabee. */
/* modified on 6 May 1972 by R F Mabee to add map_ptr at end of object map. */
/* modified May, 1972 by M. Weaver */
/* modified 5/75 by E. Wiatrowski and 6/75 by M. Weaver */
/* modified 5/77 by M. Weaver to add perprocess_static bit */

 declare	1 object_map aligned based,		/* Structure describing standard object map */

	  2 decl_vers fixed bin,		/* Version number of current structure format */
	  2 identifier char (8) aligned,	/* Must be the constant "obj_map" */
	  2 text_offset bit (18) unaligned,	/* Offset relative to base of object segment of base of text section */
	  2 text_length bit (18) unaligned,	/* Length in words of text section */
	  2 definition_offset bit (18) unaligned, /* Offset relative to base of object seg of base of definition section */
	  2 definition_length bit (18) unaligned, /* Length in words of definition section */
	  2 linkage_offset bit (18) unaligned,	/* Offset relative to base of object seg of base of linkage section */
	  2 linkage_length bit (18) unaligned,	/* Length in words of linkage section */
	  2 static_offset bit (18) unaligned,   /* Offset relative to base of obj seg of static section */
	  2 static_length bit (18) unaligned,   /* Length in words of static section */
	  2 symbol_offset bit (18) unaligned,	/* Offset relative to base of object seg of base of symbol section */
	  2 symbol_length bit (18) unaligned,	/* Length in words of symbol section */
	  2 break_map_offset bit (18) unaligned, /* Offset relative to base of object seg of base of break map */
	  2 break_map_length bit (18) unaligned, /* Length in words of break map */
	  2 entry_bound bit (18) unaligned,	/* Offset in text of last gate entry */
	  2 text_link_offset bit (18) unaligned, /* Offset of first text-embedded link */
	  2 format aligned,			/* Word containing bit flags about object type */
	    3 bound bit (1) unaligned,	/* On if segment is bound */
	    3 relocatable bit (1) unaligned,	/* On if segment has relocation info in its first symbol block */
	    3 procedure bit (1) unaligned,	/* On if segment is an executable object program */
	    3 standard bit (1) unaligned,	/* On if segment is in standard format (more than just standard map) */
	    3 separate_static bit(1) unaligned, /* On if static is a separate section from linkage */
	    3 links_in_text bit (1) unaligned,	/* On if there are text-embedded links */
	    3 perprocess_static bit (1) unaligned, /* On if static is not to be per run unit */
	    3 unused bit (29) unaligned;        /* Reserved */

declare	map_ptr bit(18) aligned based;	/* Last word of the segment. It points to the base of the object map. */

declare	object_map_version_2 fixed bin static init(2);

/* END INCLUDE FILE ... object_map.incl.pl1 */
