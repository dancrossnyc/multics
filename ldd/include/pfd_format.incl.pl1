/* BEGIN INCLUDE FILE ... pfd_format.incl.pl1 */
/* Written June, 1979 by D. Spector.
   Modified 12-Sep-79 by M. N. Davidoff to pack msf_ptr_template, add source_path array and null_msf_ptr. */

/*   Format of profile data (pfd) files:
	1. Fixed-length header.
	2. Linked list of fixed-length data for each program.
	3. For each program, variable-length array of those instructions which call operators.
	4. For each program, variable-length array of per-statement profile data values. */

     dcl	   pfd_format_version_1   fixed bin int static options (constant) init (1);

/*   Fixed-length header at start of profile data file */

     dcl	   1 pfd_header	      aligned based (pfd_ptr),
	     2 version	      fixed bin,		/* See pfd format version above */
	     2 mbz	      bit (36),		/* Unused */
	     2 date_time_stored   fixed bin (71),
	     2 person_project     char (32) unal,
	     2 comment	      char (128) unal,
	     2 first_program      like msf_ptr_template;	/* Msf pointer to first program data */

/*   Data for one program or component */

     dcl	   1 program	      aligned based (program_ptr),
	     2 next_program	      like msf_ptr_template,	/* Msf pointer to next program data */
	     2 name	      char (32) unal,	/* Program name (does not include a language suffix) */
	     2 translator	      char (8) unal,	/* Language name */
	     2 flags,
	       3 long_profile     bit (1) unal,
	       3 mbz	      bit (35) unal,	/* Unused */
	     2 last_source_path   fixed bin (10),
	     2 source_path_array  like msf_ptr_template,
	     2 n_operators	      fixed bin (18),
	     2 operator_array     like msf_ptr_template,
	     2 n_values	      fixed bin (18),
	     2 value_array	      like msf_ptr_template,
	     2 total_count	      fixed binary (35),
	     2 total_cost_or_time fixed binary (35),
	     2 total_page_faults  fixed binary (35);	/* (long_profile only) */

/*   Array of source segments */

     dcl	   source_path_array      (0:program.last_source_path) char (168) based (source_path_ptr);

/*   Arrays of instructions that reference operators */

     dcl	   operator_array	      (program.n_operators) bit (36) aligned based (operator_ptr);

/*   Arrays of profile data values (sorted by value.source) */

     dcl	   1 value_array	      (program.n_values) aligned based (value_ptr),
	     2 source,
	       3 file	      fixed bin (10) unsigned unal,
	       3 line	      fixed bin (16) unsigned unal,
	       3 statement	      fixed bin (5) unsigned unal,
	       3 pf_entry_seq     fixed bin (5) unsigned unal,
	     2 n_operators	      fixed bin (18) unsigned unal,
						/* Number of operator_array elements for this statement */
	     2 first_operator     fixed bin (18) unsigned unal,
						/* First operator_array element, if any, for this statement */
	     2 count	      fixed bin (35),	/* Execution count */
	     2 cost_or_time	      fixed bin (35),	/* Instructions or VCPU time (long_profile) */
	     2 page_faults	      fixed bin (35);	/* (long_profile only) */

/*   Automatic variables */

     dcl	   operator_ptr	      ptr;		/* Pointer calculated from program.operator_array */
     dcl	   pfd_ptr	      ptr;		/* Pointer to base of pfd file (component 0) */
     dcl	   program_ptr	      ptr;		/* Ptr from pfd_header.first_program or program.next_program */
     dcl	   source_path_ptr	      ptr;		/* Pointer calculated from program.source_path_array */
     dcl	   value_ptr	      ptr;		/* Pointer calculated from program.value_array */

/*   Generalized MSF pointer into profile data file */

     dcl	   1 msf_ptr_template     aligned based,
	     2 component	      fixed bin (17) unal,
	     2 offset	      fixed bin (18) unsigned unal;

     dcl	   1 null_msf_ptr	      aligned internal static options (constant),
	     2 component	      fixed bin (17) unal initial (-1),
	     2 offset	      fixed bin (18) unsigned unal initial (0);

/* END INCLUDE FILE ... pfd_format.incl.pl1 */
