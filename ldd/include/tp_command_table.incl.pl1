/* BEGIN INCLUDE FILE ... tp_command_table.incl.pl1 */

/* Revised 27-Feb-79 by M. N. Davidoff. */

/* automatic */

     declare call_conventions_n_entry_points
			      fixed binary;
     declare command_info_n_commands
			      fixed binary;
     declare command_table_ptr      pointer;
     declare hash_table_bucket_command_names_string_length
			      fixed binary (21);
     declare hash_table_bucket_n_collisions
			      fixed binary;
     declare hash_table_bucket_offset
			      offset (command_table.area);

/* based */

/* command table including entries for each command */

     declare 1 command_table	      aligned based (command_table_ptr),
	     2 header,
	       3 command_info_offset
			      offset (command_table.area),
						/* offset of command information */
	       3 call_conventions_offset
			      offset (command_table.area),
						/* offset of call convention entry points */
	       3 hash_table	      (COMMAND_HASH_TABLE_SIZE) offset (command_table.area),
						/* command name hash table */
	       3 pad	      bit (36),
	     2 area	      area (sys_info$max_seg_size - divide (length (unspec (command_table.header)), 36, 19));

/* information about each command */

     declare 1 command_info	      aligned based (command_table.command_info_offset),
	     2 n_commands	      fixed binary (17),	/* number of commands */
	     2 pad	      bit (36),
	     2 commands	      (command_info_n_commands refer (command_info.n_commands)),
	       3 scheduling_info,
	         4 cpu_time_limit fixed binary (71),	/* maximum cpu time TPR can take */
	         4 real_time_limit
			      fixed binary (71),	/* maximum real time TPR can take */
	         4 deadline_interval
			      fixed binary (71),	/* offset of deadline from time submitted */
	         4 drop_dead_time fixed binary (71),	/* not implemented yet */
	         4 delay_time     fixed binary (71),	/* not implemented yet */
	         4 expected_cpu_time
			      fixed binary (71),	/* not implemented yet */
	         4 max_concurrent fixed binary (17),	/* not implemented yet */
	         4 deadlock_priority
			      fixed binary (17),	/* not implemented yet */
	       3 access_info,
	         4 level	      fixed binary (35),	/* not implemented yet */
	         4 attributes     bit (36) unaligned,	/* not implemented yet */
	       3 control_info,
	         4 retry_limit    fixed binary (17),	/* how many times to try again if commitment fails */
	         4 failure_limit  fixed binary (17),	/* not implemented yet */
	         4 flags	      unaligned,
		 5 admin_out_of_service
			      bit (1),		/* not implemented yet */
		 5 failure_out_of_service
			      bit (1),		/* not implemented yet */
		 5 test_mode    bit (1),		/* not implemented yet */
		 5 pad	      bit (33),
	       3 execution_info,
	         4 entry_point_name
			      char (65) unaligned,	/* entryname or entryname$entry_point_name of TPR */
	         4 pad	      bit (27),
	         4 call_convention_index
			      fixed binary (17),	/* index of call convention to use for this command */
	         4 flags	      unaligned,
		 5 immediate    bit (1),		/* on if an immediate command */
		 5 pad	      bit (35);

/* call convention entry points */

     declare 1 call_conventions     aligned based (command_table.call_conventions_offset),
	     2 n_entry_points     fixed binary (17),	/* number of call conventions */
	     2 entry_points	      (call_conventions_n_entry_points refer (call_conventions.n_entry_points)),
	       3 reference_name   char (32) unaligned,	/* reference name of call convention procedure */
	       3 entry_point_name char (32) unaligned;	/* entry point name of call convention procedure */

/* command name hash table entry */

     declare 1 hash_table_bucket    aligned based (hash_table_bucket_offset),
	     2 n_collisions	      fixed binary (17),	/* number of names that hashed to this entry */
	     2 command_names_string_length
			      fixed binary (21),	/* total length of command names */
	     2 command	      (hash_table_bucket_n_collisions refer (hash_table_bucket.n_collisions)),
	       3 character_index  fixed binary (21),	/* start of command name */
	       3 command_name_length
			      fixed binary (21),	/* length of command name */
	       3 command_index    fixed binary (17),	/* index of command in command_table.commands */
	     2 command_names_string
			      char (hash_table_bucket_command_names_string_length
			      refer (hash_table_bucket.command_names_string_length)) unaligned;
						/* string of all command names that collided */

/* internal static */

     declare BINARY_COMMAND_TABLE_SUFFIX
			      char (5) internal static options (constant) initial ("tpbct");
     declare COMMAND_HASH_TABLE_SIZE
			      fixed binary internal static options (constant) initial (523);
     declare COMMAND_TABLE_NAME     char (17) internal static options (constant) initial ("tp_command_table_");
     declare SOURCE_COMMAND_TABLE_SUFFIX
			      char (5) internal static options (constant) initial ("tpsct");

/* END INCLUDE FILE ... tp_command_table.incl.pl1 */
