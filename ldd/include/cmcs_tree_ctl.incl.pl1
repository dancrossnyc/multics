/* BEGIN INCLUDE FILE ... cmcs_tree_ctl.incl.pl1 */

/*
   This COBOL MCS include file defines the sstructure used for accessing
   the MCS queue hierarchy and controlling message I/O for each entry.
*/

/* Bob May, 5/31/77 */

dcl (tree_ctl_hdr_len init (32),
     tree_ctl_entry_len init (144),			/* 136, plus fudge for ptr alignments */
     tree_ctl_version init (1)) fixed bin internal static options (constant);

dcl  tree_ctl_ptr ptr int static;

dcl 1 tree_ctl aligned based (tree_ctl_ptr),
    2 hdr like control_hdr,
    2 queue_count fixed bin,				/* total of queue entries for hierarchy */
    2 filler (31) fixed bin (35),
    2 entries (tree_ctl.current_size) like tree_ctl_entry;

dcl  tree_ctl_eindex fixed bin;

dcl  tree_ctl_eptr ptr;

dcl 1 tree_ctl_entry aligned based (tree_ctl_eptr),
    2 level_info,					/* len = 15 */
      3 tree_path,
        4 level_names (4) char (12),
      3 entry_flags,
       (4 inactive_sw bit (1),
        4 cmd_sw bit (1),
        4 mp_sw bit (1),
						/* switch separator */
        4 cobol_program_id_sw bit (1),
        4 queue_sw bit (1),
        4 filler bit (31)) unaligned,
      3 level_no fixed bin,				/* level within the hierarchy */
      3 subtree_count fixed bin,
    2 static_queue_info,				/* len = 9 */
      3 queue_name char (32),				/* without the .cmcs_queue suffix */
      3 queue_ctl_eindex fixed bin,			/* to compute addr of table entry */
    2 command_info,					/* len = 75 */
      3 cmd_line_len fixed bin,
      3 cmd_line char (128),
      3 mp_line_len fixed bin,
      3 mp_line char (128),
      3 cobol_program_id_len fixed bin,
      3 cobol_program_id char (32),
    2 io_info,					/* len = 37, sum of all level 3s */
      3 io_flags,					/* len = 1 */
       (4 io_in_process_sw bit (1),
        4 partial_in_process_sw bit (1),
        4 rcv_wait_sw bit (1),
						/* switch separator */
        4 rcv_msg_sw bit (1),				/* on if user did a receive msg */
        4 rcv_seg_sw bit (1),				/* on if user did a receive seg */
        4 filler bit (31)) unaligned,
      3 dynamic_queue_info,				/* len = 13 */
        4 switch_name char (32) unaligned,
        4 queue_ctl_eptr ptr,
        4 iocb_ptr ptr,
        4 vfile_status fixed bin,			/* 0 - not active/detached */
						/* 1 - attached, but not open */
						/* 2 - open */
      3 msg_hdr_info,				/* len = 9 */
        4 msg_hdr_ptr ptr,				/* ptr to base of current msg */
        4 io_type fixed bin,
        4 io_subtype fixed bin,
        4 seg_count fixed bin (35),			/* total no of msg segments */
        4 msg_len fixed bin (35),			/* total msg length (sum of all segments) */
        4 msg_descr like vfile_descr,
        4 msg_key,
	5 msg_no fixed bin (35),
	5 seg_no fixed bin (35),
      3 tseg_info,					/* len = 3 */
        4 tseg_ptr ptr,				/* temp seg to build segment */
        4 tseg_len fixed bin (35),
      3 msg_seg_info,				/* len = 6 */
        4 msg_seg_ptr ptr,				/* ptr to base of current msg_seg */
        4 msg_seg_descr like vfile_descr,
        4 msg_seg_len fixed bin (35),
        4 msg_seg_left_index fixed bin (35),
        4 msg_seg_left_len fixed bin (35),
      3 buffer_info,				/* len = 5 */
        4 buffer_ptr ptr,
        4 buffer_len fixed bin (35),
        4 buffer_left_index fixed bin (35),
        4 buffer_left_len fixed bin (35);

/* END INCLUDE FILE ... cmcs_tree_ctl.incl.pl1 */
