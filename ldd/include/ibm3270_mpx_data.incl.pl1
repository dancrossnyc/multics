/* Begin include file ..... ibm3270_mpx_data.incl.pl1 */

/* Describes ring-0 data bases used by the ibm3270 demultiplexer */
/* Prepared May 1979 by Larry Johnson */

dcl  mdp ptr;
dcl  md_nchan fixed bin;

dcl 1 md aligned based (mdp),				/* Global data */

/* Static items */

    2 event_channel fixed bin (71),			/* Event channel to talk to AS over */
    2 processid bit (36),				/* AS processid */
    2 devx fixed bin,				/* Devx of major channel */
    2 name char (32),				/* Name of major channel */
    2 nchan fixed bin,				/* Count of subchannels */
    2 controller_address fixed bin,			/* Address of controler, defaults to 0 */
    2 controller_poll_address char (1),
    2 controller_select_address char (1),
    2 general_poll_address char (1),
    2 dialup_info,					/* Data saved from dialup interrupt */
      3 line_type fixed bin,
      3 baud_rate fixed bin,
      3 max_buf_size fixed bin,
      3 buffer_pad fixed bin,
    2 chars unal,					/* Various ascii/ebcdic dependent chars */
      3 nl char (1),				/* Newline character */
      3 sba char (1),				/* Set-buffer-address code */
      3 stx char (1),				/* Start of text code */
      3 esc char (1),				/* Escape code */
      3 write char (1),				/* Function code for write */
      3 erase_write char (1),				/* Function code for erase-write */
      3 ic char (1),				/* Insert cursor */
      3 etx char (1),				/* End of text */
      3 soh char (1),				/* Start of header */
      3 eot char (1),				/* End of transmission */
      3 percent char (1),				/* A "%" */
      3 slash char (1),				/* A "/" */
      3 letter_R char (1),				/* A "R" */
      3 etb char (1),				/* End of text block */
      3 enter char (1),				/* AID field for enter */
      3 clear char (1),				/* AID field for clear */
      3 pa1 char (1),				/* AID field for PA1 */
      3 pa2 char (1),				/* AID field for PA2 */
      3 pa3 char (1),				/* AID field for PA3 */
      3 bs char (1),				/* Backspace */
      3 cr char (1),				/* Carriage return */
      3 em char (1),				/* End of media */
      3 copy char (1),				/* Function code to copy a screen */
    2 action_chars unal,
      3 quit_key char (1),				/* Function code to interpret as quit */
      3 formfeed_key char (1),			/* Function code to interpret as formfeed */
    2 address_tablep ptr,				/* Pointer to ebcdic or ascii table */
    2 chan_map (0:31) fixed bin (8) unal,		/* Maps poll address into mde index */

/* Dynamic items */

    2 last_poll_address char (1),			/* Last poll address sent to FNP */
    2 first_control_chan fixed bin,			/* First channal in control function queue */
    2 last_control_chan fixed bin,			/* The last */
    2 last_select_address char (1),			/* Likewise for select */
    2 first_write_chan fixed bin,			/* First channel in write queue */
    2 last_write_chan fixed bin,			/* Last channel in write queue */
    2 cur_write_chan fixed bin,			/* If output in progres */
    2 write_chain_ptr ptr unal,			/* For cur_write_chan */
    2 first_poll_chan fixed bin,			/* First channel in poll queue */
    2 last_poll_chan fixed bin,			/* Last channel in poll queue */
    2 input_chain_ptr ptr,				/* Currently accumulating input chain */
    2 input_count fixed bin,				/* Its length */
    2 error_stat like ibm3270_meters,			/* Error statstics */
    2 saved_meters_ptr ptr,				/* address of savedf copy of meters */
    2 flags,
      3 ascii bit (1) unal,				/* Use ascii protocol */
      3 debug bit (1) unal,
      3 loading bit (1) unal,				/* Load in progress */
      3 loaded bit (1) unal,				/* Load complete */
      3 started bit (1) unal,				/* In started state */
      3 poll_in_progress bit (1) unal,			/* FNP has device poll in progress */
      3 output_in_progress bit (1) unal,		/* Working on output, goes off with line status */
      3 message_in_progress bit (1) unal,		/* Working on output, goes off when data passed on */
      3 eot_sent bit (1) unal,			/* If eot has been entor current output */
      3 send_output bit (1) unal,			/* Mpx has been told send output */
      3 allow_raw3270 bit (1) unal,			/* Sub-channels may use raw3270 mode */
      3 allow_copy bit (1) unal,			/* Sub-channels may use copy feature */
      3 pad bit (24) unal,
    2 mde_entry (md_nchan refer (md.nchan)) like mde;	/* Per-channel data */

dcl  address_table (0:63) char (1) unal based (md.address_tablep);

dcl  mdep ptr;

dcl 1 mde aligned based (mdep),			/* Per channel data */
    2 devx fixed bin,				/* Devx of sub-channel */
    2 name char (3),				/* Last component of name, {p|d}NN */
    2 device_address char (1),			/* Address for poll and selects */
    2 screen_size fixed bin,				/* Number of characters on screen, 480/1920 */
    2 line_size fixed bin,				/* Number of characters on line, 40/80 */
    2 position fixed bin,				/* Where cursor should be */
    2 next_write_chan fixed bin,			/* Next channel in the write queue */
    2 next_poll_chan fixed bin,			/* Next channel in the poll queue */
    2 next_control_chan fixed bin,			/* Next channel in control function queue */
    2 write_chain_ptr ptr unal,			/* Pointer to write chain for this device */
    2 flags,
      3 listen bit (1) unal,
      3 dialed bit (1) unal,
      3 printer bit (1) unal,
      3 hndlquit bit (1) unal,			/* Setting of the mode */
      3 waiting_for_ready bit (1) unal,			/* Waiting for prinnr to finish */
      3 erase_req bit (1) unal,			/* Erase screen on next write */
      3 sound_alarm bit (1) unal,			/* Turn on beeper on next chance */
      3 control_queued bit (1) unal,			/* Channel in unlock queue */
      3 end_of_page bit (1) unal,			/* Waiting for responce to start output */
      3 keyboard_restore bit (1) unal,			/* Must unlock keyboard */
      3 rawo bit (1) unal,				/* Current state of channels rawo mode */
      3 rawi bit (1) unal,				/* Current state of channels rawi mode */
      3 raw3270 bit (1) unal,				/* Special raw mode for 3270's */
      3 raw3270_in_effect bit (1) unal,			/* Equals rawi & rawo & raw3270 */
      3 write_queued bit (1) unal,
      3 pad bit (21) unal;

/* End include file ..... ibm3270_mpx_data.incl.pl1 */
