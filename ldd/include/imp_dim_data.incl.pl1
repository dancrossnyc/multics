/*  */
/* BEGIN INCLUDE ..............imp_dim_data..................... */

/* For IMP DIM */

dcl  imp_data$dim ext;

dcl 1 dim based aligned,

/* Following variables are for initialization value, locks etc. */

    2 initialized bit (36) aligned,			/* IMP DIM has been initialized if non-zero */
    2 lock bit (36) aligned,				/* IMP DIM sets this lock */
    2 lock_event_id fixed bin,			/* The event number for unlocking above lock */

    2 messages_received fixed bin (34),			/* This variable is incremented at the interrupt
						   time when a message is received. */
    2 messages_processed fixed bin (34),		/* This variable is incremented after a message has
						   been processed.When there are no messages
						   in the wired down buffers of IMP DCM this variable
						   should be eual to the above. */
    2 state_queue_in fixed bin (34),			/* Number of entries put in the state
						   queue. (Whenever thestate of IMP changes an entry
						   is put in the state queue. */
    2 state_queue_out fixed bin (34),
    2 dummy1 fixed bin,
    2 state_queue (1:8),
      3 state char (8) aligned,
      3 status fixed binary (35),
    2 state_of_imp char (8) aligned,			/* Current state of IMP */
    2 bad_state bit (1),				/* If on something is wrong. */
    2 filler fixed bin (35),

/* Miscellaneous */

    2 init_time fixed bin (71),			/* Time when IMP DIM was initialized */
    2 finish_time fixed bin (71),			/* Time when IMP DIM was finished */
    2 no_buffering bit (1) aligned,			/* If bit on no write behind for write links */
    2 input_processing_blocked bit (1) aligned,		/* If due to lack of pageable buffers input
						   processing is stopped this bit is turned
						   on. */
    2 new_error_codes bit (1),			/* If on new error codes are returned. */
    2 imp_going_down bit (32);			/* If on IMP is about to go down. */

/* END INCLUDE.................imp_dim_data.............. */
