/*  */
/* BEGIN INCLUDE ...............imp_dim_buf ........... */

/* For IMP DIM. */

/* Following variables are for buffer management */

dcl 1 imp_data$buf external aligned,

    2 (max_buf,
     max_buf_in_use,
     no_buf_in_use) fixed bin (34);

/* Pageable buffer segment. */




dcl  imp_dim_buf_$ ext aligned;			/* Name of the buffer segment */
dcl  bp pointer;					/* Pointer used to refer to buffer segment. */

dcl 1 bs based (bp) aligned,				/* Strcture of the buffer segment */
    2 buf (0: 273) aligned,				/* Array of buffer headers. */
						/* Never use buffer zero buf(0) (avoid zero address ) */
      3 bufdummy (1: 8) fixed bin (35),			/* Each header is eight words long */

    2 message (273) bit (8352) aligned;			/* Array of 8352 bit buffers. 8352 = 232 *36, 232=8*29 */



dcl  bufferp pointer;				/* Always use this to refer to a buffer */
dcl 1 buffer aligned based (bufferp),			/* Structure of a buffer header */
    2 lock bit (36) aligned,				/* If buffer in use this lock is set */
    2 rel fixed bin (18),				/* Address of the data associated with this buffer */
    2 length fixed bin (17),				/* Maximum length of this buffer in bits */
    2 data_offset fixed bin (17),			/* offset of current data in bits */
    2 data_length fixed bin (17),			/* Length of message in number of bits. */
    2 bufferqthread aligned,				/* thread for a chain of buffers */
        4 forward bit (18) unaligned,			/* points to next buffer */
        4 backward bit (18) unaligned,			/* points to previous buffer */
    2 message_count fixed binary,			/* number of messages in this buffer */
    2 complete_message bit (1) aligned;			/* If on, a complete message is saved
						   rather than the text */


dcl  buffer_datap pointer;				/* Used to address data area of the buffer */
dcl 1 buffer_data aligned based (buffer_datap),
    2 empty_space bit (buffer.data_offset) unaligned,	/* Space not used */
    2 previous_text bit (buffer.data_length) unaligned,	/* the relevant area */
    2 available_space bit (buffer.length - (buffer.data_offset+buffer.data_length)) unaligned;



/* END INCLUDE .................imp_dim_buf ........... */
