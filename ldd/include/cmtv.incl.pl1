/* BEGIN INCLUDE FILE ... cmtv.incl.pl1 */



/****^  HISTORY COMMENTS:
  1) change(89-03-20,Parisek), approve(89-06-01,MCR8110),
     audit(89-10-09,Farley), install(89-10-25,MR12.3-1100):
     Add support of protocol mpx.
                                                   END HISTORY COMMENTS */


/* Created by J. Stern 7/26/78 */

/* This include file defines the layout of an alm object segment
   used as a transfer vector by the channel_manager program.
   There is one cmtv entry for each channel type.  Within
   each cmtv entry there is one word for each channel_manager
   entry point.  This word contains a transfer instruction to
   the procedure which implements the function of the given
   channel_manager entry point for the given channel type.
*/


dcl  cmtv$cmtv fixed bin external;			/* external name of cmtv data base */

dcl  cmtvp ptr;					/* ptr to channel manager transfer vector */


dcl 1 cmtv aligned based (cmtvp),			/* channel manager transfer vector */
      2 no_channel_types fixed bin,			/* number of channel types */
      2 pad fixed bin,
      2 chan_type_index (0:16) fixed bin,		/* maps channel type into array index */
      2 entries (no_entry_types, 0 refer (cmtv.no_channel_types)) bit (72); /* transfer vector entries */


dcl (INIT_CHANNEL init (1),				/* entry types */
     TERMINATE_CHANNEL init (2),
     INIT_MULTIPLEXER init (3),
     TERMINATE_MULTIPLEXER init (4),
     START init (5),
     STOP init (6),
     SHUTDOWN init (7),
     PRIV_CONTROL init (8),
     HPRIV_CONTROL init (9),
     READ init (10),
     WRITE init (11),
     CONTROL init (12),
     SET_MODES init (13),
     CHECK_MODES init (14),
     GET_MODES init (15),
     INTERRUPT init (16),
     no_entry_types init (16)) fixed bin int static options (constant);


/* call init_channel_ev (devx, info_ptr, data_base_ptr, code) */
dcl  init_channel_ev entry (fixed bin, ptr, ptr, fixed bin (35)) variable;

/* call terminate_channel_ev (data_base_ptr, code) */
dcl  terminate_channel_ev entry (ptr, fixed bin (35)) variable;

/* call init_multiplexer_ev (devx, mux_init_info_ptr, data_base_ptr, code) */
dcl  init_multiplexer_ev entry (fixed bin, ptr, ptr, fixed bin (35)) variable;

/* call terminate_multiplexer_ev (data_base_ptr, code) */
dcl  terminate_multiplexer_ev entry (ptr, fixed bin (35)) variable;

/* call start_ev (data_base_ptr, code) */
dcl  start_ev entry (ptr, fixed bin (35)) variable;

/* call stop_ev (data_base_ptr, code) */
dcl  stop_ev entry (ptr, fixed bin (35)) variable;

/* call shutdown_ev (data_base_ptr, code) */
dcl  shutdown_ev entry (ptr, fixed bin (35)) variable;

/* call priv_control_ev (data_base_ptr, control_type, info_ptr, code) */
dcl  priv_control_ev entry (ptr, char (*), ptr, fixed bin (35)) variable;

/* call hpriv_control_ev (data_base_ptr, control_type, info_ptr, code) */
dcl  hpriv_control_ev entry (ptr, char (*), ptr, fixed bin (35)) variable;

/* call read_ev (data_base_ptr, subchan, chain_ptr, more_input_flag, code) */
dcl  read_ev entry (ptr, fixed bin, ptr, bit (1) aligned, fixed bin (35)) variable;

/* call write_ev (data_base_ptr, subchan, chain_ptr, code) */
dcl  write_ev entry (ptr, fixed bin, ptr, fixed bin (35)) variable;

/* call control_ev (data_base_ptr, subchan, control_type, info_ptr, code) */
dcl  control_ev entry (ptr, fixed bin, char (*), ptr, fixed bin (35)) variable;

/* call set_modes_ev (data_base_ptr, subchan, modes_change_list_ptr, code) */
dcl  set_modes_ev entry (ptr, fixed bin, ptr, fixed bin (35)) variable;

/* call check_modes_ev (data_base_ptr, subchan, modes_change_list_ptr, code) */
dcl  check_modes_ev entry (ptr, fixed bin, ptr, fixed bin (35)) variable;

/* call get_modes_ev (data_base_ptr, subchan, modes, code) */
dcl  get_modes_ev entry (ptr, fixed bin, char (*), fixed bin (35)) variable;

/* call interrupt_ev (data_base_ptr, int_type, int_data) */
dcl  interrupt_ev entry (ptr, fixed bin, bit (72) aligned) variable;


/* END INCLUDE FILE ... cmtv.incl.pl1 */
