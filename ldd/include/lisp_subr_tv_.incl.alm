" lisp_subr_tv_ generated by compile_lisp_subr_tv from
" >spec>on>lisp_dir>staging>lisp_subr_tv_.macro


	use	tv
star_flt:  zero 261632,-1

	tra	<lisp_utils_>|[times_flo]
	zero
	zero	.star_flt-lisp_subr_tv_,1
	use	Names
.star_flt:  acc "*$"


	use	tv
star_:  zero 261632,-1

	tra	<lisp_utils_>|[times_fix]
	zero
	zero	.star_-lisp_subr_tv_,1
	use	Names
.star_:  acc "*"


	use	tv
star_array:  zero 261635,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_array_fcns_>|[star_array]
	zero	.star_array-lisp_subr_tv_,1
	use	Names
.star_array:  acc "*array"


	use	tv
star_dif:  zero 1026,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[difference]
	zero	.star_dif-lisp_subr_tv_,1
	use	Names
.star_dif:  acc "*dif"


	use	tv
star_function:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_>|[stfunction]
	zero	.star_function-lisp_subr_tv_,2
	use	Names
.star_function:  acc "*function"


	use	tv
star_quo:  zero 1026,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[quotient]
	zero	.star_quo-lisp_subr_tv_,1
	use	Names
.star_quo:  acc "*quo"


	use	tv
star_rearray:  zero 261633,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_array_fcns_>|[star_rearray]
	zero	.star_rearray-lisp_subr_tv_,1
	use	Names
.star_rearray:  acc "*rearray"


	use	tv
star_rset:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_status_fns_>|[rset]
	zero	.star_rset-lisp_subr_tv_,0
	use	Names
.star_rset:  acc "*rset"


	use	tv
star_sstatus:  zero 261633,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_status_fns_>|[sstatus_]
	zero	.star_sstatus-lisp_subr_tv_,1
	use	Names
.star_sstatus:  acc "*sstatus"


	use	tv
star_status:  zero 261633,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_status_fns_>|[status_]
	zero	.star_status-lisp_subr_tv_,1
	use	Names
.star_status:  acc "*status"


	use	tv
pls_flt:  zero 261632,-1

	tra	<lisp_utils_>|[plus_flo]
	zero
	zero	.pls_flt-lisp_subr_tv_,1
	use	Names
.pls_flt:  acc "+$"


	use	tv
pls_:  zero 261632,-1

	tra	<lisp_utils_>|[plus_fix]
	zero
	zero	.pls_-lisp_subr_tv_,1
	use	Names
.pls_:  acc "+"


	use	tv
mns_flt:  zero 261632,-1

	tra	<lisp_utils_>|[diff_flo]
	zero
	zero	.mns_flt-lisp_subr_tv_,1
	use	Names
.mns_flt:  acc "-$"


	use	tv
mns_:  zero 261632,-1

	tra	<lisp_utils_>|[diff_fix]
	zero
	zero	.mns_-lisp_subr_tv_,1
	use	Names
.mns_:  acc "-"


	use	tv
div_flt:  zero 261632,-1

	tra	<lisp_utils_>|[quot_flo]
	zero
	zero	.div_flt-lisp_subr_tv_,1
	use	Names
.div_flt:  acc "/$"


	use	tv
div_:  zero 261632,-1

	tra	<lisp_utils_>|[quot_fix]
	zero
	zero	.div_-lisp_subr_tv_,1
	use	Names
.div_:  acc "/"


	use	tv
one_pls_flt:  zero 1,-1

	tra	<lisp_utils_>|[add1_flo]
	zero
	zero	.one_pls_flt-lisp_subr_tv_,0
	use	Names
.one_pls_flt:  acc "1+$"


	use	tv
one_pls:  zero 1,-1

	tra	<lisp_utils_>|[add1_fix]
	zero
	zero	.one_pls-lisp_subr_tv_,0
	use	Names
.one_pls:  acc "1+"


	use	tv
one_mns_flt:  zero 1,-1

	tra	<lisp_utils_>|[sub1_flo]
	zero
	zero	.one_mns_flt-lisp_subr_tv_,0
	use	Names
.one_mns_flt:  acc "1-$"


	use	tv
one_mns:  zero 1,-1

	tra	<lisp_utils_>|[sub1_fix]
	zero
	zero	.one_mns-lisp_subr_tv_,0
	use	Names
.one_mns:  acc "1-"


	use	tv
ls_:  zero 2,-1

	tra	<lisp_utils_>|[ls_]
	zero
	zero	.ls_-lisp_subr_tv_,0
	use	Names
.ls_:  acc "<"


	use	tv
eqn_:  zero 2,-1

	tra	<lisp_utils_>|[eql_]
	zero
	zero	.eqn_-lisp_subr_tv_,0
	use	Names
.eqn_:  acc "="


	use	tv
gt_:  zero 2,-1

	tra	<lisp_utils_>|[gt_]
	zero
	zero	.gt_-lisp_subr_tv_,0
	use	Names
.gt_:  acc ">"


	use	tv
CtoI:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_char_fns_>|[CtoI]
	zero	.CtoI-lisp_subr_tv_,0
	use	Names
.CtoI:  acc "CtoI"


	use	tv
ItoC:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_char_fns_>|[ItoC]
	zero	.ItoC-lisp_subr_tv_,0
	use	Names
.ItoC:  acc "ItoC"


	use	tv
rem_:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[remainder]
	zero	.rem_-lisp_subr_tv_,0
	use	Names
.rem_:  acc "\"


	use	tv
abs:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[abs]
	zero	.abs-lisp_subr_tv_,0
	use	Names
.abs:  acc "abs"


	use	tv
add1:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[add1]
	zero	.add1-lisp_subr_tv_,0
	use	Names
.add1:  acc "add1"


	use	tv
alarmclock:  zero 2,-1
	tsx6	pl1_fixup
	tra	<lisp_fault_handler_>|[alarmclock]
	zero	.alarmclock-lisp_subr_tv_,0
	use	Names
.alarmclock:  acc "alarmclock"


	use	tv
allfiles:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_fns_>|[allfiles]
	zero	.allfiles-lisp_subr_tv_,0
	use	Names
.allfiles:  acc "allfiles"


	use	tv
and:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[and]
	zero	.and-lisp_subr_tv_,2
	use	Names
.and:  acc "and"


	use	tv
append:  zero 261632,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[append]
	zero	.append-lisp_subr_tv_,1
	use	Names
.append:  acc "append"


	use	tv
apply:  zero 1538,-1
	tsx6	type_1_subr
	tra	<lisp_>|[apply_]
	zero	.apply-lisp_subr_tv_,1
	use	Names
.apply:  acc "apply"


	use	tv
arg:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_>|[arg]
	zero	.arg-lisp_subr_tv_,0
	use	Names
.arg:  acc "arg"


	use	tv
args:  zero 1025,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_defsubr_>|[args]
	zero	.args-lisp_subr_tv_,1
	use	Names
.args:  acc "args"


	use	tv
array:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_array_fcns_>|[array]
	zero	.array-lisp_subr_tv_,2
	use	Names
.array:  acc "array"


	use	tv
arraydims:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_array_fcns_>|[arraydims]
	zero	.arraydims-lisp_subr_tv_,0
	use	Names
.arraydims:  acc "arraydims"


	use	tv
ascii:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_reader_alm_>|[ascii_alm]
	zero	.ascii-lisp_subr_tv_,0
	use	Names
.ascii:  acc "ascii"


	use	tv
assoc:  zero 2,-1

	tra	<lisp_quick_fcns_>|[assoc]
	zero
	zero	.assoc-lisp_subr_tv_,0
	use	Names
.assoc:  acc "assoc"


	use	tv
assq:  zero 2,-1

	tra	<lisp_quick_fcns_>|[assq]
	zero
	zero	.assq-lisp_subr_tv_,0
	use	Names
.assq:  acc "assq"


	use	tv
atan:  zero 1025,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_trig_>|[atan]
	zero	.atan-lisp_subr_tv_,1
	use	Names
.atan:  acc "atan"


	use	tv
atom:  zero 1,-1

	tra	<lisp_quick_fcns_>|[atom]
	zero
	zero	.atom-lisp_subr_tv_,0
	use	Names
.atom:  acc "atom"


	use	tv
baktrace1:  zero 1024,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_baktrace_>|[baktrace1]
	zero	.baktrace1-lisp_subr_tv_,1
	use	Names
.baktrace1:  acc "baktrace1"


	use	tv
baktrace2:  zero 1024,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_baktrace_>|[baktrace2]
	zero	.baktrace2-lisp_subr_tv_,1
	use	Names
.baktrace2:  acc "baktrace2"


	use	tv
baktrace:  zero 1024,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_baktrace_>|[baktrace]
	zero	.baktrace-lisp_subr_tv_,1
	use	Names
.baktrace:  acc "baktrace"


	use	tv
bigp:  zero 1,-1

	tra	<lisp_quick_fcns_>|[bigp]
	zero
	zero	.bigp-lisp_subr_tv_,0
	use	Names
.bigp:  acc "bigp"


	use	tv
bltarray:  zero 2,-1
	tsx6	pl1_fixup
	tra	<lisp_array_fcns_>|[bltarray]
	zero	.bltarray-lisp_subr_tv_,0
	use	Names
.bltarray:  acc "bltarray"


	use	tv
boole:  zero 261635,-1

	tra	<lisp_utils_>|[boole]
	zero
	zero	.boole-lisp_subr_tv_,1
	use	Names
.boole:  acc "boole"


	use	tv
boundp:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[boundp]
	zero	.boundp-lisp_subr_tv_,0
	use	Names
.boundp:  acc "boundp"


	use	tv
break:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_prog_fns_>|[break]
	zero	.break-lisp_subr_tv_,2
	use	Names
.break:  acc "break"


	use	tv
caaaar:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[caaaar]
	zero	.caaaar-lisp_subr_tv_,0
	use	Names
.caaaar:  acc "caaaar"


	use	tv
caaadr:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[caaadr]
	zero	.caaadr-lisp_subr_tv_,0
	use	Names
.caaadr:  acc "caaadr"


	use	tv
caaar:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[caaar]
	zero	.caaar-lisp_subr_tv_,0
	use	Names
.caaar:  acc "caaar"


	use	tv
caadar:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[caadar]
	zero	.caadar-lisp_subr_tv_,0
	use	Names
.caadar:  acc "caadar"


	use	tv
caaddr:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[caaddr]
	zero	.caaddr-lisp_subr_tv_,0
	use	Names
.caaddr:  acc "caaddr"


	use	tv
caadr:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[caadr]
	zero	.caadr-lisp_subr_tv_,0
	use	Names
.caadr:  acc "caadr"


	use	tv
caar:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[caar]
	zero	.caar-lisp_subr_tv_,0
	use	Names
.caar:  acc "caar"


	use	tv
cadaar:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cadaar]
	zero	.cadaar-lisp_subr_tv_,0
	use	Names
.cadaar:  acc "cadaar"


	use	tv
cadadr:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cadadr]
	zero	.cadadr-lisp_subr_tv_,0
	use	Names
.cadadr:  acc "cadadr"


	use	tv
cadar:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cadar]
	zero	.cadar-lisp_subr_tv_,0
	use	Names
.cadar:  acc "cadar"


	use	tv
caddar:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[caddar]
	zero	.caddar-lisp_subr_tv_,0
	use	Names
.caddar:  acc "caddar"


	use	tv
cadddr:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cadddr]
	zero	.cadddr-lisp_subr_tv_,0
	use	Names
.cadddr:  acc "cadddr"


	use	tv
caddr:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[caddr]
	zero	.caddr-lisp_subr_tv_,0
	use	Names
.caddr:  acc "caddr"


	use	tv
cadr:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cadr]
	zero	.cadr-lisp_subr_tv_,0
	use	Names
.cadr:  acc "cadr"


	use	tv
car:  zero 1,-1

	tra	<lisp_car_cdrs_>|[car]
	zero
	zero	.car-lisp_subr_tv_,0
	use	Names
.car:  acc "car"


	use	tv
catch:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_prog_fns_>|[catch]
	zero	.catch-lisp_subr_tv_,2
	use	Names
.catch:  acc "catch"


	use	tv
catenate:  zero 261632,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_char_fns_>|[catenate]
	zero	.catenate-lisp_subr_tv_,1
	use	Names
.catenate:  acc "catenate"


	use	tv
cdaaar:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cdaaar]
	zero	.cdaaar-lisp_subr_tv_,0
	use	Names
.cdaaar:  acc "cdaaar"


	use	tv
cdaadr:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cdaadr]
	zero	.cdaadr-lisp_subr_tv_,0
	use	Names
.cdaadr:  acc "cdaadr"


	use	tv
cdaar:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cdaar]
	zero	.cdaar-lisp_subr_tv_,0
	use	Names
.cdaar:  acc "cdaar"


	use	tv
cdadar:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cdadar]
	zero	.cdadar-lisp_subr_tv_,0
	use	Names
.cdadar:  acc "cdadar"


	use	tv
cdaddr:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cdaddr]
	zero	.cdaddr-lisp_subr_tv_,0
	use	Names
.cdaddr:  acc "cdaddr"


	use	tv
cdadr:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cdadr]
	zero	.cdadr-lisp_subr_tv_,0
	use	Names
.cdadr:  acc "cdadr"


	use	tv
cdar:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cdar]
	zero	.cdar-lisp_subr_tv_,0
	use	Names
.cdar:  acc "cdar"


	use	tv
cddaar:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cddaar]
	zero	.cddaar-lisp_subr_tv_,0
	use	Names
.cddaar:  acc "cddaar"


	use	tv
cddadr:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cddadr]
	zero	.cddadr-lisp_subr_tv_,0
	use	Names
.cddadr:  acc "cddadr"


	use	tv
cddar:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cddar]
	zero	.cddar-lisp_subr_tv_,0
	use	Names
.cddar:  acc "cddar"


	use	tv
cdddar:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cdddar]
	zero	.cdddar-lisp_subr_tv_,0
	use	Names
.cdddar:  acc "cdddar"


	use	tv
cddddr:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cddddr]
	zero	.cddddr-lisp_subr_tv_,0
	use	Names
.cddddr:  acc "cddddr"


	use	tv
cdddr:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cdddr]
	zero	.cdddr-lisp_subr_tv_,0
	use	Names
.cdddr:  acc "cdddr"


	use	tv
cddr:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_car_cdrs_>|[cddr]
	zero	.cddr-lisp_subr_tv_,0
	use	Names
.cddr:  acc "cddr"


	use	tv
cdr:  zero 1,-1

	tra	<lisp_car_cdrs_>|[cdr]
	zero
	zero	.cdr-lisp_subr_tv_,0
	use	Names
.cdr:  acc "cdr"


	use	tv
chrct:  zero 1025,-1

	tra	<lisp_reader_alm_>|[chrct]
	zero
	zero	.chrct-lisp_subr_tv_,1
	use	Names
.chrct:  acc "chrct"


	use	tv
cline:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_command_caller_>|[cline]
	zero	.cline-lisp_subr_tv_,0
	use	Names
.cline:  acc "cline"


	use	tv
close:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_control_>|[close]
	zero	.close-lisp_subr_tv_,0
	use	Names
.close:  acc "close"


	use	tv
comment:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[comment]
	zero	.comment-lisp_subr_tv_,2
	use	Names
.comment:  acc "comment"


	use	tv
cond:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[cond]
	zero	.cond-lisp_subr_tv_,2
	use	Names
.cond:  acc "cond"


	use	tv
cons:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[cons_]
	zero	.cons-lisp_subr_tv_,0
	use	Names
.cons:  acc "cons"


	use	tv
cos:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_trig_>|[cos]
	zero	.cos-lisp_subr_tv_,0
	use	Names
.cos:  acc "cos"


	use	tv
declare:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[declare]
	zero	.declare-lisp_subr_tv_,2
	use	Names
.declare:  acc "declare"


	use	tv
definedp:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[boundp]
	zero	.definedp-lisp_subr_tv_,0
	use	Names
.definedp:  acc "definedp"


	use	tv
defprop:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_define_>|[defprop]
	zero	.defprop-lisp_subr_tv_,2
	use	Names
.defprop:  acc "defprop"


	use	tv
defsubr:  zero 3587,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_defsubr_>|[defsubr]
	zero	.defsubr-lisp_subr_tv_,1
	use	Names
.defsubr:  acc "defsubr"


	use	tv
defun:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_define_>|[defun]
	zero	.defun-lisp_subr_tv_,2
	use	Names
.defun:  acc "defun"


	use	tv
delete:  zero 1538,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[delete]
	zero	.delete-lisp_subr_tv_,1
	use	Names
.delete:  acc "delete"


	use	tv
deletef:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_control_>|[deletef]
	zero	.deletef-lisp_subr_tv_,0
	use	Names
.deletef:  acc "deletef"


	use	tv
delq:  zero 1538,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[delq]
	zero	.delq-lisp_subr_tv_,1
	use	Names
.delq:  acc "delq"


	use	tv
difference:  zero 261633,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[difference]
	zero	.difference-lisp_subr_tv_,1
	use	Names
.difference:  acc "difference"


	use	tv
do:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_prog_fns_>|[do]
	zero	.do-lisp_subr_tv_,2
	use	Names
.do:  acc "do"


	use	tv
eoffn:  zero 1025,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_io_fns_>|[eoffn]
	zero	.eoffn-lisp_subr_tv_,1
	use	Names
.eoffn:  acc "eoffn"


	use	tv
eq:  zero 2,-1

	tra	<lisp_quick_fcns_>|[eq]
	zero
	zero	.eq-lisp_subr_tv_,0
	use	Names
.eq:  acc "eq"


	use	tv
equal:  zero 2,-1

	tra	<lisp_quick_fcns_>|[equal]
	zero
	zero	.equal-lisp_subr_tv_,0
	use	Names
.equal:  acc "equal"


	use	tv
err:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_error_>|[err]
	zero	.err-lisp_subr_tv_,2
	use	Names
.err:  acc "err"


	use	tv
errframe:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_error_>|[errframe]
	zero	.errframe-lisp_subr_tv_,0
	use	Names
.errframe:  acc "errframe"


	use	tv
errprint:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_error_>|[errprint]
	zero	.errprint-lisp_subr_tv_,0
	use	Names
.errprint:  acc "errprint"


	use	tv
errset:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_prog_fns_>|[errset]
	zero	.errset-lisp_subr_tv_,2
	use	Names
.errset:  acc "errset"


	use	tv
eval:  zero 1025,-1
	tsx6	type_1_subr
	tra	<lisp_>|[eval_]
	zero	.eval-lisp_subr_tv_,1
	use	Names
.eval:  acc "eval"


	use	tv
evalframe:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_error_>|[pdlframe]
	zero	.evalframe-lisp_subr_tv_,0
	use	Names
.evalframe:  acc "evalframe"


	use	tv
exp:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_trig_>|[exp]
	zero	.exp-lisp_subr_tv_,0
	use	Names
.exp:  acc "exp"


	use	tv
explode:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_print_>|[explode]
	zero	.explode-lisp_subr_tv_,0
	use	Names
.explode:  acc "explode"


	use	tv
explodec:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_print_>|[explodec]
	zero	.explodec-lisp_subr_tv_,0
	use	Names
.explodec:  acc "explodec"


	use	tv
exploden:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_print_>|[exploden]
	zero	.exploden-lisp_subr_tv_,0
	use	Names
.exploden:  acc "exploden"


	use	tv
expt:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[expt]
	zero	.expt-lisp_subr_tv_,0
	use	Names
.expt:  acc "expt"


	use	tv
filepos:  zero 1025,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_io_fns_>|[filepos]
	zero	.filepos-lisp_subr_tv_,1
	use	Names
.filepos:  acc "filepos"


	use	tv
fix:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[fix]
	zero	.fix-lisp_subr_tv_,0
	use	Names
.fix:  acc "fix"


	use	tv
fixp:  zero 1,-1

	tra	<lisp_quick_fcns_>|[fixp]
	zero
	zero	.fixp-lisp_subr_tv_,0
	use	Names
.fixp:  acc "fixp"


	use	tv
flatc:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_print_>|[flatc]
	zero	.flatc-lisp_subr_tv_,0
	use	Names
.flatc:  acc "flatc"


	use	tv
flatsize:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_print_>|[flatsize]
	zero	.flatsize-lisp_subr_tv_,0
	use	Names
.flatsize:  acc "flatsize"


	use	tv
float:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[float]
	zero	.float-lisp_subr_tv_,0
	use	Names
.float:  acc "float"


	use	tv
floatp:  zero 1,-1

	tra	<lisp_quick_fcns_>|[floatp]
	zero
	zero	.floatp-lisp_subr_tv_,0
	use	Names
.floatp:  acc "floatp"


	use	tv
freturn:  zero 2,-1
	tsx6	pl1_fixup
	tra	<lisp_error_>|[freturn]
	zero	.freturn-lisp_subr_tv_,0
	use	Names
.freturn:  acc "freturn"


	use	tv
function:  zero 0,-1

	tra	<lisp_car_cdrs_>|[quote]
	zero
	zero	.function-lisp_subr_tv_,2
	use	Names
.function:  acc "function"


	use	tv
gc:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_garbage_collector_>|[gcsubr]
	zero	.gc-lisp_subr_tv_,0
	use	Names
.gc:  acc "gc"


	use	tv
gctwa:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_status_fns_>|[gctwa]
	zero	.gctwa-lisp_subr_tv_,2
	use	Names
.gctwa:  acc "gctwa"


	use	tv
gensym:  zero 512,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[gensym_]
	zero	.gensym-lisp_subr_tv_,1
	use	Names
.gensym:  acc "gensym"


	use	tv
get:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_property_fns_>|[get_]
	zero	.get-lisp_subr_tv_,0
	use	Names
.get:  acc "get"


	use	tv
get_pname:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_char_fns_>|[get_pname]
	zero	.get_pname-lisp_subr_tv_,0
	use	Names
.get_pname:  acc "get_pname"


	use	tv
getl:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_property_fns_>|[getl_]
	zero	.getl-lisp_subr_tv_,0
	use	Names
.getl:  acc "getl"


	use	tv
go:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_>|[go]
	zero	.go-lisp_subr_tv_,2
	use	Names
.go:  acc "go"


	use	tv
greaterp:  zero 261633,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[greaterp]
	zero	.greaterp-lisp_subr_tv_,1
	use	Names
.greaterp:  acc "greaterp"


	use	tv
index:  zero 2,-1
	tsx6	pl1_fixup
	tra	<lisp_char_fns_>|[Index]
	zero	.index-lisp_subr_tv_,0
	use	Names
.index:  acc "index"


	use	tv
inpush:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_fns_>|[inpush]
	zero	.inpush-lisp_subr_tv_,0
	use	Names
.inpush:  acc "inpush"


	use	tv
intern:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_obarray_utils_>|[intern]
	zero	.intern-lisp_subr_tv_,0
	use	Names
.intern:  acc "intern"


	use	tv
ioc:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_fault_handler_>|[ioc]
	zero	.ioc-lisp_subr_tv_,2
	use	Names
.ioc:  acc "ioc"


	use	tv
iog:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_fault_handler_>|[iog]
	zero	.iog-lisp_subr_tv_,2
	use	Names
.iog:  acc "iog"


	use	tv
isqrt:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_trig_>|[isqrt]
	zero	.isqrt-lisp_subr_tv_,0
	use	Names
.isqrt:  acc "isqrt"


	use	tv
last:  zero 1,-1

	tra	<lisp_quick_fcns_>|[last]
	zero
	zero	.last-lisp_subr_tv_,0
	use	Names
.last:  acc "last"


	use	tv
length:  zero 1,-1

	tra	<lisp_quick_fcns_>|[length]
	zero
	zero	.length-lisp_subr_tv_,0
	use	Names
.length:  acc "length"


	use	tv
lessp:  zero 261633,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[lessp]
	zero	.lessp-lisp_subr_tv_,1
	use	Names
.lessp:  acc "lessp"


	use	tv
linel:  zero 1025,-1

	tra	<lisp_reader_alm_>|[linel]
	zero
	zero	.linel-lisp_subr_tv_,1
	use	Names
.linel:  acc "linel"


	use	tv
list:  zero 261632,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[list_]
	zero	.list-lisp_subr_tv_,1
	use	Names
.list:  acc "list"


	use	tv
log:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_trig_>|[log]
	zero	.log-lisp_subr_tv_,0
	use	Names
.log:  acc "log"


	use	tv
lsh:  zero 2,-1

	tra	<lisp_utils_>|[lsh]
	zero
	zero	.lsh-lisp_subr_tv_,0
	use	Names
.lsh:  acc "lsh"


	use	tv
make_atom:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_char_fns_>|[make_atom]
	zero	.make_atom-lisp_subr_tv_,0
	use	Names
.make_atom:  acc "make_atom"


	use	tv
maknam:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_reader_>|[maknam]
	zero	.maknam-lisp_subr_tv_,0
	use	Names
.maknam:  acc "maknam"


	use	tv
makoblist:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_obarray_utils_>|[makoblist]
	zero	.makoblist-lisp_subr_tv_,0
	use	Names
.makoblist:  acc "makoblist"


	use	tv
makreadtable:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_reader_>|[makreadtable]
	zero	.makreadtable-lisp_subr_tv_,0
	use	Names
.makreadtable:  acc "makreadtable"


	use	tv
makunbound:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[makunbound]
	zero	.makunbound-lisp_subr_tv_,0
	use	Names
.makunbound:  acc "makunbound"


	use	tv
map:  zero 261634,-1
	tsx6	type_1_subr
	tra	<lisp_>|[map]
	zero	.map-lisp_subr_tv_,1
	use	Names
.map:  acc "map"


	use	tv
mapc:  zero 261634,-1
	tsx6	type_1_subr
	tra	<lisp_>|[mapc]
	zero	.mapc-lisp_subr_tv_,1
	use	Names
.mapc:  acc "mapc"


	use	tv
mapcan:  zero 261634,-1
	tsx6	type_1_subr
	tra	<lisp_>|[mapcan]
	zero	.mapcan-lisp_subr_tv_,1
	use	Names
.mapcan:  acc "mapcan"


	use	tv
mapcar:  zero 261634,-1
	tsx6	type_1_subr
	tra	<lisp_>|[mapcar]
	zero	.mapcar-lisp_subr_tv_,1
	use	Names
.mapcar:  acc "mapcar"


	use	tv
mapcon:  zero 261634,-1
	tsx6	type_1_subr
	tra	<lisp_>|[mapcon]
	zero	.mapcon-lisp_subr_tv_,1
	use	Names
.mapcon:  acc "mapcon"


	use	tv
maplist:  zero 261634,-1
	tsx6	type_1_subr
	tra	<lisp_>|[maplist]
	zero	.maplist-lisp_subr_tv_,1
	use	Names
.maplist:  acc "maplist"


	use	tv
max:  zero 261633,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[max]
	zero	.max-lisp_subr_tv_,1
	use	Names
.max:  acc "max"


	use	tv
member:  zero 2,-1

	tra	<lisp_quick_fcns_>|[member]
	zero
	zero	.member-lisp_subr_tv_,0
	use	Names
.member:  acc "member"


	use	tv
memq:  zero 2,-1

	tra	<lisp_quick_fcns_>|[memq]
	zero
	zero	.memq-lisp_subr_tv_,0
	use	Names
.memq:  acc "memq"


	use	tv
min:  zero 261633,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[min]
	zero	.min-lisp_subr_tv_,1
	use	Names
.min:  acc "min"


	use	tv
minus:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[minus]
	zero	.minus-lisp_subr_tv_,0
	use	Names
.minus:  acc "minus"


	use	tv
minusp:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[minusp]
	zero	.minusp-lisp_subr_tv_,0
	use	Names
.minusp:  acc "minusp"


	use	tv
mergef:  zero 261634,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_io_control_>|[mergef]
	zero	.mergef-lisp_subr_tv_,1
	use	Names
.mergef:  acc "mergef"


	use	tv
nconc:  zero 261632,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[nconc]
	zero	.nconc-lisp_subr_tv_,1
	use	Names
.nconc:  acc "nconc"


	use	tv
ncons:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[ncons_]
	zero	.ncons-lisp_subr_tv_,0
	use	Names
.ncons:  acc "ncons"


	use	tv
namelist:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_fns_>|[namelist]
	zero	.namelist-lisp_subr_tv_,0
	use	Names
.namelist:  acc "namelist"


	use	tv
names:  zero 1025,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_io_fns_>|[names]
	zero	.names-lisp_subr_tv_,1
	use	Names
.names:  acc "names"


	use	tv
namestring:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_fns_>|[namestring]
	zero	.namestring-lisp_subr_tv_,0
	use	Names
.namestring:  acc "namestring"


	use	tv
nointerrupt:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_fault_handler_>|[nointerrupt]
	zero	.nointerrupt-lisp_subr_tv_,0
	use	Names
.nointerrupt:  acc "nointerrupt"


	use	tv
noret:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_status_fns_>|[noret]
	zero	.noret-lisp_subr_tv_,0
	use	Names
.noret:  acc "noret"


	use	tv
not:  zero 1,-1

	tra	<lisp_quick_fcns_>|[null]
	zero
	zero	.not-lisp_subr_tv_,0
	use	Names
.not:  acc "not"


	use	tv
nouuo:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_>|[nouuo]
	zero	.nouuo-lisp_subr_tv_,0
	use	Names
.nouuo:  acc "nouuo"


	use	tv
nreverse:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[nreverse_]
	zero	.nreverse-lisp_subr_tv_,0
	use	Names
.nreverse:  acc "nreverse"


	use	tv
null:  zero 1,-1

	tra	<lisp_quick_fcns_>|[null]
	zero
	zero	.null-lisp_subr_tv_,0
	use	Names
.null:  acc "null"


	use	tv
numberp:  zero 1,-1

	tra	<lisp_quick_fcns_>|[numberp]
	zero
	zero	.numberp-lisp_subr_tv_,0
	use	Names
.numberp:  acc "numberp"


	use	tv
oddp:  zero 1,-1

	tra	<lisp_quick_fcns_>|[oddp]
	zero
	zero	.oddp-lisp_subr_tv_,0
	use	Names
.oddp:  acc "oddp"


	use	tv
opena:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_control_>|[opena]
	zero	.opena-lisp_subr_tv_,0
	use	Names
.opena:  acc "opena"


	use	tv
openi:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_control_>|[openi]
	zero	.openi-lisp_subr_tv_,0
	use	Names
.openi:  acc "openi"


	use	tv
openo:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_control_>|[openo]
	zero	.openo-lisp_subr_tv_,0
	use	Names
.openo:  acc "openo"


	use	tv
or:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[or]
	zero	.or-lisp_subr_tv_,2
	use	Names
.or:  acc "or"


	use	tv
plus:  zero 261632,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[plus]
	zero	.plus-lisp_subr_tv_,1
	use	Names
.plus:  acc "plus"


	use	tv
plusp:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[plusp]
	zero	.plusp-lisp_subr_tv_,0
	use	Names
.plusp:  acc "plusp"


	use	tv
prin1:  zero 1025,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_print_>|[prin1_]
	zero	.prin1-lisp_subr_tv_,1
	use	Names
.prin1:  acc "prin1"


	use	tv
princ:  zero 1025,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_print_>|[princ_]
	zero	.princ-lisp_subr_tv_,1
	use	Names
.princ:  acc "princ"


	use	tv
print:  zero 1025,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_print_>|[print_]
	zero	.print-lisp_subr_tv_,1
	use	Names
.print:  acc "print"


	use	tv
prog2:  zero 261634,-1

	tra	<lisp_quick_fcns_>|[prog2]
	zero
	zero	.prog2-lisp_subr_tv_,1
	use	Names
.prog2:  acc "prog2"


	use	tv
prog:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_prog_fns_>|[prog]
	zero	.prog-lisp_subr_tv_,2
	use	Names
.prog:  acc "prog"


	use	tv
progn:  zero 261633,-1

	tra	<lisp_quick_fcns_>|[progn]
	zero
	zero	.progn-lisp_subr_tv_,1
	use	Names
.progn:  acc "progn"


	use	tv
putprop:  zero 3,-1
	tsx6	type_1_subr
	tra	<lisp_property_fns_>|[putprop_]
	zero	.putprop-lisp_subr_tv_,0
	use	Names
.putprop:  acc "putprop"


	use	tv
quit:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp>|[quit]
	zero	.quit-lisp_subr_tv_,0
	use	Names
.quit:  acc "quit"


	use	tv
quote:  zero 0,-1

	tra	<lisp_car_cdrs_>|[quote]
	zero
	zero	.quote-lisp_subr_tv_,2
	use	Names
.quote:  acc "quote"


	use	tv
quotient:  zero 261633,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[quotient]
	zero	.quotient-lisp_subr_tv_,1
	use	Names
.quotient:  acc "quotient"


	use	tv
random:  zero 512,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[random]
	zero	.random-lisp_subr_tv_,1
	use	Names
.random:  acc "random"


	use	tv
read:  zero 1024,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_reader_>|[read]
	zero	.read-lisp_subr_tv_,1
	use	Names
.read:  acc "read"


	use	tv
readch:  zero 1024,-1
	tsx6	type_1_subr
	tra	<lisp_reader_alm_>|[readch]
	zero	.readch-lisp_subr_tv_,1
	use	Names
.readch:  acc "readch"


	use	tv
readlist:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_reader_>|[readlist]
	zero	.readlist-lisp_subr_tv_,0
	use	Names
.readlist:  acc "readlist"


	use	tv
readline:  zero 1024,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_reader_>|[readstring]
	zero	.readline-lisp_subr_tv_,1
	use	Names
.readline:  acc "readline"


	use	tv
remainder:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[remainder]
	zero	.remainder-lisp_subr_tv_,0
	use	Names
.remainder:  acc "remainder"


	use	tv
remob:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_obarray_utils_>|[remob]
	zero	.remob-lisp_subr_tv_,0
	use	Names
.remob:  acc "remob"


	use	tv
remprop:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_property_fns_>|[remprop_]
	zero	.remprop-lisp_subr_tv_,0
	use	Names
.remprop:  acc "remprop"


	use	tv
rename:  zero 2,-1
	tsx6	pl1_fixup
	tra	<lisp_io_control_>|[rename]
	zero	.rename-lisp_subr_tv_,0
	use	Names
.rename:  acc "rename"


	use	tv
return:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_>|[return]
	zero	.return-lisp_subr_tv_,0
	use	Names
.return:  acc "return"


	use	tv
reverse:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[reverse]
	zero	.reverse-lisp_subr_tv_,0
	use	Names
.reverse:  acc "reverse"


	use	tv
rot:  zero 2,-1

	tra	<lisp_utils_>|[rot]
	zero
	zero	.rot-lisp_subr_tv_,0
	use	Names
.rot:  acc "rot"


	use	tv
rplaca:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[rplaca]
	zero	.rplaca-lisp_subr_tv_,0
	use	Names
.rplaca:  acc "rplaca"


	use	tv
rplacd:  zero 2,-1

	tra	<lisp_quick_fcns_>|[rplacd]
	zero
	zero	.rplacd-lisp_subr_tv_,0
	use	Names
.rplacd:  acc "rplacd"


	use	tv
runtime:  zero 0,-1

	tra	<lisp_quick_fcns_>|[runtime]
	zero
	zero	.runtime-lisp_subr_tv_,0
	use	Names
.runtime:  acc "runtime"


	use	tv
sassoc:  zero 3,-1

	tra	<lisp_quick_fcns_>|[sassoc]
	zero
	zero	.sassoc-lisp_subr_tv_,0
	use	Names
.sassoc:  acc "sassoc"


	use	tv
sassq:  zero 3,-1

	tra	<lisp_quick_fcns_>|[sassq]
	zero
	zero	.sassq-lisp_subr_tv_,0
	use	Names
.sassq:  acc "sassq"


	use	tv
save:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp>|[save]
	zero	.save-lisp_subr_tv_,2
	use	Names
.save:  acc "save"


	use	tv
set:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[set]
	zero	.set-lisp_subr_tv_,0
	use	Names
.set:  acc "set"


	use	tv
setarg:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_>|[setarg]
	zero	.setarg-lisp_subr_tv_,0
	use	Names
.setarg:  acc "setarg"


	use	tv
setq:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[setq]
	zero	.setq-lisp_subr_tv_,2
	use	Names
.setq:  acc "setq"


	use	tv
shortnamestring:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_fns_>|[shortnamestring]
	zero	.shortnamestring-lisp_subr_tv_,0
	use	Names
.shortnamestring:  acc "shortnamestring"


	use	tv
signp:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_utils_>|[signp]
	zero	.signp-lisp_subr_tv_,2
	use	Names
.signp:  acc "signp"


	use	tv
sin:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_trig_>|[sin]
	zero	.sin-lisp_subr_tv_,0
	use	Names
.sin:  acc "sin"


	use	tv
sleep:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_trig_>|[sleep]
	zero	.sleep-lisp_subr_tv_,0
	use	Names
.sleep:  acc "sleep"


	use	tv
smallnump:  zero 1,-1

	tra	<lisp_quick_fcns_>|[smallnump]
	zero
	zero	.smallnump-lisp_subr_tv_,0
	use	Names
.smallnump:  acc "smallnump"


	use	tv
sqrt:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_trig_>|[sqrt]
	zero	.sqrt-lisp_subr_tv_,0
	use	Names
.sqrt:  acc "sqrt"


	use	tv
sstatus:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_status_fns_>|[sstatus]
	zero	.sstatus-lisp_subr_tv_,2
	use	Names
.sstatus:  acc "sstatus"


	use	tv
status:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_status_fns_>|[status]
	zero	.status-lisp_subr_tv_,2
	use	Names
.status:  acc "status"


	use	tv
store:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_oprs_>|[store]
	zero	.store-lisp_subr_tv_,2
	use	Names
.store:  acc "store"


	use	tv
stringlength:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_char_fns_>|[stringlength]
	zero	.stringlength-lisp_subr_tv_,0
	use	Names
.stringlength:  acc "stringlength"


	use	tv
stringp:  zero 1,-1

	tra	<lisp_quick_fcns_>|[stringp]
	zero
	zero	.stringp-lisp_subr_tv_,0
	use	Names
.stringp:  acc "stringp"


	use	tv
sub1:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[sub1]
	zero	.sub1-lisp_subr_tv_,0
	use	Names
.sub1:  acc "sub1"


	use	tv
sublis:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[sublis]
	zero	.sublis-lisp_subr_tv_,0
	use	Names
.sublis:  acc "sublis"


	use	tv
subrp:  zero 1,-1

	tra	<lisp_quick_fcns_>|[subrp]
	zero
	zero	.subrp-lisp_subr_tv_,0
	use	Names
.subrp:  acc "subrp"


	use	tv
subst:  zero 3,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[subst_]
	zero	.subst-lisp_subr_tv_,0
	use	Names
.subst:  acc "subst"


	use	tv
substr2:  zero 2,-1
	tsx6	pl1_fixup
	tra	<lisp_char_fns_>|[Substr2]
	zero	.substr2-lisp_subr_tv_,0
	use	Names
.substr2:  acc "substr2"


	use	tv
substr:  zero 1538,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_char_fns_>|[Substr]
	zero	.substr-lisp_subr_tv_,1
	use	Names
.substr:  acc "substr"


	use	tv
sysp:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_defsubr_>|[sysp]
	zero	.sysp-lisp_subr_tv_,0
	use	Names
.sysp:  acc "sysp"


	use	tv
terpri:  zero 512,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_print_>|[terpri]
	zero	.terpri-lisp_subr_tv_,1
	use	Names
.terpri:  acc "terpri"


	use	tv
throw:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_prog_fns_>|[throw]
	zero	.throw-lisp_subr_tv_,2
	use	Names
.throw:  acc "throw"


	use	tv
time:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_status_fns_>|[time]
	zero	.time-lisp_subr_tv_,0
	use	Names
.time:  acc "time"


	use	tv
times:  zero 261632,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[times]
	zero	.times-lisp_subr_tv_,1
	use	Names
.times:  acc "times"


	use	tv
tyi:  zero 1024,-1
	tsx6	type_1_subr
	tra	<lisp_reader_alm_>|[tyi]
	zero	.tyi-lisp_subr_tv_,1
	use	Names
.tyi:  acc "tyi"


	use	tv
tyipeek:  zero 512,-1
	tsx6	type_1_subr
	tra	<lisp_reader_alm_>|[tyipeek]
	zero	.tyipeek-lisp_subr_tv_,1
	use	Names
.tyipeek:  acc "tyipeek"


	use	tv
tyo:  zero 1025,-1
	tsx6	type_1_subr
	tra	<lisp_reader_alm_>|[tyo_alm]
	zero	.tyo-lisp_subr_tv_,1
	use	Names
.tyo:  acc "tyo"


	use	tv
typep:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_utils_>|[typep]
	zero	.typep-lisp_subr_tv_,0
	use	Names
.typep:  acc "typep"


	use	tv
xcons:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[xcons_]
	zero	.xcons-lisp_subr_tv_,0
	use	Names
.xcons:  acc "xcons"


	use	tv
zerop:  zero 1,-1

	tra	<lisp_quick_fcns_>|[zerop]
	zero
	zero	.zerop-lisp_subr_tv_,0
	use	Names
.zerop:  acc "zerop"


	use	tv
alphalessp:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[alphalessp]
	zero	.alphalessp-lisp_subr_tv_,0
	use	Names
.alphalessp:  acc "alphalessp"


	use	tv
samepnamep:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[samepnamep]
	zero	.samepnamep-lisp_subr_tv_,0
	use	Names
.samepnamep:  acc "samepnamep"


	use	tv
getchar:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[getchar]
	zero	.getchar-lisp_subr_tv_,0
	use	Names
.getchar:  acc "getchar"


	use	tv
sxhash:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_utils_>|[sxhash]
	zero	.sxhash-lisp_subr_tv_,0
	use	Names
.sxhash:  acc "sxhash"


	use	tv
gcd:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[gcd]
	zero	.gcd-lisp_subr_tv_,0
	use	Names
.gcd:  acc "gcd"


	use	tv
error:  zero 1536,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_error_>|[error]
	zero	.error-lisp_subr_tv_,1
	use	Names
.error:  acc "error"


	use	tv
setsyntax:  zero 3,-1
	tsx6	pl1_fixup
	tra	<lisp_status_fns_>|[setsyntax]
	zero	.setsyntax-lisp_subr_tv_,0
	use	Names
.setsyntax:  acc "setsyntax"


	use	tv
cursorpos:  zero 1024,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_io_fns_>|[cursorpos]
	zero	.cursorpos-lisp_subr_tv_,1
	use	Names
.cursorpos:  acc "cursorpos"


	use	tv
force_output:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_control_>|[force_output]
	zero	.force_output-lisp_subr_tv_,0
	use	Names
.force_output:  acc "force-output"


	use	tv
clear_input:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_control_>|[clear_input]
	zero	.clear_input-lisp_subr_tv_,0
	use	Names
.clear_input:  acc "clear-input"


	use	tv
haipart:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[haipart]
	zero	.haipart-lisp_subr_tv_,0
	use	Names
.haipart:  acc "haipart"


	use	tv
haulong:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_bignums_>|[haulong]
	zero	.haulong-lisp_subr_tv_,0
	use	Names
.haulong:  acc "haulong"


	use	tv
sort:  zero 2,-1
	tsx6	pl1_fixup
	tra	<lisp_array_fcns_>|[sort]
	zero	.sort-lisp_subr_tv_,0
	use	Names
.sort:  acc "sort"


	use	tv
sortcar:  zero 2,-1
	tsx6	pl1_fixup
	tra	<lisp_array_fcns_>|[sortcar]
	zero	.sortcar-lisp_subr_tv_,0
	use	Names
.sortcar:  acc "sortcar"


	use	tv
fillarray:  zero 2,-1
	tsx6	pl1_fixup
	tra	<lisp_array_fcns_>|[fillarray]
	zero	.fillarray-lisp_subr_tv_,0
	use	Names
.fillarray:  acc "fillarray"


	use	tv
listarray:  zero 1025,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_array_fcns_>|[listarray]
	zero	.listarray-lisp_subr_tv_,1
	use	Names
.listarray:  acc "listarray"


	use	tv
listify:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_>|[listify]
	zero	.listify-lisp_subr_tv_,0
	use	Names
.listify:  acc "listify"


	use	tv
quikload:  zero 0,-1
	drl	0
	odd
	zero	.quikload-lisp_subr_tv_,0
	use	Names
.quikload:  acc "listen"


	use	tv
funcall:  zero 261633,-1
	tsx6	type_1_subr
	tra	<lisp_>|[funcall]
	zero	.funcall-lisp_subr_tv_,1
	use	Names
.funcall:  acc "funcall"


	use	tv
listen:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_reader_alm_>|[listen]
	zero	.listen-lisp_subr_tv_,0
	use	Names
.listen:  acc "listen"


	use	tv
fixgcd:  zero 2,-1

	tra	<lisp_utils_>|[fixgcd]
	zero
	zero	.fixgcd-lisp_subr_tv_,0
	use	Names
.fixgcd:  acc "\\"


	use	tv
copysymbol:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[copysymbol]
	zero	.copysymbol-lisp_subr_tv_,0
	use	Names
.copysymbol:  acc "copysymbol"


	use	tv
load:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_load_>|[lisp_load_]
	zero	.load-lisp_subr_tv_,0
	use	Names
.load:  acc "load"


	use	tv
charpos:  zero 1025,-1

	tra	<lisp_reader_alm_>|[charpos]
	zero
	zero	.charpos-lisp_subr_tv_,1
	use	Names
.charpos:  acc "charpos"


	use	tv
linenum:  zero 1025,-1

	tra	<lisp_reader_alm_>|[linenum]
	zero
	zero	.linenum-lisp_subr_tv_,1
	use	Names
.linenum:  acc "linenum"


	use	tv
pagenum:  zero 1025,-1

	tra	<lisp_reader_alm_>|[pagenum]
	zero
	zero	.pagenum-lisp_subr_tv_,1
	use	Names
.pagenum:  acc "pagenum"


	use	tv
pagel:  zero 1025,-1

	tra	<lisp_reader_alm_>|[pagel]
	zero
	zero	.pagel-lisp_subr_tv_,1
	use	Names
.pagel:  acc "pagel"


	use	tv
endpagefn:  zero 1025,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_io_fns_>|[endpagefn]
	zero	.endpagefn-lisp_subr_tv_,1
	use	Names
.endpagefn:  acc "endpagefn"


	use	tv
percent_include:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_io_control_>|[percent_include]
	zero	.percent_include-lisp_subr_tv_,2
	use	Names
.percent_include:  acc "%include"


	use	tv
defaultf:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_fns_>|[defaultf]
	zero	.defaultf-lisp_subr_tv_,0
	use	Names
.defaultf:  acc "defaultf"


	use	tv
alloc:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_status_fns_>|[alloc]
	zero	.alloc-lisp_subr_tv_,0
	use	Names
.alloc:  acc "alloc"


	use	tv
implode:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_reader_>|[implode]
	zero	.implode-lisp_subr_tv_,0
	use	Names
.implode:  acc "implode"


	use	tv
purcopy:  zero 1,-1

	tra	<lisp_subr_tv_>|[purcopy_code]
	zero
	zero	.purcopy-lisp_subr_tv_,0
	use	Names
.purcopy:  acc "purcopy"


	use	tv
nreconc:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[nreconc_]
	zero	.nreconc-lisp_subr_tv_,0
	use	Names
.nreconc:  acc "nreconc"


	use	tv
err_1:  zero 1,-1
	tsx6	err_break-*,ic
	zero	0,0
	zero	.err_1-lisp_subr_tv_,0
	use	Names
.err_1:  acc "*internal-^b-break"


	use	tv
err_5:  zero 1,-1
	tsx6	err_break-*,ic
	zero	-1,8
	zero	.err_5-lisp_subr_tv_,0
	use	Names
.err_5:  acc "*internal-undf-fnctn-break"


	use	tv
err_6:  zero 1,-1
	tsx6	err_break-*,ic
	zero	-1,10
	zero	.err_6-lisp_subr_tv_,0
	use	Names
.err_6:  acc "*internal-unbnd-vrbl-break"


	use	tv
err_7:  zero 1,-1
	tsx6	err_break-*,ic
	zero	-1,12
	zero	.err_7-lisp_subr_tv_,0
	use	Names
.err_7:  acc "*internal-wrng-type-arg-break"


	use	tv
err_8:  zero 1,-1
	tsx6	err_break-*,ic
	zero	-1,14
	zero	.err_8-lisp_subr_tv_,0
	use	Names
.err_8:  acc "*internal-unseen-go-tag-break"


	use	tv
err_9:  zero 1,-1
	tsx6	err_break-*,ic
	zero	-1,16
	zero	.err_9-lisp_subr_tv_,0
	use	Names
.err_9:  acc "*internal-wrng-no-args-break"


	use	tv
err_10:  zero 1,-1
	tsx6	err_break-*,ic
	zero	0,18
	zero	.err_10-lisp_subr_tv_,0
	use	Names
.err_10:  acc "*internal-gc-lossage-break"


	use	tv
err_11:  zero 1,-1
	tsx6	err_break-*,ic
	zero	-1,20
	zero	.err_11-lisp_subr_tv_,0
	use	Names
.err_11:  acc "*internal-fail-act-break"


	use	tv
err_12:  zero 1,-1
	tsx6	err_break-*,ic
	zero	-1,22
	zero	.err_12-lisp_subr_tv_,0
	use	Names
.err_12:  acc "*internal-pdl-overflow-break"


	use	tv
err_19:  zero 1,-1

	tra	<lisp_subr_tv_>|[star_rset_trap]
	zero
	zero	.err_19-lisp_subr_tv_,0
	use	Names
.err_19:  acc "*internal-*rset-break"


	use	tv
err_18:  zero 1,-1

	tra	<lisp_subr_tv_>|[autoload_trap]
	zero
	zero	.err_18-lisp_subr_tv_,0
	use	Names
.err_18:  acc "*internal-autoload-trap"


	use	tv
getcharn:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_quick_fcns_>|[getcharn]
	zero	.getcharn-lisp_subr_tv_,0
	use	Names
.getcharn:  acc "getcharn"


	use	tv
subrcall:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_>|[subrcall]
	zero	.subrcall-lisp_subr_tv_,2
	use	Names
.subrcall:  acc "subrcall"


	use	tv
lsubrcall:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_>|[lsubrcall]
	zero	.lsubrcall-lisp_subr_tv_,2
	use	Names
.lsubrcall:  acc "lsubrcall"


	use	tv
arraycall:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_>|[arraycall]
	zero	.arraycall-lisp_subr_tv_,2
	use	Names
.arraycall:  acc "arraycall"


	use	tv
maknum:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[maknum]
	zero	.maknum-lisp_subr_tv_,0
	use	Names
.maknum:  acc "maknum"


	use	tv
munkam:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[munkam]
	zero	.munkam-lisp_subr_tv_,0
	use	Names
.munkam:  acc "munkam"


	use	tv
loadarrays:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_loadumparrays_>|[loadarrays]
	zero	.loadarrays-lisp_subr_tv_,0
	use	Names
.loadarrays:  acc "loadarrays"


	use	tv
dumparrays:  zero 2,-1
	tsx6	pl1_fixup
	tra	<lisp_loadumparrays_>|[dumparrays]
	zero	.dumparrays-lisp_subr_tv_,0
	use	Names
.dumparrays:  acc "dumparrays"


	use	tv
expt_fix:  zero 2,-1

	tra	<lisp_utils_>|[expt_fix]
	zero
	zero	.expt_fix-lisp_subr_tv_,0
	use	Names
.expt_fix:  acc "^"


	use	tv
expt_flt:  zero 2,-1

	tra	<lisp_utils_>|[expt_flo]
	zero
	zero	.expt_flt-lisp_subr_tv_,0
	use	Names
.expt_flt:  acc "^$"


	use	tv
symeval:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_>|[symeval]
	zero	.symeval-lisp_subr_tv_,0
	use	Names
.symeval:  acc "symeval"


	use	tv
plist:  zero 1,-1
	tsx6	type_1_subr
	tra	<lisp_property_fns_>|[plist_]
	zero	.plist-lisp_subr_tv_,0
	use	Names
.plist:  acc "plist"


	use	tv
setplist:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_property_fns_>|[setplist_]
	zero	.setplist-lisp_subr_tv_,0
	use	Names
.setplist:  acc "setplist"


	use	tv
open:  zero 1024,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_io_control_>|[open]
	zero	.open-lisp_subr_tv_,1
	use	Names
.open:  acc "open"


	use	tv
in:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_control_>|[in]
	zero	.in-lisp_subr_tv_,0
	use	Names
.in:  acc "in"


	use	tv
out:  zero 2,-1
	tsx6	pl1_fixup
	tra	<lisp_io_control_>|[out]
	zero	.out-lisp_subr_tv_,0
	use	Names
.out:  acc "out"


	use	tv
truename:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_io_fns_>|[truename]
	zero	.truename-lisp_subr_tv_,0
	use	Names
.truename:  acc "truename"


	use	tv
evalhook:  zero 2,-1
	tsx6	type_1_subr
	tra	<lisp_>|[evalhook]
	zero	.evalhook-lisp_subr_tv_,0
	use	Names
.evalhook:  acc "evalhook"


	use	tv
fsc:  zero 2,-1

	tra	<lisp_utils_>|[fsc]
	zero
	zero	.fsc-lisp_subr_tv_,0
	use	Names
.fsc:  acc "fsc"


	use	tv
ifix:  zero 1,-1

	tra	<lisp_utils_>|[ifix]
	zero
	zero	.ifix-lisp_subr_tv_,0
	use	Names
.ifix:  acc "ifix"


	use	tv
progv:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_prog_fns_>|[progv]
	zero	.progv-lisp_subr_tv_,2
	use	Names
.progv:  acc "progv"


	use	tv
mapatoms:  zero 1025,-1
	tsx6	pl1_lsubr_fixup
	tra	<lisp_array_fcns_>|[mapatoms]
	zero	.mapatoms-lisp_subr_tv_,1
	use	Names
.mapatoms:  acc "mapatoms"


	use	tv
symbolp:  zero 1,-1

	tra	<lisp_quick_fcns_>|[symbolp]
	zero
	zero	.symbolp-lisp_subr_tv_,0
	use	Names
.symbolp:  acc "symbolp"


	use	tv
filep:  zero 1,-1

	tra	<lisp_quick_fcns_>|[filep]
	zero
	zero	.filep-lisp_subr_tv_,0
	use	Names
.filep:  acc "filep"


	use	tv
suspend:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_command_caller_>|[suspend]
	zero	.suspend-lisp_subr_tv_,0
	use	Names
.suspend:  acc "suspend"


	use	tv
ctrl_g:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_fault_handler_>|[ctrl_g_function]
	zero	.ctrl_g-lisp_subr_tv_,0
	use	Names
.ctrl_g:  acc "^g"


	use	tv
unwind_protect:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_prog_fns_>|[unwind_protect]
	zero	.unwind_protect-lisp_subr_tv_,2
	use	Names
.unwind_protect:  acc "unwind-protect"


	use	tv
let:  zero 0,-1
	tsx6	type_1_subr
	tra	<lisp_>|[let]
	zero	.let-lisp_subr_tv_,2
	use	Names
.let:  acc "let"


	use	tv
arrayp:  zero 1,-1

	tra	<lisp_quick_fcns_>|[arrayp]
	zero
	zero	.arrayp-lisp_subr_tv_,0
	use	Names
.arrayp:  acc "arrayp"


	use	tv
list_star:  zero 261633,-1
	tsx6	type_1_subr
	tra	<lisp_alloc_>|[list_star_]
	zero	.list_star-lisp_subr_tv_,1
	use	Names
.list_star:  acc "list*"


	use	tv
eval_when:  zero 0,-1
	tsx6	pl1_fixup
	tra	<lisp_prog_fns_>|[eval_when]
	zero	.eval_when-lisp_subr_tv_,2
	use	Names
.eval_when:  acc "eval-when"


	use	tv
read_from_string:  zero 1,-1
	tsx6	pl1_fixup
	tra	<lisp_reader_>|[read_from_string]
	zero	.read_from_string-lisp_subr_tv_,0
	use	Names
.read_from_string:  acc "read-from-string"


	use	tv
prog1:  zero 261633,-1

	tra	<lisp_quick_fcns_>|[prog1]
	zero
	zero	.prog1-lisp_subr_tv_,1
	use	Names
.prog1:  acc "prog1"

