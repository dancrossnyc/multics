/* BEGIN INCLUDE FILE ...  probe_break_slot.incl.pl1

   This is separate from probe_break_info.incl.pl1 because many programs
   need to get at a break_slot, but don't deserve to see the rest of that information

*/

dcl 1 break_slot based (bsp) aligned,			/* describes (and handles) each probe break */
    2 item_type fixed bin,				/* 0 -> break_slot type code */
    2 breakmap_header_offset bit (18) unal,		/* to break map header, chain is not used */
    2 statement_item_offset bit (18) unal,
    2 size fixed bin,				/* number of words in the break_slot */
    2 sequence (0:7),				/* "before" or "after" instructions to "trap" the break */
      3 offset bit (18) unaligned,			/* address portion, some patched */
      3 skip bit (18) unaligned,			/* op code portion */
    2 old_instruction bit (36) aligned,			/* instruction that was replaced by break */
    2 symbol_block_offset bit (18) unal,		/*  for containing block */
    2 location bit (18) unal,				/* offset of instruction that was replaced by break */
    2 type fixed bin,				/* 0 -> after, 1 -> before */
    2 count fixed bin,				/* number of characters in command list */
    2 command_list character (0 refer (break_slot.count));	/* command list associated with break */

dcl bsp ptr;

dcl (BREAK_AFTER init (0),
     BREAK_BEFORE init (1),
     BREAK_AT init (2)) fixed bin internal static options (constant);

dcl  PLACE (0:2) char (8) aligned internal static options (constant) init ("after", "before", "at");

/* END INCLUDE FILE ... probe_break_slot.incl.pl1 */
