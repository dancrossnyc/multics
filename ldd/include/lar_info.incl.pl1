/*  Begin include file lar_info.incl.pl1			  */

/* Original version Aug 1977 */
/* Modified May 1978 by T. Casey to add many new parameters */
/* Modified November 1978 by T. Casey to add several variables for MR7.0 */
/* Modified to add queue_name 11/05/79 S. Herbst */
/* Modified Jan 1982 by G. Dixon to dcl constants for request_type values */

/****^  HISTORY COMMENTS:
  1) change(88-04-20,Parisek), approve(88-06-13,MCR7913),
     audit(88-08-16,Farley), install(88-08-22,MR12.2-1089):
     A) Added the abs_rqi, com_rqi, output_rqi, retv_rqi, and imft_rqi
        elements to store bit values which determine what specific data is
        requested by request_info command/AF.  Modified the pad field
        to fill in the remaining unused word.
     B) Included the arrays defining the information keywords used with
        request_info (rqi).  Each element in these arrays pertains to a
        bit value within one of the bit strings listed in A above.  Also,
        the order of each element represents the identical order of the
        respective bit within the above mentioned bit strings.
     C) Added forms_sw and forms_name elements for storing info about
        requested output special forms.
  2) change(88-08-25,Farley), approve(88-09-16,MCR7911),
     audit(88-09-29,Wallman), install(88-10-28,MR12.2-1199):
     Increased forms_name to 64 characters.
                                                   END HISTORY COMMENTS */


dcl  info_ptr ptr;
dcl 1 info aligned based (info_ptr),
    2 temptr ptr aligned,				/* pointer to temporary segment */
    2 mseg_idx fixed bin aligned,			/* offset of message segment */
    2 request_type fixed bin,				/* ABS, IO, OUTPUT, RETV */
    2 queue_name char (32) unal,			/* request type for io_daemon: printer, punch, etc. */
    2 queue fixed bin aligned,			/* priority level of message segment */
    2 input_count fixed bin (21) aligned,		/* length of temporary in chars when called */
    2 output_count fixed bin (21) aligned,		/* length of temporary in chars on return */
    2 select_count fixed bin aligned,			/* returned count of selected entries (from all queues) */
    2 user_select_count fixed bin aligned,		/* returned count of requests for specified user (from all Qs) */
    2 message_count fixed bin,			/* returned count of total entries (from all queues) */
    2 switches,
      3 long_sw bit (1) unaligned,			/* on - long format */
      3 admin_sw bit (1) unaligned,			/* on - admin option */
      3 total_sw bit (1) unaligned,			/* on - totals only */
      3 user_sw bit (1) unaligned,			/* on - look for supplied person.project */
      3 immediate bit (1) unaligned,			/* on - return only non-deferred matches */
      3 long_id_sw bit (1) unaligned,			/* on - print long ID even when not in long format */
      3 all_opt_sw bit (1) unaligned,			/* on - all queue data wanted */
      3 q_opt_sw bit (1) unaligned,			/* on - user specified a queue */
      3 path_sw bit (1) unaligned,			/* on - print full pathname even when not in long format */
      3 brief_sw bit (1) unaligned,			/* on - brief format */
      3 position_sw bit (1) unaligned,			/* on - print position in queue */
      3 resource_sw bit (1) unaligned,			/* on - print just rq's w/resource arg and print resource */
      3 dirname_sw bit (1) unaligned,			/* on - dirname given */
      3 ename_sw bit (1) unaligned,			/* on - ename given */
      3 id_sw bit (1) unaligned,			/* on - request ID given */
      3 deferred_indefinitely bit (1) unaligned,		/* on - print only requests that are deferred indefinitely */
      3 sender_sw bit (1) unaligned,			/* on - sender (RJE station) given */
      3 no_total_sw bit (1) unaligned,			/* RETURNED: on if unable to get totals for a queue */
      3 abs_q_1 bit (1) unaligned,			/* on - listing abs Qs 0 & 1, pretending all from 1 */
      3 resource_name_sw bit (1) unaligned,		/* on - resource name given */
      3 search_all bit (1) unaligned,			/* on - search all Qs, list ones that we select requests from */
      3 forms_sw bit (1) unaligned,			/* on - special forms name given */
      3 abs_rqi bit (13) unaligned,			/* each bit represents 1 request element */
      3 com_rqi bit (11) unaligned,			/* each bit represents 1 request element */
      3 output_rqi bit (11) unaligned,			/* each bit represents 1 request element */
      3 retv_rqi bit (4) unaligned,			/* each bit represents 1 request element */
      3 imft_rqi bit (3) unaligned,			/* each bit represents 1 request element */
      3 pad bit (8) unaligned,			/* rest of word */
    2 person char (28) aligned,			/* supplied person name - may be "*" */
    2 project char (28) aligned,			/* supplied project name - may be "*" */
    2 request_id char (19) aligned,			/* select request(s) matching this ID */
    2 dirname char (168) unal,			/* select requests from this directory */
    2 ename char (32) unal,				/* select requests matching this ename (can be starname) */
    2 sender char (32) aligned,			/* select requests entered by this RJE station */
    2 resource_name char (100) varying aligned,		/* select requests requiring the named resource(s) */
    2 forms_name char (64) unal;			/* select requests requiring the named form(s) */

						/* possible values for info.request_type.	*/
dcl ABS    fixed bin int static options(constant) init(1),	/*   list_abs_requests			*/
    IO     fixed bin int static options(constant) init(2),	/*   list_daemon_requests (almost obsolete)	*/
    OUTPUT fixed bin int static options(constant) init(3),	/*   list_output_requests			*/
    RETV   fixed bin int static options(constant) init(4);	/*   list_retrieval_requests			*/

						/* below is defined the request_info */
						/* information keyword arrays */
/* The order of the following keywords within their respective arrays is
   important as each element MUST be kept in sync with the respective
   bit defined in com_rqi, abs_rqi, retv_rqi, output_rqi, or imft_rqi.
   If any additional keywords are added in the future be sure a corresponding
   bit is added to the proper bit string above.  Also add the format data
   for the new element within its proper place in the buffer_element routine
   of lar_util_.
*/

dcl	abs_keywords                  (28) char(32) int static options (constant) init
	     ("max_cpu_time", "limit", "li",		/* 1 */
	     "output_file", "of",			/* 2 */
	     "proxy_name", "pxn",			/* 3 */
	     "resource", "rsc",			/* 4 */
	     "sender",				/* 5 */
	     "comment",				/* 6 */
	     "args",				/* 7 */
	     "home_dir", "hd",			/* 8 */
	     "init_proc", "ip",			/* 9 */
	     "initial_ring", "ring", "rg",		/* 10 */
	     "authorization", "auth",			/* 11 */
	     "deferred_time", "dftime", "time", 
	          "dftm", "tm",			/* 12 */
	     "deferred_by", "dfb"),			/* 13 */

	abs_keyword_index             (28) fixed bin int static options (constant) init
						/* index in info.abs_rqi */
	     (1, 1, 1, 2, 2, 3, 3, 4, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10, 10,
	     11, 11, 12, 12, 12, 12, 12, 13, 13),

	com_keywords                  (23) char(32) int static options (constant) init
	     ("all", "a",				/* 1 */
	     "request_id", "id",			/* 2 */
	     "submitter",				/* 3 */
	     "position", "pos",			/* 4 */
	     "directory", "dr",			/* 5 */
	     "entry", "et",				/* 6 */
	     "enter_time", "etime", "etm",		/* 7 */
	     "message_type", "type", "tp",		/* 8 */
	     "queue", "q",				/* 9 */
	     "state", "st",				/* 10 */
	     "request_flags", "flags"),		/* 11 */

	com_keyword_index             (23) fixed bin int static options (constant) init
						/* index in info.com_rqi */
	     (1, 1, 2, 2, 3, 4, 4, 5, 5, 6, 6, 7, 7, 7, 8, 8, 8,
	     9, 9, 10, 10, 11, 11),

	output_keywords               (23) char(32) int static options (constant) init
	     ("bit_count", "bc",			/* 1 */
	     "copies", "cp",			/* 2 */
	     "destination", "dest", "ds",		/* 3 */
	     "heading", "he",			/* 4 */
	     "indent", "ind", "in",			/* 5 */
	     "line_length", "ll",			/* 6 */
	     "page_length", "pl",			/* 7 */
	     "top_label", "tlbl",			/* 8 */
	     "bottom_label", "blbl",			/* 9 */
	     "output_conversion", "ocv",		/* 10 */
	     "forms"),				/* 11 */

	output_keyword_index          (23) fixed bin int static options (constant) init
						/* index in info.output_rqi */
	     (1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 8, 
	     9, 9, 10, 10, 11),

	retv_keywords                 (10) char(32) int static options (constant) init
	     ("from_time", "fmtime", "fmtm",		/* 1 */
	     "new_dir", "ndr",			/* 2 */
	     "new_entry", "net",			/* 3 */
	     "to_time", "ttime", "ttm"),		/* 4 */

	retv_keyword_index            (10) fixed bin int static options (constant) init
						/* index in info.retv_rqi */
	     (1, 1, 1, 2, 2, 3, 3, 4, 4, 4),

	imft_keywords                 (6) char(32) int static options (constant) init
	     ("foreign_dir", "fdr",			/* 1 */
	     "foreign_entry", "fet",			/* 2 */
	     "foreign_user", "fu"),			/* 3 */

	imft_keyword_index            (6) fixed bin int static options (constant) init
						/* index in info.imft_rqi */
	     (1, 1, 2, 2, 3, 3);

/*  End include file lar_info.incl.pl1			  */
