/* BEGIN INCLUDE FILE dsatm_tty_modes.incl.pl1                               */

/*^*************************************************************************^*/
/*							       */
/*   Defines all the TTY boolean modes supported on a DSA network.	       */
/*   Some of them have more than one name:  the old tty name, and a new      */
/*   name more appropriate to the function it is supplying in DSA.           */
/*							       */
/*   Written by Roger Negaret in December 1984.			       */
/*^*************************************************************************^*/

/****^  HISTORY COMMENTS:
  1) change(87-02-02,Negaret), approve(), audit(), install():
     the mode "ln0_on_input" has been renamed "line_count".
  2) change(87-07-13,LJAdams), approve(87-07-13,MCR7742),
     audit(87-07-23,Gilcrease), install(87-08-04,MR12.1-1056):
     Declared pointer infop upon which structure tty_modes_string is based.
     Declared DSA_modestr defined TTY_BOOLEAN_MODE_DSA_NAME to use in cv_ttf.
  3) change(88-07-05,Parisek), approve(88-07-05,MCR7928),
     audit(88-07-08,Beattie), install(88-07-19,MR12.2-1061):
     Changed declaration of DSA_modestr to use the "simple defining" technique
     thus fixing compilation errors resulting from the use of the "isub"
     value within a "isub defining" technique (defining techniques as
     described in Multics PL/I Reference Manual - AM83).
                                                   END HISTORY COMMENTS */

/* format: style3,dclind5,idind32,insnl,ll79,comcol38 */

/* format: off */

dcl N_TTY_BOOLEAN_MODES fixed bin int static options (constant) init (26);

/* Names of the modes:                                           */
/* The slots <= 0 correspond to MCS modes without effect in DSA. */

dcl TTY_BOOLEAN_MODE_MCS_NAME (-4:26) char (8) int static options (constant) init
               (/*** MCS modes without effect */
               "fulldpx",  "replay",   "prefixnl", "wake_tbl", "oddp",
               /*** Modes supported */
               "edited",   "tabs",     "can",      "esc",      "erkl",
               "rawi",     "rawo",     "red",      "vertsp",   "crecho",
               "lfecho",   "tabecho",  "hndlquit", "echoplex", "capo", 
               "polite",   "ctl_char", "blk_xfer", "breakall", "scroll",
	     "iflow",    "oflow",    "8bit",     "no_outp",  "sdialog",
	     "fep_edit");

dcl TTY_BOOLEAN_MODE_DSA_NAME (26) char (12) int static options (constant) init (

               "edited",   "tabs",     "can",      "esc",      "erkl",
               "rawi",     "rawo",     "red",      "vertsp",   "crecho",
               "lfecho",   "tabecho",  "hndlquit", "echoplex", "capo", 
               "polite",   "ctl_char", "blk_xfer", "screen",   "line_count",
               "iflow",    "oflow",    "i8bit",    "o8bit",    "sdialog",
	     "fep_edit");

dcl  DSA_modestr (1:26) character (12) unaligned defined (TTY_BOOLEAN_MODE_DSA_NAME);

/* if ON this mode needs the STC ability to be implemented */

dcl  TTY_BOOLEAN_MODE_NEED_STC (26) bit (1) int static options (constant) init
               ("0"b,      "0"b,      "1"b,      "1"b,      "1"b,
                "1"b,      "1"b,      "0"b,      "0"b,      "1"b,  
                "1"b,      "1"b,      "1"b,      "1"b,      "0"b, 
                "1"b,      "0"b,      "1"b,      "1"b,      "1"b,
                "1"b,      "1"b,      "1"b,      "1"b,      "1"b,
	      "1"b);
/* format: on */

/* list of modes in a structure.     */
/* In comment, the index of the mode */

dcl  1 tty_boolean_modes	       based aligned,
       2 edited		       bit (1) unal /*  1 */,
       2 tabs		       bit (1) unal /*  2 */,
       2 can		       bit (1) unal /*  3 */,
       2 esc		       bit (1) unal /*  4 */,
       2 erkl		       bit (1) unal /*  5 */,
       2 rawi		       bit (1) unal /*  6 */,
       2 rawo		       bit (1) unal /*  7 */,
       2 red		       bit (1) unal /*  8 */,
       2 vertsp		       bit (1) unal /*  9 */,
       2 crecho		       bit (1) unal /* 10 */,
       2 lfecho		       bit (1) unal /* 11 */,
       2 tabecho		       bit (1) unal /* 12 */,
       2 hndlquit		       bit (1) unal /* 13 */,
       2 echoplex		       bit (1) unal /* 14 */,
       2 capo		       bit (1) unal /* 15 */,
       2 polite		       bit (1) unal /* 16 */,
       2 ctl_char		       bit (1) unal /* 17 */,
       2 blk_xfer		       bit (1) unal /* 18 */,
       2 screen		       bit (1) unal /* 19 */,
       2 line_count		       bit (1) unal /* 20 */,
       2 iflow		       bit (1) unal /* 21 */,
       2 oflow		       bit (1) unal /* 22 */,
       2 i8bit		       bit (1) unal /* 23 */,
       2 o8bit		       bit (1) unal /* 24 */,
       2 sdialog		       bit (1) unal /* 25 */,
       2 fep_edit		       bit (1) unal /* 26 */,
       2 pad2		       bit (10) unal /* 27-36 */;

/* User structure to set or get the modes */

dcl  infop                           ptr;

dcl  1 tty_modes_string	       based (infop),
       2 len		       fixed bin,
       2 str		       char (512);

/* more modes */

dcl  TTY_MORE_MODE		       (2) char (8) aligned int static
			       options (constant)
			       init ("clear", "scroll");

dcl  TMM_CLEAR		       fixed bin int static
			       options (constant) init (1);
dcl  TMM_SCROLL		       fixed bin int static
			       options (constant) init (2);

/* Canonicalization types */

dcl  TTY_CANON_TYPE		       (2) char (10) aligned int static
			       options (constant)
			       init ("overstrike", "replace");

dcl  TCT_OVERSTRIKE		       fixed bin int static
			       options (constant) init (1);
dcl  TCT_REPLACE		       fixed bin int static
			       options (constant) init (2);


/* END INCLUDE FILE dsatm_tty_modes.incl.pl1                                 */
