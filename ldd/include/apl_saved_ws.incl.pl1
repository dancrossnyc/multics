/* ====== BEGIN INCLUDE SEGMENT	apl_saved_ws.incl.pl1 ===================================== */

/* This include file describes the format of a saved workspace. */

/* all packed pointer items are "pseudo-pointers" to other data items within the saved ws, identifying
   the component and word offset within the MSF.
   all fixed binary (21) items are "bead numbers", representing indicies into the bead_description_table. */

declare	current_save_version fixed binary internal static initial (4),
	saved_ws_info_pointer pointer;

declare 1 saved_ws_info		aligned based (saved_ws_info_pointer),
	2 save_version		fixed binary,	/* Version number of this declaration. */
	2 highest_segment		fixed binary,	/* number of internal segments in ws. */
	2 bead_table_pointer 	pointer unaligned,	/* pointer to bead_description_table */
	2 total_beads 		fixed binary (24),	/* size of bead_description_table */
	2 padding			fixed binary (35) dimension (4),	/* reserved just in case. */
	2 other_ws_info aligned,
	  3 digits		fixed bin,
	  3 width			fixed bin,
	  3 index_origin		fixed bin,
	  3 random_link		fixed bin (35),
	  3 fuzz			float,
	  3 float_index_origin	float,
	  3 number_of_symbols	fixed bin,
	  3 current_parse_frame_ptr	pointer unaligned,
	  3 time_saved		fixed binary (71),
	  3 integer_fuzz		float,
	  3 user_number		fixed bin (35),
	  3 latent_expression	fixed bin (21),	/* bead number of latent expression */
	  3 lock			char (32),
	  3 wsid			char (100),
	  3 user_name		char (32);

declare	saved_bead_count fixed bin,
	bead_description_pointer pointer;

declare 1 bead_description_table 	aligned based (bead_description_pointer) dimension (saved_bead_count),
	2 bead_pointer 		pointer unaligned;	/* pseudo pointer to bead */

declare	saved_bead_pointer pointer,
	(symbol_name_length, total_members) fixed binary;

declare	1 saved_general_bead	aligned based (saved_bead_pointer),
	  2 type			unaligned like general_bead.type,
	  2 size			unaligned bit (18);	/* N.B.: this is the # of words in the original bead, */
						/* not the saved bead. */

declare	1 saved_value_bead		aligned based (saved_bead_pointer),
	  2 header		aligned like saved_general_bead,
	  2 total_data_elements	fixed binary (21),
	  2 rhorho		fixed binary,
	  2 data_pointer		unaligned pointer,
	  2 rho			fixed binary (21) dimension (number_of_dimensions refer (saved_value_bead.rhorho));

declare	saved_boolean_datum		bit (data_elements) aligned based;


declare	1 saved_sb		aligned based (saved_bead_pointer),
	  2 header	 	aligned like saved_general_bead,
	  2 meaning_pointer		fixed binary (21),
	  2 name_length 		fixed binary,
	  2 name			character (symbol_name_length refer (saved_sb.name_length)) unaligned;



declare	1 saved_lb		aligned based (saved_bead_pointer),
	  2 header		aligned like saved_general_bead,
	  2 number_of_members	fixed bin,
	  2 members		dim (total_members refer (saved_lb.number_of_members)) aligned,
	    3 member_ptr		fixed binary (21),
	    3 bits		unaligned like operator_bead.bits_for_parse;



declare	1 saved_gb		aligned based (saved_bead_pointer),
	  2 header		aligned like saved_general_bead,
	  2 number_of_members	fixed binary,
	  2 member		fixed binary (21) dimension (total_members refer (saved_gb.number_of_members));


declare	1 saved_fb		aligned based (saved_bead_pointer),
	  2 header		aligned like saved_general_bead,
	  2 class			fixed bin,
	  2 stop_control_pointer	fixed bin (21),
	  2 trace_control_pointer	fixed bin (21),
	  2 text_length		fixed bin,
	  2 text			aligned char (data_elements refer (saved_fb.text_length));

declare	(saved_frame_pointer, saved_reductions_pointer) pointer;

declare
	1 saved_pf		based(saved_frame_pointer) aligned,
	  2 last_parse_frame_ptr	ptr unaligned,	/* pseudo-pointer to last parse frame, or null */
	  2 parse_frame_type	fixed bin,
	  2 function_bead_ptr	fixed bin (21),	/* pseudo-pointer to function bead */
	  2 current_parseme		unal fixed bin (17),
	  2 current_lexeme		unal fixed bin (17),
	  2 current_line_number	unal fixed bin (17),
	  2 return_point		unal fixed bin (17),
	  2 put_result		unal fixed bin (17),
	  2 print_final_value	unal bit,
	  2 re_lex_source		unal bit,		/* if 1, re-lex the source for this frame */
	  2 pad			unal bit (16),
	  2 number_of_ptrs		fixed bin,
	  2 old_meaning_ptrs	dim (number_of_ptrs refer (saved_pf.number_of_ptrs)) fixed bin (21);
						/* old meanings for local variables */

declare
	1 v3_saved_pf		based (saved_frame_pointer) aligned,
	  2 last_parse_frame_ptr	ptr unaligned,	/* pseudo-pointer to last parse frame, or null */
	  2 parse_frame_type	fixed bin,
	  2 function_bead_ptr	fixed bin (21),	/* pseudo-pointer to function bead */
	  2 current_parseme		unal fixed bin (17),
	  2 current_lexeme		unal fixed bin (17),
	  2 current_line_number	unal fixed bin (17),
	  2 return_point		unal fixed bin (17),
	  2 put_result		unal fixed bin (17),
	  2 print_final_value	unal bit,
	  2 re_lex_source		unal bit,		/* if 1, re-lex the source for this frame */
	  2 pad			unal bit (16),
	  2 old_meaning_ptrs	dim (number_of_ptrs) fixed bin (21);
						/* old meanings for local variables */

declare
	1 saved_rs		dim(1000) aligned based(saved_reductions_pointer),
	  2 type			fixed bin,	/* type of parseme */
	  2 bits			unaligned like operator_bead.bits_for_parse,
	  2 semantics		fixed bin (21),	/* pseudo-pointer */
	  2 lexeme		fixed bin,

	1 saved_rs_for_op		dim(1000) aligned based(saved_reductions_pointer),
	  2 type			fixed bin,
	  2 bits			unaligned like operator_bead.bits_for_parse,
	  2 semantics		fixed bin,
	  2 lexeme		fixed bin;


declare	1 saved_sf		aligned based (saved_frame_pointer),
	  2 last_frame_pointer 	pointer unaligned,	/* pointer to last parse frame, or null	*/
	  2 frame_type 		fixed binary,	/* = save_frame_type */
	  2 saved_symbol_count	fixed binary (29),
	  2 symbol_list		aligned dimension (total_symbols refer (saved_sf.saved_symbol_count)),
	    3 symbol_pointer	fixed binary (21),	/* bead number of each symbol bead */
	    3 saved_meaning_pointer	fixed binary (21);	/* bead number of meaning at the time frame is created */

/* ------ END INCLUDE SEGMENT		apl_saved_ws.incl.pl1 ------------------------------------- */
