/* BEGIN INCLUDE FILE ... pascal_symbol_node.incl.pl1 */

/****^  HISTORY COMMENTS:
  1) change(86-09-15,JMAthane), approve(86-09-15,MCR7525),
     audit(86-09-15,Martinson), install(86-11-12,MR12.0-1208):
     Added size_is_encoded field in header.
                                                   END HISTORY COMMENTS */

/* Written January 1983 by Melanie Weaver */
/* Added size_is_encoded field in header May 85. JMAthane */

     dcl	   1 pascal_symbol_node_header aligned based,
	     2 flags	      unaligned,		/* indicate which pieces the node contains */
	       3 version_flag     bit (1) unaligned,	/* always "0"b for post-version II PL/I format */
	       3 aligned	      bit (1) unaligned,
	       3 packed	      bit (1) unaligned,
	       3 in_with_block    bit (1) unaligned,
	       3 name_next	      bit (1) unaligned,
	       3 base_type_info   bit (1) unaligned,
	       3 address	      bit (1) unaligned,
	       3 father_brother   bit (1) unaligned,
	       3 son_level	      bit (1) unaligned,
	       3 father_type_successor bit (1) unaligned,
	       3 size	      bit (1) unaligned,
	       3 offset	      bit (1) unaligned,
	       3 subrange_limits  bit (1) unaligned,
	       3 array_info	      bit (1) unaligned,
	       3 variant_info     bit (1) unaligned,
	       3 size_is_encoded  bit (1) unaligned,
	       3 pad	      bit (2) unaligned,
	     2 version	      fixed bin (17) unaligned, /* version of this node format */
	     2 type	      fixed bin (17) unaligned, /* (extended) data type */
	     2 type_offset	      fixed bin (18) unsigned unaligned; /* rel ptr to type node */

     dcl	   1 pascal_name_next     aligned based,
	     2 name	      fixed bin (18) unsigned unaligned, /* rel ptr to acc name */
	     2 next_token	      fixed bin (18) unsigned unaligned; /* rel ptr to next of same class */

     dcl	   1 pascal_base_type_info aligned based,
	     2 base_type	      fixed bin (17) unaligned, /* type of type */
	     2 base_type_offset   fixed bin (18) unsigned unaligned;

     dcl	   1 pascal_address	      aligned based,
	     2 location	      fixed bin (18) unsigned unaligned, /* location in storage class */
	     2 class	      fixed bin (6) unsigned unaligned, /* storage class */
	     2 use_digit	      bit (1) unaligned,
	     2 units	      bit (2) unaligned,	/* addressing units */
	     2 offset_is_encoded  bit (1) unaligned,	/* "1"b if pascal_offset is encoded */
	     2 pad	      bit (8) unaligned;

     dcl	   1 pascal_father_brother aligned based,
	     2 father	      fixed bin (18) unsigned unaligned, /* rel ptr to father node */
	     2 brother	      fixed bin (18) unsigned unaligned; /* rel ptr to brother node */

     dcl	   1 pascal_son_level     aligned based,
	     2 son	      fixed bin (18) unsigned unaligned, /* rel ptr to son node */
	     2 level	      fixed bin (6) unsigned unaligned, /* record level; also enum. type elt. */
	     2 pad	      bit (12) unaligned;

     dcl	   1 pascal_father_type_successor aligned based,
	     2 father_type	      fixed bin (17) unaligned,
	     2 successor	      fixed bin (18) unsigned unaligned;

     dcl	   pascal_size	      fixed bin (35) based;	/* precision, string size, etc. */

     dcl	   pascal_offset	      fixed bin (35) based;	/* offset from address */

     dcl	   1 pascal_subrange_limits aligned based,
	     2 flags	      aligned,
	       3 lower_bound_is_encoded bit (1) unaligned,
	       3 upper_bound_is_encoded bit (1) unaligned,
	       3 pad	      bit (34) unaligned,
	     2 subrange_lower_bound
			      fixed bin (35),
	     2 subrange_upper_bound
			      fixed bin (35);

     dcl	   1 pascal_array_info    aligned based,	/* info about array subscripts */
	     2 access_info	      aligned,
	       3 ndims	      fixed bin (6) unsigned unaligned, /* number of dimensions */
	       3 use_digit	      fixed bin (1) unsigned unaligned, /* if "1"b and units are half words,
						      units are really digits */
	       3 array_units      fixed bin (2) unsigned unaligned,
	       3 virtual_origin_is_encoded
			      bit (1) unaligned,
	       3 pad	      bit (26) unaligned,
	     2 virtual_origin     fixed bin (35),
	     2 bounds	      (nd refer (pascal_array_info.access_info.ndims))
			      aligned,
	       3 lower	      fixed bin (35),
	       3 upper	      fixed bin (35),
	       3 multiplier	      fixed bin (35),
	       3 subscript_type   fixed bin (17) unaligned,
	       3 subscript_type_offset
			      fixed bin (18) unsigned unaligned,
	       3 flags	      aligned,
	         4 lower_is_encoded
			      bit (1) unaligned,
	         4 upper_is_encoded
			      bit (1) unaligned,
	         4 multiplier_is_encoded
			      bit (1) unaligned,
	         4 pad	      bit (33) unaligned;

     dcl	   1 pascal_variant_info  aligned based,	/* info to locate a record's variants */
	     2 number_of_variants
			      fixed bin (17) unaligned,
	     2 pad	      bit (18) unaligned,
	     2 first_value_in_set fixed bin (35) unaligned, /* value corresponding to the first bit in set stings  */
	     2 case	      (nvariants refer
			      (pascal_variant_info.number_of_variants)),
	       3 set_offset	      fixed bin (18) unsigned unaligned, /* bit string specifies cases;
						       set's base type is this node's type */
	       3 brother	      fixed bin (18) unsigned unaligned; /* rel ptr to brother for this variant */

     dcl	   1 pascal_encoded_value aligned based,	/* extended encoded value format */
	     2 code	      bit (6) unaligned,	/* tells how to interpret the other fields */
	     2 (n1, n2)	      bit (6) unaligned,
	     2 n3		      fixed bin (18) unsigned unaligned;

     dcl	   nvariants	      fixed bin (17);
     dcl	   nd		      fixed bin (6) unsigned;



/* END INCLUDE FILE ... pascal_symbol_node.incl.pl1 */
