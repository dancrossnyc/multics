
/* BEGIN INCLUDE FILE ...   cobol_addr_tokens.incl.pl1 */


/****^  HISTORY COMMENTS:
  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8058),
     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
     MCR8058 cobol_addr_tokens.incl.pl1 Change array extents to refer to
     constants rather than variables.
                                                   END HISTORY COMMENTS */


/* Last modified on 10/1/74 by tg */


/* parameter list */

     dcl	   (input_ptr, inst_ptr, reloc_ptr) ptr;


/* input_struc_basic is used for type 1 addressing */

     dcl	   1 input_struc_basic    based (input_ptr),
	     2 type	      fixed bin,
	     2 operand_no	      fixed bin,
	     2 lock	      fixed bin,
	     2 segno	      fixed bin,
	     2 char_offset	      fixed bin (24),
	     2 send_receive	      fixed bin;


     dcl	   1 input_struc	      based (input_ptr),
	     2 type	      fixed bin,
	     2 operand_no	      fixed bin,
	     2 lock	      fixed bin,
	     2 operand	      (0 refer (input_struc.operand_no)),
	       3 token_ptr	      ptr,
	       3 send_receive     fixed bin,
	       3 ic_mod	      fixed bin,
	       3 size_sw	      fixed bin;

/* reloc_struc is used for all types of addressing * all types */

     dcl	   1 reloc_struc	      (input_struc.operand_no + 1) based (reloc_ptr),
	     2 left_wd	      bit (5) aligned,
	     2 right_wd	      bit (5) aligned;

/* Instruction format for 1 word instruction */


     dcl	   1 inst_struc_basic     based (inst_ptr) aligned,
	     2 y		      unaligned,
	       3 pr	      bit (3) unaligned,
	       3 wd_offset	      bit (15) unaligned,
	     2 fill1_op	      bit (10) unaligned,
	     2 zero1	      bit (1) unaligned,
	     2 pr_spec	      bit (1) unaligned,
	     2 tm		      bit (2) unaligned,
	     2 td		      bit (4) unaligned;


/* The detailed definitions of the fields in this structure
   can be found in the GMAP manual section 8 */
/* EIS instruction format for 2_4 word instructions */

     dcl	   1 inst_struc	      based (inst_ptr) aligned,
	     2 inst	      unaligned,
	       3 zero1	      bit (2) unaligned,
	       3 mf3	      unaligned,
	         4 pr_spec	      bit (1) unaligned,
	         4 reg_or_length  bit (1) unaligned,
	         4 zero2	      bit (1) unaligned,
	         4 reg_mod	      bit (4) unaligned,
	       3 zero3	      bit (2) unaligned,
	       3 mf2	      unaligned,
	         4 pr_spec	      bit (1) unaligned,
	         4 reg_or_length  bit (1) unaligned,
	         4 zero4	      bit (1) unaligned,
	         4 reg_mod	      bit (4) unaligned,
	       3 fill1_op	      bit (10) unaligned,
	       3 zero5	      bit (1) unaligned,
	       3 mf1	      unaligned,
	         4 pr_spec	      bit (1) unaligned,
	         4 reg_or_length  bit (1) unaligned,
	         4 zero6	      bit (1) unaligned,
	         4 reg_mod	      bit (4) unaligned,
	     2 desc_ext	      unaligned,
	       3 desc	      (512) unaligned,
	         4 desc_od	      bit (36) unaligned;

/* The detailed definitions of the fields in this structure
   can be found in the GMAP manual section 8.
   The desc_ext is the descriptor extension of this eis
   instruction. The number of descriptors associated with
   this instruction is equavalent to the operand number.
   Depending on operand data type, the descriptor
   can be alphanumeric or numeric.  The structures of the
   alphanumeric and the numeric descriptors are defined
   below. */

/* alphanumeric descriptor format */

     dcl	   1 desc_an	      based (desc_an_ptr) unaligned,
	     2 desc_f	      (512) unaligned,
	       3 y	      unaligned,
	         4 pr	      bit (3) unaligned,
	         4 wd_offset      bit (15) unaligned,
	       3 char_n	      bit (3) unaligned,
	       3 zero1	      bit (1) unaligned,
	       3 ta	      bit (2),
	       3 n	      bit (12) unaligned;


/* The detailed definitions of the fields in this structure can
   be found in the GMAP manual section 8. */
/* numeric descriptor format */

     dcl	   desc_nn_ptr	      ptr;
     dcl	   desc_an_ptr	      ptr;


     dcl	   1 desc_nn	      based (desc_nn_ptr) unaligned,
	     2 desc_f	      (512) unaligned,
	       3 y	      unaligned,
	         4 pr	      bit (3) unaligned,
	         4 wd_offset      bit (15) unaligned,
	       3 digit_n	      bit (3) unaligned,
	       3 tn	      bit (1) unaligned,
	       3 sign_type	      bit (2) unaligned,
	       3 scal	      bit (6) unaligned,
	       3 n	      bit (6) unaligned;


/* The detailed definitions of fields in this structure can
   be found in the GMAP manual section 8. */
/* END INCLUDE FILE ...   cobol_addr_tokens.incl.pl1 */

