/*  START OF:	hcom_data.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */

	
/****^  HISTORY COMMENTS:
  1) change(85-10-02,LJAdams), approve(85-11-06,MCR7278),
     audit(86-02-19,Gilcrease), install(86-02-19,MR12.0-1021):
     Provides data structure for the history comment
     programs.
  2) change(86-04-17,LJAdams), approve(86-04-17,MCR7386),
     audit(86-06-05,Gilcrease), install(86-06-05,MR12.0-1071):
     Added d.ag.ctl.fill to indicate if summary is to be filled or not.
     Added fill bit to src_array to indicate to fill/not fill comment.
  3) change(86-04-30,LJAdams), approve(86-05-05,MCR7386),
     audit(86-06-05,Gilcrease), install(86-06-05,MR12.0-1071):
     Added parameter to d.ag.vdt to contain error message.
  4) change(86-05-05,LJAdams), approve(86-05-05,MCR7386),
     audit(86-06-05,Gilcrease), install(86-06-05,MR12.0-1071):
     Added switch to indicate if a critical fix number had been found while
     parsing.
                                                   END HISTORY COMMENTS */

/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
	/*									*/
	/* This include file contains the arguments needed for processing history comments.	*/
	/*									*/
	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */


dcl 	1 d			aligned based(Pd),
	  2 ag,
	    3 op,
	      4 name		fixed bin,
	      4 type		bit(1),		/* 0 = NO_MODIFY, 1 = MODIFY			*/
	    3 vdt			entry (char(*) var, char(*) var, char(*) var, bit(1), char(*) var,
				   char(*) var, char(100) var) variable,
						/* = nothing for -nvdt			*/
	    3 ctl,
	      4 errors		bit(1) unal,
	      4 fill                  bit(1) unal,
	      4 renumber		bit(1) unal,
	      4 mbz		bit(33) unal,
	    3 source,
	      4 path		char(202) unal,
	      4 dir		char(168) unal,
	      4 ent		char(32) unal,
	      4 ent_type		fixed bin(35),	/*  0 = NONSTAR,  1 = STAR,   2 = STARSTAR	*/
	      4 comp		char(32) unal,
	    3 orig		like d.source,
	    3 input,
	      4 select,
	        5 sm		fixed bin(2),
	        5 apv		fixed bin(2),
	        5 aud		fixed bin(2),
	        5 in		fixed bin(2),	/* 0 = NOxxx,      1 = CLEARxxx		*/
						/* 2 = OPERANDxxx, 3 = INPUTxxx		*/
	      4 value                like src_array.comments,
	    3 output,
	     (4 cdt,
	      4 cpi,
	      4 apvdt,
	      4 apvi,
	      4 auddt,
	      4 audpi,
	      4 indt,
	      4 ini,
	      4 sm)		bit(1) unal,
	      4 mbz		bit(27) unal,
	  2 com_spec,
	    3 selected		unal,
	      4 all		bit(1),
	      4 old		bit(1),
	      4 new		bit(1),
	      4 cpt		bit(1),
	      4 icpt		bit(1),
	      4 apv		bit(1),
	      4 unapv		bit(1),
	      4 aud		bit(1),
	      4 unaud		bit(1),
	      4 in		bit(1),
	      4 unin		bit(1),
                4 mbz		bit(25),
	    3 matched		unaligned like d.com_spec.selected,
	    3 Nrange		fixed bin,
	    3 range (10),
	      4 from,
	        5 set		fixed bin(2),	/* 0 = UNSET, 1 = SET,  2 = LAST		*/
	        5 no		fixed bin,
	        5 op		fixed bin(2),	/* 0 = UNSET, 1 = PLUS  2 = MINUS		*/
	        5 addend		fixed bin,
	        5 result		fixed bin,
	      4 to		like d.com_spec.range.from,
	      4 matched		fixed bin(1),

	  2 field_array (9)		fixed bin,
	  2 check_error$fatal	entry options(variable) variable,
            2 set_return_arg            entry (char(*)) variable,
            2 add_to_return_arg	entry (char(*)) variable,
	  2 add_to_return_arg_var     entry (char(*) var) variable,
            2 Saf                       bit(1),		/* switch to indicate active function		*/

	  2 Scfix			bit(1),		/* switch to indicate critical fix input	*/
	  2 Scfix_found               bit(1),
	  2 Ssite                     bit(1),             /* switch to indicate site			*/
	  2 seg_arch,				/* info for seg or achive used by 		*/
	    3 dir			char(168) unal,	/* hcom_process_path_			*/
	    3 ent			char(32) unal,
	    3 comp		char(32) unal,
	    3 comp_type		fixed bin(35),      /* -1 = NOCOMP, 0 = NONSTAR			*/
						/*  1 = STAR,   2 = STARSTAR			*/
	    3 Pseg		ptr,
	    3 Lseg		fixed bin(21),
	    3 Lsegbc		fixed bin(24),

	  2 seg,					/* info for specific seg or archive component	*/
	    3 dir			char(168) unal,	/* used by hcom_process_seg_.			*/
	    3 ent			char(32) unal,
	    3 comp		char(32) unal,
	    3 Pseg		ptr,
	    3 Lseg_in		fixed bin(21),
	    3 Lseg_out		fixed bin(21),
	    3 ec_version		fixed bin,	/* if type is 3 (an exec_com), this will be its	*/
						/* version, as obtained from get_ec_version_	*/
              3 type                    fixed bin,	/* the language type of the entry		*/
	    3 text_pos                fixed bin(21),	/* this will be the char pos of the first	*/
						/* non-version char in an exec_com		*/
	    3 cmt_bgn                 char(8) var,	/* comment begin character(s)			*/
              3 cmt_end                 char(8) var,	/* comment end character(s)			*/
	    3 Pbox		ptr,
	    3 Loldbox		fixed bin(21),
	    3 Lnewbox		fixed bin(21),
	  2 orig_seg		like d.seg,	/* info for original seg/comp used by		*/
						/* hcom_process_seg_			*/

	  2 temp_seg,
	    3 Pcomp_info		ptr,
	    3 Pformed_string	ptr,
	    3 Porig_array		ptr,
	    3 Pout_string		ptr,
	    3 Presult		ptr,
	    3 Psort_copy		ptr,
	    3 Psrc_array		ptr,
	temp_seg_array (7)		ptr aligned based (addr(d.temp_seg)),

	Pd              		ptr;

dcl	CALLER			char(15) int static options(constant) init("history_comment"),

         (NOTSET			init(0),		/* values for d.ag.op.name			*/
	ADD			init(1),
	ADD_FIELD			init(2),
	CHECK			init(3),
          COMPARE			init(4),
	DISPLAY			init(5),
	EXISTS			init(6),
	FORMAT			init(7),
	GET			init(8),
	INSTALL			init(9),
	REPLACE_FIELD		init(10)) fixed bin int static options(constant),
         (MODIFY			init("1"b),	/* values for d.ag.op.type			*/
	NO_MODIFY			init("0"b)) bit(1) int static options(constant),
         (CLEARxxx			init(1),		/* values for d.ag.input.select		*/
	INPUTxxx			init(3),
	NOxxx			init(0),
	OPERANDxxx		init(2)) fixed bin(2) int static options(constant),
         (NOCOMP			init(-1),		/* values for d.ag.ent_type, and 		*/
	NONSTAR			init(0),		/*   d.seg_arch.comp_type			*/
	STAR			init(1),
	STARSTAR		          init(2)) fixed bin(35) int static options(constant),
	ALL			bit(36) aligned int static options(constant) init("1"b),
						/* value comparable to string(d.com_spec.selected)*/
         (LAST			init(2),		/* values for d.ag.com_spec.range.set		*/
	SET			init(1),
	UNSET			init(0)) fixed bin(2) int static options(constant),
         (MINUS			init(2),		/* values for d.ag.com_spec.range.op		*/
	PLUS			init(1)) fixed bin(2) int static options(constant);
	
dcl	oper (10,2)         	char(16) varying int static options(constant) init (
                               "add",            "~",      /*  1 Operations */
			 "add_field",      "af",     /*  2 */
			 "check",          "ck",     /*  3 */
                               "compare",        "cmp",    /*  4 */
			 "display",        "ds",     /*  5 */
			 "exists",         "~",      /*  6 */
			 "format",         "fmt",    /*  7 */
			 "get",	         "~",      /*  8 */
			 "install",        "~",      /*  9 */
			 "replace_field",  "rpf");   /* 10 */

dcl	1 src_array		based(Psrc_array) aligned,
	  2 Ncoms			fixed bin,
	  2 comments (0 refer (src_array.Ncoms)),
	    3 change_dt		char(8),
	    3 seqno		pic "9999",
	    3 fill		bit(1),
	    3 selected		bit(1),
	    3 Ieq			fixed bin,
	    3 comment_no		fixed bin,
	    3 change_person		char(24) varying,
	    3 approve_dt		char(8),
	    3 approve_value		char(24) varying,
	    3 audit_dt		char(8),
	    3 audit_person		char(24) varying,
	    3 install_dt		char(8),
	    3 install_id		char(24) varying,
	    3 summary		char(2000) varying,
	    3 err_msg (5)		char(80) varying;
	

dcl	Psrc_array		ptr;

/*  END OF:	hcom_data.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
