/*  BEGIN INCLUDE FILE:	mowse_messages.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  */

/****^  HISTORY COMMENTS:
  1) change(86-05-17,Smith), approve(86-12-16,MCR7580),
     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
     Created to define MOWSE message formats.
  2) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
     audit(86-12-15,Gilcrease), install(87-01-06,MR12.0-1255):
     Approved.
  3) change(87-07-31,Flegel), approve(87-07-31,MCR7580),
     audit(87-07-31,RBarstad), install(87-08-07,MR12.1-1075):
     Changes to support async call channels.
                                                   END HISTORY COMMENTS */

/* Message Channels */
/* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
dcl BG		       fixed bin int static options (constant) init (0);
					    /* Fore ground */
dcl FG		       fixed bin int static options (constant) init (1);
					    /* Back ground */

/* Message types: 

Each intersystem message is labelled with one of the following types.  Upon
reciept of the message suitable action is undertaken.  This scheme was
introduced to allow the transmission of messsages longer than the maximum
packet size.
*/

/* Templates for the various messages used throughout the mowse environment.
   Non-allocatable */

dcl message_len	       fixed bin init (6);
dcl message_ptr	       ptr;

/* expected format of message */

dcl 01 input_message       based (message_ptr),
       02 header,
	03 system	       char (1) unal,
	03 major	       char (1) unal,
	03 minor	       char (1) unal,
	03 source_system char (1) unal,
	03 source_major  char (1) unal,
       02 data	       char (message_len - 5) unal;

/* expected format of message to be handled by mowse internal execute command */

dcl 01 execom_message      based (message_ptr),
       02 header,
	03 system	       char (1) unal,
	03 major	       char (1) unal,
	03 minor	       char (1) unal,
	03 source_system char (1) unal,
	03 source_major  char (1) unal,
       02 data,
	03 cmd_id	       fixed bin (17) unal,
	03 command       char (message_len - 7) unal;

/* expected format of message recieved when a request to alter a CAT table
   is made by a remote system */

dcl 01 alter_cat_message   based (message_ptr),
       02 header,
	03 system	       char (1) unal,
	03 major	       char (1) unal,
	03 minor	       char (1) unal,
	03 source_system char (1) unal,
	03 source_major  char (1) unal,
       02 data,
	03 major	       char unal,
	03 major_name    char (CAPABILITY_NAME_LENGTH) unal;

/* Template used to parse message recieved from some remote system. */

dcl 01 event_message       based (message_ptr),
       02 header,
	03 system	       char (1) unal,
	03 major	       char (1) unal,
	03 msg_type      char (1) unal;

/* format of message of MORE type */

dcl 01 request_more_message
		       based (message_ptr),
       02 header,
	03 system	       char (1) unal,
	03 major	       char (1) unal,
	03 more	       char (1) unal,
	03 source_system char (1) unal,
	03 source_major  char (1) unal,
	03 source_minor  char (1) unal;

/* format of message of CONTINUE type */

dcl 01 more_remaining_message
		       based (message_ptr),
       02 header,
	03 system	       char (1) unal,
	03 major	       char (1) unal,
	03 continue      char (1) unal,
	03 minor	       char (1) unal,
	03 source_system char (1) unal,
	03 source_major  char (1) unal,
       02 data,
	03 data_buf      char (message_len - 6) unal;

/* format of message of LAST type */

dcl 01 last_message	       based (message_ptr),
       02 header,
	03 system	       char (1) unal,
	03 major	       char (1) unal,
	03 minor	       char (1) unal,
	03 source_system char (1) unal,
	03 source_major  char (1) unal,
       02 data,
	03 data_buf      char (message_len - 5) unal;

/* Execute_command_reply message format */

dcl 01 execom_reply_msg    based (message_ptr),
       02 header,
	03 system	       char (1) unal,
	03 major	       char (1) unal,
	03 minor	       char (1) unal,
	03 source_system char (1) unal,
	03 source_major  char (1) unal,
       02 data,
	03 cmd_id	       fixed bin unal,
	03 status	       char unal;

/* Used to manage partial messages destined for any application */

dcl msg_node_ptr	       ptr;
dcl 01 message_node	       based (msg_node_ptr),
       02 major	       fixed bin,
       02 partial_msg_list_ptr
		       ptr,
       02 next_node	       ptr,
       02 prev_node	       ptr,
       02 last_part_msg    ptr;

dcl part_msg_ptr	       ptr;
dcl 01 partial_message     based (part_msg_ptr),
       02 msg_ptr	       ptr,
       02 msg_len	       fixed bin,
       02 next_msg	       ptr;


dcl part_msg_length	       fixed bin;
dcl part_msg	       char (part_msg_length) based;

/* Trace information structure */
dcl 01 trace_message_info,
       02 direction	       fixed bin,
       02 from_system      fixed bin,
       02 from_major       fixed bin,
       02 dest_system      fixed bin,
       02 dest_major       fixed bin,
       02 dest_minor       fixed bin,
       02 msg_type	       fixed bin,
       02 message	       char (PACKET_SIZE) var;

/*  END INCLUDE FILE:	mowse_messages.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  */
