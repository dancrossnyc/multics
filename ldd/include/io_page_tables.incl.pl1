/*  START OF:	io_page_tables.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */

/* Definition of the I/O page table segment.  For details of how this is manipulated, see io_page_table.pl1. */
/* Written April 1983 by Chris Jones */
/* Modified 1985-01-02, BIM: removed include of hc_lock. */

/* format: style4,delnl,insnl,indattr,ifthen,dclind10 */
dcl	io_page_table_seg$	   external;

dcl	io_page_table_seg_ptr  ptr;

dcl	1 io_page_tables	   aligned based (io_page_table_seg_ptr),
	  2 lock		   like hc_fast_lock,	/* (0) standard fast lock */
	  2 free_64_ptx	   fixed bin (9) unsigned unaligned,
						/* (3) index of first free 64 word pt */
	  2 free_256_ptx	   fixed bin (9) unsigned unaligned,
						/* (3) pointer to first free 256 word pt */
	  2 n_pages_wired	   fixed bin (9) unsigned unaligned,
						/* (3) how many pages are in use now */
	  2 pad1		   bit (9) unaligned,
	  2 pt_info	   (5:256),		/* (4) one for each page table */
	    3 size	   bit (1) unaligned,
	    3 in_use	   bit (1) unaligned,
	    3 pad1	   bit (25) unaligned,
	    3 next_pt	   fixed bin (9) unsigned unaligned;

/* This include file requires hc_fast_lock.incl.pl1 */

dcl	ioptp		   ptr;
dcl	io_page_table_size	   fixed bin;

dcl	1 page_table	   (0:io_page_table_size - 1) aligned based (ioptp),
	  2 ptw		   like io_ptw;

%include io_ptw;

dcl	IO_PAGE_TABLE_LOCK_EVENT
			   char (4) static options (constant) init ("iopt");
dcl	MAX_IO_PAGE_TABLE_SEG_PAGES
			   fixed bin (9) static options (constant) init (16);
dcl	PT_64_SIZE	   bit (1) static options (constant) init ("0"b);
dcl	PT_256_SIZE	   bit (1) static options (constant) init ("1"b);
dcl	PTS_PER_PAGE	   fixed bin static options (constant) init (16);
dcl	SMALL_PT_SIZE	   fixed bin (19) static options (constant) init (65536);

/*  END OF:	io_page_tables.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
