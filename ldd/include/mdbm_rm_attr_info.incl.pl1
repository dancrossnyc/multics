/*  BEGIN  mdbm_rm_attr_info.incl.pl1  --  jaw,  11/16/78  */

/* WARNING
          If the rm_attr_info structure is changed then the mrds_data_
          item saved_res_version MUST be incremented to invalidate all
          existing saved resultants
*/

/*

   Modified  by  Jim  Gray - - 80-11-05, to add mdbm_secured bit, so
   that rm_rel_info does not have to be checked

   81-05-28 Jim Gray  :  removed  structure  elements  referring  to
   foreign keys.

   82-08-19  D. Woodka : removed rm_attr_info.bit_offset for the DMS
   conversion.

   82-09-15 Davids: added the number_of_dups field.

   82-09-20 Mike Kubicar : changed the index_id field to be bit (36)
   aligned.  This is to conform with the new definition in the database
   model.  Also removed the now useless field varying.

   82-11-05 Davids: added the field model_defn_order and clarified the
   comment for the field defn_order.

   83-05-23 Mike Kubicar : changed number_of_dups to fixed bin (35) since
   that's what relation manager returns.

*/


/*
   this   structure   is   allocated   in   the   static   area   of
   mdbm_rm_db_info.incl.pl1  once for each attribute per relation in
   a     readied     file.      it     in     turn     points     to
   mdbm_rm_domain_info.incl.pl1  for  the  attributes  domain.   the
   rm_attr_info  is  pointed  to  by mdbm_rm_rel_info.incl.pl1.  all
   structures  are  in  the  rm_db_info  area.   the  attribute data
   position  within  a  tuple as stored in the data file are kept in
   this resultant model of the attribute.
 */

dcl 1 rm_attr_info aligned based (rai_ptr),		/* resultant attr. info */
    2 name char (32),				/* from submodel */
    2 model_name char (32),				/* from model */
    2 key_attr bit (1) unal,				/* if key attribute */
    2 index_attr bit (1) unal,			/* if secondary index */
    2 read_perm bit (1) unal,				/* user has retr. permission */
    2 modify_perm bit (1) unal,			/* user has modify permission */
    2 mdbm_secured bit (1) unal,			/* on => database secured */
    2 reserved bit (30) unal,				/* for future use */
    2 index_id bit (36) aligned,			/* index id if index_attr */
    2 defn_order fixed bin,				/* relative order in which attr is defined in the view */
    2 key_order fixed bin,				/* relative order defined in prim. key */
    2 bit_length fixed bin (35),			/* length if fixed, max. len. if var. */
    2 domain_ptr ptr,				/* to domain info */
    2 number_of_dups fixed bin (35),                        /* if the attribute is indexed this will
                                                               be the number of duplicate values, exact
                                                               for a page_file database, an estimate for a vfile type */
    2 model_defn_order fixed bin;                           /* relative order in which attr is defined in the model */

dcl  rai_ptr ptr int automatic init (null ());

/* END mdbm_rm_attr_info.incl.pl1 */


