/* BEGIN INCLUDE FILE... cmcs_cobol_mcs_dcls */

dcl  cobol_mcs_$accept entry (ptr, fixed bin (35));
dcl  cobol_mcs_$disable_input_queue entry (ptr, char (*), fixed bin (35));
dcl  cobol_mcs_$disable_input_terminal entry (ptr, char (*), fixed bin (35));
dcl  cobol_mcs_$disable_output entry (ptr, char (*), fixed bin (35));
dcl  cobol_mcs_$enable_input_queue entry (ptr, char (*), fixed bin (35));
dcl  cobol_mcs_$enable_input_terminal entry (ptr, char (*), fixed bin (35));
dcl  cobol_mcs_$enable_output entry (ptr, char (*), fixed bin (35));
dcl  cobol_mcs_$get_user_ctl_exists_sw entry (bit (1) aligned);
dcl  cobol_mcs_$purge entry (ptr, fixed bin (35));
dcl  cobol_mcs_$receive entry (ptr, fixed bin, ptr, fixed bin, fixed bin (35));
dcl  cobol_mcs_$receive_wait entry (ptr, fixed bin, ptr, fixed bin, fixed bin (35));
dcl  cobol_mcs_$send entry (ptr, ptr, char (4), char (1), bit (36), fixed bin (35));
dcl  cobol_mcs_$set_user_ctl_exists_sw entry (bit (1) aligned);
dcl  cobol_mcs_$stop_run entry ();

/*
   call cobol_mcs_$accept (mcs_icdp, code);
   call cobol_mcs_$disable_input_queue (mcs_icdp, password, code);
   call cobol_mcs_$disable_input_terminal (mcs_icdp, password, code);
   call cobol_mcs_$disable_output (mcs_ocdp, password, code);
   call cobol_mcs_$enable_input_queue (mcs_icdp, password, code);
   call cobol_mcs_$enable_input_terminal (mcs_icdp, password, code);
   call cobol_mcs_$enable_output (mcs_ocdp, password, code);
   call cobol_mcs_$get_user_ctl_exists_sw (flag);
   call cobol_mcs_$purge (mcs_ocdp, code);
   call cobol_mcs_$receive (mcs_icdp, type, mesp, max_meslen, code);
   call cobol_mcs_$receive_wait(mcs_icdp, type, mesp, max_meslen, code);
   call cobol_mcs_$send (mcs_ocdp, mesp, max_meslen, end_indicator, slew_control, code);
   call cobol_mcs_$set_user_ctl_exists_sw (ON);
   call cobol_mcs_$stop_run ();
*/

/* END INCLUDE FILE... cmcs_cobol_mcs_dcls */
