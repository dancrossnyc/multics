/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
     MCR8060 cobol_reset_r.pl1 Added Trace statements.
                                                   END HISTORY COMMENTS */


/* Modified on 09/23/83 by FCH, [5.2...], trace added */
/* Modified on 01/14/77 by ORN to signal command_abort_ rather than cobol_compiler_error */
/* Modified since Version 2.0 */

/* format: style3 */
cobol_reset_r:
     proc;

/*  DECLARATION OF EXTERNAL ENTRIES  */

dcl	cobol_register_util$restore_pointer
			ext entry (bit (4));
dcl	cobol_register_util$restore
			ext entry (bit (4));

dcl	signal_		entry (char (*), ptr, ptr);
dcl	1 error_message	static,
	  2 name		char (32) init ("cobol_reset_r"),
	  2 length	fixed bin init (24),
	  2 message	char (24);

dcl	reset_r_instr	(4) bit (36) static init ("110000000000011000011101000001010000"b,
						/* epp0	pr6|30,*		*/
			"110000000000100100011111000001010000"b,
						/* epp4	pr6|44,*		*/
			"110000000001101110011101011101010000"b,
						/* epp3	pr6|156,*		*/
			"110000000001110000011111001101010000"b);
						/* epp5	pr6|160,*		*/

dcl	cobol_emit	entry (ptr, ptr, fixed bin);
dcl	(i, j)		fixed bin;
dcl	k		fixed bin;
dcl	op_flag		fixed bin static init (1);
dcl	ptr_val		(1:4) fixed bin int static init (0, 4, 3, 5);

dcl	ptr_no		bit (3);

/*************************************/
pointer_register:
     entry (ptr_no);
start_pointer_register:
	/***..... dcl LOCAL_NAME char (17) int static init ("$POINTER_REGISTER");/**/
	/***.....if Trace_Bit then call cobol_gen_driver_$Tr_Beg(MY_NAME||LOCAL_NAME);/**/
	i = 0;
	if ptr_no = "000"b
	then i = 1;
	else if ptr_no = "011"b
	then i = 3;
	else if ptr_no = "100"b
	then i = 2;
	else if ptr_no = "101"b
	then i = 4;
	if i = 0
	then go to error_exit;
	if ptr_status.save_stack_count (ptr_val (i)) ^= 0
	then do;					/*  Must restore this pointer register.  */
		call cobol_register_util$restore_pointer ("0"b || ptr_no);
		ptr_status.contents_sw (i) = 0;
		ptr_status.p_lock (i) = 1;
	     end;					/*  Must restore this pointer register.  */
	else call cobol_emit (addr (reset_r_instr (i)), null (), 1);

	go to exit_pointer_register;

/*************************************/
after_call:
     entry;
start_after_call:
	/***..... dcl LOCAL_NAME4 char (11) int static init ("$AFTER_CALL");/**/
	/***.....if Trace_Bit then call cobol_gen_driver_$Tr_Beg(MY_NAME||LOCAL_NAME4);/**/
	i = 2;
	j = 4;

emit_:
	do k = i to j;
	     if ptr_status.save_stack_count (ptr_val (k)) > 0
	     then do;				/*  Register must be restored.  */
		     ptr_status.save_stack_count (ptr_val (k)) = ptr_status.save_stack_count (ptr_val (k)) - 1;
		     ptr_status.contents_sw (ptr_val (k)) = 0;
		     ptr_status.p_lock (ptr_val (k)) = 1;
		     ptr_status.p_priority (ptr_val (k)) = 0;
		end;				/*  Register must be restored.  */
	end;

reset:
	ptr_status.contents_sw (1) = 0;
	ptr_status.p_priority (1) = 0;
	if ptr_status.save_stack_count (1) ^= 0
	then do;
		call cobol_register_util$restore_pointer ("0001"b);
		ptr_status.p_lock (1) = 1;
	     end;
	else ptr_status.p_lock (1) = 0;
	ptr_status.contents_sw (2) = 0;
	ptr_status.p_priority (2) = 0;
	if ptr_status.save_stack_count (2) ^= 0
	then do;
		call cobol_register_util$restore_pointer ("0010"b);
		ptr_status.p_lock (2) = 1;
	     end;
	else ptr_status.p_lock (2) = 0;
	ptr_status.contents_sw (7) = 0;
	ptr_status.p_priority (7) = 0;
	if ptr_status.save_stack_count (7) ^= 0
	then do;
		call cobol_register_util$restore_pointer ("0111"b);
		ptr_status.p_lock (7) = 1;
	     end;
	else ptr_status.p_lock (7) = 0;


	do i = 0 to 9;
	     reg_status.r_priority (i) = 0;
	     if reg_status.save_stack_count (i) ^= 0
	     then do;				/*  Must restore this register.  */
		     call cobol_register_util$restore ((get_bit_code (i)));
		     reg_status.r_lock (i) = 1;
		end;
	     else reg_status.r_lock (i) = 0;		/* ORN */
						/*

          reg_status.contents_sw(i)=0;
          */
	end;
exit_pointer_register:
	/***.....if Trace_Bit then call cobol_gen_driver_$Tr_End(MY_NAME);/**/
	return;


/*************************************/
after_operator:
     entry;
start_after_operator:
	/***..... dcl LOCAL_NAME2 char (15) int static init ("$AFTER_OPERATOR");/**/
	/***.....if Trace_Bit then call cobol_gen_driver_$Tr_Beg(MY_NAME||LOCAL_NAME2);/**/
	i = 1;
	j = 4;
	go to emit_;


/*************************************/
in_line:
     entry;
start_in_line:
	/***..... dcl LOCAL_NAME3 char (8) int static init ("$IN_LINE");/**/
	/***.....if Trace_Bit then call cobol_gen_driver_$Tr_Beg(MY_NAME||LOCAL_NAME3);/**/
	go to reset;



/*************************************/
error_exit:
	error_message.message = "Invalid PR specification";
	call signal_ ("command_abort_", null (), addr (error_message));
	return;


/*************************************/
get_bit_code:
     proc (fbin_code) returns (bit (4));

dcl	fbin_code		fixed bin;
dcl	bit_code		bit (4);

	if fbin_code = 9
	then bit_code = "0010"b;			/*  Q  */
	else if fbin_code = 8
	then bit_code = "0001"b;			/*  A  */
	else bit_code = "1"b || substr (unspec (fbin_code), 34, 3);

	return (bit_code);

     end get_bit_code;


	/***.....	dcl cobol_gen_driver_$Tr_Beg entry(char(*));/**/
	/***.....	dcl cobol_gen_driver_$Tr_End entry(char(*));/**/

	/***.....	dcl Trace_Bit bit(1) static external;/**/
	/***.....	dcl Trace_Lev fixed bin static external;/**/
	/***.....	dcl Trace_Line char(36) static external;/**/
	/***.....	dcl ioa_ entry options(variable); /**/
	/***..... dcl MY_NAME char (13) int static init ("COBOL_RESET_R");/**/

/*  INCLUDE FILES USED BY THIS PROCEDURE  */

dcl	1 ptr_status	(0:7) based (cobol_$ptr_status_ptr) aligned,
%include cobol_ptr_status;

/*****	Declaration for builtin function	*****/

dcl	(substr, mod, binary, fixed, addr, addrel, rel, length, string, unspec, null, index)
			builtin;

/*****	End of declaration for builtin function	*****/

dcl	1 reg_status	(0:9) based (cobol_$reg_status_ptr) aligned,
%include cobol_reg_status;
%include cobol_;

     end cobol_reset_r;
