/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
     MCR8060 cobol_sort_util.pl1 Reformatted code to new Cobol standard.
                                                   END HISTORY COMMENTS */


/* Modified on 11/18/76 by Bob Chang to interface with merge generators.	*/
/* Modified since Version 2.0	*/

/*{*/
/* format: style3 */
cobol_sort_util:
     proc (file_ptr, desc_ptr, object_name, object_name_len);

/* This procedure is called by sort_gen for:

	1. create the object_name for sort compare routine.

	2 set the argument  offset which is based on desc_ptr.

The input to this procedure is:

	1 sort_merge_count to identify the count for the number of times for sort.

	2 file_ptr which points to the type12 token to get the sort file file.

*/

dcl	sort_merge_count	fixed bin static,
	first_call	fixed bin static init (0),
	file_ptr		ptr,
	desc_ptr		ptr,
	desc_off		(3) fixed bin,
	object_name	char (32),
	object_name_len	fixed bin;


/*}*/
dcl	desc_bit1		bit (36) static init ("100110100000000000000000000000000000"b),
	desc_bit2		bit (36) static init ("100000100000000000000000000000000001"b),
	desc_char1	char (4) based (addr (desc_bit1)),
	desc_char2	char (4) based (addr (desc_bit2)),
	(i, j, k)		fixed bin,
	sort_char		char (3),
	name_ptr		ptr,
	conv_char		(0:9) char (1) static init ("0", "1", "2", "3", "4", "5", "6", "7", "8", "9");

dcl	cobol_pool	entry (char (*), fixed bin, fixed bin);


/*	******************************/

start:
	if first_call ^= cobol_$compile_count
	then do;
		first_call = cobol_$compile_count;
		sort_merge_count = 0;
	     end;
	sort_merge_count = sort_merge_count + 1;
	sort_char = "";
	j = sort_merge_count;
	do i = 1 to 3;
	     k = mod (j, 10);
	     j = divide (j, 10, 17, 0);
	     sort_char = conv_char (k) || sort_char;
	end;

	name_ptr = file_ptr;
	object_name = (32)" ";
	object_name = "cmp" || sort_char || "_" || substr (fd_token.name, 1, fd_token.name_size);
	object_name_len = index (object_name, " ") - 1;
	if object_name_len = -1
	then object_name_len = 32;
	desc_ptr = addr (desc_off (1));
	call cobol_pool (desc_char1, 1, desc_off (1));
	call cobol_pool (desc_char1, 1, desc_off (2));
	call cobol_pool (desc_char2, 1, desc_off (3));
	do i = 1 to 3;
	     desc_off (i) = -desc_off (i);
	end;


	return;

/*****	End of declaration for builtin function	*****/

%include cobol_type12;
%include cobol_;


     end cobol_sort_util;
