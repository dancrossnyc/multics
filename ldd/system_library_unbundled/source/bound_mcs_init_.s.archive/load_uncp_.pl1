/****^  ******************************************************
        *                                                    *
        * Copyright, (C) Honeywell Bull Inc., 1988           *
        *                                                    *
        * Copyright (c) 1972 by Massachusetts Institute of   *
        * Technology and Honeywell Information Systems, Inc. *
        *                                                    *
        ****************************************************** */


/****^  HISTORY COMMENTS:
  1) change(88-07-13,Berno), approve(88-07-13,MCR7928),
     audit(88-07-13,Parisek), install(88-07-19,MR12.2-1061):
     Removed reference to wtcb.prompt_len and "enter_receive" order call as
     part of the UNCP multiplexer (DSA gateway) implementation.
                                                   END HISTORY COMMENTS */

/* format: style4,delnl,insnl,^ifthendo */
load_uncp_:
     proc (afnpno, acdtp, a_chan_listp, acksw, code);

/* load_uncp_ is the subroutine which prepares the FNP core image for
   bootload into the FNP. It was written using parts of LD355,
   the BOS 355 loader, as a model.

   Coded June 1, 1976 by Mike Grady.
   Modifed October 28, 1976 by Robert Coren to pass core image name to ring zero .
   Modified August 1978 by Larry Johnson to take array of channels to boot from caller instead of scanning cdt.
   Modified 1979 May 9 by Art Beattie to pass FNP memory size to ring zero.
   Modified May 1981 by Robert Coren to handle COLTS pseudo-channel.
 

   THE FOLLOWING HISTORY COMMENTS REFER TO THE uncp MULTIPLEXER IMPLEMENTATION
   FOR THE DSA GATEWAY.  THIS CODE WAS ORIGINALLY EXTRACTED FROM load_fnp_.pl1

   Modified in May 1982 for loading the DN7100.fd
   Installed at level MR10.1 in June 1983.
   Modifications for MR10.1.
   Installed at level MR11 in September 1985.
   Modified for MR12.0 (dsa-Compact) January 1987.

   Date of the last modification 22/06/87


*/

/* Parameters */

dcl  afnpno fixed bin,
     acdtp ptr,
     a_chan_listp ptr,				/* pointer to array of cdte entries for channels to boot */
     acksw bit (1),
     code fixed bin (35);

/* External Variables */



dcl  error_table_$dev_nt_assnd fixed bin (35) ext;
%page;
/* External procedures */

dcl  hphcs_$tty_control entry (char (*), char (*), ptr, fixed bin (35));

/* Constants */

dcl  speed_bit (11) internal static options (constant) fixed bin init (1, 2, 3, 4, 8, 6, 7, 8, 8, 8, 8);

dcl  min_modules fixed bin int static options (constant) init (7);
%page;
/* Automatic Storage */

dcl  fnpno fixed bin,
     i fixed bin;
dcl  chan_listp ptr;
dcl  baud_info_size fixed bin;
dcl  tandd_configured bit (1);
%page;
/* tables to hold config info for LSLAs and HSLAs */

dcl 1 lsla_array (0:5, 0:51) aligned,
    2 line_type fixed bin (17) unal,
    2 baud_rate fixed bin (17) unal;

dcl 1 hsla_array (0:2, 0:31) aligned,
    2 line_type fixed bin (17) unal,
    2 baud_rate fixed bin (17) unal,
    2 modem_type fixed bin (17) unal,
    2 flags unal,
      3 pl bit (1) unal,
      3 bsc_ebcdic bit (1) unal,
      3 bsc_transparent bit (1) unal,
      3 vip_pollselect bit (1) unal,
      3 autobaud bit (1) unal,
      3 pad bit (13) unal;

dcl  lsla_ch (0:5) fixed bin;
dcl  hsla_ch (0:2) fixed bin;

/* Based storage */

dcl 1 chan_list aligned based (chan_listp),		/* list of channels to boot */
    2 count fixed bin,
    2 cdte_ptr (0 refer (chan_list.count)) ptr unal;

/* Builtins */

dcl (addr, null, max, substr, unspec) builtin;
%page;
	cdtp = acdtp;
	fnpno = afnpno;
	fnpep = addr (cdt.fnp_entry (fnpno));		/* get ptr to this fnp entry */
	chan_listp = a_chan_listp;

	lsla_array.line_type (*, *) = -1;
	hsla_array.line_type (*, *) = -1;
	lsla_ch (*) = -1;
	hsla_ch (*) = -1;
	tandd_configured = "0"b;

	if fnpe.state = FNP_FREE
	then do;					/* but FNP is not configured */
	     code = error_table_$dev_nt_assnd;
	     return;
	end;


	baud_info_size = max (1, chan_list.count);
	begin;

dcl 1 load_info aligned,
    2 dns_boot_ev_chan fixed bin (71),
    2 count fixed bin,
    2 entry (baud_info_size),
      3 devx fixed bin,
      3 baud fixed bin,
      3 line_type fixed bin,
    2 version char (4),				/* version number */
    2 pointeur_image_dns ptr,				/* pointer to the DN7100 image */
    2 image fixed bin (24),				/* image */
    2 etape fixed bin;				/* Etape to load the Datanet */

	     unspec (load_info) = ""b;
	     load_info.dns_boot_ev_chan = fnpe.boot_ev_chan;
	     load_info.version = "B2";
	     load_info.etape = fnpe.pad3 (1);
	     load_info.count = chan_list.count;
	     do i = 1 to chan_list.count;
		cdtep = chan_list.cdte_ptr (i);
		load_info.devx (i) = cdte.twx;
		load_info.baud (i) = cdte.baud_rate;
		load_info.line_type (i) = cdte.line_type;
	     end;

	     call hphcs_$tty_control (substr ("abcdefgh", fnpno, 1), "load", addr (load_info), code);

	end;

	if code ^= 0
	then do;
	     call hphcs_$tty_control (substr ("abcdefgh", fnpno, 1), "abort", null (), code);
	     fnpe.state = FNP_UNKNOWN;
	end;


	return;

%page;
%include mcs_memory_map;
%include baud_rates;
%include cdt;
%include author_dcl;
%include line_types;

     end load_uncp_;
