/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
dfast_get_arg_: proc (line, argument) returns (bit (1));

/*   This procedure is used to find the next argument on the line.  It expects the form:
   *
   *	[blank | tab] [argument] [blank | tab | comma | semi-colon]
   *
   * Any of the fields may be null.  If no argument and no delimitor is found, then the procedure returns "0"b.
   * Otherwise "1"b is returned.
*/

dcl  argument char (256) var;				/* next argument (output) */

dcl  line char (256) var;				/* input buffer */
dcl  line_length fixed bin;				/* length of line on input */
dcl  argument_length fixed bin;			/* length of argument */
dcl  start fixed bin;				/* index in line of start of argument */

dcl (length, search, substr, verify) builtin;

/* constants */

dcl  white_space char (2) int static options (constant) init ("	 "); /* <tab> <blank> */
dcl  arg_delimit char (4) int static options (constant) init ("	 ,;"); /* <tab> <blank> <,> <;> */

	line_length = length (line);

	if line_length > 0 then do;

	     start = verify (line, white_space);
	     if start > 0 then do;
		argument_length = search (substr (line, start), arg_delimit);

		if argument_length = 0 then argument_length = line_length - start + 1;
		else argument_length = argument_length - 1;
		argument = substr (line, start, argument_length);
		start = start + argument_length + 1;	/* move beyond the argument delimitor */
		if start > line_length then line = "";
		else line = substr (line, start, line_length - start + 1);

		return ("1"b);
	     end;
	end;
	return ("0"b);
     end dfast_get_arg_;
