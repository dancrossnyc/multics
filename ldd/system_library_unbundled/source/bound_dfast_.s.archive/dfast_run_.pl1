/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
dfast_run_: proc (edit_info_ptr, code);

/* *  This procedure execute the run command.  The alter and current segments are merged before the run unit manager
   *  is called.
*/

/* parameters */

dcl  edit_info_ptr ptr;
dcl  code fixed bin (35);

/* automatic */

dcl  directory_name char (168);
dcl  directory_name_length fixed bin;			/* number non-blank characters in directory name */
dcl  entry_name char (32);
dcl  compiler_name char (8) aligned;			/* "basic" or "fortran" */
dcl  substr builtin;

/* constant */


/* based */

dcl 1 f aligned based (edit_info_ptr) like dfast_edit_info;


/* external */

dcl  basic_$precision_length ext fixed bin;
dcl  dfast_error_ entry (fixed bin (35), char (*), char (*));
dcl  dfast_merge_ entry (bit (1) unal, ptr, fixed bin (35));
dcl  hcs_$fs_get_path_name entry (ptr, char (*), fixed bin, char (*), fixed bin (35));
dcl  dfast_run_unit_manager_ entry (char (8) aligned, ptr, fixed bin (24), char (168) aligned, bit (1) aligned, fixed bin (35));

/*   */
%include dfast_edit_info;
%include dfast_error_codes;
/*  */
	if f.source_segment then if f.alter_length > 0 then call dfast_merge_ ("0"b, edit_info_ptr, code);
	if code = 0 then do;
	     if f.basic_system then do;
		if f.dbasic then do;
		     compiler_name = "dbasic";
		     basic_$precision_length = 2;
		end;
		else do;
		     compiler_name = "basic";
		     basic_$precision_length = 1;
		end;
	     end;
	     else compiler_name = "fortran";

	     if f.current_length ^= 0 then do;
		call hcs_$fs_get_path_name (f.current_ptr, directory_name, directory_name_length,
		     entry_name, code);
		if code = 0 then do;
		     call dfast_run_unit_manager_ (compiler_name, f.current_ptr, f.current_length * 9,
			substr (directory_name, 1, directory_name_length) || entry_name, "0"b, code);
		end;
	     end;
	     else code = error_cur_empty;
	end;

	if code ^= 0 then call dfast_error_ (code, "run", (f.current_name));

	return;

     end dfast_run_;
