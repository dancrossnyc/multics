/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
/* *  This procedure prints out the explain segments for dfast.
   *  The default is to print all info segments in short form.  If the key word
   *  is -long then arguments following are printed in long form.
   *
   *  The info segments are stored in a special directory with these conventions:
   *	topic.info		The short info segment about topic
   *	topic_l.info		The long info segment about topic
   *	edit_topic.info		The short info segment about the topic request that is part of edit.
   *				(line was:    edit explain topic )
   *	edit_topic_l.info		The long info segment about the topic request that is part of edit.
*/
dfast_explain_: proc (line, caller, code);

/* parameters */

dcl  line char (*) var;				/* user input line */
dcl  caller char (*);				/* calling program  */
dcl  code fixed bin (35);				/* FAST or Multics code */

dcl  directory char (18) int static options (constant) init (">doc>ss>dfast");
dcl  topic_length fixed bin (24);
dcl  topic_ptr ptr;
dcl  arg char (256) var;
dcl  num_topics fixed bin;				/* topics requested */
dcl  prefix char (5) var;
dcl  suffix char (7);				/*  ".info" for short   "_l.info" for long */
dcl (divide, null) builtin;

/* external */

dcl  iox_$user_output ptr ext;
dcl  iox_$put_chars entry (ptr, ptr, fixed bin (21), fixed bin (35));
dcl  dfast_get_arg_ entry (char (*) var, char (*) var) returns (bit (1));
dcl  dfast_error_ entry (fixed bin (35), char (*), char (*));
dcl  hcs_$initiate_count entry (char (*), char (*), char (*), fixed bin (24), fixed bin (12), ptr, fixed bin (35));
dcl  hcs_$terminate_noname entry (ptr, fixed bin (35));

%include dfast_error_codes;

/*  */

	if caller = "edit" then prefix = "edit_";
	else prefix = "";
	suffix = ".info";
	num_topics = 0;
	do while (dfast_get_arg_ (line, arg));
	     if arg = "-long" then suffix = "_l.info";
	     else do;
		call print ((arg));
		num_topics = num_topics + 1;
	     end;
	end;

	if num_topics = 0 then call print (caller);

	code = 0;

	return;




print:	proc (topic);

dcl  topic char (*);

	     call hcs_$initiate_count (directory, prefix || topic || suffix, "", topic_length, 0, topic_ptr, code);
	     if topic_ptr ^= null then do;
		topic_length = divide (topic_length, 9, 17, 0);
		call iox_$put_chars (iox_$user_output, topic_ptr, (topic_length), code);
		call hcs_$terminate_noname (topic_ptr, code);
	     end;

	     else call dfast_error_ (error_no_expl, caller, topic);

	     return;

	end print;


     end dfast_explain_;
