/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

/* Program to see if a specified function is pendent on the parse stack.
   Written 731006 by DAM
   Modified 740910 by PG for installation
*/

apl_pendant_function_check_:
	procedure (fbp) returns (bit (1) aligned);

/* parameters */

dcl 1 fbp aligned structure parameter,		/* mismatch for aligned packed pointer */
    2 function_bead_to_check unaligned pointer;

/* automatic */

dcl parse_frame_ptr unaligned pointer;

/* builtin */

dcl null builtin;

/* program */

/* this procedure returns "1"b if the specified function is pendant */

	do parse_frame_ptr = current_parse_frame_ptr repeat parse_frame.last_parse_frame_ptr
	     while (parse_frame_ptr ^= null);

	     if parse_frame_type = function_frame_type
	     then if parse_frame.function_bead_ptr = function_bead_to_check
		then return("1"b);		/* pendant (or suspended), this routine wants to treat them identically
					   since only smart routines like the editor can handle suspended
					   functions and SI damage. */
	end;

	return("0"b);				/* not found in stack so is not pendant */

/* include files */

%include apl_parse_frame;
%include apl_ws_info;
%include apl_number_data;
%include apl_bead_format;
%include apl_operator_bead;
end;
