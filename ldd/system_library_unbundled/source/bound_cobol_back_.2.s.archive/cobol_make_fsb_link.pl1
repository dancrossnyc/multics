/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8090),
     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
     MCR8090 cobol_make_fsb_link.pl1 Disallow duplicate prime keys in Indexed
     Sequential files.
                                                   END HISTORY COMMENTS */


/* Modified on 12/14/84 by FCH, [5.3-1],  BUG573(phx16343), cobol_fsb_type_1.incl.pl1 changed */
/* Modified on 07/03/79 by FCH, [4.0-1], multiple sizes allowed for FSBs */
/* Modified on 01/11/79 by FCH, [3.0-1], size of FSB computed */
/* Modified since Version 3.0 */

/* format: style3 */
cobol_make_fsb_link_:
cobol_make_fsb_link:
     proc (ft_ptr);


declare	linkoff		fixed bin,
	ft_ptr		ptr;


	if first_call ^= cobol_$compile_count
	then do;
		alloc_space = 0;
		first_call = cobol_$compile_count;
	     end;


/*[4.0-1]*/
	if file_table.alternate_keys > 0 & file_table.organization = 3
	then fsb_init.n_words = size (fsb);
	else fsb_init.n_words = 155;

	call cobol_make_link$type_5 (linkoff, file_table.id, addr (fsb_init), alloc_space);

	file_table.fsb.seg = -linkoff;
	file_table.fsb.off = 0;

	return;


/*
	This procedure defines a type-5 link for a file state block. If an indexed
file having alternate record keys is being considered then the size of the link is
computed using the size builtin function.
*/


/* STATIC DECLARATIONS */

dcl	1 fsb_init	aligned static,
	  2 n_words	fixed bin (35) init (0),
	  2 code		fixed bin (35) init (3),
	  2 iocb_ptr	ptr init (null ()),
	  2 open_mode	fixed bin (35) init (0),
	  2 max_cra_size	fixed bin (35) init (0),
	  2 relkeylen	fixed bin (35) init (0),
	  2 relkey	fixed bin (35) init (0),
	  2 keylen_sw	fixed bin (35) init (0),
	  2 key		char (256) init (""),
	  2 open_close_name char (65) unal init (" "),	/*[5.3-1]*/
	  2 attach_flag	bit (27) unal init ("0"b),
	  2 linage_counter	char (8) aligned init ((8)"0"),
						/*[5.3-1]*/
	  2 indicators,				/*[5.3-1]*/
	    3 optional	bit (36) init ("0"b),	/*[5.3-1]*/
	    3 opened	bit (36) init ("0"b),	/*[5.3-1]*/
	    3 internal	bit (36) init ("001"b),	/*[5.3-1]*/
	  2 vfile_open_mode fixed bin (35) init (0),	/*[5.3-1]*/
	  2 file_desc_ptr	ptr init (null ()),		/*[5.3-1]*/
	  2 cobol_open_mode fixed bin (35) init (0),	/*[5.3-1]*/
	  2 last_cobol_op	fixed bin (35) init (0),	/*[5.3-1]*/
	  2 fsb_code	fixed bin (35) init (0),	/*[5.3-1]*/
	  2 key_of_ref	fixed bin (35) init (0),	/*[5.3-1]*/
	  2 prime_key	char (256) varying init (""), /*[5.3-1]*/
	  2 alt_key	char (256) varying init (""), /*[5.3-1]*/
	  2 descriptor	fixed bin (35) init (0),	/*[5.3-1]*/
	  2 last_key_read	char (256) varying init ("");

declare	(alloc_space, first_call)
			fixed bin static;

/* EXTERNAL ENTRY NAMES */

dcl	cobol_make_link$type_5
			entry (fixed bin, char (*), ptr, fixed bin);

/* BUILTIN FUNCTIONS */

dcl	(substr, mod, binary, fixed, addr, addrel, rel, length, string, unspec, null, index, size)
			builtin;



%include cobol_fsb_type_1;
%include cobol_fsbskel;
%include cobol_file_table;
%include cobol_;
     end cobol_make_fsb_link;
