/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1986 *
        *                                                         *
        *********************************************************** */

/****^  HISTORY COMMENTS:
  1) change(86-07-03,Smith), approve(87-07-15,MCR7580),
     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
     Created.
  2) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
     Approved.
  3) change(86-12-10,Flegel), approve(86-12-10,MCR7580),
     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
     Replaced signalling of mowse_fatal_error with a call to fatal_mowse_trap_
                                                   END HISTORY COMMENTS */

/* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
wake_up_sleeper_:
     proc (p_mcb_ptr, p_major_index);

/* : PROGRAM FUNCTION

Send a message to the capability associated with the major index
to cause it to wake up.
*/

/* : NOTES
*/

/* INPUT PARAMETERS */
dcl p_mcb_ptr	       ptr parameter;
dcl p_major_index	       fixed bin parameter;


/* OUTPUT PARAMETERS */


/* MISC VARIABLES */
dcl mowse_info_ptr	       ptr;		    /* Pointer to mowse info structure */
dcl code		       fixed bin (35);


/* STRUCTURES */
dcl 01 wake_up_message,
       02 header,
	03 system	       char unal,
	03 major	       char unal,
	03 minor	       char unal,
	03 source_system char unal,
	03 source_major  char unal;



/* SYSTEM CALLS */


/* SYSTEM CALL SUPPORT */


/* EXTERNAL CALLS */
dcl get_mowse_info_ptr_    entry (ptr, ptr, fixed bin (35));
dcl rcvdat_	       entry (ptr, ptr, fixed bin (21), fixed bin (35));
dcl fatal_mowse_trap_      entry (fixed bin (35));

/* EXTERNAL CALL SUPPORT */
dcl ws_error_$invalid_capability_number
		       fixed bin (35) ext static;

/* BUILTINS */
dcl addr		       builtin;
dcl byte		       builtin;

/* CONDITIONS */


/* CONSTANTS */


/**/
/* INITIALIZATION */

/* MAIN */
	if (p_major_index < MINIMUM_CAT_ENTRY)
	     | (p_major_index > MAXIMUM_CAT_ENTRY)
	then do;
	     call fatal_mowse_trap_ (ws_error_$invalid_capability_number);
	     return;
	end;

	call get_mowse_info_ptr_ (p_mcb_ptr, mowse_info_ptr, code);
	if code ^= 0 then do;
	     call fatal_mowse_trap_ (code);
	     return;
	end;

	mowse_info_ptr
	     -> mowse_info.local_cat (p_major_index).sleep_time = 0;

	wake_up_message.header.system = byte (LOCAL_SYSTEM);
	wake_up_message.header.major = byte (p_major_index);
	wake_up_message.header.minor = byte (WAKE_UP);
	wake_up_message.header.source_system = byte (LOCAL_SYSTEM);
	wake_up_message.header.source_major = byte (INTERNAL);

	call rcvdat_ (p_mcb_ptr, addr (wake_up_message), 5, code);
	if code ^= 0 then do;
	     call fatal_mowse_trap_ (code);
	     return;
	end;

%page;
/* INCLUDE FILES */
%include mowse;
%include mowse_mcb;
%include mowse_info;
%include mowse_io_control_info;

/* : END */
     end;
