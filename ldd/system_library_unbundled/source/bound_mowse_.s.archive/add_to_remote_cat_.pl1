/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1986 *
        *                                                         *
        *********************************************************** */

/****^  HISTORY COMMENTS:
  1) change(86-07-10,Smith), approve(87-07-15,MCR7580),
     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
     Created.
  2) change(86-11-27,Flegel), approve(86-11-27,MCR7580),
     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
     Approved.
                                                   END HISTORY COMMENTS */
/* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */
add_to_remote_cat_:
     proc (p_mcb_ptr, p_major_capability_number, p_major_capability_name,
	p_code);

/* : PROGRAM FUNCTION

Used to update the remote CAT entry, this is an internal MOWSE function call.
*/

/* : NOTES

Returns no errors because all erros are internal to mowse and recovery from
such errors is impossible (no reply given to sender).
*/


/* INPUT PARAMETERS */
dcl p_mcb_ptr	       ptr;		    /* MOWSE's mcb */
dcl p_major_capability_number
		       fixed bin parameter;	    /* Number of the new remot capability */
dcl p_major_capability_name
		       char (*) parameter;	    /* Name of new remote capability */


/* OUTPUT PARAMETERS */
dcl p_code	       fixed bin (35);


/* MISC VARIABLES */
dcl code		       fixed bin (35);
dcl major_num	       fixed bin;		    /* Packed major capability number */
dcl mowse_info_ptr	       ptr;		    /* pointer to mowse info structure */

/* SYSTEM CALL SUPPORT */
dcl ws_error_$invalid_capability_number
		       fixed bin (35) ext static;

/* EXTERNAL CALLS */
dcl capability_$pack       entry (fixed bin, fixed bin, fixed bin,
		       fixed bin (35));
dcl get_mowse_info_ptr_    entry (ptr, ptr, fixed bin (35));

/* BUILTINS */

/**/
/* INITIALIZATION */

	code = 0;
	major_num = 0;

	call get_mowse_info_ptr_ (p_mcb_ptr, mowse_info_ptr, p_code);
	if p_code ^= 0 then
	     return;

/* MAIN */

/* : Check the major_capability_nubmer */

	if p_major_capability_number < MINIMUM_CAT_ENTRY |
	     p_major_capability_number > MAXIMUM_CAT_ENTRY then do;
	     p_code = ws_error_$invalid_capability_number;
	     return;
	end;

/* : Is it already used, return ws_error_$invalid_capability_number */

	if (mowse_info_ptr
	     -> mowse_info.remote_cat (p_major_capability_number)
	     .major_capability ^= 0) then do;

	     p_code = ws_error_$invalid_capability_number;
	     return;
	end;

/* : initialize the remote cat entry */

	call capability_$pack (REMOTE_SYSTEM, p_major_capability_number,
	     major_num, code);
	mowse_info_ptr
	     -> mowse_info.remote_cat (p_major_capability_number)
	     .major_capability = major_num;
	mowse_info_ptr
	     -> mowse_info.remote_cat (p_major_capability_number)
	     .capability_name = p_major_capability_name;
	mowse_info_ptr
	     -> mowse_info.remote_cat (p_major_capability_number).flags
	     .reset = "0"b;
	mowse_info_ptr
	     -> mowse_info.remote_cat (p_major_capability_number).flags
	     .suspended = "0"b;
	mowse_info_ptr
	     -> mowse_info.remote_cat (p_major_capability_number)
	     .flags.sleep_time = "0"b;

	p_code = 0;

%page;
/* INCLUDE FILES */

%include mowse;
%include mowse_info;

/* : END */
     end;
