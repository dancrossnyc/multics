" ******************************************************
" *                                                    *
" * Copyright, (C) Honeywell Limited, 1983             *
" *                                                    *
" * Copyright (c) 1972 by Massachusetts Institute of   *
" * Technology and Honeywell Information Systems, Inc. *
" *                                                    *
" ******************************************************

" HISTORY COMMENTS:
"  1) change(86-07-14,BWong), approve(86-07-14,MCR7442),
"     audit(86-07-17,Ginter), install(86-07-28,MR12.0-1105):
"     Fix fortran bug 493.
"                                                      END HISTORY COMMENTS


"	return_to_user.alm
"
"	This module implements end= and err= for fortran_io_. It also implements all returns
"	to the user from fortran_io_. The entry point return_to_user is used to implement
"	end= and err=. The entry point special_return is used to implement a return from
"	fortran_io_ while "absorbing" fortran_io_'s stack frame.
"
"	Written by Richard A. Barnes 18 November 1976.
"
"		Usages:
"
"	declare	return_to_user	entry(ptr, ptr);
"		call return_to_user(return_loc_ptr, stack_frame_ptr);
"
"	declare	return_to_user$special_return		entry;
"		call return_to_user$special_return();
"
"	This module makes the following assumptions:
"	 - no cleanup handlers exist between the user's stack frame and our stack frame,
"	 - the user's stack frame is not extended,
"	 - no rings have been crossed between the user's frame and fortran_io_'s (ours).
"	 - fortran_io_'s stack frame is absorbed by the user frame when fortran_io_ returns.
"	   This is possible only if fortran_io_ always uses return_to_user$special_return
"	   to return to its caller.
"
"
" Modified:
"	11 March 86, MM & BW - 493: Make 'return_to_user' save indicators
"		in sp|stack_frame.return_ptr+1 before returning.  Remove
"		restoring of indicators in 'special_return'.  In both
"		cases, 'short_return' will restore the indicators.
"	07 Dec 83, HH - Make 'special_return' restore indicators before returning.
"	15 March 1978 DSL - fix $return_to_user code.
"	19 Dec 1977 DSL - to implement special_return entry point and modify return_to_user
"		entry point for new stack frame conventions.
"
	include	stack_header
	include	stack_frame

	name	return_to_user
	segdef	return_to_user

return_to_user:
"
"		     First, make user stack frame the current frame and absorb
"		fortran_io_'s stack frame within the user stack frame.
"
	eppbp	ap|4,*			" get address of 2nd argument
	inhibit	on
	eppsp	bp|0,*			" get address of user stack frame into SP
	eppbp	sp|stack_frame.next_sp,*	" get address of fortran_io_ stack frame
	eppbb	bp|4,*			" get true end of fortran_io_ frame
	spribb	bp|stack_frame.next_sp	" restore fortran_io_'s next_sp
	spribb	sp|stack_frame.next_sp	" include fortran_io_ frame within user's
	spribb	sb|stack_header.stack_end_ptr	" shorten stack to end of user's frame
	inhibit	off
"
"		     Next, use first argument to set return ptr.
"
	eppbb	ap|2,*			" get address of 1st argument
	eppbb	bb|0,*			" get value of return_loc_ptr
	ldi	sp|stack_frame.return_ptr+1	" save indicators temporarily
	spribb	sp|stack_frame.return_ptr	" the seg num must be restored
	sti	sp|stack_frame.return_ptr+1	" restore indicators in memory
"
	short_return			" return to user
"
"
"
"	entry point special_return. Coded: 12 Dec 1977 by David Levin.
"
	segdef	special_return

special_return:
	eppbb	sp|stack_frame.next_sp,*	" get address of end of fio stack frame
	inhibit	on
	eppsp	sp|stack_frame.prev_sp,*	" pop back to user frame
	spribb	sp|stack_frame.next_sp	" absorb fortran_io_ stack frame
	inhibit	off
	lreg	sp|8			" load regs stored by pl1_operators_

	short_return			" return to user
	end
