/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
     MCR8060 cancel_cobol_program.pl1 Reformatted code to new Cobol standard.
                                                   END HISTORY COMMENTS */


/* Modified on 10/25/76 by ORN to comply with error message standards */
/* Modified 03/26/76 by ORN to call cobol_control_$cancel and cobol_stop_run_.
	Change made in conjunction with cobol_control_ modification. */

/* format: style3 */
cancel_cobol_program:
ccp:
     proc;

dcl	(i, arglen, nargs)	fixed bin;
dcl	code		fixed bin (35);
dcl	(rdsw, rfsw)	fixed bin;

dcl	asw		bit (1);
dcl	found		bit (1);

dcl	argptr		ptr;
dcl	arg		char (arglen) based (argptr);

dcl	com_err_		entry options (variable);
dcl	cu_$arg_count	entry (fixed bin);
dcl	cu_$arg_ptr	entry (fixed bin, ptr, fixed bin, fixed bin (35));
dcl	cobol_control_$cancel
			entry (char (*), fixed bin, fixed bin, fixed bin (35));
dcl	cobol_stop_run_	entry (ptr, fixed bin, fixed bin, fixed bin (35));

dcl	error_table_$noarg	fixed bin (35) ext static;
dcl	error_table_$badopt fixed bin (35) ext static;
dcl	error_table_$bigarg fixed bin (35) ext static;


/*************************************/
start:
	asw = "0"b;
	rdsw, rfsw = 0;
	call cu_$arg_count (nargs);
	if nargs < 1
	then go to no_arg_error;
	do i = 1 to nargs;
	     call cu_$arg_ptr (i, argptr, arglen, code);
	     if code ^= 0
	     then go to multics_error;
	     if substr (arg, 1, 1) = "-"
	     then do;
		     if arg = "-a" | arg = "-all"
		     then asw = "1"b;
		     else if arg = "-retd" | arg = "-retain_data"
		     then rdsw = 1;
		     else if arg = "-rf" | arg = "-retain_files"
		     then rfsw = 1;
		     else go to control_arg_error;
		end;
	end;

	found = "0"b;
	do i = 1 to nargs;
	     call cu_$arg_ptr (i, argptr, arglen, code);
	     if code ^= 0
	     then go to multics_error;
	     if substr (arg, 1, 1) ^= "-"
	     then do;
		     if asw
		     then do;
			     call com_err_ (0, "cancel_cobol_program",
				"Redundant names specified with the -all option are ignored.");
			     i = nargs;
			end;
		     else do;
			     if arglen > 65
			     then go to arg_too_long_error;
			     call cobol_control_$cancel (arg, rdsw, rfsw, code);
			     if code ^= 0
			     then do;
				     if code = -2
				     then go to no_run_error;
				     else if code = -1
				     then go to no_prog_error;
				     else go to multics_arg_error;
				end;
			     found = "1"b;
			end;
		end;
	end;

	if asw
	then do;
		call cobol_stop_run_ (null (), rdsw, rfsw, code);
		if code ^= 0
		then go to no_run_error;
	     end;
	else if ^found
	then go to no_arg_error;
	return;


/*************************************/
no_prog_error:
	call com_err_ (0, "cancel_cobol_program", "The program ^a is not active in the current run-unit.",
	     substr (arg, 1, arglen));
	if code > 0
	then go to multics_error;
	return;

arg_too_long_error:
	call com_err_ (error_table_$bigarg, "cancel_cobol_program", substr (arg, 1, arglen));
	return;

no_run_error:
	call com_err_ (0, "cancel_cobol_program", "There are no active programs in the current run-unit.");
	if code > 0
	then go to multics_error;
	return;

no_arg_error:
	call com_err_ (error_table_$noarg, "cancel_cobol_program");
	return;

control_arg_error:
	call com_err_ (error_table_$badopt, "cancel_cobol_program", substr (arg, 1, arglen));
	return;

multics_error:
	call com_err_ (code, "cancel_cobol_program");
	return;

multics_arg_error:
	call com_err_ (code, "cancel_cobol_program", substr (arg, 1, arglen));
	return;

     end cancel_cobol_program;
