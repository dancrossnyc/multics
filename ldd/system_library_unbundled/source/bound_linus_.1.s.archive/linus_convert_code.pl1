/* ***********************************************************
   *                                                         *
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
   *                                                         *
   *                                                         *
   *********************************************************** */

/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

linus_convert_code:
     proc (sys_code, user_code, caller_id);

/* DESCRIPTION:

   This  procedure  translates  certain  error_table_ and mrds_error_ codes to
   more  appropriate  linus_error_ codes which would be more understandable to
   the LINUS user.  
   
   

   HISTORY:

   77-03-01 J. A. Weeldreyer: Initially written
   82-10-19 D. J. Schimke: Added linus_error_$update_not_allowed and
	        linus_error_$no_data.

*/

	dcl     (
	        sys_code,				/* code to be converted */
	        user_code,				/* converted code value */
	        caller_id
	        )			 fixed bin (35);	/* id of caller */

	dcl     (
	        linus_error_$cant_open,
	        linus_error_$mod_key_col,
	        linus_error_$mult_updt_rows,
	        linus_error_$no_data,
	        linus_error_$upd_temp_tab,
	        linus_error_$update_not_allowed,
	        mrds_error_$mod_key_attr,
	        mrds_error_$multiple_tuples_found,
	        mrds_error_$upd_temp_rel,
	        mrds_error_$update_not_allowed,
	        mrds_error_$tuple_not_found,
	        error_table_$noentry,
	        mrds_error_$non_scope_ready,
	        linus_error_$table_not_ready,
	        linus_data_$o_id
	        )			 ext fixed bin (35);

	if sys_code = mrds_error_$non_scope_ready then
	     user_code = linus_error_$table_not_ready;
	else if sys_code = error_table_$noentry & caller_id = linus_data_$o_id
	then user_code = linus_error_$cant_open;
	else if sys_code = mrds_error_$mod_key_attr then
	     user_code = linus_error_$mod_key_col;
	else if sys_code = mrds_error_$multiple_tuples_found then
	     user_code = linus_error_$mult_updt_rows;
	else if sys_code = mrds_error_$upd_temp_rel then
	     user_code = linus_error_$upd_temp_tab;
	else if sys_code = mrds_error_$update_not_allowed then
	     user_code = linus_error_$update_not_allowed;
	else if sys_code = mrds_error_$tuple_not_found then 
	     user_code = linus_error_$no_data;
	else user_code = sys_code;

	return;

     end linus_convert_code;
