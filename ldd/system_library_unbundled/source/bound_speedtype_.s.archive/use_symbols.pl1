/* ******************************************************
   *                                                    *
   *                                                    *
   *    Copyright, (C) Honeywell Information Systems    *
   *    Inc., 1980.                                     *
   *                                                    *
   *                                                    *
   ****************************************************** */

use_symbols: usb: procedure;

/*	This procedure implments the use_symbols command.
   *	Created on 10/13/75 by Bill Silver as use_notescript.
   *	Changed on 06/10/77 by Bill Silver to use_symbols.
   *      Changed on 10/28/80 by Paul Benjamin for special suffixing.
   *
   *	The use_symbols (usb) command will establish the specified segment
   *	as the current Speedtypesymbol dictionary.  Its calling sequence is:
   *
   *	     use_symbols, usb  path
*/
dcl  dir_name char (168);				/* Directory of new symbol dictionary. */
dcl  ent_name char (32);				/* Entry name of new symbol dictionary. */

dcl  ecode fixed bin (35);				/* Error table code. */
dcl  i fixed bin;
dcl  num_args fixed bin;				/* Number of command arguments. */
dcl  path_len fixed bin;				/* Length of pathanme argument. */

dcl  path_ptr ptr;					/* Pointer to pathname argument. */

dcl  pathname_arg char (path_len) based (path_ptr);

dcl (addr, index, substr) builtin;

dcl  error_table_$no_w_permission fixed bin(35) ext static;
dcl  error_table_$wrong_no_of_args fixed bin (35) external;

dcl  com_err_ entry options (variable);
dcl  cu_$arg_count entry (fixed bin);
dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35));
dcl  expand_path_ entry (ptr, fixed bin, ptr, ptr, fixed bin (35));
dcl  speedtype_info_$use entry (char (*), char (*), fixed bin (35));
						/* 	*/
	call cu_$arg_count (num_args);		/* Check the number of arguments. */
	if num_args ^= 1				/* There should be one and only one. */
	then do;					/* Wrong number of args. */
	     ecode = error_table_$wrong_no_of_args;
	     call com_err_ (ecode, "Speedtype", "Usage is:  usb path");
	     return;
	end;

	call cu_$arg_ptr (1, path_ptr, path_len, ecode);
	if ecode ^= 0
	then do;
	     call com_err_ (ecode, "Speedtype", "Error getting pathname argument");
	     return;
	end;

	call expand_path_ (path_ptr, path_len, addr (dir_name), addr (ent_name), ecode);
	if ecode ^= 0
	then do;
	     call com_err_ (ecode, "Speedtype", "Error expanding pathname ^a", pathname_arg);
	     return;
	end;

	i = index (ent_name, ".symbols");
	if i = 0					/* Does entry name already contain suffix? */
	then do;					/* No. */
	     i = index (ent_name, " ") - 1;		/* Look for first blank. */
	     ent_name = substr (ent_name, 1, i) || ".symbols";
	end;

	call speedtype_info_$use (dir_name, ent_name, ecode);
	if ecode = error_table_$no_w_permission
	     then call com_err_ (ecode, "Speedtype", "Attempting to convert ^a>^a to new version.", dir_name, ent_name);

     end use_symbols;
