/* *************************************************************************
   *                                                                       *
   * Copyright (c) 1980 by Centre Interuniversitaire de Calcul de Grenoble *
   * and Institut National de Recherche en Informatique et Automatique     *
   *                                                                       *
   ************************************************************************* */
pascal_statement_map_: proc;

/*
   Displays statement map on PASCAL listing.
   Generates statement map in symbol section
   */

/* Created JMAthane 06/18/81 */


%include pascal_context_;
%include pascal_fsb;
%include statement_map;

	dcl     1 map		 (RACINE_defs$statnbr) like statement_map based (pascal_context_$map_ptr);

	dcl     ioa_$ioa_switch	 entry options (variable);
	dcl     ioa_$ioa_switch_nnl	 entry options (variable);

	dcl     i			 fixed bin (35);
	dcl     RACINE_defs$statnbr	 fixed bin (35) ext;

	dcl     RACINE_defs$mpcogout	 ptr ext;


display: entry;

	fsb_ptr = RACINE_defs$mpcogout;

	call ioa_$ioa_switch (system_ptr, "

        STATEMENT MAP

^6( FILE  LINE ST    LOC ^)");
	do i = 1 to RACINE_defs$statnbr - 1;
	     call ioa_$ioa_switch_nnl (system_ptr, "  ^[   ^s^;^3d^] ^5d ^[  ^s^;^2d^] ^6o ",
		map (i).file = "0"b, fixed (map (i).file), fixed (map (i).line), map (i).statement = "0"b, fixed (map (i).statement), fixed (map (i).location));
	     if mod (i, 6) = 0 then call ioa_$ioa_switch (system_ptr, "");
	end;

	return;


return_map_ptr: entry returns (ptr);

	return (pascal_context_$map_ptr);


return_prof_ptr: entry returns (ptr);

	return (pascal_context_$prof_ptr);



     end pascal_statement_map_;
