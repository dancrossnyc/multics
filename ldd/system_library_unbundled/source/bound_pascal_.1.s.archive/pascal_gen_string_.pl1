/****^  *************************************************************************
        *                                                                       *
        * Copyright (c) 1991 by Centre Interuniversitaire de Calcul de Grenoble *
        * and Institut National de Recherche en Informatique et Automatique     *
        *                                                                       *
        * Copyright (c) 1980 by Centre Interuniversitaire de Calcul de Grenoble *
        * and Institut National de Recherche en Informatique et Automatique     *
        *                                                                       *
        ************************************************************************* */



/****^  HISTORY COMMENTS:
  1) change(91-10-25,Schroth), approve(91-11-28,MECR0015),
     audit(91-11-25,WAAnderson), install(91-11-28,MR12.5-1001):
     Correct MR12.4 source code corruption.
  2) change(92-05-14,Schroth), approve(91-11-25,MCR8251),
     audit(92-09-22,WAAnderson), install(92-09-24,MR12.5-1016):
     Replace MECR0015: Correct MR12.4 source code corruption.
                                                   END HISTORY COMMENTS */



pascal_gen_string_: proc;

/* procedure to generate acc strings in object def section
   and avoid string duplication */

	dcl     string		 char (*);	/* (input) */
	dcl     offset		 bit (18);	/* (output) : offset of the string in the section */
	dcl     nbwords		 fixed bin (35);	/* (output) : nbr of words generated (may be zero) */

%include pascal_context_;

/* automatics */

	dcl     sect_ptr		 ptr;
	dcl     sect_len		 fixed bin (35);
	dcl     (ptr1, ptr2)	 ptr;

/* based */

	dcl     1 acc		 based (ptr1),
		2 num_chars	 fixed bin (8) unal,
		2 string		 char (0 refer (acc.num_chars)) unal;

def_: entry (string, offset, nbwords);
	sect_ptr = pascal_context_$def_ptr;
	sect_len = pascal_context_$def_word_count;
	go to join;

ps_def_: entry (string, offset, nbwords);

	sect_ptr = pascal_context_$ps_def_ptr;
	sect_len = pascal_context_$ps_def_word_count;

join:

	ptr1 = sect_ptr;
	ptr2 = ptr (sect_ptr, sect_len);

	do while (ptr1 ^= ptr2);
	     if acc.string = string then do;
		     offset = rel (ptr1);
		     nbwords = 0;
		     return;
		end;
	     ptr1 = addrel (ptr1, 1);
	end;

	acc.num_chars = length (string);
	acc.string = string;
	offset = rel (ptr1);
	nbwords = acc.num_chars + 4;
	nbwords = nbwords / 4;
	return;

     end;
