"  ******************************************************
"  *                                                    *
"  *                                                    *
"  * Copyright (c) 1972 by Massachusetts Institute of   *
"  * Technology and Honeywell Information Systems, Inc. *
"  *                                                    *
"  *                                                    *
"  ******************************************************

"ALM subroutine to convert from 9 bit EBCDIC ZCODE to 9 bit Multics APL ASCII
"Input bytes must be valid EBCDIC characters in the range
"00 <_ hexadecimal_value <_ FF, or 000 <_ octal_value <_ 377.
"
"ARG 1: source string - data to be converted
"ARG 2: target string - converted data
"
"PL/I Usage:
"
"dcl  apl_zcode_to_ascii_ entry (char (*), char (*));
"     call apl_zcode_to_ascii_ (input_string, output_string);
"
"Note: the EBCDIC to ASCII mapping used is defined in the text
"      of this procedure.  It is available to the user program
"      through the following declaration.
"
"dcl  apl_zcode_to_ascii_$za_table char (256) external static;
"
"The table consists of 256 ASCII characters which correspond to
"the 256 EBCDIC characters.  As only 128 of the EBCDIC characters
"have ASCII mappings, the other 128 are mapped into the ASCII SUB
"character, octal 032.  (The EBCDIC SUB character is also mapped
"into octal 032.
"
"    0)  Created (as ebcdic_to_ascii_) by Ross E. Klinger, 02/14/74
"    1)  Modified (as ebcdic_to_ascii) by R.E. Klinger, 03/13/75
"    2)  Rewritten to be apl_zcode_to_ascii_ by Paul Green, 7/30/76
	name	apl_zcode_to_ascii_
	segdef	apl_zcode_to_ascii_
	segdef	za_table
apl_zcode_to_ascii_:
	epp1	ap|2,*		address of source string to pr1
	epp3	ap|4,*		address of target string to pr3
	ldx3	0,du		set x3 not to skip parent pointer if none
	lxl2	ap|0		load argument list code value
	canx2	=o000004,du	check for code 4 - no parent pointer
	tnz	*+2		transfer if no parent pointer
	ldx3	2,du		parent pointer - set x3 to skip it
	lda	ap|6,x3*		load source string descriptor
	ldq	ap|8,x3*		load target string descriptor
	ana	mask		drop all but string size bits
	anq	mask		ditto
	mvt	(pr,rl),(pr,rl),fill(230)	translate ebcdic to ascii
	desc9a	pr1|0,al		source string
	desc9a	pr3|0,ql		target string
	arg	za_table
	short_return		"exit

mask:	oct	000077777777
	even
"		ASCII OUTPUT	ASCII GRAPHIC	EBCDIC INPUT
za_table:	oct	000001002003	NUL SOH STX ETX	00-03
	oct	032011032072	- HT - FAKECOLON	04-07
	oct	056032032013	FAKEPERIOD - - VT 	08-0B
	oct	014015133135	FF CR [ ]		0C-0F
	oct	050051073057	( ) SEMICOLON /	10-13
	oct	134255256032	\ -< -> -		14-17
	oct	032245053055	- DIAR + -	18-1B
	oct	251205052212	x -: * c		1C-1F
	oct	213174204203	f | & v		20-23
	oct	074200075201	< <_ = >_		24-27
	oct	076202252206	> /= a e		28-2B
	oct	247250246054	i p w ,		2C-2F
	oct	041233220221	! o| _| t		30-33
	oct	211077176207	o ? ~ ^|		34-37
	oct	210222223217	v| (_ )_ n		38-3B
	oct	224137234242	u _ \o b		3C-3F
	oct	215216241232	_o q 'q *o		40-43
	oct	226225240237	&~ v~ .n d|		44-47
	oct	236227230243	g| -o -/ -\		48-4B
	oct	244275274046	m _f _e "046	4C-4F
	oct	100043044032	@ # $ -		50-53
	oct	777776141142	Td Sd A B		54-57
	oct	143144145146	C D E F		58-5B
	oct	147150151152	G H I J		5C-5F
	oct	153154155156	K L M N		60-63
	oct	157160161162	O P Q R		64-67
	oct	163164165166	S T U V		68-6B
	oct	167170171172	W X Y Z		6C-6F
	oct	214101102103	d A_ B_ C_		70-73
	oct	104105106107	D_ E_ F_ G_		74-77
	oct	110111112113	H_ I_ J_ K_		78-7B
	oct	114115116117	L_ M_ N_ O_		7C-7F
	oct	120121122123	P_ Q_ R_ S_		80-83
	oct	124125126127	T_ U_ V_ W_		84-87
	oct	130131132272	W_ Y_ Z_ _d		88-8B
	oct	060061062063	0 1 2 3		8C-8F
	oct	064065066067	4 5 6 7		90-93
	oct	070071056253	8 9 . ^		94-97
	oct	040047072254	SP ' : g		98-9B
	oct	012775010300	NL EOB BS LF	9C-9F
	oct	231032032032	g~ - - -		A0-A3
	oct	032032032032	- - - -		A4-A7
	oct	032032136042	- - "136 "042	A8-AB
	oct	045032032032	% - - -		AC-AF
	oct	032032032032	- - - -		B0-B3
	oct	032032032302	- - - c|		B4-B7
	oct	032032032032	- - - -		B8-BB
" END OF ZCODES.
	oct	032135032032	-,],-,-		BC-F
	oct	173101102103	{,A,B,C		C0-3
	oct	104105106107	D,E,F,G		C4-7
	oct	110111032032	H,I,-,-		C8-B
	oct	032032032032	-,-,-,-		CC-F
	oct	175112113114	},J,K,L		D0-3
	oct	115116117120	M,N,O,P		D4-7
	oct	121122032032	Q,R,-,-		D8-B
	oct	032032032032	-,-,-,-		DC-F
	oct	134032123124	\,-,S,T		E0-3
	oct	125126127130	U,V,W,X		E4-7
	oct	131132032032	Y,Z,-,-		E8-B
	oct	032032032032	-,-,-,-		EC-F
	oct	060061062063	0,1,2,3		F0-3
	oct	064065066067	4,5,6,7		F4-7
	oct	070071032032	8,9,-,-		F8-B
	oct	032032032032	-,-,-,-		FC-F
	end
