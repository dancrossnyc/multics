/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

/* Modified 790329 by PG to print a few more items. */
/* Modified 791013 by PG to print output_info items */

apl_display_ws_info:
adwi:
     procedure;

/* builtins */

declare	null		builtin;

/* entries */

declare	ioa_		entry options (variable);

/* include files */

%include apl_number_data;
%include apl_ws_info;

/* program */

	if ws_info_ptr = null
	then do;
		call ioa_ ("No active workspace.");
		return;
	     end;

	call ioa_ ("ws_info at ^p", ws_info_ptr);

	call ioa_ ("version_number:^-^d", ws_info.version_number);
	call print_switch ("long_error_mode", ws_info.long_error_mode);
	call print_switch ("debug_mode", ws_info.debug_mode);
	call print_switch ("canonicalize_mode", ws_info.canonicalize_mode);
	call print_switch ("transparent_mode", ws_info.transparent_to_signals);
	call print_switch ("meter_mode", ws_info.meter_mode);
	call print_switch ("compatibility_mode", ws_info.compatibility_check_mode);
	call print_switch ("no_quit_handler", ws_info.no_quit_handler);

	call ioa_ ("digits:^2-^d", ws_info.digits);
	call ioa_ ("width:^2-^d", ws_info.width);
	call ioa_ ("index_origin:^-^d", index_origin);
	call ioa_ ("random_link:^-^d", ws_info.random_link);
	call ioa_ ("fuzz:^2-^e", ws_info.fuzz);
	call ioa_ ("float_index_origin:^-^f", ws_info.float_index_origin);
	call ioa_ ("number_of_symbols:^-^d", ws_info.number_of_symbols);
	call ioa_ ("maximum_value_stack_size:^-^d", ws_info.maximum_value_stack_size);

	call ioa_ ("symbol_table_ptr:^2-^p", ws_info.symbol_table_ptr);
	call ioa_ ("current_parse_frame_ptr:^-^p", ws_info.current_parse_frame_ptr);
	call ioa_ ("value_stack_ptr:^2-^p", ws_info.value_stack_ptr);
	call ioa_ ("alloc_free_info_ptr:^-^p", ws_info.alloc_free_info_ptr);

	call ioa_ ("integer_fuzz:^-^f", ws_info.integer_fuzz);
	call ioa_ ("user_number:^-^d", ws_info.user_number);
	call ioa_ ("latent_expression:^-^p", ws_info.latent_expression);
	call ioa_ ("wsid:^2-^a", ws_info.wsid);

	call ioa_ ("interrupt_info:^-^8b", string (ws_info.interrupt_info));

	call ioa_ ("output_buffer_ptr:^-^p", ws_info.output_info.output_buffer_ptr);
	call ioa_ ("output_buffer_len:^-^d", ws_info.output_info.output_buffer_len);
	call ioa_ ("output_buffer_pos:^-^d", ws_info.output_info.output_buffer_pos);
	call ioa_ ("output_buffer_ll:^-^d", ws_info.output_info.output_buffer_ll);
	call ioa_ ("tab_width:^-^d", ws_info.tab_width);
	return;

print_switch:
     procedure (bv_switch_name, bv_value);

/* parameters */

declare	(
	bv_switch_name	char (*),
	bv_value		bit (1) unaligned
	)		parameter;

/* program */

	call ioa_ ("^a:^-^[on^;off^]", bv_switch_name, bv_value);
	return;

     end print_switch;

     end /* apl_display_ws_info */;
