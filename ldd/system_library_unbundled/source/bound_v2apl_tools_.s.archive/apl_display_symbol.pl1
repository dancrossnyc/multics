/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

apl_display_symbol:
ads:
     procedure options (variable);

	call cu_$arg_ptr (1, arg_ptr, arg_length, code);
	if code ^= 0
	then do;
		call com_err_ (code, "apl_display_symbol", "Usage: ads symbol_name");
		return;
	     end;

	call apl_get_symbol_ (arg_string, symbol_bead_ptr, hash_link);

/* In order to be transparent, we must decrement the reference count....since
   apl_get_symbol_ auto-increments it for us! */

	symbol_bead_ptr -> symbol_bead.reference_count = symbol_bead_ptr -> symbol_bead.reference_count - 1;

	brief = "0"b;
	call cu_$arg_ptr (2, arg_ptr, arg_length, code);
	if code = 0
	then if arg_string = "-bf" | arg_string = "-brief"
	     then brief = "1"b;
	     else do;
		     call com_err_ (error_table_$badopt, "apl_display_symbol", "Only control arg is -brief(-bf)");
		     return;
		end;

	call apl_display_bead_ ((symbol_bead_ptr), brief);

	if symbol_bead_ptr -> symbol_bead.meaning_pointer ^= null ()
	then do;
		call ioa_ ("Meaning:");
		call apl_display_bead_ ((symbol_bead_ptr -> symbol_bead.meaning_pointer), brief);
	     end;

	return;

/* entries */

declare	com_err_		entry options (variable);
declare	ioa_		entry options (variable);
declare	apl_get_symbol_	entry (char (*), pointer unaligned, fixed bin);
declare	cu_$arg_ptr	entry (fixed bin, ptr, fixed bin (21), fixed bin (35));
declare	apl_display_bead_	entry (pointer, bit (1) aligned);

/* external static */

declare	error_table_$badopt fixed bin (35) external static;

/* builtin */

declare	(hbound, lbound, null)
			builtin;

/* automatic */

declare	arg_length	fixed bin (21),
	arg_ptr		ptr,
	brief		bit (1) aligned,
	bucket_index	fixed bin,
	code		fixed bin (35),
	hash_link		fixed bin,
	symbol_bead_ptr	pointer unaligned;

/* based */

declare	arg_string	char (arg_length) based (arg_ptr);

/* include files */

%include apl_number_data;
%include apl_ws_info;
%include apl_bead_format;
%include apl_symbol_table;
%include apl_symbol_bead;
     end /* apl_display_symbol */;
