/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        *                                                         *
        *********************************************************** */



/****^  HISTORY COMMENTS:
  1) change(84-11-06,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Improved the functional description and redid the declarations.
                                                   END HISTORY COMMENTS */


xforum_default_fkeys_: proc () returns (ptr) /* must be quick */;

/*
   BEGIN DESCRIPTION

   function:
      This module creates a static function key data structure that does not
      depend on function keys that are part of the currently used terminal. The
      function key mapping is:
              1:  ESC?           9:   ESCF
              2:  ESCf           11:  ESCP
              3:  ESCp           12:  ESCQ
              4:  ESCq           13:  ESCR
              5:  ESCr           14:  ESCL
              6:  ESCl           15:  ESCH
              7:  ESCh           16:  ESCE
              8:  ESCe

   description of entry points:
      xforum_default_fkeys_:
         input:
         output:  returns (ptr)    A pointer to the function_key_data structure
         The function key data structure is allocated in the system_free_area_.
         A pointer to the structure is keep in internal static. If a call is
         made and the internal static pointer is not null then the pointer
         value is returned. If the pointer is null, the structure is allocated,
         the static pointer value set, and the pointer value returned. Note
         that the structure is NOT FREED when xforum terminates. It is a small
         structure and it was decided to leave it around so that it could be
         used in another invocation of xforum.

   description of internal procedures:

   known bugs:

   notes:

   history:
      83-??-?? Deryk Barker: written.

      84-09-17 Davids: Added the upper case letters to the list of pseudo
      function keys.

   END DESCRIPTION
*/

/* PARAMETERS */

/* EXTERNAL STATIC */

/* ENTRIES */

	dcl     get_system_free_area_	 entry () returns (ptr);

/* CONDITIONS */

/* INTERNAL AUTOMATIC */

	dcl     i			 fixed bin;	/* loop index */

/* INTERNAL STATIC */

	dcl     default		 static ptr init (null); /* pointer to the allocated structure */

/* CONSTANTS */

	dcl     (
	        ESC		 init ("") char (1), /* escape character, \033 */
	        PSEUDO_KEYS		 init ("?fpqrlheFPQRLHE") char (15) /* second characters in the */
	        )			 internal static options (constant); /* pseudo function keys */

/* BUILTINS */

          dcl     length                 builtin;
          dcl     null		 builtin;
          dcl     substr                 builtin;

/* BASED */

	dcl     default_fkey_seq	 char (default -> function_key_data.seq_len) /* string defining the pseudo */
				 based (default -> function_key_data.seq_ptr); /* function key character sequences */
	dcl     system_area		 area based (get_system_free_area_ ()); /* system free area */

/* INCLUDE FILES */

%include function_key_data;

	if default ^= null ()
	then return (default);

	function_key_data_highest = length (PSEUDO_KEYS);

	allocate function_key_data set (default) in (system_area);
	default -> function_key_data.version = function_key_data_version_1;
	default -> function_key_data.seq_len = 2 * function_key_data_highest;

	allocate default_fkey_seq in (system_area);
	do i = 1 to function_key_data_highest;
	     substr (default_fkey_seq, 2 * i - 1, 1) = ESC;
	     substr (default_fkey_seq, 2 * i, 1) = substr (PSEUDO_KEYS, i, 1);
	     default -> function_key_data.function_keys (i, KEY_PLAIN).sequence_index = 2 * i - 1;
	     default -> function_key_data.function_keys (i, KEY_PLAIN).sequence_length = 2;
	end;

	return (default);

     end xforum_default_fkeys_;
