/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        *                                                         *
        *********************************************************** */



/****^  HISTORY COMMENTS:
  1) change(85-01-08,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Changed calling sequence of xforum_multics_mode to remove
     the handle_interactive_messages_flag. Also changed the calling sequence of
     xforum_help_$get_help to remove the handle_interactive_messages_flag and
     the function_key_data_ptr. Changed calling sequence of
     xforum_window_mgr$menu_get_choice to remove the arguments
     function_key_data_ptr and handle_interactive_messages. Changed test to
     call xforum_multics_mode to use xforum_user_profile$get_multics_mode
     instead of args.multics_mode. Note that the value of the flag
     returned by get_multics_mode can be changed within the loop that the test
     is being made in.
  2) change(85-01-10,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Changed call to xforum_process_args_ so that the args structure is no
     longer passed in. Instead just a pointer to the arg_list is input.
     Removed all the calls to xforum_user_profile$set that were based on the
     values in the args structure (this is now done by the
     xforum_process_args_ routine). Now setting values in the
     local_xforum_info structure by calling the appropriate
     xforum_user_profile$get routine. Took the arg_list_ptr and the ptrs
     elements out of the xforum_args structure and made them independent.
     Removed the reference to xforum_args.incl.pl1.
     
     85-01-14 Davids: replaced calls to accept_messages, print_messages, and
     defer_messages with calls to xforum_im_mgr$init, defer_messages, and
     restore_messages.
     
     85-01-18 Davids: Changed version to 1.1c
     
     85-01-23 Davids: Changed version to 1.1d
     
     85-01-24 Davids: Increased the hbound of ptrs from 2 to 3 to accommodate
     the segment used to hold the set_array.
  3) change(85-02-01,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Changed to version 1.1e.
     
     85-02-06 Davids: Replaced call to xforum_main_options$getting_started with
     call to xforum_getting_started.
     
     85-02-13 Davids: Replaced calls to xforum_getting_started and
     xforum_personalize to xforum_getting_started_menu and
     xforum_personalize_menu
     
     85-02-13 Davids: Changed calling sequence of xforum_help_line_$change
     to include the new F3_message argument.
     
     85-02-14 Davids: Changed the call to xforum_getting_started_menu to
     xforum_help_menus$getting_started. Added the call to
     xforum_help_line_$init;
     
     85-02-18 Davids; Changed to version 1.1f
     
     85-03-06 Davids: Moved the code that nulls xforum_meeting_list_ptr,
     xforum_menu_ptr, and spy_ptr so that it is after the check for a
     recursive call. Nulling xforum_meeting_list_ptr before the call ment
     that after the failure and a return to the first invocation of xforum
     a null pointer fault would happen almost immediately.
  4) change(85-03-07,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Changed version to 1.1g
     
     85-04-04 Davids: Changed version to 1.1h
     
     85-04-15 Davids: Changed version to 1.1i
     
     85-04-22 Davids: Added xt_cleanup_flag paramater to the call of the
     xforum_im_mgr$restor_origial entry.
     
     85-05-08 Davids: Added comments to all variable declarations and removed
     some declared but not used variables.
     
     85-05-21 Davids: Removed reference to xforum_menu_info.incl.pl1
     it was not being used.
  5) change(86-02-21,LJAdams), approve(86-02-21,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Repositioned call to xforum_help_$init to avoid abort with invalid sci_ptr
     when terminating because of an error in xforum profile.
  6) change(86-05-01,LJAdams), approve(86-05-01,MCR7350),
     audit(86-05-01,Gilcrease), install(86-05-06,MR12.0-1053):
     Changed version number to 2.0.
  7) change(87-04-10,LJAdams), approve(87-04-22,MCR7684),
     audit(87-07-30,Blair), install(87-08-06,MR12.1-1065):
     Changed to allow command_processor_ escapes.  Changed version to 2.1.
  8) change(88-08-09,LJAdams), approve(88-08-09,MCR7766),
     audit(88-08-14,GDixon), install(88-09-13,MR12.2-1109):
     Moved the setting of Shelp switch prior to the call to xforum_help_$init.
                                                   END HISTORY COMMENTS */


executive_forum:
xforum:
     proc;

/*
   BEGIN DESCRIPTION

   function:
      This is the main module of the xforum package. It coordinates the
      calls to lower level routines which perform the initialization
      of the system and the termination of the system. It also creates
      and displays the main menu and processes the user's menu selection.

   description of entry points:
      executive_forum, xforum:
          input:
          output:
          Main entry point.

      reconnect_test:
          input:   
          output:  returns bit (1) aligned, "1"b implies that the current
                     condition frame on the stack is a quit and that the
                     reconnect_quit switch is set to indicate that the quit
                     was caused as a result of a reconnection.
          The reconnect_test entry point is used by the emacs extension to
          determine if a quit is the result of the user hitting the BREAK key
          or a reconnection. It returns a true if the quit was caused by a 
          reconnection. It returns false if the quit was caused by some other
          reason.

   description of internal procedures:
      xforum_terminate: coordinates the termination of the facility. It is
         called during both normal termination and during a cleanup. The
         cleanup_flag is used to distinguish the two. Note that the only
         menu that needs to be destroyed is the main menu. The other menus
         are destroyed in the lower level routines that created them.

      collect_spy_data: records the users choice in a special spy structure.
         The record includes an index which counts the users responses, an
         identifier which indicates what the user is responding to, i.e.
         main menu, help prompt, and the users response.

      record_spy_data: moves the data collected in the spy structure from the
         segment in the users process dir to a segment in
         >udd>m>cp>Davids>xforum>spy directory. No error is reported if some
         reason the data cannot be moved i.e. the directory does not exist.

      fatal_error: is called in response to the xforum_fatal_error
         condition being signaled. It locates the information structure
         associated with the condition and calls xforum_error with the code
         and message from the structure.

      xforum_error: shuts down xforum and reports an error to the user. Xforum
         must first be shut down so that the user can see the error message.
         If the message is displayed and the system then shut down the message
         will be cleared off the screen to fast to read.

      check_for_reconnect: calls find_condition_info_ to get the info pointer
         for the quit condition. It then checks the reconnection_quit switch
         in the quit_info structure.

   known bugs:

   notes:

   history:

      83-11-?? Deryk Barker: Originally coded
   
      84-03-27 Davids: Modified to check the value of forum_version
      before adding the .control suffix to the meeting path. If the
      value of forum_version is 2 the suffix .forum is added instead.
      Modified the call to xforum_find_path_ to include the forum_version
      parameter. The call is first made with the version set to 1 and if
      an error occurs it is tried again with the version = 2. If that fails
      an error is reported to the user
   
      84-03-28 Davids: Added forum_version parameter to display_trans,
      next_trans, and next_ref so that the correct forum_ entry for setting
      the "seen" value could be called. Changed the order of the calls to
      close_meeting and forum_$set_switch_index when the user selected to 
      resign from a meeting in the attend_meeting proc so that the call to
      set_switch_indx is made before the call to close. This fixes the problem 
      of not have a resignation recorded by forum. Modified so that the changed
      flag is updated when the user attends a meeting. The flag for
      participation/remove was already updated. This is needed if the user was 
      previously not a participant. Added code to send a silent message to a
      special mailbox to record the fact that someone used xforum.
   
      84-05-02 Davids: Modified the text of QUERY_USAGE to include "To return
      to top menu press BREAK". Also modified the usage_msg to include "To
      quit, press ESC, then ""q""" and "To quit, press F4". Added a "To return
      to top menu press BREAK" message when a dynamic menu is displayed, there
      used to be no message displayed. Moved code that starts up the video 
      system so that its the first thing so that it can write out a "Executive 
      Forum is setting up - be patient" message immediately. Also added code in
      xforum_terminate to clear user_io after it restores it to its original
      size. Also removed code appearing after the exit_xforum label and the
      call to xforum_terminate code that cleared the window - this only worked 
      if the process was in the video system to start with.
   
      84-05-03 Davids: Modified the help line when in the editor so that it
      indicates that BREAK is used to abort the transaction being entered.
      Changed the condition on length of meeting names from 20 to 26 characters
      - version 2 forums can have longer names than version 1 forums. Changed
      the length of the varaibles that will hold those names from 20 to 26.
      Changed the length of the headers from 38 to 44 to be able to handle the
      extra length. Changed Version to 1.6.
   
      84-05-22 Davids: Moved the call to menu_$destroy to the xforum_terminate
      procedure instead of leaving it as the next thing after the call to
      xforum_terminate at the exit_xforum_label. Also added a call to
      window_$sync after the call to clear the user_io window in 
      xforum_terminate so that the ready message is not lost when you exit
      xforum. Reformated the text on the help line so that F3 could be added.
      Added code to leave the cursor positioned two lines down from the getting
      set up message and in column 1 so that error messages start off at the
      left margin. Changed the last occurance of Use to Press (at least I hope
      its the last). Removed the call to clear the menu window right before the
      call to display the attending meeting menu. This means that the attending
      menu meeting will no longer be redrawn ever time you enter a new meeting.
   
      84-05-24 Davids: Added code to the internal proc get_to_cl to create
      a special multics_mode status window and resize user_io to use most of
      the screen. Also changed the pi handler to destroy the status window
      and resize user_io. This code doesn't work. It clears the user_io
      window which it is not suppose to do and dies badly with the attending
      meeting menu.
   
      84-05-30 Davids: Added code to the pi handler in the attend_meeting
      internal proc and changed the handler in the main xforum proc to
      correctly handle the return from multics mode. The status window is
      destroyed and the user_io window is correctly shrunk, the status info and
      menu are redisplayed. The text in the user_io window that does not
      overlap the menu window is left on the screen. Note that there are still
      circumstances when the user_io window will be cleared when it is
      increased as the user gets into Multics mode. No idea why. Also modified
      the xforum_terminate internal proc to destroy the xforum status window
      (as opposed to the multics mode status window) It has not been doing
      this.
   
     84-06-01 Davids: Removed the call to window_$sync in xforum_terminate it
     was doing no good. The probelm with the lost screens was that my message
     handler was not clearing the status flag. Why this did not effect xmail I
     have no idea.
   
     84-06-05 Davids: Modified xforum_terminate to call two new internal procs.
     output_shut_down_msg is used to restore the original user_io window and
     then output a Executive Forum is shutting down - be paitent message. It
     takes a while to shut down and the user was not given any feedback that
     his F4 was accepted. The record_spy_data routine looks for the directory
     >udd>m>cp>Davids>xforum>spy. If it finds it, it creates a <unique_chars>
     segment in the dir and places in it a copy of the spy structure.
     Also changed the version to 1.7 and removed the call to
     send_message_silent. That form of usage recording is not needed with the
     spy code.
   
     84-06-06 Davids: Added calls to collect_spy_data after all calls to
     menu_$get_choice, xforum_dyn_menu_$get_choice, xforum_help_$get_choice
     and iox_$get_line, and in the quit handlers. This will record the current
     state and the users input.
   
     84-06-07 Davids: Added copy of reconnect_test and associated internal
     procs so that emacs extension can determine that a reconnect has occured.
     Code was copied from xmail_window_manger_.
   
     84-06-12 Davids: Added calls to check_window_status as first thing done
     in all quit handlers. This allows reconnections to work right. Added
     an any_other hander to get_to_cl. This prevents the xforum quit handlers
     to be invoked when quit is signaled in multics mode. Modified xforum_error
     to goto error_exit_xforum instead of just exit_xforum. exit_xforum calls
     xforum_terminate which xforum_error has already done. This second call
     clears the error message from the screen. The error_exit_xforum label
     was added after the exit_xforum label - right after the call to
     xforum_terminate and before return.
   
     84-06-14 Davids: Modified so that xforum_menu_ptr is set to null as one
     of the first things done and in xforum_terminate before the call to
     menu_$destroy the pointer is checked and the call made only if its
     non-null. Changed the start up message to "Executive Forum is setting up -
     Menu will be displayed shortly." and the shut down message to "Executive
     Forum is shutting down - Screen will clear shortly." Changed the version
     to 1.8
   
     84-06-19 Davids: Modified so that all window recreation or changes are
     done via calls to xforum_window_mgr. The invocation and termination of the
     video system and the output of the starting up and shutting down messages
     are also done via the xforum_window_mgr module. The condition xforum_error
     was added to handle fatal errors. Changed the version to 1.9.
   
     84-06-21 Davids: Removed window management take took place before and
     after multics mode and replaced with calls to xforum_window_mgr.
   
     84-06-28 Davids: Removed the internal procedures display_trans,
     enter_trans, next_trans, prev_trans, list_trans, select_trans, next_ref,
     prev_ref, and first_ref and replaced them with calls to the corresponding
     xforum_attend_mtg_options entries. Also changed the version to 2.0.
   
     84-07-05 Davids: replaced calls to menu_$display and menu_$get_choice with
     xforum_window_mgr$menu_display and xforum_window_mgr$menu_get_choice.
     Changed version to 2.1.
   
     84-07-06 Davids: added calls to xforum_status_$update_title to output what
     used to be the menu header. Removed the header parameter from the calls to
     xforum_create_menu_
   
     84-07-10 Davids: Removed internal procedures goto_meeting,
     resign_from_meeting, next_meeting, list_meetings, get_choice_from_menu,
     find_meeting, and prompt_help and replaced then with calls to the
     corresponding xforum_main_option entries.
   
     84-07-25 Davids: Extensively changed Multics mode. Now instead of just
     pushing a new command level what happens is that a prompt is issued and
     the user enters the command. When the command fishes executing a prompt is
     issued again. To return to xforum the user enters a null command, i.e.
     just presses the return key. The help line displays the command being
     executed or if the user is at the prompt a longer version of the prompt.
     Currently the prompts are just filler text because I cannot think of
     really good prompts yet.
   
     84-07-26 Davids: Modified so that the xforum_meeting_info_ptr is obtained
     from args.ptrs (1) instead of arg.ptrs (2). ptrs (1) used to be the 
     xforum_meeting_list_ptr ptr. Modified the xforum_terminate so that it
     just always frees ptrs (1) instead of testing args.meeting_list first.
     The xforum_meeting_list segment is used for the life of the process.
     Modified the get_to_cl routine so that it traps certain conditions and
     prints the error message that the system would. This prevents a new stack
     frame from being pushed. Certain conditions have to be let though.
     Its probably best if get_to_cl is an external routine. It will more than
     likely have to be modified several times before the list of what
     conditions trap and what to let though is correct.
   
     84-07-27 Davids: Replaced calls to internal proc get_to_cl with calls to
     external proc xforum_multics_mode. Removed from the program_interrupt
     handler the code dealing with a return from multics mode and placed the
     code after the call to xforum_multics_mode. Deleted the multics_mode_flag.
   
     84-07-30 Davids: Changed version to 3.0
   
     84-07-31 Davids: Modified so that the help messages conform with the MTB
     and so that title is separated from the pad character by a space.
   
     84-08-13 Davids: Changed version to 3.1. Changed Meetings to Eligible in
     the banner. Added code to handle interactive messages. If the
     handle_interactive_messages flag is set then messages will be defered
     during  startup and accepted again during termination. Also the flag is
     passed to xforum_multics_mode and xforum_window_mgr_$menu_get_choice.
   
     84-08-14 Davids: Changed the main menu to conform to the MTB.
     This deleted the "Resign from Meeting", "Next Attended Meeting", "List
     Meetings", "List Changed Meetings", and "List Attended Meetings" options.
     Added a call to xforum_user_profile$get to set up the profile (currently
     not used) and set the first time flag. 
   
     84-08-15 Davids: Replaced the long argument lists of xforum_main_options
     by a ptr to a structure which is loaded with the information. Also cleaned
     up the dcls. Deleted the internal procs get_help and general_help.
     Replaced get_help with xforum_get_help.
   
     84-08-16 Davids: Replaced calls to xforum_get_help with calls to
     xforum_help_$get_help. Updated the attending meeting menu to reflect the
     MTB and changed the code handling the users choice accordingly.
   
     84-08-29 Davids: Removed the attend_meeting internal proc (moved it to
     xforum_main_options). Added the exit_executive_forum condition handler
     and setting of xforum_info.main_options.use_alternate_fkeys, multics_mode,
     and handle_interactive_messages. These were needed to make the move work
     correctly. Also added the code for correctly handling the getting started
     menu.
   
     84-08-30 Davids: Finally added an xforum_fatal_error handler. Added the
     parameter xt_clean_up flag to xforum_terminate. This value is passed
     to the window_mgr routines call by terminate to control terminal i/o.

     84-09-04 Davids Changed version to 4.0

     84-09-17 Davids: Added code for processing upper case escapse sequences.
     This include declaring XXX2 constants and using them where ever the XXX
     constants are used.

     84-09-25 Davids: Removed references to xforum_trans_array. The array is
     being deleted because it enforces an upper limit on the number of
     transaction that xforum can handle.

     84-09-28 Davids: Removed all references to usage messages and
     xforum_status_$update_usage and redisplay_usage. Replaced them with
     a reference to xforum_help_line.

     84-10-01 Davids: Removed the determination of whether function keys or
     escapse sequences can be used. Replaced it with calls to
     xforum_user_profile. Still make a call to set the value of the
     function_key_data_ptr. This should be removed and calls to
     xforum_user_profile$get_function_key_data_ptr used where the ptr is
     actually needed. However I do not have the time do do that now.

     84-10-02 Davids: Added a call to xforum_user_profile$set_use_function_keys
     with the new arggs element escape_sequences. Added the spy_ptr parameter
     to the xforum_list_meetings$process_args_ call and removed the code that
     created the xforum_spy segment in the pdir.

     84-10-03 Davids: Changed a call from get_temp_segment_ to
     get_temp_segments_ the extra segment is for the seen_map.
     Change release_temp_segment_ to segments_ as well.

     84-10-16 Davids: Updated version to 5.0

     84-10-17 Davids: Changed versions to 5.1

     84-10-22 Davids: Changed message handling so that it is the same as
     Xmail's, except for the -brief control arg for print_messages. Xforum
     will not start using the MR11 message system control args until after a
     controlled release tape is cut.

     84-10-22 Davids: A new version (including todays changes) was installed
     in EXL so the development version's version has been changed to 5.2.

     84-10-25 Davids: Added the xforum_already_active variable. This is
     internal static, inited to "0"b. The first thing xforum does is to see
     if this variable is true. if it is an error message is output. The value
     is set to true immediately after the cleanup routine is established.
     The cleanup routine re-sets it to false.

     84-10-25 Davids: A new version (including todays changes) was installed
     in EXL so the development version's version has been changed to 5.3.

     84-10-29 Davids: A new version (including todays changes) was installed
     in EXL so the development version's version has been changed to 5.4.

     84-11-06 Davids: Changed references to xforum_list_meetings to
     xforum_list_meetings_. Also all references to xforum_help_line to
     xforum_help_line_

     84-11-13 Davids: Version changed to 5.5

     84-11-15 Davids: Auditing changes: 1) Corrected messages to start with an
     upper case letter and end with some puncuation. 2) replaced calls to
     hcs_$make_seg  with calls to initiate_file_$create. 3) Cleaned up dcls so
     that unrefered variables are deleted and undcled builtins are declared.
     Other changes: 1) Reorganized dcls into the standard format.

     84-11-16 Davids: Added the "-brief" argument to the call to
     print_messages This is needed so that the call does not result in a "You
     have no messages" message being output. print_message was incompatibly
     changed.

     84-11-19 Davids: Changed version to 5.6

     84-12-06 Davids: Modified so that xforum_help_$init is called before
     xforum_main_options$getting_started. If the help structure is not
     initiated very strange things will happen when in getting started menu -
     not to friendly. Also changed versions to 1.1a.

     84-12-14 Davids: Changed version to 1.1b


   END DESCRIPTION
*/

/* PARAMETERS */

/* EXTERNAL STATIC */

/* ENTRIES */

	dcl     com_err_		 entry () options (variable);
	dcl     cu_$arg_list_ptr	 entry (ptr);
	dcl     find_condition_frame_	 entry (ptr) returns (ptr);
	dcl     find_condition_info_	 entry (ptr, ptr, fixed bin (35));
	dcl     get_system_free_area_	 entry () returns (ptr);
	dcl     get_temp_segments_	 entry (char (*), (*) ptr, fixed bin (35));
	dcl     hcs_$status_minf	 entry (char (*), char (*), fixed bin (1), fixed bin (2), fixed bin (24), fixed bin (35));
	dcl     initiate_file_$create	 entry (char (*), char (*), bit (*), ptr, bit (1) aligned, fixed bin (24), fixed bin (35));
	dcl     ioa_		 entry () options (variable);
	dcl     ioa_$rsnnl		 entry () options (variable);
	dcl     release_temp_segments_ entry (char (*), (*) ptr, fixed bin (35));
	dcl     unique_chars_	 entry (bit (*)) returns (char (15));
	dcl     xforum_create_menu_	 entry ((*) char (*) var, ptr, ptr, fixed bin (35));
          dcl     xforum_get_str_	 entry (char(*) var, ptr, char(*), char(*), char(*) var, fixed bin(35));
          dcl     xforum_get_str_$init	 entry options(variable);
	dcl     xforum_help_$get_help	 entry (ptr, char (*), (*) char (*) var, ptr, ptr);
	dcl     xforum_help_$init	 entry options(variable);
	dcl     xforum_help_$term	 entry options (variable);
	dcl     xforum_help_line_$change entry (bit (8), char (*), char (*), char (*));
	dcl     xforum_help_line_$init entry;
	dcl     xforum_help_menus$getting_started entry (ptr, ptr);
	dcl     xforum_im_mgr$defer_messages entry ();
	dcl     xforum_im_mgr$init	 entry ();
	dcl     xforum_im_mgr$restore_original entry (bit (1) aligned);
	dcl     xforum_main_options$goto_meeting entry (ptr);
	dcl     xforum_main_options$modify_meeting_list entry (ptr);
	dcl     xforum_main_options$next_meeting entry (ptr);
	dcl     xforum_multics_mode	 entry (fixed bin);
	dcl     xforum_personalize_menu entry (ptr, ptr);
	dcl     xforum_list_meetings_$xforum_process_args_ entry (ptr, char (*), ptr, fixed bin (35));
	dcl     xforum_redisplay_	 entry options (variable);
	dcl     xforum_status_$initialize
				 entry options (variable);
	dcl     xforum_status_$redisplay entry (fixed bin (35));
	dcl     xforum_status_$update_total entry (char (*));
	dcl     xforum_status_$update_title entry (char (*));
	dcl     xforum_status_$update_new entry (char (*));
	dcl     xforum_status_$update_banner entry (char (*));
	dcl     xforum_user_profile$get entry (bit (1) aligned);
	dcl     xforum_user_profile$get_function_key_data_ptr entry () returns (ptr);
	dcl     xforum_user_profile$get_menu_always entry () returns (bit (1));
	dcl     xforum_user_profile$get_multics_mode entry () returns (bit (1));
	dcl     xforum_user_profile$get_handle_interactive_messages entry () returns (bit (1));
	dcl     xforum_window_mgr$check_window_status entry options (variable);
	dcl     xforum_window_mgr$menu_display entry (ptr);
	dcl     xforum_window_mgr$menu_get_choice entry (ptr, bit (1) aligned, fixed bin);
	dcl     xforum_window_mgr$prepare_to_shut_down entry (bit (1));
	dcl     xforum_window_mgr$shut_down_xforum_windows entry (bit (1));
	dcl     xforum_window_mgr$resynch_windows entry (fixed bin, bit (1));
	dcl     xforum_window_mgr$set_up_xforum_windows entry options (variable);

/* CONDITIONS */

	dcl     (
	        cleanup,
	        exit_executive_forum,
	        program_interrupt,
	        quit,
	        xforum_fatal_error,
	        xforum_redisplay_menu
	        )			 condition;

/* INTERNAL AUTOMATIC */

	dcl     x_arg_list_ptr	 ptr;		/* points to list of args that xforum was invoked with */
	dcl     x_choice		 fixed bin;	/* user's choice from the menu or function key */
	dcl     x_code		 fixed bin (35);	/* standard error code */
	dcl     x_first_time_user	 bit (1) aligned;	/* "1"b if this is the very first time the user has used xforum */
	dcl     x_fkey		 bit (1) aligned;	/* "1"b if choice stands for which function key was presswed */
	dcl     x_menu_window_height	 fixed bin;	/* number of lines used by the menu */
	dcl     x_ptrs		 (3) ptr;		/* used to get pointers to temp segments */
	dcl     x_xforum_banner	 char (40);	/* second line of status window for main menu */
	dcl     x_xforum_menu_ptr	 ptr;		/* pointer to the main menu */
	dcl     1 x_xforum_info	 like xforum_info;	/* structure used to give data to xforum_main_options entries */
	dcl     1 x_xforum_menu_requirements like menu_requirements; /* used to tell menu_ what the menu looks like */
          dcl     Shelp                  bit(1);		/* indicates if help has been initialized	*/
          dcl     Serror		 bit(1);
						

/* INTERNAL STATIC */

	dcl     x_xforum_already_active bit (1) init ("0"b) internal static;
						/* "1"b imples that xforum is already on the stack */

/* CONSTANTS */

	dcl     (
                  ANSWER_LENGTH          fixed bin init (256),
                                                            /* maximum length for response */
	        x_FIRST_MENU	 fixed bin init (2),/* fkey choice for F2 or ESCf */
	        x_FIRST_MENU2	 fixed bin init (9),/* fkey choice for ESCF */
	        x_HELP		 fixed bin init (1),/* fkey choice for F1 or ESC? */
	        x_ME		 char (6) init ("xforum"), /* name used in messages */
	        x_MULTICS		 fixed bin init (8),/* fkey choice for F8 or ESCe */
	        x_MULTICS2		 fixed bin init (15), /* fkey choice for ESCE */
	        x_PREV_MENU		 fixed bin init (3),/* fkey choice for F3 or ESCp */
	        x_PREV_MENU2	 fixed bin init (10), /* fkey choice for ESCP */
	        x_QUIT		 fixed bin init (4),/* fkey choice for F4 or ESCq */
	        x_QUIT2		 fixed bin init (11), /* fkey choice for ESCQ */
	        x_REDISPLAY		 fixed bin init (5),/* fkey choice for F5 or ESCr */
	        x_REDISPLAY2	 fixed bin init (12), /* fkey choice for ESCR */
	        x_CHOICES		 (7) char (38) varying init (
				 "Go To Changed Meeting",
				 "Go To Attended Meeting",
				 "Go To Eligible Meeting",
				 "Go To Next Changed Meeting",
				 "Modify Meeting List",
				 "Personalize Exec Forum",
				 "Getting Started"),/* options in main menu */
	        x_HEADERS		 (1) char (33) varying init ("Executive Forum (Version 2.1)")
						/* first line of main menu status window */
	        )			 internal static options (constant);

/* BUILTINS */

	dcl     (
	        addr,
	        char,
	        ltrim,
	        null,
	        rtrim
	        )			 builtin;


/* BASED */

/* INCLUDE FILES */

%include access_mode_values;
%page;
%include condition_info;
%page;
%include condition_info_header;
%page;
%include forum_dcls;
%page;
%include forum_flags;
%page;
%include forum_info;
%page;
%include forum_user_trans;
%page;
%include function_key_data;
%page;
%include iox_dcls;
%page;
%include menu_dcls;
%page;
%include quit_info;
%page;
%include terminal_info;
%page;
%include window_dcls;
%page;
%include xforum_data_;
%page;
%include xforum_error_info;
%page;
%include xforum_info;
%page;
%include xforum_meeting_info;
%page;
%include xforum_meeting_list;
%page;
%include xforum_ptr_struct_;
%page;
%include xforum_spy;
%page;
%include xforum_windows;
%page;
%include xforum_prompts;


%include xforum_answers;




          answer_array.N = 0;
          answer_array.max_length = ANSWER_LENGTH;

	if x_xforum_already_active
	then do;
	     call ioa_ ("Executive Forum may not be called recursively.^/To re-enter Executive Forum logout and log back in.");
	     goto error_exit_xforum;
	end;
          else do;
	   Shelp = "0"b;				/* help has not yet been initialized		*/
	   Serror = "0"b;
	   end;

	on xforum_fatal_error
	   begin;
	   if Serror then do;			/* because of new block activation revert	*/
						/* will not work				*/
	      call ioa_ ("^/^10x A fatal error has occured. Please restart xforum^/");
	      call xforum_get_str_ ((RETURN_PROMPT), addr(answer_array), "", "", "", x_code);
	      goto error_exit_xforum;
	    end;
	   Serror = "1"b;
	   call fatal_error;
	   end;

	xforum_meeting_list_ptr = null ();
	x_xforum_menu_ptr = null ();
	spy_ptr = null ();

	call cu_$arg_list_ptr (x_arg_list_ptr);

	on cleanup
	   begin;
	   call xforum_terminate ("1"b);
	   call ioa_ ("^/^10x A fatal error has occured. Please restart xforum^/");
	   call xforum_get_str_ ((RETURN_PROMPT), addr(answer_array), "", "", "", x_code);
	   end;

	x_xforum_already_active = "1"b;

	call xforum_window_mgr$set_up_xforum_windows;
						/* set up xforum windows (and video if necessary) */

	Shelp = "1"b;
	call xforum_help_$init;			/* initialize help_ system			*/

	call xforum_user_profile$get (x_first_time_user);

	call xforum_list_meetings_$xforum_process_args_ (x_arg_list_ptr, x_ME, spy_ptr, x_code);
	if x_code ^= 0 then do;
	     call xforum_terminate ("0"b);
	     return;
	end;

	call xforum_help_line_$init;

	call xforum_im_mgr$init;

	call xforum_get_str_$init;
	 
	if xforum_user_profile$get_handle_interactive_messages ()
	then call xforum_im_mgr$defer_messages;

	if xforum_meeting_list.no_selected = 0 then
	     call xforum_error (0, "No meetings were selected.");

	call get_temp_segments_ (x_ME, x_ptrs, x_code);
	if x_code ^= 0 then do;
	     call com_err_ (x_code, x_ME, "Trying to get temp segments for forum list.");
	     return;
	end;

	xforum_meeting_info_ptr = x_ptrs (1);
	xforum_meeting_info.seen_map_ptr = x_ptrs (2);
	xforum_meeting_info.set_array_ptr = x_ptrs (3);

	xforum_system_area_ptr = get_system_free_area_ ();

	call xforum_status_$initialize;

	function_key_data_ptr = xforum_user_profile$get_function_key_data_ptr ();

	on exit_executive_forum goto exit_xforum;
 
	x_xforum_info.main_options.xforum_mtg_list_ptr = xforum_meeting_list_ptr;
	x_xforum_info.main_options.xforum_sys_area_ptr = xforum_system_area_ptr;
	x_xforum_info.main_options.function_key_data_ptr = function_key_data_ptr;
	x_xforum_info.main_options.spy_ptr = spy_ptr;
	x_xforum_info.main_options.menu_always_flag = xforum_user_profile$get_menu_always ();
	x_xforum_info.main_options.use_alternate_fkeys = "1"b;
	x_xforum_info.main_options.multics_mode = xforum_user_profile$get_multics_mode ();
	x_xforum_info.main_options.handle_interactive_messages = xforum_user_profile$get_handle_interactive_messages ();

	if x_first_time_user
	then call xforum_help_menus$getting_started (spy_ptr, xforum_system_area_ptr);

	call ioa_$rsnnl ("Eligible ^d, Attended ^d, Changed ^d",
	     x_xforum_banner, (0), no_selected, no_participant, no_changed);

	call xforum_status_$update_banner (x_xforum_banner);

	call xforum_status_$update_title ((x_HEADERS (1)));

	call xforum_help_line_$change ("10010000"b, "", "", "");

	call xforum_status_$redisplay (x_code);
	if x_code ^= 0 then
	     call xforum_error (x_code, "Unable to display in status window.");

/* create the xforum menu */

	x_xforum_menu_requirements.version = menu_requirements_version_1;

	call xforum_create_menu_ (x_CHOICES, addr (x_xforum_menu_requirements), x_xforum_menu_ptr, x_code);

	if x_code ^= 0 then
	     call xforum_error (x_code, "Unable to create menu.");

	call xforum_window_mgr$resynch_windows (x_xforum_menu_requirements.lines_needed, "1"b);


/* display xforum menu */

	call xforum_window_mgr$menu_display (x_xforum_menu_ptr);

	on xforum_redisplay_menu
	     call xforum_window_mgr$menu_display (x_xforum_menu_ptr);/* for redisplay function	      */

	on quit
	     begin;
		call xforum_window_mgr$check_window_status;
		call window_$bell (xforum_windows.menu.iocb, (0));
		call xforum_help_line_$change ("10010000"b, "", "", "");
		call xforum_status_$redisplay ((0));
		call collect_spy_data (SPY_AT_1, "QUIT");
		goto xforum_get_choice;
	     end;

	on program_interrupt
	     begin;
		call xforum_help_line_$change ("10010000"b, "", "", "");
		call xforum_status_$redisplay ((0));
		call window_$clear_window (xforum_windows.bottom.iocb, (0));
		goto xforum_get_choice;
	     end;


/* get choice from xforum menu */

xforum_get_choice:
	do while ("1"b);
	     call xforum_window_mgr$menu_get_choice (x_xforum_menu_ptr, x_fkey, x_choice);

	     x_xforum_info.main_options.choice = x_choice;

	     if x_fkey
	     then call collect_spy_data (SPY_AT_1, "F" || rtrim (ltrim (char (x_choice))));
	     else call collect_spy_data (SPY_AT_1, rtrim (ltrim (char (x_choice))));

	     if x_fkey then do;
		if x_choice = x_HELP
		then do;
		     call xforum_help_$get_help (x_xforum_menu_ptr, "Executive Forum", x_CHOICES,
			spy_ptr, xforum_system_area_ptr);
		     call xforum_help_line_$change ("10010000"b, "", "", "");
		end;
		else if x_choice = x_FIRST_MENU | x_choice = x_FIRST_MENU2
		then goto xforum_get_next_choice;
		else if x_choice = x_PREV_MENU | x_choice = x_PREV_MENU2
		then goto xforum_get_next_choice;
		else if x_choice = x_QUIT | x_choice = x_QUIT2
		then goto exit_xforum;
		else if x_choice = x_REDISPLAY | x_choice = x_REDISPLAY2
		then call xforum_redisplay_;
		else if (x_choice = x_MULTICS | x_choice = x_MULTICS2) & xforum_user_profile$get_multics_mode ()
		then do;
		     call xforum_multics_mode (x_menu_window_height);
		     call xforum_window_mgr$resynch_windows (x_menu_window_height, "0"b);
		     call xforum_help_line_$change ("10010000"b, "", "", "");
		     call xforum_status_$redisplay ((0));
		     call xforum_window_mgr$menu_display (x_xforum_menu_ptr);
		end;
		else call window_$bell (xforum_windows.menu.iocb, (0));
	     end;
	     else do;
		if x_choice = CHANGED_MTG
		then do;
		     call xforum_main_options$goto_meeting (addr (x_xforum_info));
		end;
		else
		     if x_choice = ATTENDED_MTG
		then do;
		     call xforum_main_options$goto_meeting (addr (x_xforum_info));
		end;
		else
		     if x_choice = ELIGIBLE_MTG
		then do;
		     call xforum_main_options$goto_meeting (addr (x_xforum_info));
		end;
		else
		     if x_choice = NEXT_MTG
		then do;
		     call xforum_main_options$next_meeting (addr (x_xforum_info));
		end;
		else
		     if x_choice = MODIFY_MTG_LIST
		then call xforum_main_options$modify_meeting_list (addr (x_xforum_info));
		else
		     if x_choice = PERSONALIZE
		then call xforum_personalize_menu (spy_ptr, xforum_system_area_ptr);
		else
		     if x_choice = GET_STARTED
		then call xforum_help_menus$getting_started (spy_ptr, xforum_system_area_ptr);
	     end;

	     call iox_$control (xforum_windows.bottom.iocb, "reset_more",
		null, (0));			/* get back in step		      */

xforum_get_next_choice:
	     call xforum_status_$update_total ("");
	     call xforum_status_$update_new ("");
	     call xforum_help_line_$change ("10010000"b, "", "", "");
	     call ioa_$rsnnl ("Eligible ^d, Attended ^d, Changed ^d",
		x_xforum_banner, (0), no_selected, no_participant,
		no_changed);
	     call xforum_status_$update_banner (x_xforum_banner);
	     call xforum_status_$update_title ((x_HEADERS (1)));
	     call xforum_status_$redisplay ((0));
	     call xforum_window_mgr$resynch_windows (x_xforum_menu_requirements.lines_needed, "0"b);

	     call xforum_window_mgr$menu_display (x_xforum_menu_ptr);
	end;

exit_xforum:
	call xforum_terminate ("0"b);

error_exit_xforum:
	return;


xforum_terminate: proc (xt_cleanup_flag);

/* PARAMETERS */

	dcl     xt_cleanup_flag	 bit (1);		/* (input) "1"b implies called because of a cleanup condition */

/* INTERNAL AUTOMATIC */

	dcl     xt_code		 fixed bin (35);	/* standard error code */


	call xforum_window_mgr$prepare_to_shut_down (xt_cleanup_flag);

	call record_spy_data;

	call release_temp_segments_ (x_ME, x_ptrs, xt_code);

	if x_xforum_menu_ptr ^= null
	then call menu_$destroy (x_xforum_menu_ptr, xt_code);

	if Shelp then do;
	   call xforum_help_$term;
	   Shelp = "0"b;				/* help has been terminated			*/
	   end;

	call xforum_window_mgr$shut_down_xforum_windows (xt_cleanup_flag);

	x_xforum_already_active = "0"b;

	if xforum_user_profile$get_handle_interactive_messages ()
	then call xforum_im_mgr$restore_original ((xt_cleanup_flag));

     end xforum_terminate;

collect_spy_data: proc (csd_where, csd_response);

/* PARAMETERS */

	dcl     csd_where		 fixed bin;	/* (input) location response was collected */
	dcl     csd_response	 char (*);	/* (input) user's response */





	spy.count = spy.count + 1;
	spy.choices (count).at = csd_where;
	spy.choices (count).choice = csd_response;

	return;

     end collect_spy_data;






record_spy_data: proc;

/* INTERNAL AUTOMATIC */

	dcl     rsd_code		 fixed bin (35);	/* standard error code */
	dcl     rsd_spy_ptr		 ptr;		/* pointer to segment spy data will be recorded in */
	dcl     rsd_unusedb1	 bit (1) aligned;	/* unused output from initiate_file_$create */
	dcl     rsd_unusedfb24	 fixed bin (24);	/* unused output from system routines */

	if spy_ptr = null () then goto exit_record_spy_data;

	call hcs_$status_minf (">udd>m>cp>Davids>xforum", "spy", 0, 2, rsd_unusedfb24, rsd_code);
	if rsd_code ^= 0 then goto exit_record_spy_data;

	rsd_spy_ptr = null ();
	call initiate_file_$create (">udd>m>cp>Davids>xforum>spy", unique_chars_ ("0"b),
	     RW_ACCESS, rsd_spy_ptr, rsd_unusedb1, rsd_unusedfb24, rsd_code);
	if rsd_spy_ptr = null ()
	then goto exit_record_spy_data;

	rsd_spy_ptr -> spy = spy_ptr -> spy;

exit_record_spy_data:
	return;

     end record_spy_data;

fatal_error: proc;

/* INTERNAL AUTOMATIC */

	dcl     fe_code		 fixed bin (35);	/* standard system error code */
	dcl     fe_xforum_error_info_ptr ptr;		/* ptr to structure containing info about the error */
	dcl     1 fe_condition_info	 like condition_info; /* structure containing info about condition being signaled */





	call find_condition_info_ (null (), addr (fe_condition_info), fe_code);
	if fe_code ^= 0
	then call xforum_error (fe_code, "A fatal error has occured - no information is available.");

	if fe_condition_info.condition_name ^= "xforum_fatal_error"
	then call xforum_error (0, "A fatal error has occured - no information is available.");

	fe_xforum_error_info_ptr = fe_condition_info.info_ptr;

	call xforum_error (fe_xforum_error_info_ptr -> xforum_error_info.code,
	     "^/A fatal error has occured while in the " ||
	     rtrim (fe_xforum_error_info_ptr -> xforum_error_info.name) ||
	     " module.^/" ||
	     fe_xforum_error_info_ptr -> xforum_error_info.reason);

     end fatal_error;




xforum_error: proc (xe_code, xe_explanation);

/* PARTAMETERS */

	dcl     xe_code		 fixed bin (35);	/* (input) standard error code */
	dcl     xe_explanation	 char (*);	/* (input) message to send to the user */





	call xforum_terminate ("0"b);
	call com_err_ (xe_code, "xforum", xe_explanation);
	goto error_exit_xforum;
     end xforum_error;

reconnect_test: entry returns (bit (1) aligned);


/* PARAMETERS */

	dcl     rt_reconnect_sw	 bit (1) aligned;	/* (output) "1"b if quit signaled because of reconnection */




	call xforum_window_mgr$check_window_status;

	call check_for_reconnect (rt_reconnect_sw);
	return (rt_reconnect_sw);			/* reconnect_test entry */

check_for_reconnect: proc (cfr_reconnect_quit);

/* PARAMETERS */

	dcl     cfr_reconnect_quit	 bit (1) aligned parameter; /* (output) "1"b if quit signaled because of reconnection */

/* AUTOMATIC */

	dcl     cfr_stack_ptr	 ptr;		/* pointer to the stack frame */
	dcl     01 cfr_cond_info	 like condition_info; /* info about the condition */


	cfr_reconnect_quit = "0"b;
	cfr_cond_info.version = condition_info_version_1;
	cfr_cond_info.info_ptr = null ();
	cfr_cond_info.flags.pad1 = "0"b;
	cfr_cond_info.pad2 = "0"b;
	cfr_cond_info.pad3 = "0"b;
	cfr_stack_ptr = find_condition_frame_ (null ());
	if cfr_stack_ptr ^= null ()
	then do;
	     call find_condition_info_ (cfr_stack_ptr, addr (cfr_cond_info), (0));
	     if cfr_cond_info.info_ptr ^= null ()
	     then do;
		quit_info_ptr = cfr_cond_info.info_ptr;
		cfr_reconnect_quit = quit_info.switches.reconnection_quit;
	     end;
	end;
     end check_for_reconnect;

     end executive_forum;

