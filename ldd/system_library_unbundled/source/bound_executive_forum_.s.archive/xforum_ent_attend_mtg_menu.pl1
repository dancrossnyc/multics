/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        *                                                         *
        *********************************************************** */


/****^  HISTORY COMMENTS:
  1) change(84-06-18,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Created by extracting the relavent internal procedures from the
     xforum module.
     
     84-08-01 Davids: Extensive changes to enter_trans code.  Code that
     resizes the windows and outputs the new header (for reply), help
     message, and "Please wait for editor" message moved to the front.
     Help messages changed to reflect MTB.  Multiple returns replaced
     by a goto exit...  statement.
     
     84-08-02 Davids: Replaced references to transaction in enter_trans
     code with references to comment.  Made the coment entered
     confirmation message conform with the MTB.
     
     84-08-07 Davids: replaced a reference to nt_fidx in the parameter
     list of next_ref with a reference to nr_fidx.  This was screwing
     up the call which set the flag indicating that the transaction had
     been seen.  The error was not being reported because the code was
     not being checked!  The structure of the code in both next_ref and
     next_trans has been changed so that the error code returned from
     setting the flag is checked.
  2) change(84-08-16,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     updated the call to xforum_help_$display for the case where the
     user responds to the comment specification prompt with a ?  to
     reflect the new info file name and section.  Also removed code
     which is no longer returned, xforum_fatal_error is signaled.
     Added the entry points copy_comments, next_unread_trans, and
     meeting_maintenance.  These new entries just issue a "have not be
     implemented yet" message.  The code dealing with the now unused
     entry points (attending meeting doesn't do things like next ref)
     was not removed because itwill be needed again when the second
     attending menu is built.
     
     84-09-26 Davids: Added the update_status procedure and removed
     code from the individual entries that the seen switches and
     last_seen value.  Added to the prev_trans, prev_ref, and first_ref
     entries the parameters for meeting version and forum meeting
     index.  These are necessary because this routine now updates the
     seen switches for each transaction.
     
     84-09-27 Davids: Added the copy_comments code.
  3) change(84-09-28,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Removed all references to a usage message and calls to
     xforum_status_$update_usage, push_usage, pop_usage.  Replaced them
     with the corresponding xforum_help_line entries.
     
     84-10-01 Davids: Removed a lingering reference to
     xforum_status_$push_help_line.  Also added a code check after the
     call to xforum_trans_$read for the reply mode of enter_trans.  If
     the user trys to reply without reading the comment first, its
     possible that the comment has been deleted and a bad pointer
     reference will result in the ioa_$rsnnl call.
     
     84-10-03 Davids: Added code in the update_status procedure to
     update the seen_map.  Also changed the new label to Unread.
     
     84-10-04 Davids: Added the code that actually implements the
     next_unread_trans entry point.  Modified the enter_trans code so
     that it also sets the seen_map bits.
     
     84-10-11 Davids: Replaced references to transactions in the
     listing header, the current comment header, and a message with
     references to comments.  Added code to copy_comments so that a
     null file name will be identified and an error message output.
  4) change(84-10-16,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Changed the help line when entering a new discussion to reflect
     that E?  is not available and to indicate that the RETURN key will
     enter the subject.
     
     84-10-18 Davids: Changed status messages for copy comments which
     said "Comments being written to X" and "N comments written to X"
     so that written is now copied.
     
     84-10-26 Davids: In select_trans_spec modified help line to
     indicate tha a BREAK will leave the current comments unchanged.
     Also so a responding to the prompt with just a return will leave
     the current comments unchanged.  Also changed the spy stuff so
     that the actual transaction number or transaction range is not
     recorded but just the key word range or number.
     
     84-10-29 Davids: In the enter_trans entry increased the length of
     the et_str and et_sj variables from 110 & 100 to 510 and 500.
     This was needed so that subjects longer than 100 characters don't
     get truncated.  et_str is 10 characters longer since it also
     contains the "Subject: " string.
  5) change(84-11-06,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Changed references to xforum_help_line to xforum_help_line_.
     
     84-11-15 Davids: Auditing changes: 1) Corrected all output
     messages to start with an upper case letter and end with some form
     of puncuation.  2) Replaced the "/" operator with the divide
     builtin.  Other changes: 1) Corrected error messages to say
     comment instead of transaction.  2) Replaced calls to
     hcs_$make_seg with calls to initiate_file_$create.
     
     84-11-19 Davids: Added quit handler to enter_trans entry point.
     This closes the window between the time the proc is entered and
     the time that the emacs quit handler is established.  If this
     window is open the screen gets all screwed up.
     
     84-12-12 Davids: Added a call to clear the bottom window before
     the call outputing the "Please wait for editor" message.  Added
     code to next_transaction, previous_transaction, next_reference,
     and previous_reference so that they check the error code returned
     from xforum_trans_ and if its forum_error_table_$invalid_trans_idx
     they print out an appropriate message instead of using the forum
     message which uses the term transaction.  It will also clear the
     bottom window before outputing the message.  Also added a call to
     clear the bottom window before the message "There are no more
     unread comments" in next_unread_transaction.
  6) change(85-01-16,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Changed QUERY_USAGE the help line text output for a query to have
     the same format as the rest of the help lines.
     
     85-01-21 Davids: Modified so that the help line output in the
     enter_transaction procedure uses "ESC" for the escape key instead
     of "E".  Also so that the remove_menu_while_editing state is
     checked if the user is entering a new transaction and the menu
     removed if the state is true.
     
     85-01-22 Davids: Modified so that the et_trans_seg structure
     contains space for an escape character appended onto the subject
     before the new-line.  Also modified so that the character looked
     for to determine the end of the subject is the escape character
     and not the new-line.  This allows subjects with embedded
     new-lines to be handled correctly.
     
     85-01-24 Davids: Added support for the listing and displaying of a
     set of comments (the xforum_meeting_info.flags.set switch).
  7) change(85-01-25,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Changed BREAK in QUERY_USAGE to be more meaningful and added
     QUERY_USAGE_COPY for the copy option.
     
     85-01-28 Davids: Added support for copying a set of comments.
     Forgot that on 85-01-24.
     
     85-01-30 Davids: Modified the display_trans, list_trans, and
     copy_comments entry points so that they use the new
     xforum_get_selected_trans module.  This way there is only 1 module
     that needs to understand how to get the list of selected
     transactions based on the flags in xforum_meeting_info.  It also
     simplifies the code.  Also modified the call to
     xforum_validate_trans_spec_ to include the xforum_meeting_info_ptr
     and spy_ptr.
     
     85-02-12 Davids: Moved the attend_meetings, attend_a_meeting,
     reinstate_mtg_status, and close_meeting procedures from
     xforum_main_options.  attend_meetings became the code for the main
     entry.  Did not try to clean the code up.  Made all the existing
     entries internal procedures.  Deleted the next_ref, pref_ref, and
     first_ref entry points.
  8) change(85-02-13,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Changed calling sequence of xforum_help_line_$change to include
     the new F3_message argument.
     
     85-02-14 Davids: After the call to xforum_help_$get_help added
     code to resize the menu window and redisplay the menu.  This will
     be needed if the help resulted in the general help topics menu
     being displayed.  It wont hurt anything if that was not the case.
     
     85-02-22 Davids: Modified copy_comments to use the new
     xforum_attend_mtg_utilities$copy_to_name entry point.
     
     85-02-25 Davids: Modified next_unread_trans tro use the new
     xforum_attend_mtg_utilities$next_unread_comment entry point.  Also
     modified it to record the set of the flags and the current comment
     number and to reset the flags and current number if no unread
     transaction is found.
     
     85-02-28 Davids: Extracted the internal proc update_status and
     placed it in the xforum_attend_mtg_utilities module.
  9) change(85-03-01,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Removed the internal proc reinstate_status and replace the calls
     to it with calls to xforum_attend_mtg_utilities$update_status.
     Did the same for close_meeting.
     
     85-03-04 Davids: Added code to reset the title line and redisplay
     the status information at the same time that the menu is reset if
     the current menu pointer has been changed.  This was needed
     because during the removeal of reinstate_status the call that was
     made every time though the "handle menu choice" loop was removed
     as not being needed.  It turns out that it is needed if the
     current menu pointer has been changed.  Also changed the call to
     xforum_format_$append so that it include the new flag, since
     append is never called to build a segment for emacs the flag is
     always 0.
     
     85-03-06 Davids: Replaced the internal procedure enter_trans with
     a call to to xforum_attend_mtg_utilities$enter_trans.
     
     85-03-19 Davids: Fixed the next_unread_trans procedure so that if
     no unread trans is found it will still update the status
     information.  This is needed so that deleted and expunged
     transactions found during the search for a new trans are removed
     from unread count displayed in the status line.  Also fixed a
     problem with referencing the last seen transaction when the user
     has just entered a meeting.  The user's current transaction is set
     to his last seen transaction.  If the last seen transaction was
     deleted the user's current transaction will be invalid.  Now if
     the last seen transaction cannot be read the current transaction
     is set to the first transaction (first undeleted/unreaped).  If an
     attempt to read the first transaction fails an error is reported
     and the procedured is exited.
 10) change(85-03-25,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Added code to options 7 and 8 so that enter_trans is only called
     if the read_only flag for the meeting is off.  If its on an error
     message is output.  This saves the user from having to enter a
     comment only to find out that he cannot do anything with it.
     
     85-03-27 Davids: Replaced code in attend_a_meeting that now is in
     the set_up_meeting entry of xforum_attend_mtg_utilities with a
     call to that entry.  Also modified the code handling the help
     function to reset the title line of the status window and
     redisplay the status and help line windows.  This is needed if the
     user had the general topics menu display.
     
     85-04-11 Davids: Modified list_trans to calculate the maximum
     length of the users's default date and time strings and to output
     a list header line based on those lengths.  Also to construct a
     ioa_ control string to output the listing of a comment based on
     those lengths.  In addition it calcuates the maximum number of
     characters that can be output on the subject.  It passes the ioa_
     control string and the max subject length to xforum_format_$list
     along with a pointer to the forum transaction.  Note that the
     user's date and time formats must allow at least 7 characters of
     the subject to be printed or an error will be output.
 11) change(85-04-17,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Modified next_unread_trans so that it does not zero out the
     current comment and flags before calling next_unread_comment.
     This allows next_unread_comment to restore the current comment(s)
     incase of a quit.
     
     85-05-06 Davids: Added a test of aam_fidx after the call to
     set_up_meeting in attend_a_meeting.  If aam_fidx is 0 the meeting
     was not opened so a return is done.  Any error message was output
     by set_up_meeting.
     
     85-06-03 Davids: Commented all declarations, deleted unused
     declarations and moved some declarations from the main entry point
     to the procedure that actually used them.  Also replaced the
     output parameter from the call to xforum_multics_mode with an
     "unused" variable and use the static menu height variable in the
     following call to resynch the menu window size instead of the
     output from multics mode.  This was done so as not to need two
     variables that hold the menu window height.
     
     85-06-04 Davids: Removed references to the include files:
     access_mode_values, forum_dcls, and forum_flags.  Since they were
     not being referenced.
 12) change(85-06-05,Davids), approve(86-02-04,MCR7250),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     In the select_trans_spec procedure, moved the call to
     xforum_help_line_$push so that it occurs before the ioa call which
     outputs the prompt.  It was after the prompt which caused it to be
     executed after every invalid entry in which case the prompt was
     reissued.  This would cause the help_line stack to fill up.
     
     85-06-20 Davids: Changed calling sequence of xforum_format_$append
     so that the bit_count parameter which is input/output comes after
     all the input parameters (i.e.  the bit (1) switch).
 13) change(86-02-18,LJAdams), approve(86-02-18,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Setting xforum_meeting_info.current to 0 prior to closing meeting.
 14) change(87-04-13,LJAdams), approve(87-04-22,MCR7684),
     audit(87-07-30,Blair), install(87-08-06,MR12.1-1065):
     Changed to allow command_processor_ escapes.  Declared screen options
     as constants to eliminate use of magic numbers.
                                                   END HISTORY COMMENTS */

xforum_ent_attend_mtg_menu: proc (xam_midx, xam_match_bits, xam_spy_ptr);

/*
   BEGIN DESCRIPTION

   function:
      This module creates, displays and destroys the entry oriented attend
      meeting menu. It also processes the user choices from that menu.


   description of entry points:
      xforum_ent_attend_mtg_menu:
         input:   fixed bin           index in the xforum meeting list of meeting to be attended
                  bit (36) aligned    identifies the class of meeting to be attended
                  ptr                 pointer to spy structure
         This entry is a simple loop that calls the internal procedure
         attend_a_meeting and then gets the next meeting index and calls
         attend_a_meeting again. The loop is broken when the user exits a
         meeting and indicates that he does not want to go to another meeting
         (attend_a_meeting returns xam_more as false) or attend_a_meeting is
         given an invalid meeting index (which will happen if there is no next
         meeting, xam_more is again returned as false).

   description of internal procedures:
      attend_a_meeting: This procedure is used to attend a meeting. It first
      checks to be sure that the input meeting index is valid, if not it
      returns (the more flag is false). If it is a valid index it sets up
      condition handlers, calls xforum_attend_mtg_utilities$set_up_meeting
      to initialize the xforum_meeting_info structure and have forum open the
      meeting, creates the text for option 9 of the menu and creates the menu
      and finally enters a loop where the menu is displayed and the menu choice
      is used to call either internal procedures or xforum_attend_mtg_utilities
      entry points. The menu choices are recorded in the spy structure.,
      The quit condition handler is set up to clear the bottom window, reset
      the help line, redisplay the menu and go back to the menu display/input
      loop. The cleanup condition handler is set up to close the meeting and
      free the storage for the menu structure (done via the utilities call).
      a xforum_redisplay_menu condition handler is set up to redisplay the
      menu. It is setup after the menu is created so that it has something to
      display. The more flag is used to identify that the user does or does not
      want to exit the current meeting and attend another meeting. It is set to
      true when the user selects the next meeting option (option 9)

      display_trans: This procedure is used to display transaction. The bottom
      window is first cleared. A loop is entered which calls
      xforum_get_selected_trans to get a pointer to a selected transaction,
      the transaction number is used to update the status window and the
      transaction displayed via xforum_format_. The loop continues until
      a invalid_trans_idx error code is returned. Other error codes are
      ignored. The loop is initialized via a call to xforum_get_selected_trans.
      Xforum_get_selected_trans handles all the details of determining what
      transactions have been selected and how to get them in sequential order.

      next_trans: This procedure selects the next transaction as the current
      transaction and displays the transaction via a call to xforum_format_.
      The next transaction is found via a call to xforum_trans_. A subject
      chain will not be followed. The current transaction must be either a
      single transaction or a range of transaction, i.e. I:J for there to be
      a next transaction. xforum_trans_$next will skip deleted comments. If
      there is no next comment (user is at last comment in meeting) a non-zero
      error code is returned from xforum_trans_$next and this procedure will
      output the error message to the user. Note that xforum_trans_$next will
      not change the current comment setting in the event of an error.

      list_transaction: This procedure will cause a 1 line description to be
      output to the user_io window for all the current comments. The
      description contains the date and time the comment was entered. The
      display of the date and time uses the user's date format and the time
      format. The positions of the elements of the description are calculated
      based on the maximum length that the date and time fields could be. It
      requires that there be at least 7 characters left for the subject or an
      error message will be output. This assumes an 80 character window. A
      header line ioa_ control string is created and output. A control string
      for outputing each of the comment descriptions is also created and passed
      to xforum_format$list which actually outputs the description line.

      select_trans_spec: This procedure prompts the user for a transaction
      spec. Once the spec has been input a call is made to
      xforum_validate_trans_spec to check the spec and update the current
      comment in the xforum_meeting_info structure. The prompting is done via
      ioa_ instead of via command_query. Help processing is handling by
      actually checking to see if the input was a "?" character an calling
      xforum_help_$display if it was. The input spec must be less than 132
      characters. Spy data is collected but any range is just recored as RANGE
      and any single number is just recored as NUMBER. If the input spec is not
      valid the prompt is reissued. xforum_validate_trans_spec_ will have
      already output an error message. Note that if the user just presses the
      RETURN key the response in recorded as RETURN and the procedure exits. A
      quit handler is used to clear the prompt and any error messages and reset
      the help line.

      copy_comments: This procedure calls xforum_attend_mtg_utilities$copy_to_name
      to obtain the name of the file to copy the comments into. copy_to_name
      checks for help requests and invalid names. It returns the entry name
      of the segment, a pointer to the segment and the segments current bit
      count. A null pointer indicates that the copy should be aborted.
      A message is then output saying that the writting is taking place. The
      help line is updated to indicate a break will abort the copy process.
      The second part of this procedure looks exactly like the display
      procedure. The only difference is xforum_format_$append is called instead
      of $display and that the number of comments actually processed is
      counted. The last thing that this procedure does is clear the bottom
      window and output a message saying how many transactions were output
      and giving the file name. A quit handler is used to reset the help line
      and force the an exit to the loop doing the copying.

      next_unread_trans: This procedure calls xforum_attend_utilities$next_unread_comment
      to update the current comment in the xforum_meeting_info structure to the
      next unread comment. It then calls xforum_attend_utilities$update_status
      to update the status window to indicate the new current comment and 
      xforum_format_$display to display the new current comment below the 
      meeting menu. If there are no unread comments a message to that effect
      is output to the user and the current comment and flags fields which
      were modified by the call to next_unread_comment are restored to their
      original values.

      meeting_maintenance: This procedure will be used to generate the meeting
      maintenance menu and respond to selections made from that menu. Currently
      it just outputs a message saying that it is unimplemented.

      collect_spy_data: Similar to all the other collect_spy_data procedures.
      See the xforum module. Note that this procedure is duplicated so as to
      save the expense of an external call for a commonly executed, very short
      program, whose output is used only during development or special site
      exposure.

   known bugs:

   notes:
      84-09-26 Davids: The code in update_status which creates the status
      window text was copied from xforum_main_options. It should be made into a
      separate procedure, or better yet incorporated into the appropriate
      xforum_status_ entries.

      85-02-12 Davids: The menu should be created in the main entry not in the
      attend_a_meetings procedure. reinstate_mtg_status and update_status
      should be combined. close_meeting should be taken out of attend_a_meeting
      and made an internal procedure at the same level as attend_a_meeting.
   END DESCRIPTION
*/

/* PARAMETERS */

	dcl     xam_midx		 fixed bin;	/* (input) index in the xforum meeting list */
						/*         of meeting to be attended */
	dcl     xam_match_bits	 bit (36) aligned;	/* (input) identifies the class of meeting to be attended */
	dcl     xam_spy_ptr		 ptr;		/* (input) pointer to spy structure */

/* EXTERNAL STATIC */

	dcl     forum_error_table_$invalid_trans_idx fixed bin (35) ext static;

/* ENTRIES */

	dcl     com_err_$suppress_name entry () options (variable);
	dcl     date_time_$format_max_length entry (char (*), char (*), char (*)) returns (fixed bin);
	dcl     ioa_		 entry () options (variable);
	dcl     ioa_$rsnnl		 entry () options (variable);
	dcl     iox_$control	 entry (ptr, char (*), ptr, fixed bin (35));
	dcl     timer_manager_$sleep	 entry (fixed bin (71), bit (2));
	dcl     window_$bell	 entry (ptr, fixed bin (35));
	dcl     window_$clear_window	 entry (ptr, fixed bin (35));
	dcl     xforum_attend_mtg_utilities$close_meeting entry (ptr, ptr, fixed bin, fixed bin, ptr);
	dcl     xforum_attend_mtg_utilities$copy_to_name entry (ptr, char (32), ptr, fixed bin (24));
	dcl     xforum_attend_mtg_utilities$enter_trans entry (ptr, fixed bin, ptr, bit (1) aligned, bit (1) aligned);
	dcl     xforum_attend_mtg_utilities$next_unread_comment entry (ptr, fixed bin, fixed bin, ptr);
	dcl     xforum_attend_mtg_utilities$set_up_meeting entry (ptr, ptr, fixed bin, bit (1) aligned, fixed bin, char (256), char (256));
	dcl     xforum_attend_mtg_utilities$update_status entry (ptr, fixed bin, char (*), fixed bin, fixed bin);
	dcl     xforum_create_menu_	 entry ((*) char (*) var, ptr, ptr, fixed bin (35));
	dcl     xforum_format_$append	 entry (ptr, ptr, bit (1) aligned, fixed bin (24), fixed bin (35));
	dcl     xforum_format_$display entry (ptr, bit (1) aligned, fixed bin (35));
	dcl     xforum_format_$list	 entry (ptr, char (*), fixed bin, fixed bin (35));
	dcl     xforum_get_selected_trans$first entry (ptr, ptr, fixed bin (35));
	dcl     xforum_get_selected_trans$next entry (ptr, ptr, fixed bin (35));
          dcl     xforum_get_str_ entry (char(*) var, ptr, char(*), char(*), char(*) var, fixed bin(35));
	dcl     xforum_help_$get_help	 entry (ptr, char (*), (*) char (*) var, ptr, ptr);
	dcl     xforum_help_line_$change entry (bit (8), char (*), char (*), char (*));
	dcl     xforum_help_line_$push entry (bit (8), char (*), char (*), char (*));
	dcl     xforum_help_line_$pop	 entry options (variable);
	dcl     xforum_main_options$index_of_next_meeting entry (bit (36) aligned, ptr) returns (fixed bin);
	dcl     xforum_multics_mode	 entry (fixed bin);
	dcl     xforum_redisplay_	 entry options (variable);
	dcl     xforum_status_$update_title entry (char (*));
	dcl     xforum_status_$redisplay entry (fixed bin (35));
	dcl     xforum_trans_$next_trans entry (fixed bin, ptr, fixed bin (35));
	dcl     xforum_user_profile$get_multics_mode entry () returns (bit (1));
	dcl     xforum_window_mgr$check_window_status entry options (variable);
	dcl     xforum_window_mgr$menu_display entry (ptr);
	dcl     xforum_window_mgr$menu_get_choice entry (ptr, bit (1) aligned, fixed bin);
	dcl     xforum_window_mgr$resynch_windows entry (fixed bin, bit (1));
	dcl     xforum_validate_trans_spec_ entry (ptr, ptr, char (*), fixed bin (35));

/* CONDITIONS */

	dcl     cleanup		 condition;
	dcl     exit_executive_forum	 condition;
	dcl     quit		 condition;
	dcl     xforum_redisplay_menu	 condition;

/* INTERNAL AUTOMATIC */

	dcl     xam_next_mtg_index	 fixed bin;	/* xforum_meeting_list index of the next meeting to attend */
	dcl     xam_more		 bit (1) aligned;	/* "1"b implies that the user wants to attend another meeting */

/* INTERNAL STATIC */


/* CONSTANTS */

	dcl
	        (
	        xam_FIRST		 bit (1) aligned init ("1"b), /* flag to indicate first comment being displayed */
	        xam_ME		 char (25) init ("xforum_attend_mtg_options") /* string identifing this module */
	        )			 internal static options (constant);

          dcl     MAX_LEN                fixed bin init (256) internal static options (constant);
		        

          dcl     (                      /* entry screen choices */
                  DISPLAY_COMMENT        fixed bin init (1),
	        COPY_COMMENT	 fixed bin init (2),
	        LIST_COMMENT	 fixed bin init (3),
	        GET_COMMENT		 fixed bin init (4),
	        NEXT_COMMENT	 fixed bin init (5),
	        NEXT_UNREAD_COMMENT	 fixed bin init (6),
	        REPLY		 fixed bin init (7),
	        TALK		 fixed bin init (8),
	        NEXT_MTG		 fixed bin init (9),
	        MTG_MAINTENANCE	 fixed bin init (10)
                  )                      internal static options (constant);
		        

          dcl     (                      /* mtg type */
                  GET_ATTENDED           fixed bin init (3),
	        GET_CHANGED		 fixed bin init (2),
	        GET_ELIGIBLE           fixed bin init (1)
                  )			 internal static options (constant);
		        

/* BUILTINS */

	dcl     addr		 builtin;
          dcl     char                   builtin;
	dcl     index		 builtin;
	dcl     length		 builtin;
	dcl     ltrim		 builtin;
	dcl     null		 builtin;
	dcl     rtrim		 builtin;
	dcl     string		 builtin;
	dcl     substr		 builtin;
	dcl     unspec		 builtin;
	dcl     verify		 builtin;

/* BASED */

/* INCLUDE FILES */

%include forum_user_trans;
%page;
%include menu_dcls;
%page;
%include xforum_error_info;
%page;
%include xforum_meeting_info;
%page;
%include xforum_meeting_list;
%page;
%include xforum_ptr_struct_;
%page;
%include xforum_spy;
%page;
%include xforum_windows;
%page;
%include xforum_answers;



%include xforum_prompts;


%include xforum_help_infos;


	call attend_a_meeting (xam_midx, xam_match_bits, xam_spy_ptr, xam_more);
	do while (xam_more);
	     xam_next_mtg_index = xforum_main_options$index_of_next_meeting (xam_match_bits, xam_spy_ptr);
	     call attend_a_meeting (xam_next_mtg_index, xam_match_bits, xam_spy_ptr, xam_more);
	end;

	call window_$clear_window (xforum_windows.bottom.iocb, (0));
	call window_$clear_window (xforum_windows.menu.iocb, (0));

	return;

attend_a_meeting: proc (aam_midx, aam_match_bits, aam_spy_ptr, aam_more);

/* PARAMETERS */

	dcl     aam_midx		 fixed bin;	/* (input) index in the xforum meeting list of */
						/*         meeting to be attended */
	dcl     aam_match_bits	 bit (36) aligned;	/* (input) identifies the class of meeting being attended */
	dcl     aam_spy_ptr		 ptr;		/* (input) pointer to spy structure */
	dcl     aam_more		 bit (1) aligned;	/* (output) "1" implies user wants to go to another meeting */
						/*          "0" implies user wants to return to main menu */

/* INTERNAL AUTOMATIC */

	dcl     aam_chairman_msg	 char (256);	/* chairman message for the meeting */
	dcl     aam_choice		 fixed bin;	/* user's choice from meeting menu */
	dcl     aam_code		 fixed bin (35);	/* standard error code */
	dcl     aam_current_menu_ptr	 ptr;		/* pointer to menu structure for menu currently displayed */
	dcl     aam_fkey		 bit (1) aligned;	/* "1"b implies user's choice is a function key */
	dcl     aam_fidx		 fixed bin;	/* index identifing meeting to forum */
	dcl     aam_headers		 (1) char (44) varying; /*space for first line of status window */
	dcl     aam_mtg_menu_ptr	 ptr;		/* pointer to the menu structure for the meeting menu */
	dcl     aam_multics_mode	 bit (1);		/* "1"b implies that the user can invoke multics mode */
	dcl     aam_type		 fixed bin;	/* type of current meeting, changed, participating, or eligible */
	dcl     aam_unused		 char (256);	/* unused output from subroutine call */
	dcl     aam_unused_fb	 fixed bin;	/* unused output from subroutine call */

	dcl     01 aam_mtg_requirements like menu_requirements;
						/* structure describing the requirments of the meeting menu */

/* INTERNAL STATIC */

	dcl     aam_choices		 (10) char (40) varying
				 init (
				 "Display Current Comment(s)",
				 "Copy Current Comment(s)",
				 "Select/List Any Comment(s)",
				 "Select/Display Any Comment(s)",
				 "Select/Display Next Comment",
				 "Select/Display Next Unread Comment",
				 "Reply To Current Comment",
				 "Start New Discussion",
				 "",
				 "Meeting Maintenance");
						/* options for meeting menu, option 9 will be filled in */
						/* when type of meeting is determined */

/* CONSTANTS */

	dcl     (
	        aam_ATTENDED	 bit (36) aligned init ("000100000000000000000000000000000000"b), /* meeting type */
	        aam_CHANGED		 bit (36) aligned init ("000000010000000000000000000000000000"b), /* meeting type */
	        aam_ELIGIBLE	 bit (36) aligned init ("111111110000000000000000000000000000"b), /* meeting type */
	        aam_FIRST_MENU	 fixed bin init (2),/* function keys for goto first menu */
	        aam_FIRST_MENU2	 fixed bin init (9),
	        aam_HELP		 fixed bin init (1),/* function key for help */
	        aam_MEETING_TYPE	 (3) char (9) varying init ("Eligible ", "Changed ", "Attended "),
						/* strings describing the type of meeting for */
						/* option 9 of the menu */
	        aam_MTG_MENU_HEIGHT	 fixed bin init (6),/* height of the meeting menu */
	        aam_MULTICS		 fixed bin init (8),/* function keys for multics mode */
	        aam_MULTICS2	 fixed bin init (15),
	        aam_PREV_MENU	 fixed bin init (3),/* function keys for previous menu */
	        aam_PREV_MENU2	 fixed bin init (10),
	        aam_QUIT		 fixed bin init (4),/* function keys for quiting xforum */
	        aam_QUIT2		 fixed bin init (11),
	        aam_READ_ONLY_MESSAGE	 char (150) init (
				 "You are not allowed to enter comments in this meeting." ||
				 "^/Send mail to ^a for an explanation and/or a change in status."),
						/* error message for trying to write to a meeting */
						/* without write access */
	        aam_REDISPLAY	 fixed bin init (5),/* function keys for redisplaying the screen */
	        aam_REDISPLAY2	 fixed bin init (12),
	        aam_REPLY		 bit (1) aligned init ("1"b), /* flag indicating reply mode */
	        aam_TALK		 bit (1) aligned init ("0"b) /* flag indicating talk mode */
	        )			 internal static options (constant);

	aam_more = "0"b;
	aam_mtg_menu_ptr = null ();

	if aam_midx < 1 | aam_midx > no_selected
	then return;

	spy_ptr = aam_spy_ptr;

	aam_multics_mode = xforum_user_profile$get_multics_mode ();

	on quit
	     begin;
		call xforum_window_mgr$check_window_status;
		call window_$bell (xforum_windows.menu.iocb, (0));
		xforum_meeting_info.current = 0;
		call xforum_help_line_$change ("10110000"b, "Leave Meeting", "", "");
		call xforum_status_$redisplay ((0));
		call collect_spy_data (SPY_AT_7, "QUIT");
		goto meeting_get_choice;
	     end;

	on cleanup
	     begin;
		if aam_fidx ^= -1
		then do;
		     xforum_meeting_info.current = 0;
		     call xforum_attend_mtg_utilities$close_meeting (xforum_meeting_info_ptr,
			xforum_meeting_list_ptr, aam_midx, aam_fidx, aam_mtg_menu_ptr);
		 end;
	     end;

	call xforum_attend_mtg_utilities$set_up_meeting (xforum_meeting_list_ptr, xforum_meeting_info_ptr, aam_midx, "0"b,
	     aam_fidx, aam_unused, aam_chairman_msg);
	if aam_fidx = 0
	then return;


	if aam_match_bits = aam_ELIGIBLE then
	     aam_type = GET_ELIGIBLE;
	else if aam_match_bits = aam_CHANGED then
	     aam_type = GET_CHANGED;
	else if aam_match_bits = aam_ATTENDED then
	     aam_type = GET_ATTENDED;

	aam_headers (1) = "Attending " || rtrim (xforum_meeting_info.name) || " meeting";
	call xforum_status_$update_title ((aam_headers (1)));

	aam_choices (9) = "Go To Next " || aam_MEETING_TYPE (aam_type) || "Meeting";

	call xforum_attend_mtg_utilities$update_status (xforum_meeting_info_ptr, 0, "", 0, aam_fidx);
	call xforum_window_mgr$resynch_windows (aam_MTG_MENU_HEIGHT, "1"b);

	aam_mtg_requirements.version = menu_requirements_version_1;

	call xforum_create_menu_ (aam_choices, addr (aam_mtg_requirements), aam_mtg_menu_ptr, aam_code);
	if aam_code ^= 0 then do;
	     call com_err_$suppress_name (aam_code, xam_ME, "Trying to create meeting menu.");
	     goto exit_attend_a_meeting;
	end;

	call xforum_window_mgr$menu_display (aam_mtg_menu_ptr);

	on xforum_redisplay_menu
	     call xforum_window_mgr$menu_display (aam_mtg_menu_ptr); /* for redisplay function	      */

	if rtrim (aam_chairman_msg) ^= ""
	then call ioa_ ("^a", aam_chairman_msg);

	aam_current_menu_ptr = aam_mtg_menu_ptr;

/* get choice					*/

meeting_get_choice:
	do while ("1"b);
	     call xforum_window_mgr$menu_get_choice (aam_mtg_menu_ptr, aam_fkey, aam_choice);

	     if aam_fkey
	     then call collect_spy_data (SPY_AT_7, "F" || rtrim (ltrim (char (aam_choice))));
	     else call collect_spy_data (SPY_AT_7, rtrim (ltrim (char (aam_choice))));

	     if aam_fkey then
		if aam_choice = aam_HELP
		then do;
		     call xforum_help_$get_help (aam_mtg_menu_ptr, "Meeting", aam_choices,
			spy_ptr, xforum_system_area_ptr);
		     call xforum_status_$update_title ((aam_headers (1)));
		     call xforum_attend_mtg_utilities$update_status (xforum_meeting_info_ptr, 0, "", 0, aam_fidx);
		     call xforum_status_$redisplay ((0));
		     call xforum_window_mgr$resynch_windows (aam_MTG_MENU_HEIGHT, "0"b);
		     call xforum_window_mgr$menu_display (aam_mtg_menu_ptr);
		end;
		else if aam_choice = aam_FIRST_MENU | aam_choice = aam_FIRST_MENU2
		then goto exit_attend_a_meeting;
		else if aam_choice = aam_PREV_MENU | aam_choice = aam_PREV_MENU2
		then goto exit_attend_a_meeting;
		else if aam_choice = aam_QUIT | aam_choice = aam_QUIT2
		then do;
		     xforum_meeting_info.current = 0;
		     call xforum_attend_mtg_utilities$close_meeting (xforum_meeting_info_ptr,
			xforum_meeting_list_ptr, aam_midx, aam_fidx, aam_mtg_menu_ptr);
		     signal exit_executive_forum;
		end;
		else if aam_choice = aam_REDISPLAY | aam_choice = aam_REDISPLAY2
		then call xforum_redisplay_;
		else if (aam_choice = aam_MULTICS | aam_choice = aam_MULTICS2) & aam_multics_mode
		then do;
		     call xforum_multics_mode (aam_unused_fb);
		     call xforum_window_mgr$resynch_windows (aam_MTG_MENU_HEIGHT, "0"b);
		     call xforum_attend_mtg_utilities$update_status (xforum_meeting_info_ptr, 0, "", 0, aam_fidx);
		     call xforum_window_mgr$menu_display (aam_mtg_menu_ptr);
		     goto meeting_get_choice;
		end;
		else call window_$bell (xforum_windows.menu.iocb, (0));
	     else do;
		if aam_choice = DISPLAY_COMMENT
		then call display_trans (aam_fidx, forums (aam_midx).forum_version);
		else
		     if aam_choice = COPY_COMMENT
		then call copy_comments (spy_ptr, aam_fidx, forums (aam_midx).forum_version);
		else
		     if aam_choice = LIST_COMMENT
		then do;
		     call select_trans_spec (spy_ptr);
		     call list_trans (aam_fidx);
		end;
		else
		     if aam_choice = GET_COMMENT
		then do;
		     call select_trans_spec (spy_ptr);
		     call display_trans (aam_fidx, forums (aam_midx).forum_version);
		end;
		else
		     if aam_choice = NEXT_COMMENT
		then call next_trans (aam_fidx, forums (aam_midx).forum_version);
		else
		     if aam_choice = NEXT_UNREAD_COMMENT
		then call next_unread_trans (aam_fidx, forums (aam_midx).forum_version);
		else
		     if aam_choice = REPLY
		then do;
		     if ^forums (aam_midx).flags.read_only
		     then do;
			call xforum_attend_mtg_utilities$enter_trans (xforum_meeting_info_ptr,
			     aam_fidx, spy_ptr, aam_REPLY, "0"b);
			aam_current_menu_ptr = null ();
		     end;
		     else do;
			call window_$clear_window (xforum_windows.bottom.iocb, (0));
			call ioa_ (aam_READ_ONLY_MESSAGE, forums (aam_midx).chairman);
		     end;
		end;
		else
		     if aam_choice = TALK
		then do;
		     if ^forums (aam_midx).flags.read_only
		     then do;
			call xforum_attend_mtg_utilities$enter_trans (xforum_meeting_info_ptr,
			     aam_fidx, spy_ptr, aam_TALK, "0"b);
			aam_current_menu_ptr = null ();
		     end;
		     else do;
			call window_$clear_window (xforum_windows.bottom.iocb, (0));
			call ioa_ (aam_READ_ONLY_MESSAGE, forums (aam_midx).chairman);
		     end;
		end;
		else
		     if aam_choice = NEXT_MTG
		then do;
		     xforum_meeting_info.current = 0;
		     call xforum_attend_mtg_utilities$close_meeting (xforum_meeting_info_ptr,
			xforum_meeting_list_ptr, aam_midx, aam_fidx, aam_mtg_menu_ptr);
		     aam_more = "1"b;
		     return;
		end;
		else
		     if aam_choice = MTG_MAINTENANCE
		then call meeting_maintenance;
	     end;

	     call iox_$control (xforum_windows.bottom.iocb, "reset_more",
		null, (0));			/* get back in step		      */

	     if aam_current_menu_ptr ^= aam_mtg_menu_ptr
	     then do;
		call xforum_window_mgr$resynch_windows (aam_MTG_MENU_HEIGHT, "1"b);
		call window_$clear_window (xforum_windows.bottom.iocb, (0));
		call xforum_status_$update_title ((aam_headers (1)));
		call xforum_attend_mtg_utilities$update_status (xforum_meeting_info_ptr, 0, "", 0, aam_fidx);
		call xforum_window_mgr$menu_display (aam_mtg_menu_ptr);
		aam_current_menu_ptr = aam_mtg_menu_ptr;
	     end;
	end;

exit_attend_a_meeting:
          xforum_meeting_info.current = 0;
	call xforum_attend_mtg_utilities$close_meeting (xforum_meeting_info_ptr,
	     xforum_meeting_list_ptr, aam_midx, aam_fidx, aam_mtg_menu_ptr);

     end attend_a_meeting;

display_trans: proc (dt_fidx, dt_version);

/* PARAMETERS */

	dcl     dt_fidx		 fixed bin;	/* (input) index identifing meeting to forum */
	dcl     dt_version		 fixed bin;	/* (input) version of the forum meeting */

/* INTERNAL AUTOMATIC */

	dcl     dt_code		 fixed bin (35);	/* standard error code */
	dcl     dt_is_first		 bit (1) aligned;	/* used to flag the first comment being displayed */
	dcl     dt_trans_no		 fixed bin;	/* forum index of comment about to be displayed */





	call window_$clear_window (xforum_windows.bottom.iocb, (0));

	dt_code = 0;
	dt_is_first = "1"b;

	call xforum_get_selected_trans$first (xforum_meeting_info_ptr, forum_user_trans_ptr, dt_code);
	do while (dt_code ^= forum_error_table_$invalid_trans_idx);
	     if dt_code = 0
	     then do;
		dt_trans_no = forum_user_trans.trans_no;
		call xforum_attend_mtg_utilities$update_status (xforum_meeting_info_ptr,
		     dt_trans_no, "", dt_version, dt_fidx);
		call xforum_format_$display (forum_user_trans_ptr, dt_is_first, dt_code);
		dt_is_first = "0"b;
	     end;
	     call xforum_get_selected_trans$next (xforum_meeting_info_ptr, forum_user_trans_ptr, dt_code);
	end;

	return;

     end display_trans;

next_trans: proc (nt_fidx, nt_version);

/* PARAMETERS */

	dcl     nt_fidx		 fixed bin;	/* (input) index identifing meeting to forum */
	dcl     nt_version		 fixed bin;	/* (input) version of the forum meeting */

/* INTERNAL AUTOMATIC */

	dcl     nt_code		 fixed bin (35);	/* standard error code */





	if xforum_meeting_info.current = 0 then
	     if ^xforum_meeting_info.range then do;
						/* range is ok  */
		call com_err_$suppress_name (0, "",
		     """Next"" incompatible with current comment specifier.");
		return;
	     end;

	if xforum_meeting_info.range
	then call xforum_trans_$next_trans (xforum_meeting_info.high, forum_user_trans_ptr, nt_code);
	else call xforum_trans_$next_trans (xforum_meeting_info.current, forum_user_trans_ptr, nt_code);
	if nt_code ^= 0
	then do;
	     call window_$clear_window (xforum_windows.bottom.iocb, (0));
	     if nt_code = forum_error_table_$invalid_trans_idx
	     then call com_err_$suppress_name (0, xam_ME, "There is no next comment.");
	     else call com_err_$suppress_name (nt_code, xam_ME);
	end;
	else do;
	     xforum_meeting_info.current = forum_user_trans.trans_no;
	     xforum_meeting_info.range = "0"b;
	     call xforum_attend_mtg_utilities$update_status (xforum_meeting_info_ptr,
		forum_user_trans.trans_no, "", nt_version, nt_fidx);
	     call xforum_format_$display (forum_user_trans_ptr, xam_FIRST, nt_code);
	     if nt_code ^= 0
	     then call com_err_$suppress_name (nt_code, xam_ME, "Trying to print comment.");
	end;

	return;

     end next_trans;

list_trans: proc (lt_fidx);

/* PARAMETERS */

	dcl     lt_fidx		 fixed bin;	/* (input) index identifing meeting to forum */

/* INTERNAL AUTOMATIC */

	dcl     lt_code		 fixed bin (35);	/* standard error code */
	dcl     lt_date_len		 fixed bin;	/* max number of chars needed to display date */
	dcl     lt_time_len		 fixed bin;	/* max number of chars needed to display time */
	dcl     lt_time_position	 fixed bin;	/* starting column of time field */
	dcl     lt_author_position	 fixed bin;	/* starting column of author field */
	dcl     lt_subject_position	 fixed bin;	/* starting column of subject field */
	dcl     lt_subject_max_len	 fixed bin;	/* maximum number of chars of subject that can be displayed */
	dcl     lt_header_line	 char (100);	/* header line that will appear above the comment listings */
	dcl     lt_item_line	 char (100);	/* formated comment listing */
	dcl     lt_unused1		 fixed bin;	/* unused output from system calls */

	call window_$clear_window (xforum_windows.bottom.iocb, (0));

	call xforum_attend_mtg_utilities$update_status (xforum_meeting_info_ptr, 0, "", 0, lt_fidx);

	lt_date_len = date_time_$format_max_length ("^<date>", "", "");
	lt_time_len = date_time_$format_max_length ("^<time>", "", "");
	lt_time_position = 17 + lt_date_len;
	lt_author_position = 19 + lt_date_len + lt_time_len;
	lt_subject_position = 24 + lt_author_position;
	lt_subject_max_len = MAX_LEN - lt_subject_position + 1;
	if lt_subject_max_len < 7
	then do;
	     call ioa_ ("Your date and time formats are so long that there is not enough room");
	     call ioa_ ("to list the comment's author and a significant part of its subject.");
	     goto exit_list_trans;
	end;

	call ioa_$rsnnl (
	     "Comment#^^7tLines^^16tDate^^^itTime^^^itAuthor^^^itSubject",
	     lt_header_line, lt_unused1, lt_time_position, lt_author_position, lt_subject_position);
	call ioa_$rsnnl (
	     "[^^i]^^[*^^]^^10t(^^d)^^16t^^a^^^it^^a^^^it^^a.^^a^^^it^^a",
	     lt_item_line, lt_unused1, lt_time_position, lt_author_position, lt_subject_position);

	call ioa_ (lt_header_line);

	lt_code = 0;

	call xforum_get_selected_trans$first (xforum_meeting_info_ptr, forum_user_trans_ptr, lt_code);
	do while (lt_code ^= forum_error_table_$invalid_trans_idx);
	     if lt_code = 0
	     then call xforum_format_$list (forum_user_trans_ptr, lt_item_line, lt_subject_max_len, lt_code);
	     call xforum_get_selected_trans$next (xforum_meeting_info_ptr, forum_user_trans_ptr, lt_code);
	end;

exit_list_trans:
	return;

     end list_trans;

select_trans_spec: proc (sts_spy_ptr);

/* PARAMETERS */

	dcl     sts_spy_ptr		 ptr;		/* (input) pointer to spy structure */

/* EXTERNAL ENTRY */

          dcl     error_table_$long_record	
                                         fixed bin(35) ext static;
/* INTERNAL AUTOMATIC */

          dcl     sts_code               fixed bin (35);
          dcl     reply		 char (132) varying;

/* CONSTANTS */

	dcl     sts_QUERY_USAGE	 char (69) init	/* help line for selection prompt */
				 ("Press  ? and RETURN:help   BREAK:To leave current comments unchanged") internal static options (constant);
          dcl     REPLY_LENGTH           fixed bin init (132) internal static options (constant);


	spy_ptr = sts_spy_ptr;

	on quit
	     begin;
		call xforum_window_mgr$check_window_status;
		call window_$clear_window (xforum_windows.bottom
		     .iocb, (0));
		call xforum_help_line_$pop;
		call xforum_status_$redisplay ((0));
		call collect_spy_data (SPY_AT_10, "QUIT");
		goto exit_select_trans_spec;
	     end;

	call window_$clear_window (xforum_windows.bottom.iocb, (0));

	call xforum_help_line_$push ("0"b, "", "", sts_QUERY_USAGE);

select_trans_spec_prompt:
          answer_array.N = 0;				/* all answers acceptable			*/
	answer_array.max_length = REPLY_LENGTH;

          call xforum_get_str_ ((COMMENTS_PROMPT), addr(answer_array), PROMPT_HELP, "comment_spec", reply, sts_code);

          if sts_code = error_table_$long_record 
          then do;
	     call ioa_ ("^/Max length (^d) of comment specifier exceeded -please reenter^/  (or press BREAK to return to menu).", REPLY_LENGTH);
	     goto select_trans_spec_prompt;
	end;

	if length(reply) = 0
	then call collect_spy_data (SPY_AT_10, "RETURN");
	else do;
	     if reply = "?"
	     then call collect_spy_data (SPY_AT_10, "?");
	     else if index (reply, ":") ^= 0
	     then call collect_spy_data (SPY_AT_10, "range");
	     else if verify (reply, "0123456789") ^= 0
	     then call collect_spy_data (SPY_AT_10, "number");
	     else call collect_spy_data (SPY_AT_10, substr (reply,1));

	     call xforum_validate_trans_spec_ (xforum_meeting_info_ptr, spy_ptr, substr (reply, 1), sts_code);
	     if sts_code ^= 0 then
		goto select_trans_spec_prompt;
	end;

	call xforum_help_line_$pop;

exit_select_trans_spec:
	return;

     end select_trans_spec;

copy_comments: proc (cc_spy_ptr, cc_fidx, cc_version);

/* PARAMETERS */

	dcl     cc_spy_ptr		 ptr;		/* (input) points to the spy structure */
	dcl     cc_fidx		 fixed bin;	/* (input) index identifing meeting to forum */
	dcl     cc_version		 fixed bin;	/* (input) version of the forum meeting */

/* INTERNAL AUTOMATIC */

	dcl     cc_bc		 fixed bin (24);	/* bit count of segment comments are being copied to, set before */
						/* the first comment is copied and updated after each */
						/* comment is copied */
	dcl     cc_code		 fixed bin (35);	/* standard error code */
	dcl     cc_entry_name	 char (32);	/* entry name of identified segment */
	dcl     cc_number_of_comments	 fixed bin;	/* count of comments copied to segment */
	dcl     cc_seg_ptr		 ptr;		/* pointer to segment comments are being copied to */
	dcl     cc_trans_no		 fixed bin;	/* number of the comment about to be copied */

	call xforum_attend_mtg_utilities$copy_to_name (cc_spy_ptr, cc_entry_name, cc_seg_ptr, cc_bc);
	if cc_seg_ptr = null ()
	then goto exit_copy_comments;

	cc_number_of_comments = 0;
	call ioa_ ("^/^/   Comments are being copied to ^a.", cc_entry_name);
	call xforum_help_line_$push ("0"b, "", "Return to Meeting menu", "");

	on quit
	     begin;
		call xforum_window_mgr$check_window_status;
		call window_$clear_window (xforum_windows.bottom.iocb, (0));
		call xforum_help_line_$pop;
		call collect_spy_data (SPY_AT_15, "QUIT");
		goto exit_copy_comments;
	     end;

	call xforum_get_selected_trans$first (xforum_meeting_info_ptr, forum_user_trans_ptr, cc_code);
	do while (cc_code ^= forum_error_table_$invalid_trans_idx);
	     if cc_code = 0
	     then do;
		cc_number_of_comments = cc_number_of_comments + 1;
		cc_trans_no = forum_user_trans.trans_no;
		call xforum_attend_mtg_utilities$update_status (xforum_meeting_info_ptr,
		     cc_trans_no, "", cc_version, cc_fidx);
		call xforum_format_$append (forum_user_trans_ptr, cc_seg_ptr, "0"b, cc_bc, cc_code);
	     end;
	     call xforum_get_selected_trans$next (xforum_meeting_info_ptr, forum_user_trans_ptr, cc_code);
	end;

	call window_$clear_window (xforum_windows.bottom.iocb, (0));
	call ioa_ ("^d comments copied to file ^a.", cc_number_of_comments, cc_entry_name);

exit_copy_comments:
	return;

     end copy_comments;

next_unread_trans: proc (nut_fidx, nut_version);

/* PARAMETERS */

	dcl     nut_fidx		 fixed bin;	/* (input) index identifing meeting to forum */
	dcl     nut_version		 fixed bin;	/* (input) version of forum meeting */

/* INTERNAL AUTOMATIC */

	dcl     nut_code		 fixed bin (35);	/* standard error code */
	dcl     nut_old_flags	 bit (6) unaligned; /* the flags identifing the current comments */
	dcl     nut_old_current	 fixed bin;	/* the index of the current comment if there is only one */


	nut_old_flags = string (xforum_meeting_info.flags);
	nut_old_current = xforum_meeting_info.current;

	call window_$clear_window (xforum_windows.bottom.iocb, (0));

	call xforum_attend_mtg_utilities$next_unread_comment (xforum_meeting_info_ptr,
	     nut_fidx, nut_version, forum_user_trans_ptr);

	if forum_user_trans_ptr = null ()
	then do;
	     call ioa_ ("There are no unread comments in this meeting.");
	     unspec (xforum_meeting_info.flags) = nut_old_flags;
	     xforum_meeting_info.current = nut_old_current;
	     call xforum_attend_mtg_utilities$update_status (xforum_meeting_info_ptr,
		xforum_meeting_info.current, "", nut_version, nut_fidx);
	end;
	else do;
	     call xforum_attend_mtg_utilities$update_status (xforum_meeting_info_ptr,
		forum_user_trans.trans_no, "", nut_version, nut_fidx);
	     call xforum_format_$display (forum_user_trans_ptr, xam_FIRST, nut_code);
	     if nut_code ^= 0
	     then call com_err_$suppress_name (nut_code, xam_ME, "Trying to print comment.");
	end;

	return;

     end next_unread_trans;

meeting_maintenance: proc;



	call ioa_ ("Meeting Maintenance has not yet been implemented.");
	call timer_manager_$sleep (4, "11"b);

	return;

     end meeting_maintenance;

collect_spy_data: proc (csd_where, csd_response);

	dcl     csd_where		 fixed bin;	/* (input) location response was collected */
	dcl     csd_response	 char (*);	/* (input) user's response */





	spy.count = spy.count + 1;
	spy.choices (count).at = csd_where;
	spy.choices (count).choice = csd_response;

	return;

     end collect_spy_data;

     end xforum_ent_attend_mtg_menu;
