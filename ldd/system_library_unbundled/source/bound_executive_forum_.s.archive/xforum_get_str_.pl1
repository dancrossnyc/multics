/****^  ********************************************
        *                                          *
        * Copyright, (C) Honeywell Bull Inc., 1987 *
        *                                          *
        ******************************************** */


/****^  HISTORY COMMENTS:
  1) change(87-04-10,LJAdams), approve(87-04-22,MCR7684),
     audit(87-07-30,Blair), install(87-08-06,MR12.1-1065):
     Created.
                                                   END HISTORY COMMENTS */

xforum_get_str_: proc (P_prompt, P_acceptable_answers, P_info, P_section, P_str, P_code);

/* Parameters */

	dcl     P_acceptable_answers	 ptr;
	dcl     P_info		 char (*) parameter;
	dcl     P_section		 char (*) parameter;
	dcl     P_prompt		 char (*) var parameter;
	dcl     P_str		 char (*) var parameter;
	dcl     P_yes_sw		 bit (1) aligned parameter;
          dcl     P_code		 fixed bin (35) parameter;
	       

/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
/*								        */
/* This is the main entry of xforum_get_str_. It prompts the user for input using       */
/* P_prompt and accepts only answers from P_acceptable_answers. If a question	        */
/* mark is input, the section P_section of P_info is displayed for the user	        */
/* by a call to xforum_help_. The user response is given by P_str.     	        */
/*								        */
/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */


/* Automatic */

	dcl     accept_anything	 bit (1) aligned;
	dcl     been_thru_this_before	 bit (1) aligned;
	dcl     i			 fixed bin;
	dcl     yes_or_no_string	 char (3) var;

          dcl  1  answers based (Panswers) like answer_array,
               Panswers                  ptr;
	       

/* Entries */

	dcl     ioa_		 entry () options (variable);
	dcl     ioa_$nnl		 entry () options (variable);
	dcl     iox_$control	 entry (ptr, char (*), ptr, fixed bin (35));
	dcl     command_query_	 entry () options (variable);
	dcl     xforum_help_$display	 entry (char(*), char(*));

/* External Static */

          dcl     error_table_$long_record
                                         fixed bin(35) ext static;
	dcl     iox_$user_output	 ptr ext static;

/* Internal Static */

	dcl     1 auto_query_info	 like query_info int static;

/* Based */


/* Constants */

	dcl     ENABLE_ESCAPE	 bit (2) aligned init ("11"b) int static options (constant);
	dcl     ONLY_YES_OR_NO	 bit (1) aligned init ("1"b) int static options (constant);
	dcl     NOT_ONLY_YES_OR_NO	 bit (1) aligned init ("0"b) int static options (constant);

/* Builtin */

	dcl     (addr, length, null) builtin;

%include query_info;
%page;
%include xforum_answers;


	call main (P_prompt, P_acceptable_answers, P_info, P_section, NOT_ONLY_YES_OR_NO, P_str, P_code);
	return;

init: entry ();

	auto_query_info.version = query_info_version_6;
	auto_query_info.switches.yes_or_no_sw = "0"b;
	auto_query_info.switches.suppress_name_sw = "1"b;
	auto_query_info.switches.cp_escape_control = ENABLE_ESCAPE;
	auto_query_info.switches.suppress_spacing = "1"b;
	auto_query_info.switches.literal_sw = "0"b;
	auto_query_info.switches.prompt_after_explanation = "0"b;
	auto_query_info.switches.padding = "0"b;
	auto_query_info.status_code = 0;
	auto_query_info.query_code = 0;
	auto_query_info.question_iocbp = null ();	/* default: user_i/o */
	auto_query_info.answer_iocbp = null ();		/* default: user_input */
	auto_query_info.repeat_time = 0;		/* don't repeat */
	auto_query_info.explanation_ptr = null ();
	auto_query_info.explanation_len = 0;

return;


nl:  entry (P_prompt, P_acceptable_answers, P_info, P_section, P_str, P_code);


/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
/*								        */
/* This entry performs exactly like the above main entry except that it also	        */
/* puts out a new_line and does a reset more before prompting the user.	        */
/*								        */
/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */

	Panswers = P_acceptable_answers;

 	call iox_$control (iox_$user_output, "reset_more", null, (0));
	call ioa_$nnl ("^/");
	call main (P_prompt, P_acceptable_answers, P_info, P_section, NOT_ONLY_YES_OR_NO, P_str, P_code);
	return;

yes_no: entry (P_prompt, P_yes_sw, P_code);


/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
/*								        */
/* This is a special simplified entry for callers who want to restrict the user to yes  */
/* or no answers.  It prompts the user with P_prompt and returns either true (yes) or   */
/* false (no) in P_yes_sw.  It accepts yes, no, y, or n.  Help files are not supplied   */
/* to the main procedure here because command_query takes care of the "?" response      */
/* itself and never passes it back.					        */
/*								        */
/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */

	call main (P_prompt, null, "", "", ONLY_YES_OR_NO, yes_or_no_string, P_code);
	if yes_or_no_string = "YES"  | yes_or_no_string = "Y" |
             yes_or_no_string = "yes" | yes_or_no_string = "yes" 
	then P_yes_sw = "1"b;
	else P_yes_sw = "0"b;
	return;

main: proc (I_prompt, I_acceptable_answers, I_info, I_section, I_yes_or_no_sw, O_str, O_code);

	dcl     I_prompt		 char (*) var parameter;
	dcl     I_acceptable_answers	 ptr;
	dcl     I_info		 char (*) parameter;
	dcl     I_section		 char (*) parameter;
	dcl     I_yes_or_no_sw	 bit (1) aligned parameter;
	dcl     O_str		 char (*) var parameter;
          dcl     O_code                 fixed bin (35);
      
	dcl     line		 char (300) var;
	dcl     outline		 char (256);

	O_str = "";				/* Initialize output parameters */
          O_code = 0;

          accept_anything = "0"b;

          Panswers = I_acceptable_answers;
          
	if answers.N = 0 
	then accept_anything = "1"b;

          auto_query_info.switches.yes_or_no_sw = I_yes_or_no_sw;

	been_thru_this_before = "0"b;
	do while ("1"b);
	     call iox_$control (iox_$user_output, "reset_more", null, (0)); /* ignore code */

	     call command_query_ (addr (auto_query_info), line, "", "^[^/^]^a^2x", been_thru_this_before, I_prompt);
	     been_thru_this_before = "1"b;

               if length (line) > answers.max_length
               then do;
                         P_code = error_table_$long_record;
		     return;
                    end;

	     if line = "?"
	     then do;
		     if I_info = ""
		     then call ioa_ ("^/There is no help available for this prompt.");
		     else do;
			     call ioa_$nnl ("^/");
			     call xforum_help_$display (I_info, I_section);
			end;
		end;
	     else do;
		     if accept_anything
		     then do;
			     O_str = line;
			     go to EXIT;
			end;
		     else do i = 1 to answers.N;
			     if line = answers.answer (i)
			     then do;
				     O_str = line;
				     go to EXIT;
				end;
			end;
		     outline = line;
		     call ioa_ ("^/""^a"" is not an acceptable response.^/Please reenter^[ or type ""?"" for help^].", outline, (I_info ^= ""));
		end;
	end;					/* do while */

EXIT:	return;
     end main;
     end xforum_get_str_;
