/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        *                                                         *
        *********************************************************** */



/****^  HISTORY COMMENTS:
  1) change(85-06-17,Davids), approve(86-02-04,MCR7350),
     audit(86-04-24,Gilcrease), install(86-04-24,MR12.0-1048):
     Updated header comments.  Removed reference to unused sl_control_s
     include file.  CChanged order of parameters so that the output
     forum_dir comes after the input forum_version instead of the other
     way around.
  2) change(87-07-21,LJAdams), approve(87-07-21,MCR7684),
     audit(87-07-24,Blair), install(87-08-06,MR12.1-1065):
     Declared constant MIN_NAME_LEN to get rid of magic number 1.
                                                   END HISTORY COMMENTS */


xforum_find_path_: proc (forum_name, forum_version, forum_dir, forum_control_entry, code);

/*
   BEGIN DESCRIPTION

   function:
      This module is used to determine if a given name is the name of a
      forum meeting. The name does not include the forum or control suffix.
      The meeting list structure has already been searched and the name
      does not appear in the list. The current forum search rules are used
      to search for the name. The version of the meeting is input to this
      module, so first it is called with version 1 and if not meeting is
      found it is called again with version 2. If a meeting is located the
      The directory, and name of the forum meeting are returned. The output
      name includes either the .forum or .control suffix. If the name does
      not correspond to a meeting found by the search paths the error
      forum_error_$not_in_search_list is returned.

   description of entry points:
      xforum_find_path:
         input:   char (*)          name of meeting to find (suffix is NOT included)
                  fixed bin         version of meeting being looked for
         output:  char (*)          directory meeting is in or "" if not found
                  char (*)          primary name on the meeting, includes suffix
                  fixed bin (35)    standard error code
         Version specific information, i.e. meeting name suffix and maximum
         name lengths have been isolated in the variables MAX_NAME_LEN
         and NAME_SUFFIX. The module search_paths_$find_all will search
         the current forum search paths for any occurance of a branch
         with the input name concatinated with the appropriate suffix and
         return a list of those paths. For each path returned a call is made to
         forum_$get_forum_path to determine if the branch is really a forum
         meeting and to determine the real directory and entry name (it will
         follow links). The array of paths is allocated in the system free are
         so a cleanup handler is used to be sure that the space is freed up.

   description of internal procedures:

   known bugs:

   notes:

   history:
      83-??-?? Deryk Barker: written.

      84-03-27 Davids: added forum_version parameter and tests of forum_verson
      to see if the .control or .forum suffix is to be used.

      84-09-04 Davids: Added code = 0 as the first executable statement. 
      code was not being set to zero which was causing problems.

      84-11-06 Davids: Auditing changes: 1) improved functional description,
      2) isolated version specific constants into the MAX_NAME_LEN and
      NAME_SUFFIX arrays, 3) change the call to search_paths_$get to
      search_paths_$find_all, and 4) replaced references to status with
      references to code. Also deleted code at the end of the module which
      set the value of forum_name_len based on the name returned by 
      forum_$get_forum_path, why set an automatic variable right before
      exiting the module? And redid the declaration so that they are separated
      by type.
   END DESCRIPTION
*/

/* PARAMETERS */

	dcl     forum_name		 char (*);	/* (input) name of meeting to find (suffix is NOT included) */
	dcl     forum_version	 fixed bin;	/* (input) version of meeting being looked for */
	dcl     forum_dir		 char (*);	/* (output) directory meeting is in or "" if not found */
	dcl     forum_control_entry	 char (*);	/* (output) primary name on the meeting, includes suffix */
	dcl     code		 fixed bin (35);	/* (output) standard error code */

/* EXTERNAL STATIC */

	dcl     error_table_$noentry	 fixed bin (35) ext static;
	dcl     forum_error_table_$long_forum_name fixed bin (35) ext static;
	dcl     forum_error_table_$blank_forum_name fixed bin (35) ext static;
	dcl     forum_error_table_$not_in_search_list fixed bin (35) ext static;

/* ENTRIES */
	dcl     forum_$get_forum_path	 entry (char (*), char (*), char (*), char (*), fixed bin (35));
	dcl     get_system_free_area_	 entry () returns (ptr);
	dcl     search_paths_$find_all entry (char (*), ptr, char (*), char (*), ptr, fixed bin, ptr, fixed bin (35));



/* CONDITIONS */

	dcl     cleanup		 condition;

/* INTERNAL AUTOMATIC */

	dcl     forum_name_len	 fixed bin;	/* length of the input meeting name */
	dcl     idx		 fixed bin;	/* index into the search paths array */
	dcl     real_dir		 char (168);	/* directory meeting is in if found */
	dcl     real_entry		 char (32);	/* primary name of meeting if found */

/* INTERNAL STATIC */

/* CONSTANTS */

	dcl     (
                  MIN_NAME_LEN               fixed bin init (2),
	        MAX_NAME_LEN	 (2) fixed bin init (24, 26),
						/* max length of meeting name not including suffix */
						/* for version 1 and version 2 meeting names */
	        NAME_SUFFIX		 (2) char (8) varying init (".control", ".forum")
						/* meeting name suffixes for version 1 and version 2 names */
	        )			 internal static options (constant);

/* BUILTINS */

	dcl     (
	        length,
	        null,
	        rtrim
	        )			 builtin;

/* BASED */

/* INCLUDE FILES */

%include sl_info;

	code = 0;

	forum_name_len = length (rtrim (forum_name));

	if forum_name_len < MIN_NAME_LEN
	then do;
	     code = forum_error_table_$blank_forum_name;
	     return;
	end;

	if forum_name_len > MAX_NAME_LEN (forum_version)
	then do;
	     code = forum_error_table_$long_forum_name;
	     return;
	end;

	forum_control_entry = rtrim (forum_name) || NAME_SUFFIX (forum_version);

	sl_info_p = null ();
	on cleanup
	     begin;
		if sl_info_p ^= null ()
		then free sl_info;
	     end;

	call search_paths_$find_all ("forum", null (), forum_control_entry, "",
	     get_system_free_area_ (), sl_info_version_1, sl_info_p, code);
	if code ^= 0
	then return;

	forum_dir = "";
	code = 1;
	do idx = 1 to sl_info.num_paths while (code ^= 0);
	     if sl_info.paths (idx).code = 0
	     then call forum_$get_forum_path (sl_info.pathname (idx),
		     forum_control_entry, real_dir, real_entry, code);
	end;
	free sl_info;

	if code ^= 0
	then do;
	     if code = error_table_$noentry
	     then do;
		code = forum_error_table_$not_in_search_list;
		return;
	     end;
	     else return;
	end;

	forum_dir = real_dir;
	forum_control_entry = real_entry;

	return;

     end xforum_find_path_;
