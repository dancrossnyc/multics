/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        *                                                         *
        *********************************************************** */



/****^  HISTORY COMMENTS:
  1) change(89-04-13,Lee), approve(89-05-10,MCR8104),
     audit(89-07-18,LZimmerman), install(89-10-02,MR12.3-1079):
     phx21011, phx20089, phx18851, phx13551 (Mail 401) - fixed incorrect
     sci_ptr used by in_reply_to_request; reformatting.
                                                   END HISTORY COMMENTS */


/* format: off */

/* send_mail requests which are valid only within invocations created by the read_mail reply request.  These requests are:
      in_reply_to -- displays/modifies the list of reply references for this message */

/* Created:  October 1983 by G. Palter */

/* format: on,style4,delnl,insnl,ifthenstmt,ifthen */


sdm_original_requests_:
     procedure (P_sci_ptr, P_sdm_invocation_ptr);

	return;					/* not an entrypoint */


/* Parameters */

dcl  P_sci_ptr pointer parameter;
dcl  P_sdm_invocation_ptr pointer parameter;


/* Local copies of parameters */

dcl  sci_ptr pointer;


/* Remaining declarations */

dcl  argument character (argument_lth) unaligned based (argument_ptr);
dcl  argument_ptr pointer;
dcl  argument_lth fixed binary (21);
dcl  (n_arguments, argument_idx) fixed binary;

dcl  message_specifier_idxs (n_message_specifiers_allocated) fixed binary based (message_specifier_idxs_ptr);
dcl  message_specifier_idxs_ptr pointer;
dcl  (n_message_specifiers_allocated, n_message_specifiers) fixed binary;
dcl  message_type fixed binary;			/* type of messages to select (all/undeleted/deleted) */

dcl  saved_rdm_sci_ptr pointer;			/* used to prevent errors from aborting the reply request */

dcl  reset_to_reply_messages bit (1) aligned;		/* ON => reset reply references to their original value */

dcl  (message_idx, message_number, idx) fixed binary;
dcl  original_message_ptr pointer;

dcl  code fixed binary (35);

dcl  iox_$user_output pointer external;

dcl  error_table_$badopt fixed binary (35) external;
dcl  error_table_$inconsistent fixed binary (35) external;

dcl  cu_$grow_stack_frame entry (fixed binary (19), pointer, fixed binary (35));
dcl  ioa_ entry () options (variable);
dcl  mail_system_$add_reply_reference entry (pointer, pointer, fixed binary, fixed binary (35));
dcl  mail_system_$delete_reply_reference entry (pointer, fixed binary, fixed binary (35));
dcl  mlsys_utils_$print_references_list_field
	entry (character (*) varying, pointer, fixed binary, pointer, fixed binary (35));
dcl  rdm_mailbox_interface_$read_message entry (pointer, fixed binary, pointer, fixed binary (35));
dcl  rdm_message_mark_mgr_$clear_marked_messages entry (pointer);
dcl  rdm_message_mark_mgr_$mark_messages
	entry (pointer, pointer, fixed binary (21), fixed binary, bit (*), fixed binary (35));
dcl  rdm_message_mark_mgr_$remark_original_messages entry (pointer);
dcl  ssu_$abort_line entry () options (variable);
dcl  ssu_$arg_count entry (pointer, fixed binary);
dcl  ssu_$arg_ptr entry (pointer, fixed binary, pointer, fixed binary (21));

dcl  cleanup condition;

dcl  (index, size) builtin;
%page;
/* The "in_reply_to" request: displays or modifies the In-Reply-To field.  The In-Reply-To field contains the list of
   original messages for which the message being created by this send_mail invocation is a reply */

in_reply_to_request:
     entry (P_sci_ptr, P_sdm_invocation_ptr);

	sci_ptr = P_sci_ptr;

	sdm_invocation_ptr = P_sdm_invocation_ptr;
	message_ptr = sdm_invocation.message_ptr;

	call ssu_$arg_count (sci_ptr, n_arguments);


	if n_arguments = 0 then do;

/* No arguments given -- print the current value of the In-Reply-To field */

	     if message.n_reply_references = 0 then
		call ioa_ ("^a:  <None>", REPLY_REFERENCES_FIELDNAME);

	     else do;
		call mlsys_utils_$print_references_list_field (REPLY_REFERENCES_FIELDNAME, message.reply_references,
		     0 /* use the terminal's line-length */, iox_$user_output, code);
		if code ^= 0 then
		     call ssu_$abort_line (sci_ptr, code, "Displaying the ^a field.", REPLY_REFERENCES_FIELDNAME);
	     end;
	end;


	else do;

/* Arguments given -- change the In-Reply-To field to reference only those messages identified by the given message
   specifiers; the control argument "-default" may be used to restore the field to the original list supplied by the
   read_mail reply request */

	     rdm_invocation_ptr = sdm_invocation.rdm_invocation_ptr;

	     saved_rdm_sci_ptr = rdm_invocation.sci_ptr;	/* for cleanup handler ... */

	     on condition (cleanup)
		begin;
		rdm_invocation.sci_ptr = saved_rdm_sci_ptr;
	     end;

/* phx20089 RL - control action taken by aborts when rdm_invocation.sci_ptr is used; */
/* prevent aborts beyond current invocation */
	     rdm_invocation.sci_ptr = P_sci_ptr;

	     n_message_specifiers_allocated = n_arguments;/* can't have more message specifiers than arguments */
	     call cu_$grow_stack_frame (size (message_specifier_idxs), message_specifier_idxs_ptr, code);
	     if code ^= 0 then call ssu_$abort_line (sci_ptr, 0, "Too many message specifiers on the request line.");

	     n_message_specifiers = 0;

	     call rdm_message_mark_mgr_$clear_marked_messages (rdm_invocation_ptr);

	     /*** Argument processing */

	     message_type = NON_DELETED_MESSAGES;	/* defaults to "-only_non_deleted" */
	     reset_to_reply_messages = "0"b;		/* "-default" not seen */

	     do argument_idx = 1 to n_arguments;

		call ssu_$arg_ptr (sci_ptr, argument_idx, argument_ptr, argument_lth);
		if index (argument, "-") = 1 then	/* a control argument */
		     if (argument = "-default") | (argument = "-dft") then reset_to_reply_messages = "1"b;
		     else if (argument = "-no_default") | (argument = "-ndft") then reset_to_reply_messages = "0"b;

		     else if (argument = "-include_deleted") | (argument = "-idl") then message_type = ALL_MESSAGES;
		     else if (argument = "-only_deleted") | (argument = "-odl") then
			message_type = ONLY_DELETED_MESSAGES;
		     else if (argument = "-only_non_deleted") | (argument = "-ondl") then
			message_type = NON_DELETED_MESSAGES;

		     else call ssu_$abort_line (sci_ptr, error_table_$badopt, """^a""", argument);

		else do;				/* a mesage specifier */
		     n_message_specifiers = n_message_specifiers + 1;
		     message_specifier_idxs (n_message_specifiers) = argument_idx;
		end;
	     end;

	     if (n_message_specifiers > 0) & reset_to_reply_messages then
		call ssu_$abort_line (sci_ptr, error_table_$inconsistent, """-default"" and message specifiers.");

	     /*** Mark the appropriate messages */

	     if reset_to_reply_messages then		/* restore the In-Reply-To field to its initial value */
		call rdm_message_mark_mgr_$remark_original_messages (rdm_invocation_ptr);
	     else do;				/* use the given message specifiers */
		do idx = 1 to n_message_specifiers;
		     call ssu_$arg_ptr (sci_ptr, message_specifier_idxs (idx), argument_ptr, argument_lth);
		     call rdm_message_mark_mgr_$mark_messages (rdm_invocation_ptr, argument_ptr, argument_lth,
			message_type, ""b, code);
		     if code ^= 0 then call ssu_$abort_line (P_sci_ptr, code);
		end;
	     end;

	     /*** Construct the new list of original messages */

	     original_messages_n_original_messages = marked_chain.n_messages;

	     allocate original_messages in (sdm_area) set (original_messages_ptr);
	     original_messages.version = ORIGINAL_MESSAGES_VERSION_1;

	     do message_idx = 1 to marked_chain.n_messages;
		message_number = marked_chain.messages (message_idx);

		call rdm_mailbox_interface_$read_message (rdm_invocation_ptr, message_number, original_message_ptr,
		     code);
		if code ^= 0 then
		     call ssu_$abort_line (sci_ptr, code, "Reading message #^d from ^a.", message_number,
			rdm_invocation.mailbox_name);

		original_messages.messages (message_idx).message_ptr = original_message_ptr;
		original_messages.messages (message_idx).message_idx = message_number;
	     end;

	     /*** Delete the old In-Reply-To field */

	     do idx = message.n_reply_references to 1 by -1;
		call mail_system_$delete_reply_reference (message_ptr, idx, code);
		if code ^= 0 then
		     call ssu_$abort_line (P_sci_ptr, code, "Deleting the ^a field.", REPLY_REFERENCES_FIELDNAME);
	     end;


	     /*** Build the new In-Reply-To field */

	     sdm_invocation.original_messages_ptr = original_messages_ptr;

	     do idx = 1 to original_messages.n_original_messages;
		call mail_system_$add_reply_reference (message_ptr, original_messages.messages (idx).message_ptr,
		     (-1), code);
		if code ^= 0 then
		     call ssu_$abort_line (sci_ptr, code, "Adding message #^d to the new message's ^a field.",
			message_number, REPLY_REFERENCES_FIELDNAME);
	     end;

	     if sdm_invocation.message_state = PROCESSED_MESSAGE then sdm_invocation.message_state = MODIFIED_MESSAGE;

	     rdm_invocation.sci_ptr = saved_rdm_sci_ptr;
	end;

	return;
%page;
%include sdm_invocation;
%page;
%include sdm_original_messages;
%page;
%include rdm_invocation;
%page;
%include rdm_message_list;
%page;
%include rdm_message_chains;
%page;
%include mlsys_message;
%page;
%include mlsys_field_names;

     end sdm_original_requests_;
