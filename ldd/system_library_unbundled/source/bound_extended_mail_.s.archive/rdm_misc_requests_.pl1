/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */

/* format: off */

/* Miscellaneous read_mail requests */

/* Created:  1978 by W. Olin Sibert */
/* Modified: 30 May 1980 by G. Palter to implement suggestion #0316 -- the "." requests should indicate if abbrev
      processing is enabled */
/* Modified: 16 February 1982 by G. Palter for new calling sequence of ssu_$get_abbrev_info */
/* Modified: 21 September 1982 by G. Palter to stop using rdm_data_ and to make the quit request accept -no_force and
      -delete/-no_delete */
/* Modified: September 1983 by G. Palter as part of the conversion to the new mail system interface */

/* format: on,style4,delnl,insnl,ifthenstmt,ifthen */


rdm_misc_requests_:
     procedure (P_sci_ptr, P_rdm_invocation_ptr);

	return;					/* not an entrypoint */


dcl  P_sci_ptr pointer parameter;
dcl  P_rdm_invocation_ptr pointer parameter;

dcl  argument character (argument_lth) unaligned based (argument_ptr);
dcl  argument_ptr pointer;
dcl  argument_lth fixed binary (21);
dcl  (n_arguments, argument_idx) fixed binary;

dcl  request_name character (72) varying;
dcl  quit_force bit (1);				/* command_query_$yes_no is declared wrong */
dcl  (delete_messages, expunge_failed) bit (1) aligned;
dcl  n_new_messages fixed binary;

dcl  (subsystem_name, subsystem_version) character (32);
dcl  subsystem_level fixed binary;
dcl  abbrev_enabled bit (1) aligned;

/* format: off */
dcl (error_table_$bad_arg, error_table_$badopt, mlsys_et_$some_messages_not_deleted)
	fixed binary (35) external;
/* format: on */

dcl  command_query_$yes_no entry () options (variable);
dcl  ioa_ entry () options (variable);
dcl  rdm_mailbox_interface_$expunge_messages entry (pointer, bit (1) aligned);
dcl  rdm_mailbox_interface_$read_new_messages entry (pointer, bit (1) aligned, fixed binary);
dcl  ssu_$abort_line entry () options (variable);
dcl  ssu_$abort_subsystem entry () options (variable);
dcl  ssu_$arg_count entry (pointer, fixed binary);
dcl  ssu_$arg_ptr entry (pointer, fixed binary, pointer, fixed binary (21));
dcl  ssu_$get_abbrev_info entry (pointer, pointer, pointer, bit (1) aligned);
dcl  ssu_$get_invocation_count entry (pointer, fixed binary, fixed binary);
dcl  ssu_$get_subsystem_and_request_name entry (pointer) returns (character (72) varying);
dcl  ssu_$get_subsystem_name entry (pointer) returns (character (32));
dcl  ssu_$get_subsystem_version entry (pointer) returns (character (32));
dcl  ssu_$print_message entry () options (variable);

dcl  (index, null, substr) builtin;
%page;
/* The "quit" request: exists read_mail unless new messages have arrived, in which case, the user is queried */

quit_request:
     entry (P_sci_ptr, P_rdm_invocation_ptr);

	rdm_invocation_ptr = P_rdm_invocation_ptr;

	request_name = ssu_$get_subsystem_and_request_name (P_sci_ptr);

	quit_force = "0"b;				/* ask if new messages present */
	delete_messages = "1"b;			/* delete messages so marked */

	call ssu_$arg_count (P_sci_ptr, n_arguments);

	do argument_idx = 1 to n_arguments;
	     call ssu_$arg_ptr (P_sci_ptr, argument_idx, argument_ptr, argument_lth);
	     if index (argument, "-") = 1 then		/*  a control argument */
		if (argument = "-force") | (argument = "-fc") then quit_force = "1"b;
		else if (argument = "-no_force") | (argument = "-nfc") then quit_force = "0"b;
		else if (argument = "-delete") | (argument = "-dl") then delete_messages = "1"b;
		else if (argument = "-no_delete") | (argument = "-ndl") then delete_messages = "0"b;
		else call ssu_$abort_line (P_sci_ptr, error_table_$badopt, """^a""", argument);
	     else call ssu_$abort_line (P_sci_ptr, error_table_$bad_arg, "This request only accepts control arguments.")
		     ;
	end;

	call rdm_mailbox_interface_$read_new_messages (rdm_invocation_ptr, "0"b, n_new_messages);

	if ^quit_force & (n_new_messages > 0) then do;	/* give user a change to look */
	     call command_query_$yes_no (quit_force, 0, request_name, "",
		"^[One new message has^s^;^d new messages have^] arrived.  Do you still wish to quit?",
		(n_new_messages = 1), n_new_messages);
	     if ^quit_force then call ssu_$abort_line (P_sci_ptr);
	end;

	if delete_messages then do;			/* actually flush deleted messages */
	     call rdm_mailbox_interface_$expunge_messages (rdm_invocation_ptr, expunge_failed);
	     if expunge_failed then			/* .. unable to delete everything that should have been ... */
		if quit_force then			/* ... but user wants out anyway: warn of possible error */
		     call ssu_$print_message (P_sci_ptr, mlsys_et_$some_messages_not_deleted);
		else call ssu_$abort_line (P_sci_ptr, mlsys_et_$some_messages_not_deleted);
	end;

	call ssu_$abort_subsystem (P_sci_ptr, 0);	/* leave */

	return;					/* can't get here */
%page;
/* format: off */
/* The "." request: prints a line of the form:

	read_mail V {(abbrev)} {(debug)} {(level N)}:  No current message. # messages, # deleted.  PATHNAME

   where items enclosed in {}'s are optionally printed if meaningfull */
/* format: on */

self_identify:
     entry (P_sci_ptr, P_rdm_invocation_ptr);

	rdm_invocation_ptr = P_rdm_invocation_ptr;
	mailbox_ptr = rdm_invocation.mailbox_ptr;

	call ssu_$arg_count (P_sci_ptr, n_arguments);
	if n_arguments ^= 0 then call ssu_$abort_line (P_sci_ptr, 0, "No arguments may be given.");

	call rdm_mailbox_interface_$read_new_messages (rdm_invocation_ptr, "1"b, (0));
						/* say what's new */

	subsystem_name = ssu_$get_subsystem_name (P_sci_ptr);
	subsystem_version = ssu_$get_subsystem_version (P_sci_ptr);
	call ssu_$get_abbrev_info (P_sci_ptr, (null ()), (null ()), abbrev_enabled);
	call ssu_$get_invocation_count (P_sci_ptr, subsystem_level, (0));

	call ioa_ (
	     "^a ^a^[ (abbrev)^]^[ (debug)^]^[ (level ^d)^;^s^]:  ^[Message #^d of ^d^s^;^sNo current message.  ^d message^[s^]^]^[, ^d deleted^;^s^].  ^[Reading ^a.^;^a^]"
	     , subsystem_name, subsystem_version, abbrev_enabled, rdm_invocation.debug_mode, (subsystem_level ^= 1),
	     subsystem_level, (rdm_invocation.current_message ^= 0), rdm_invocation.current_message,
	     all_chain.n_messages, (all_chain.n_messages ^= 1), (deleted_chain.n_messages > 0),
	     deleted_chain.n_messages, (substr (rdm_invocation.mailbox_name, 1, 1) ^= ">"), rdm_invocation.mailbox_name)
	     ;

	return;
%page;
%include rdm_invocation;
%page;
%include rdm_message_list;
%page;
%include rdm_message_chains;

     end rdm_misc_requests_;
