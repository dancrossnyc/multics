/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */

/* Written March 1982 by R. Ignagni 
   
   83-06-27  DJ Schimke: Deleted dcls for unreferenced addr, cleanup, iox_, 
   iox_, iox_, length, null, and xmail_leave_menu.

   83-09-14  DJ Schimke: Added code to check the value of more_mode for the 
   bottom window before doing the clear_to_end_of_window call. The call to
   clear_to_end_of_window was added for more_mode=wrap (phx11860) and should
   not be done for fold mode. phx12565
*/
xmail_display_menu_: proc (menup, sw_no_lines, code);


	dcl     sw_no_lines		 fixed bin;
	dcl     code		 fixed bin (35);
	dcl     menup		 ptr;

	dcl     addr		 builtin;
	dcl     1 auto_mode_value	 automatic like mode_value;
	dcl     mode_str		 char (512);

	dcl     iox_$modes		 entry (ptr, char (*), char (*), fixed bin (35));
	dcl     mode_string_$get_mode	 entry (char (*), char (*), ptr, fixed bin (35));
	dcl     xmail_sw_$update_file	 entry (char (*));
	dcl     xmail_sw_$update_file_info entry (char (*));
	dcl     xmail_sw_$update_position entry (char (*));
	dcl     xmail_sw_$update_usage entry (char (*));
	dcl     xmail_sw_$redisplay	 entry ();
	dcl     xmail_error_$code_last entry options (variable);
	dcl     NAME		 char (19) static options (constant) init ("xmail_display_menu_");


MAIN:

	code = 0;

	call xmail_sw_$update_file (" ");
	call xmail_sw_$update_file_info (" ");
	call xmail_sw_$update_position (" ");
	call xmail_sw_$update_usage (" ");
	call xmail_sw_$redisplay ();

	call DISPLAY;

	call iox_$modes (xmail_windows.bottom.iocb, "", mode_str, code);
	if code ^= 0 then go to ERROR;
	auto_mode_value.version = mode_value_version_3;
	call mode_string_$get_mode (mode_str, "more_mode", addr (auto_mode_value), code);
	if code ^= 0 then go to ERROR;
	if auto_mode_value.char_value ^= "fold" then
	     call window_$clear_to_end_of_window (xmail_windows.bottom.iocb, (0));
	return;

ERROR:	call xmail_error_$code_last (code, NAME, "s", "A program error has occurred for which no automatic correction is known.");


%page;
DISPLAY: proc;

	dcl     1 actual_menu_rqmts	 aligned like menu_requirements;

	dcl     xmail_err_$insuff_room_for_window ext static fixed bin (35);

	dcl     xmail_window_manager_$set_menu_window_size entry (fixed bin, fixed bin (35));
	dcl     xmail_window_manager_$set_sw_size entry (fixed bin, fixed bin (35));

	dcl     xmail_redisplay_$status_window entry ();
	dcl     xmail_redisplay_$menu	 entry ();

	actual_menu_rqmts.version = menu_requirements_version_1;
	call menu_$describe (menup, addr (actual_menu_rqmts), code);
	if code ^= 0 then goto ERROR;

	if actual_menu_rqmts.width_needed > xmail_windows.menu.width
	then code = xmail_err_$insuff_room_for_window;
	else do;
	     call xmail_window_manager_$set_sw_size (sw_no_lines, code);
	     if code = 0
	     then do;
		call xmail_redisplay_$status_window ();
		call xmail_window_manager_$set_menu_window_size (actual_menu_rqmts.lines_needed, code);
	     end;
	     if code = 0
	     then call xmail_redisplay_$menu ();
	end;
	if code = 0 then return;
	else go to ERROR;

     end DISPLAY;
%page;
%include mode_string_info;
%page;
%include xmail_data;
%page;
%include xmail_windows;
%page;
%include menu_dcls;
%page;
%include window_dcls;
%page;
%include xmail_help_infos;
%page;
%include xmail_responses;

     end xmail_display_menu_;
