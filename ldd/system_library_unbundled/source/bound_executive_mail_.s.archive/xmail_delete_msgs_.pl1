/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


xmail_delete_msgs_: proc (P_mailbox_ptr, P_curr_msgsp, P_pos_line, P_file_name);

/* Author unknown.

   83-06-27  DJ Schimke: Modified to use new mail_system calls and version 2
   mailboxes.

   83-09-14 DJ Schimke: Modified the handling of the error code from 
   mail_system_$mark_message_for_deletion to recognize and report an access 
   problem rather than reporting it as an "internal error." TR11955
*/

/* Parameter */

	dcl     (P_mailbox_ptr, P_curr_msgsp) ptr;
	dcl     P_file_name		 char (*);
	dcl     P_pos_line		 char (*);

/* Automatic */

	dcl     add_more_msg	 bit (1) aligned;
	dcl     code		 fixed bin (35);
	dcl     i			 fixed bin;
	dcl     message_no_string	 char (200) var;
	dcl     message_number	 fixed bin;
	dcl     message_ptr		 ptr;

/* Constant */

	dcl     ME_CHAR		 char (18) int static options (constant) init ("xmail_delete_msgs_");
	dcl     MORE_MSG		 char (12) int static options (constant) init (" ... <MORE> ");
	dcl     SP		 char (1) int static options (constant) init (" ");

/* Builtin */

	dcl     (char, length, ltrim, maxlength, null)
				 builtin;

/* Entries */

	dcl     ioa_		 entry () options (variable);
	dcl     mail_system_$mark_message_for_deletion entry (ptr, fixed bin (35));
	dcl     mail_system_$read_message entry (ptr, fixed bin, fixed bin (35));
	dcl     xmail_error_$code_first entry () options (variable);
	dcl     xmail_error_$no_code	 entry () options (variable);
	dcl     xmail_select_msgs_$next entry (ptr, ptr, char (*));
	dcl     xmail_validate_$curr_msgs entry (ptr, fixed bin (35));
	dcl     xmail_validate_$mbx	 entry (ptr, fixed bin (35));

/* External Static */

	dcl     mlsys_et_$cant_be_deleted fixed bin (35) ext;
	dcl     xmail_err_$no_curr_msgs fixed bin (35) ext;

	call xmail_validate_$mbx (P_mailbox_ptr, code);
	if code ^= 0
	then call xmail_error_$no_code (code, ME_CHAR, "q", "Invalid mailbox structure.  This is an internal programming error.");

	if P_curr_msgsp = null
	then call xmail_error_$code_first (xmail_err_$no_curr_msgs, ME_CHAR, "i");
	else do;
		call xmail_validate_$curr_msgs (P_curr_msgsp, code);
		if code ^= 0
		then call xmail_error_$no_code (code, ME_CHAR, "q", "Invalid message structure.  This is an internal programming error.");
	     end;

	mailbox_ptr = P_mailbox_ptr;
	curr_msgsp = P_curr_msgsp;

	message_no_string = "";
	do i = 1 to curr_msgs.count;
	     message_number = curr_msgs.numbers (i);
	     if mailbox.messages (message_number).message_ptr = null
	     then do;
		     call mail_system_$read_message (mailbox_ptr, message_number, code);
		     if code ^= 0
		     then call xmail_error_$no_code (code, ME_CHAR, "l", "Unable to read message ^d. This is an internal programming error.", message_number);
		end;
	     message_ptr = mailbox.messages (message_number).message_ptr;
	     call mail_system_$mark_message_for_deletion (message_ptr, code);
	     if code = mlsys_et_$cant_be_deleted
	     then do;
		     call print_msg;
		     call xmail_error_$no_code (code, ME_CHAR, "q", "Sorry, unable to discard message ^d.^/You don't have permisson to delete messages in this mail file.", message_number);
		end;
	     else if code ^= 0
	     then do;
		     call print_msg;
		     call xmail_error_$no_code (code, ME_CHAR, "q", "Sorry, unable to discard message ^d.  This is an internal programming error.", message_number);
		end;

	     if length (message_no_string) + length (ltrim (char (message_number))) + length (SP) > maxlength (message_no_string)
	     then add_more_msg = "1"b;
	     else message_no_string = message_no_string || ltrim (char (message_number)) || SP;
	end;

	call print_msg;
	call xmail_select_msgs_$next (P_mailbox_ptr, P_curr_msgsp, P_pos_line);

EXIT:
	return;

print_msg: proc ();
	call ioa_ ("Message^[s^;^] ^a ^[^a^;^s^] discarded from ""^a"".", (curr_msgs.count > 1), message_no_string, add_more_msg, MORE_MSG, P_file_name);
     end print_msg;
%page;
%include mlsys_mailbox;
%page;
%include xmail_curr_msg_info;

     end xmail_delete_msgs_;
