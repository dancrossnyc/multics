/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1988                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(88-06-29,Blair), approve(88-07-27,MCR7931),
     audit(88-08-30,RBarstad), install(88-09-02,MR12.2-1098):
     Call mail_system_$create_mailing_list_address to generate the address
     rather than generating it ourselves with the "{list ...}" construct. This
     will allow names with embedded blanks.
                                                   END HISTORY COMMENTS */


xmail_validate_: proc ();

/* Author unknown

   83-07-27 DJ Schimke: Modified to use new mail_system_ interfaces and 
   version 2 mailboxes.

   83-09-14 DJ Schimke: Modified the call to hcs_$status_minf so a link to a
   mailing list is considered a valid mailing list. TR12078
*/

/* Parameter */

	dcl     P_addr_str		 char (*);
	dcl     P_code		 fixed bin (35);
	dcl     P_curr_msgsp	 ptr;
	dcl     P_mailbox_ptr	 ptr;

/* Automatic */

	dcl     address_ptr		 ptr;
	dcl     addr_str		 char (200);
	dcl     bit_count		 fixed bin (24);
	dcl     code		 fixed bin (35);
	dcl     mailing_list	 bit (1) aligned;
	dcl     mlist_name		 char (32);
	dcl     type		 fixed bin (2);

/* Entries */

	dcl     hcs_$status_minf	 entry (char (*), char (*), fixed bin (1), fixed bin (2), fixed bin (24), fixed bin (35));
	dcl     mlsys_utils_$parse_address_text entry (char (*), ptr, fixed bin (35));
          dcl     mail_system_$create_mailing_list_address entry (char (*), char (*), char (*), char (*) varying, char (*) varying, ptr, fixed bin (35));
	dcl     mail_system_$free_address entry (ptr, fixed bin (35));
	dcl     mail_system_$validate_address entry entry (ptr, bit (1) aligned, fixed bin (35));

/* Constant */

	dcl     CHASE		 fixed bin (1) init (1) int static options (constant);
	dcl     MLIST_SUFFIX	 char (4) init (".mls") int static options (constant);
	dcl     SEG		 fixed bin (2) init (1) int static options (constant);
	dcl     VALIDATE_LIST	 bit (1) aligned init ("1"b) int static options (constant);

/* External Static */

	dcl     (error_table_$badcall,
	        error_table_$unimplemented_version,
	        error_table_$noaccess,
	        mlsys_et_$message_queued,
	        mlsys_et_$no_mailbox,
	        xmail_err_$bad_mailing_list,
	        xmail_err_$mailing_list) fixed bin (35) ext;

/* Builtin  */

	dcl     (ltrim, null, rtrim)	 builtin;

mbx: entry (P_mailbox_ptr, P_code);

	P_code = 0;

	if P_mailbox_ptr = null
	then do;
	     P_code = error_table_$badcall;
	     return;
	end;

	mailbox_ptr = P_mailbox_ptr;

	if mailbox.version ^= MAILBOX_VERSION_2
	then do;
	     P_code = error_table_$unimplemented_version;
	     return;
	end;

	return;					/* mbx entry */

curr_msgs: entry (P_curr_msgsp, P_code);

	P_code = 0;

	if P_curr_msgsp = null
	then do;
	     P_code = error_table_$badcall;
	     return;
	end;

	curr_msgsp = P_curr_msgsp;

	if curr_msgs.version ^= MSG_STRUCT_VERSION_1
	then do;
	     P_code = error_table_$unimplemented_version;
	     return;
	end;

	return;					/* curr_msgs entry */

addr: entry (P_addr_str, P_code);

/* Important codes returned by this entry:


    0                                 --  P_addr_str is an address with
                                          good syntax and is deliverable
    xmail_err_$mailing_list           --  P_addr_str specifies a valid
                                          mailing list
    mlsys_et_$invalid_address_syntax  --  P_addr_str is an address with
                                          invalid syntax
    mlsys_et_$no_mailbox              --  P_addr_str is an address with
                                          good syntax, but is undeliverable
    mlsys_et_$no_a_permission         --  P_addr_str is an address with
                                          good syntax but, is undeliverable
    mlsys_et_$mte_not_found           --  P_addr_str is good syntax for a 
                                          mail_table address, but no such
                                          mail_table entry exists
  */

/* Is it a mailing list name? */

	mlist_name = ltrim (rtrim (P_addr_str)) || MLIST_SUFFIX;
	call hcs_$status_minf ((xmail_data.mail_dir), mlist_name, CHASE, type, bit_count, code);
	if code = 0 & type = SEG then do;
	     mailing_list = "1"b;
               call mail_system_$create_mailing_list_address ((xmail_data.mail_dir),
		mlist_name, "", "", "", address_ptr, code);
	     if code ^= 0 then do;
	         P_code = code;
	         goto EXIT;
	         end;
	end;
	else do;
	     mailing_list = "0"b;			/* if code ^= 0 ignore and assume it's not a mailing_list */
	     addr_str = P_addr_str;
	     call mlsys_utils_$parse_address_text (addr_str, address_ptr, code);
	     if code ^= 0
		then do;
		P_code = code;
		goto EXIT;
		end;
	end;

/* If the syntax is ok, is there a corresponding mailbox? */
/* For mailing_lists, are all addresses valid?            */

	call mail_system_$validate_address (address_ptr, VALIDATE_LIST, code);
	if code = 0 | code = mlsys_et_$message_queued
	then P_code = 0;
	else if code = error_table_$noaccess then P_code = mlsys_et_$no_mailbox;
	else P_code = code;

EXIT:	call mail_system_$free_address (address_ptr, (0));/* ignore error */

	if mailing_list then do;
	     if P_code = 0 then P_code = xmail_err_$mailing_list;
	     else P_code = xmail_err_$bad_mailing_list;
	end;
	return;					/* addr entry */

%page;
%include mlsys_mailbox;
%page;
%include xmail_curr_msg_info;
%page;
%include xmail_data;

     end xmail_validate_;
