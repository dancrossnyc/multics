/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(86-02-06,Blair), approve(86-02-26,MCR7358),
     audit(86-04-18,RBarstad), install(86-05-28,MR12.0-1062):
     Add call to set the seen switch after the message is displayed.
  2) change(86-10-15,Blair), approve(86-10-15,MCR7564),
     audit(86-10-28,RBarstad), install(86-10-29,MR12.0-1201):
     Set the envelope_format_mode to DEFAULT so that the "Sender:" field will
     be displayed when the author and sender of the message are not the same.
     Fixes error_list 129.
                                                   END HISTORY COMMENTS */


xmail_display_msgs_: proc (P_mailbox_ptr, P_curr_msgsp, P_iocb_ptr);

/* Author unknown.

   83-07-05  DJ Schimke: Modified to use new mail_system calls and version 2
   mailboxes.
*/

/* Parameter */

	dcl     (P_mailbox_ptr, P_curr_msgsp, P_iocb_ptr) ptr;

/* Automatic */

	dcl     code		 fixed bin (35);
	dcl     formfeed		 bit (1) aligned;
	dcl     i			 fixed bin;
	dcl     iocb_ptr		 ptr;
	dcl     message_num		 fixed bin;

	dcl     1 auto_format_message_options like format_message_options;
	dcl     1 auto_window_position_info like window_position_info;

/* Builtin */

	dcl     (addr, null)	 builtin;

/* Entries */

	dcl     get_line_length_$switch entry (ptr, fixed bin (35)) returns (fixed bin);
	dcl     ioa_$ioa_switch	 entry () options (variable);
	dcl     iox_$control	 entry (ptr, char (*), ptr, fixed bin (35));
	dcl     mail_system_$acknowledge_message entry (ptr, fixed bin (35));
	dcl     mail_system_$read_message entry (ptr, fixed bin, fixed bin (35));
          dcl     mail_system_$set_message_switch entry (ptr, char (4) aligned, bit (1) aligned, fixed bin (35));
	dcl     mlsys_utils_$print_message entry (ptr, ptr, ptr, fixed bin (35));
	dcl     xmail_error_$code_first entry () options (variable);
	dcl     xmail_error_$no_code	 entry () options (variable);
	dcl     xmail_validate_$curr_msgs entry (ptr, fixed bin (35));
	dcl     xmail_validate_$mbx	 entry (ptr, fixed bin (35));

/* External Static */

	dcl     error_table_$no_operation fixed bin (35) ext static;
	dcl     xmail_err_$no_curr_msgs fixed bin (35) ext static;

/* Constant */

	dcl     ME_CHAR		 char (19) int static options (constant) init ("xmail_display_msgs_");

	formfeed = "0"b;
	call main ();
	return;

ff:  entry (P_mailbox_ptr, P_curr_msgsp, P_iocb_ptr);

	formfeed = "1"b;
	call main ();
	return;

main: proc ();
	call xmail_validate_$mbx (P_mailbox_ptr, code);
	if code ^= 0
	then call xmail_error_$no_code (code, ME_CHAR, "q", "Invalid mailbox structure.  This is an internal programming error.");

	if P_curr_msgsp = null
	then call xmail_error_$code_first (xmail_err_$no_curr_msgs, ME_CHAR, "i");
	else do;
	     call xmail_validate_$curr_msgs (P_curr_msgsp, code);
	     if code ^= 0
	     then call xmail_error_$no_code (code, ME_CHAR, "q", "Invalid message structure.  This is an internal programming error.");
	end;

	mailbox_ptr = P_mailbox_ptr;
	curr_msgsp = P_curr_msgsp;
	iocb_ptr = P_iocb_ptr;

	auto_window_position_info.version = window_position_info_version;
	call iox_$control (iocb_ptr, "get_window_info", addr (auto_window_position_info), code);
	if code = 0
	then auto_format_message_options.line_length = auto_window_position_info.width;
	else if code = error_table_$no_operation then do;
	     auto_format_message_options.line_length = get_line_length_$switch (iocb_ptr, (0)); /* Output could be going to file */
	     code = 0;
	end;
	else call xmail_error_$no_code (code, ME_CHAR, "q", "Cannot get width of user window. This is an internal programming error.");

	auto_format_message_options.version = FORMAT_MESSAGE_OPTIONS_VERSION_1;
	auto_format_message_options.envelope_formatting_mode = DEFAULT_FORMATTING_MODE;
	auto_format_message_options.header_formatting_mode = DEFAULT_FORMATTING_MODE;
	auto_format_message_options.redistributions_list_formatting_mode = DEFAULT_FORMATTING_MODE;
	auto_format_message_options.include_body = "1"b;

	do i = 1 to curr_msgs.count;
	     message_num = curr_msgs.numbers (i);
	     if mailbox.messages (message_num).message_ptr = null
	     then do;
		call mail_system_$read_message (mailbox_ptr, message_num, code);
		if code ^= 0
		then call xmail_error_$no_code (code, ME_CHAR, "l", "Unable to read message ^d. This is an internal programming error.", message_num);
	     end;
	     message_ptr = mailbox.messages (message_num).message_ptr;
	     if ^message.seen
		then call mail_system_$set_message_switch (message_ptr, PER_MESSAGE_SEEN_SWITCH_TYPE, "1"b, (0));
	     if message.must_be_acknowledged
	     then do;
		call mail_system_$acknowledge_message (message_ptr, code);
		if code ^= 0
		then call xmail_error_$no_code (code, ME_CHAR, "l", "Unable to send acknowledgement for message ^d.", message_num);
	     end;
	     call ioa_$ioa_switch (iocb_ptr, "^[^|^]^x#^d^[^x(^d^xline^[s^])^]:", (formfeed & i > 1), message_num, (message.total_lines ^= -1), message.total_lines, (message.total_lines ^= 1));
	     call mlsys_utils_$print_message (message_ptr, addr (auto_format_message_options), iocb_ptr, code);
	     if code ^= 0 then call xmail_error_$no_code (code, ME_CHAR, "l", "Unable to display message ^d.  This is an internal programming error.", message_num);
	     call ioa_$ioa_switch (iocb_ptr, " ---(^d)---", message_num);
	     call iox_$control (iocb_ptr, "reset_more", null (), (0));
	end;					/* do while */

     end main;

%include mlsys_format_options;
%page;
%include rdm_switch_types;
%page;
%include mlsys_mailbox;
%page;
%include mlsys_message;
%page;
%include window_control_info;
%page;
%include xmail_curr_msg_info;

     end xmail_display_msgs_;
