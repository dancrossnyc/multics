/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */



/* ------------------------------------------------------------------- */
/* 							 */
/*  Simulation of GCOS mme which returns CPU time in 64ths of a	 */
/*  milli-second.  The init_timer entry is called by		 */
/*  gcos_run_activity at the beginning of each activity to		 */
/*  remember the CPU timer at the beginning of the activity		 */
/* 							 */
/* 	Written by Peter M. Haber	8/16/72			 */
/*	Modified by M. R. Jordan, October 1977			 */
/* 							 */
/* ------------------------------------------------------------------- */




gcos_mme_laps_: proc (mcp, increment);

dcl  binary builtin;
dcl  bit builtin;
dcl  cpu_time fixed bin(71) aligned;						/* cpu time since activity started */
dcl  divide builtin;
dcl  increment fixed bin(24)aligned;						/* number of paramenter words to skip over */
dcl  virtual_cpu_time_ ext entry returns (fixed bin(71) aligned);

	increment = 0;				/* no parameter words to skip over */

	cpu_time = virtual_cpu_time_ () - gcos_ext_stat_$initial_cpu_time; /* get cpu time for activity */

	mc.regs.q = bit (binary (divide (cpu_time, 1000, 35, 0)*64, 36), 36);
						/* put time in q register in 64ths of a second */

	return;

%include gcos_ext_stat_;


     end gcos_mme_laps_;
