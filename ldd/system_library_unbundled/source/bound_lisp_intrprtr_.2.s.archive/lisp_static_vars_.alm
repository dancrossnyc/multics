" **************************************************************
" *                                                            *
" * Copyright, (C) Massachusetts Institute of Technology, 1973 *
" *                                                            *
" **************************************************************
"
" last modified October 1982 to add progn atom.
"

	use lk
	join	/link/lk
	even
	segdef	lisp_static_vars_	lisp communications area
lisp_static_vars_:
	its	-1,1,n		cclist_ptr (totally obsolete)

""" Table of Contents

	segdef	maknum_table_ptr
	segdef	maknum_data
	segdef	maknum_next
	segdef	maknum_mask
	segdef	maknum_left
	segdef	garbage_collect_soon
	segdef	quit_handler_flag
	segdef	binding_reversal_flag
	segdef	evalhook_status,evalhook_atom
	segdef	gc_time
	segdef	gc_mark_bits
	segdef	gcmin,gcmin_fraction,gcsize,gcmax
	segdef	no_snapped_links
	segdef	space_names_atom
	segdef	transparent		switch to make lisp transparent to quits
	segdef	read_print_nl_sync
	segdef	rdr_state,garbage_collect_inhibit,rdr_ptr,rdr_label
	segdef	masked
	segdef	emptying_buffers	 non-negative when lisp_default_handler_ is emptying all stream output buffers
	segdef	pending_ctrl
	segdef	i_am_gcing
	segdef	saved_environment_dir
	segdef	hi_random
	segdef	lo_random
	segdef	ignore_faults
	segdef	stack_ptr
	segdef	unmkd_ptr	pointer to top of unmkd_stack
	segdef	frame_ptrs	the following 6 things must be kept in the same order,
	segdef	binding_top	pointer to top of binding block chain
	segdef	err_recp
	segdef	prog_frame	7 pointers to threaded lists of frames in unmarked stack
	segdef	err_frame
	segdef	catch_frame
	segdef	eval_frame	stuff kept by eval if *rset t
	segdef	unwp_frame	head of unwind-protect frame list
	segdef	arg_list_ptr	needed by status jcl
	segdef	top_level		the top-level read-eval-print loop
	segdef	argatom		used to hold arg list of lexpr(not really an atom)
	segdef	iochan_list	list of all opened iochans (files)
	segdef	subr_block_list	list of all new (fasload) subr blocks
	segdef	garbage_collected_ptrs
	segdef	first_value_atom		for (status system)
	segdef	obarray
	segdef	atomic_constants
	segdef	nil
	segdef	t_atom
	segdef	ctrlD
	segdef	ctrlQ
	segdef	ctrlR
	segdef	ctrlW
	segdef	user_intr_array
	segdef	STAR	atom *
	segdef	PLUS	atom +
	segdef	MINUS	atom -
	segdef	SLASH	atom //
	segdef	base
	segdef	ibase
	segdef	readtable
	segdef	stnopoint		atom *nopoint
	segdef	tty_atom
	segdef	errlist
	segdef	ctrlA		the atom ^a, whose value is interrupted by the CTRL/a input
	segdef	prinlevel,prinlength
	segdef	last_value_atom			for (status system)
	segdef	value_atom
	segdef	readeof_atom			for lisp_error_, eof_in_object err
	segdef	s_atom
	segdef	dollar_p_atom
	segdef	quote_atom
	segdef	array_atom
	segdef	array
	segdef	pname_atom
	segdef	string_atom
	segdef	fixnum_atom
	segdef	fixnum
	segdef	external
	segdef	flonum_atom
	segdef	flonum
	segdef	random_atom
	segdef	bignum_atom
	segdef	list_atom
	segdef	go_atom,return_atom,pdlframe_atom
	segdef	alphalessp_atom
	segdef	function_properties
	segdef	lambda,label,subr,lsubr,fsubr,expr,fexpr
	segdef	funarg,macro,autoload,qarg,qsetarg,qlstfy
	segdef	quotient
	segdef	evalframe_atom
	segdef	arrayindex
	segdef	setq_atom
	segdef	question_mark
	segdef	nouuo_flag,noret_flag
	segdef	quote_macro,semicolon_macro		special flags for builtin macros, used by rdr
	segdef	runtime_atom,time_atom
	segdef	comment_atom,declare_atom
	segdef	close,deletef,filepos,infile,instack,mergef,open
	segdef	outfile,outfiles,rename,stream
	segdef	dsk_atom,crunit_atom,uread_atom,uwrite_atom,old_io_defaults
	segdef	args	for err_break routine in lisp_subr_tv_
	segdef	star_rset
	segdef	err_atom,eval_atom,apply_atom,princ_atom,prin1_atom,print_atom
	segdef	prin1
	segdef	zunderflow
	segdef	toplevel	toplevel function ptr
	segdef	divov_flag
	segdef	plus_status
	segdef	status_gctwa
	segdef	tty_input_chan		-> iochan block for user_input stream
	segdef	tty_output_chan
	segdef	property_list_of_nil
	segdef	number_gc_ptrs
	segdef	number_of_atomic_constants
	segdef	atomic_constants_names
	segdef	template
	segdef	 template_size
	segdef	subsys_recurse_save_size
	segdef	cur_stat_seg
	segdef	cur_stat_pos
	segdef	gc_unwinder_kludge
	segdef	activate_gc_unwinder_kludge
	segdef	cleanup_list_exists
	segdef	cleanup_list
	segdef	defun,expr_hash
	segdef	vertical_bar_macro,eof_atom,progn_atom
	segdef	mulquit_state,mulpi_state
	segdef	deferred_interrupt

garbage_collect_soon:
	dec	0		garbage collection flag

quit_handler_flag:
	oct	0			"1"b means quitting out of a quit handler
	even
gc_time:	dec	0
	dec	0

gc_mark_bits:
	oct	525252000000

""" Bibop-compatible garbage collection parameters

gcmin:	dec	0.5
gcmin_fraction:  oct 400000000000	bit(1)
gcsize:	dec	30000
gcmax:	dec	1000000000

no_snapped_links:  oct 0		flag, "1"b means there are no snapped links in any compiled subr blocks

transparent: oct	0
read_print_nl_sync:
	dec	0		if this is non-zero, read has just read a newline,
				" and if print is to output one, it should suppress it.
garbage_collect_inhibit:
	oct	0		set nonzero by interrupts


masked:	oct	0		"1"b if we are masked against alrm, cput, and ctrl chars
				" i.e. (nointerrupt t) mode.
emptying_buffers:
	dec	-1

i_am_gcing: oct	0				"1"b when garbage-collecting

rdr_state:dec	0			0 = normal, 1 = ios_$read wait, 2 = readlist

	even
rdr_ptr:	its	-1,1			-> current readlist

rdr_label:its	-1,1			label for abnormal exit from  (tti wait)
	its	-1,1

saved_environment_dir:
	aci	"                                        "
	aci	"                                        "
	aci	"                                        "
	aci	"                                                "

	even
hi_random:
	oct	0		These are two words to store the random numbers
				"between calls to the function random.
lo_random:
	oct	0

iochan_list:  its  -1,1

subr_block_list:  its -1,1	list of all subr blocks
binding_reversal_flag:  oct  0		nonzero means can't interrupt because reversing a binding block
evalhook_status:  oct 0			see lisp_
	even
maknum_data:
maknum_table_ptr:	its	-1,1
maknum_next:	oct	0
maknum_mask:	dec	-1
maknum_left:	oct	0

cleanup_list_exists:oct	0		1 => cleanup_list non-nil
"					(needed since might be in gc and can't look at it)
activate_gc_unwinder_kludge: oct 0		flag that gc should do cleanup kludge
mulquit_state:	dec	-1		handling of Multics quit condition
mulpi_state:	dec	-1		handling of Multics program_interrupt condition
deferred_interrupt: oct	0		we must poll interrupts when we leave (nointerrupt t)
	even

pending_ctrl:
	oct	0		"1"b when in process of handling stacked-up
				"ctrl chars received while masked = 1.

ignore_faults:
	dec	0

	even

cur_stat_seg: its -1,1		current static seg, used by make_lisp_subr_block_
cur_stat_pos: dec 0		height in seg that has been allocated

	even
stack_ptr:
	its	-1,1,n		stack_ptr
unmkd_ptr: its	-1,1,n

frame_ptrs:			"since programs think this is an array.  binding_top _m_u_s_t be first.

binding_top:
	its	-1,1,n
err_recp:	its	-1,1
prog_frame:
	its -1,1

err_frame:its -1,1
catch_frame:
	its -1,1
eval_frame:
	its	-1,1
unwp_frame:
	its	-1,1
arg_list_ptr:
	its	-1,1

top_level:
	its	-1,1		a pl1 label is two pointers
	its 	-1,1

argatom:	oct	0,0	double word zero for eval, arg....

gc_unwinder_kludge:  its  -1,1	target of unwindage through in-progress gc,
	its -1,1		has to be saved while gc is completed if cleanup list exists
"
""" Template for initialization of some of the above data

	use	tx
	join	/text/tx

	even
template:
	its	-1,1		cclist ptr
	dec	0		garbage_collect_soon
	oct	0		quit_handler_flag
	even
	dec	0,0		gc_time
	oct	525252000000	gc_mark_bits

	dec	0.5		gcmin
	oct	400000000000	gcmin_fraction
	dec	30000		gcsize
	dec	1000000000	gcmax
	oct	0		no_snapped_links

	oct	0		transparent
	dec	0		read_print_nl_sync
	oct	0		garbage_collect_inhibit
	oct	0		masked
	dec	-1		emptying_buffers
	oct	0		i_am_gcing
	dec	0		rdr_state
	even
	its	-1,1		rdr_ptr
	its	-1,1		rdr_label
	its	-1,1		..
"				saved_environment_dir
	aci	"                                        "
	aci	"                                        "
	aci	"                                        "
	aci	"                                                "
	oct	0		hi_random
	oct	0		lo_random
	its	-1,1		iochan_list
	its	-1,1		subr_block_list
	oct	0		binding_reversal_flag
	oct	0		evalhook_status
	even
	its	-1,1		maknum_table_ptr
	oct	0
	dec	-1
	oct	0
	oct	0		cleanup_list_exists
	oct	0		activate_gc_unwinder_kludge
	dec	-1		mulquit_state
	dec	-1		mulpi_state
""" End of template

template_size:
	zero	0,template_size-template
	use	lk
"
garbage_collected_ptrs:

first_value_atom:
obarray:	its	-1,1


" the following  is a table of pointers to atoms, which are needed as constants
" by various system subrs.  The pointers are inited by lisp_boot_ using
" the table of names which appears below. These atom pointers are preserved
" through a save/unsave.

atomic_constants:

nil:	its	-1,1,n

t_atom:	its	-1,1,n		pointer to atom t.

external:	its	-1,1	the atom "external"

ctrlD:	its	-1,1

ctrlQ:	its	-1,1

ctrlR:	its	-1,1

ctrlW:	its	-1,1

	its	-1,1		interrupt channel 0. (CTRL/@)

user_intr_array:		"pointers to atoms whose values are user interrupt service functions
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
	its	-1,1
STAR:	its	-1,1
PLUS:	its	-1,1

base:	its	-1,1

ibase:	its	-1,1

readtable: its	-1,1

stnopoint:its	-1,1

tty_atom:	its	-1,1


errlist:	its	-1,1	atom errlist, value used by errors.


infile:	its	-1,1
instack:	its	-1,1

outfiles:	its	-1,1

zunderflow: its	-1,1
uread_atom:	its	-1,1
uwrite_atom:	its	-1,1
old_io_defaults: its	-1,1


ctrlA:	its	-1,1

star_rset: its	-1,1	now -> the atom *rset

prinlevel:
	its	-1,1
prinlength:
	its	-1,1

last_value_atom:


value_atom:	its	-1,1

readeof_atom: 	its	-1,1

s_atom:	its	-1,1

dollar_p_atom:
	its	-1,1

quote_atom: its	-1,1			points to the atom quote


pname_atom:	its	-1,1
string_atom:	its	-1,1

fixnum:
fixnum_atom:	its	-1,1

flonum:
flonum_atom:	its	-1,1

random_atom:	its	-1,1

bignum_atom:	its	-1,1

list_atom:	its	-1,1

" constants needed by lisp_error_

go_atom:	its	-1,1
return_atom:
	its	-1,1
pdlframe_atom:
	its	-1,1
alphalessp_atom:
	its	-1,1

"constants needed by the evaluator

lambda:	its	-1,1
label:	its	-1,1
funarg:	its	-1,1
function_properties:
subr:	its	-1,1
lsubr:	its	-1,1
fsubr:	its	-1,1
expr:	its	-1,1
fexpr:	its	-1,1
array:
array_atom:
	its	-1,1,n		atom "array"
macro:	its	-1,1
autoload:	its	-1,1
quotient:	its	-1,1		fail-act name
qarg:	its	-1,1
qsetarg:	its	-1,1
qlstfy:	its	-1,1

evalframe_atom:
	its	-1,1	atom evalframe, which is another name for pdlframe (used by that fcn)

arrayindex: its	-1,1

setq_atom: its	-1,1

question_mark:
	its	-1,1	the atom ?, used by array access error handler


nouuo_flag: its	-1,1

noret_flag: its	-1,1


space_names_atom:			"value=(list markedpdl unmarkedpdl)
quote_macro:			"used as indicator for quote macro char
	its	-1,1

semicolon_macro:			"indicator for semicolon macro char + value = (status features)
	its	-1,1


runtime_atom:
	its	-1,1
time_atom:
	its	-1,1

comment_atom:
	its	-1,1
declare_atom:
	its	-1,1

" atomic constants needed by the new I/O system.


close:	its	-1,1
deletef:	its	-1,1
filepos:	its	-1,1
mergef:	its	-1,1
open:	its	-1,1
cruft1:	its	-1,1		used to be openi
evalhook_atom:  its  -1,1		used to be openo, now is 'evalhook (nothing to do with I/O)
outfile:	its	-1,1
rename:	its	-1,1
stream:	its	-1,1

"  atomic constants needed by status   &   sstatus for  new  I/O  system


dsk_atom:	its	-1,1

crunit_atom:	its	-1,1

args:	its	-1,1

	" atomic constants needed by lisp_error_

err_atom:	its	-1,1

eval_atom: its	-1,1

apply_atom: its	-1,1

princ_atom: its	-1,1

prin1:
prin1_atom: its	-1,1

print_atom: its	-1,1
MINUS:	its	-1,1
SLASH:	its	-1,1
defun:	its	-1,1
expr_hash:its	-1,1
vertical_bar_macro:
	its 	-1,1
eof_atom: its	-1,1
progn_atom:
	its	-1,1

end_atomic_constants:


toplevel:	its	-1,1
divov_flag:	its -1,1			(status divov) - t means handle divide overflow
plus_status:
	its	-1,1


status_gctwa:	its	-1,1
tty_input_chan:
	its	-1,1

tty_output_chan:
	its	-1,1

property_list_of_nil:
	its	-1,1
cleanup_list:
	its	-1,1
end_gc_area: null
"
	use	tx
"	join	/text/tx		put this unchanging stuff in the text section

number_gc_ptrs:
	zero	0,(end_gc_area-garbage_collected_ptrs)/2
number_of_atomic_constants:
	zero	0,(end_atomic_constants-atomic_constants)/2

subsys_recurse_save_size:
	zero	0,end_gc_area-lisp_static_vars_




" table of names of atomic constants above.
" in acc format. There is no maximum name length, the names
" are simply concatenated.

atomic_constants_names:
	acc	/nil/
	acc	/t/
	acc	/external/
	acc	/^d/
	acc	/^q/
	acc	/^r/
	acc	/^w/
	acc	/internal_interrupt_0_atom_/
	acc	/^b/			user_intr_array(1)
	acc	/internal_interrupt_2_atom_/
	acc	/alarmclock/
	acc	/errset/
	acc	/undf-fnctn/
	acc	/unbnd-vrbl/
	acc	/wrng-type-arg/
	acc	/unseen-go-tag/
	acc	/wrng-no-args/
	acc	/gc-lossage/
	acc	/fail-act/
	acc	/pdl-overflow/
	acc	/nil/
	acc	/internal_interrupt_14_atom_/
	acc	/internal_interrupt_15_atom_/
	acc	/internal_interrupt_16_atom_/
	acc	/nil/
	acc	/internal_autoload_atom_/
	acc	/*rset-trap/
	acc	/gc-daemon/
	acc	/*/
	acc	/+/
	acc	/base/
	acc	/ibase/
	acc	/readtable/
	acc	/*nopoint/
	acc	/tty/
	acc	/errlist/
	acc	/infile/
	acc	/instack/
	acc	/outfiles/
	acc	/zunderflow/
	acc	/uread/
	acc	/uwrite/
	acc	/old-io-defaults/
	acc	/^a/
	acc	/*rset/
	acc	/prinlevel/
	acc	/prinlength/
	acc	/value/
	acc	/read-eof/
	acc	/splicing/
	acc	/$p/
	acc	/quote/
	acc	/symbol/
	acc	/string/
	acc	/fixnum/
	acc	/flonum/
	acc	/random/
	acc	/bignum/
	acc	/list/
	acc	/go/
	acc	/return/
	acc	/pdlframe/
	acc	/alphalessp/
	acc	/lambda/
	acc	/label/
	acc	/funarg/
	acc	/subr/
	acc	/lsubr/
	acc	/fsubr/
	acc	/expr/
	acc	/fexpr/
	acc	/array/
	acc	/macro/
	acc	/autoload/
	acc	/quotient/
	acc	/arg/
	acc	/setarg/
	acc	/listify/
	acc	/evalframe/
	acc	/arrayindex/
	acc	/setq/
	acc	/?/
	acc	/nouuo/		nouuo flag = global var
	acc	/noret/		noret flag = global var
	acc	/internal_quote_macro_/
	acc	/internal_semicolon_macro_/
	acc	/runtime/
	acc	/time/
	acc	/comment/	atom for comment subr to return
	acc	/declare/ atom for declare subr to return.
	acc	/close/
	acc	/deletef/
	acc	/filepos/
	acc	/mergef/
	acc	/open/
	acc	/cruft1../	used to be openi
	acc	/evalhook/	used to be openo...
	acc	/outfile/
	acc	/rename/
	acc	/stream/
	acc	/dsk/
	acc	/crunit/
	acc	/args/
	acc	/err/
	acc	/eval/
	acc	/apply/
	acc	/princ/
	acc	/prin1/
	acc	/print/
	acc	/-/
	acc	|/|
	acc	/defun/
	acc	/expr-hash/
	acc	/internal_vertical_bar_macro_/
	acc	/eof/
	acc	/progn/
	end
