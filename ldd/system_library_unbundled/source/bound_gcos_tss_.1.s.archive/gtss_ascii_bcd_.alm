"  ***********************************************************
"  *                                                         *
"  *                                                         *
"  * Copyright, (C) Honeywell Information Systems Inc., 1981 *
"  *                                                         *
"  *                                                         *
"  ***********************************************************

"	ASCII to BCD conversion routine.
"
"	dcl	gtss_ascii_bcd_ entry(ptr,FB,ptr);
"	Parm 1:	Pointer to (input) ascii string.
"	Parm 2:	Length of (input) string.
"	Parm 3:	Pointer to (output) bcd string.
"		(caller must assure output string long enough).
"
"	dcl	gtss_print_line_bcd_ entry(ptr,FB,ptr,FB);
"	MORE
"
"	dcl	gtss_ascii_bcd_check_ entry(ptr,FB,ptr,FB);
"	MORE
"
"
"	Author:	Dave Ward		05/22/78
"			(from gcos_cv_ascii_gebcd_)
"
	name	gtss_ascii_bcd_
	entry	gtss_ascii_bcd_
	entry	gtss_ascii_bcd_check_
	entry	gtss_printline_bcd_

gtss_ascii_bcd_:
	eppbp	ap|2,*		bp -> input data
	eppbp	bp|0,*
	lda	ap|4,*		a = length
	eppbb	ap|6,*		bb -> output buffer
	eppbb	bb|0,*

join:	mvt	(pr,rl),(pr,rl)
	desc9a	bp|0,al
	desc6a	bb|0,al
	arg	table

	short_return


gtss_ascii_bcd_check_:
	eppbp	ap|2,*
	eppbp	bp|0,*		bp -> input data
	lda	ap|4,*		a = length
	eppbb	ap|6,*		bb -> output buffer
	eppbb	bb|0,*

	tct	(pr,rl)
	desc9a	bp|0,al
	arg	tctable
	arg	bb|0

	stz	ap|8,*
	ttn	join		no illegal chars found
	lda	bb|0
	ana	-1,dl
	ada	1,dl		move count from last good to first bad char
	sta	ap|8,*		store error code
	short_return

gtss_printline_bcd_:
	save
	eppbp	ap|2,*		bp -> input data
	eppbp	bp|0,*
	lxl7	ap|4,*
	eppbb	ap|6,*		bb -> output buffer
	eppbb	bb|0,*
	stz	tally		zero output character count

	scm	(pr,rl),(du),mask(016)
	desc9a	bp|0,x7
	arg	0
	arg	tally

	ldq	tally
	tze	ttf
	mvt	(pr,rl),(pr,rl)
	desc9a	bp|0,ql
	desc6a	bb|0,ql
	arg	table
	ttn	ret

ttf:	stz	count

pull:	mlr	(pr,ql),(pr),fill(0)
	desc9a	bp|0,1
	desc9a	temp,4

	lda	temp
	cmpa	=o012000,du
	tnz	not_nl
	aos	count
	adq	1,dl
	cmpq	ap|4,*
	tmi	pull
put_nl:	lda	count
	als	24
	ana	=o007700,du
	ora	=o770000,du
	sta	NL
	eppbp	NL
	tra	put_cc

not_nl:	szn	count
	tnz	put_nl
	cmpa	=o014000,du
	tnz	ret
	eppbp	NP
put_cc:	ldq	tally
	mlr	(pr),(pr,ql)
	desc6a	bp|0,2
	desc6a	bb|0,2
	adq	2,dl

ret:	stq	ap|8,*
	return

table:	oct	020020020020
	oct	020020020020
	oct	020020020020
	oct	020020020020
	oct	020020020020
	oct	020020020020
	oct	020020020020
	oct	020020020020
	oct	020077076013
	oct	053074032057
	oct	035055054060
	oct	073052033061
	oct	000001002003
	oct	004005006007
	oct	010011015056
	oct	036075016017
	oct	014021022023
	oct	024025026027
	oct	030031041042
	oct	043044045046
	oct	047050051062
	oct	063064065066
	oct	067070071012
	oct	037034040072
	oct	057021022023
	oct	024025026027
	oct	030031041042
	oct	043044045046
	oct	047050051062
	oct	063064065066
	oct	067070071012
	oct	040034020020

tctable:	dec	-1,-1,-1,-1,-1,-1,-1,-1
	dec	0,0,0,0,0,0,0,0
	dec	0,0,0,0,0,0,0,0
	dec	0,0,0,0,0,0,0
	vfd	9/0,9/0,9/1,9/1

NP:	oct	772000000000
	temp	NL,temp,tally,count
	end
