/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(89-04-23,Zimmerman), approve(89-04-23,MCR8060),
     audit(89-05-05,RWaters), install(89-05-24,MR12.3-1048):
     MCR8060 cmcs_initiate_ctl_.pl1 Reformatted code to new Cobol standard.
                                                   END HISTORY COMMENTS */


/* Modified on 03/16/82 by FCH, [5.2-1], eliminate need for copy switch by using temp seg, BUG530 */
/* Modified since Version 5.0 */




/* format: style3 */
cmcs_initiate_ctl_:
     proc (a_name, a_ptr, a_code);

dcl	a_name		char (*),
	a_ptr		ptr,			/* used for xxx_ctl_ptr */
	a_code		fixed bin (35);

dcl	my_name		char (18) init ("cmcs_initiate_ctl_");

dcl	initiate_dir	char (168);		/* either WD or from user_ctl */

dcl	x_ptr		ptr;			/* global initiate ptr */

dcl	ioa_		entry options (variable);


dcl	get_wdir_		entry () returns (char (168));
dcl	hcs_$initiate	entry (char (*), char (*), char (*), fixed bin (1), fixed bin (2), ptr, fixed bin (35));

/*[5.2-1]*/
dcl	get_temp_segment_	entry (char (*), ptr, fixed bin (35));
						/*[5.2-1]*/
dcl	release_temp_segments_
			entry (char (*), (*) ptr, fixed bin (35));
						/*[5.2-1]*/
dcl	hcs_$status_minf	entry (char (*), char (*), fixed bin (1), fixed bin (2), fixed bin (24), fixed bin (35));
						/*[5.2-1]*/
dcl	code		fixed bin (35),
	TYPE		fixed bin (2),
	BIT_COUNT		fixed bin (24);

/*[5.2-1]*/
dcl	ptr_array		(1) ptr static int;		/*[5.2-1]*/
dcl	SEG		bit (9 * sys_info$max_seg_size) based;

dcl	error_table_$action_not_performed
			fixed bin (35) external;
dcl	sys_info$max_seg_size
			fixed bin (18) static ext;
dcl	null		builtin;			/*  */
%include cmcs_cobol_mcs_dcls;
%include cmcs_user_ctl;

/*  */

	a_ptr = null ();

	call cobol_mcs_$get_user_ctl_exists_sw (user_ctl_exists_sw);

	if ^user_ctl_exists_sw
	then do;

		initiate_dir = get_wdir_ ();
		call initiate (a_name);

		a_ptr = x_ptr;
		return;

	     end;

	user_ctl_ptr = external_user_ctl_ptr;
	initiate_dir = user_ctl.cmcs_dir;

	call initiate ("cmcs_queue_ctl.control");
	user_ctl.queue_ctl_ptr = x_ptr;		/* whether null or not */

	call initiate ("cmcs_station_ctl.control");
	user_ctl.station_ctl_ptr = x_ptr;		/* whether null or not */

	call initiate ("cmcs_system_ctl.control");
	user_ctl.system_ctl_ptr = x_ptr;		/* whether null or not */

	call initiate ("cmcs_terminal_ctl.control");
	user_ctl.terminal_ctl_ptr = x_ptr;		/* whether null or not */

	call initiate ("cmcs_tree_ctl.control");

/*[5.2-1]*/
	call get_temp_segment_ ("cmcs_initiate_ctl_", ptr_array (1), code);

/*[5.2-1]*/
	if code ^= 0				/*[5.2-1]*/
	then do;
		a_code = code;			/*[5.2-1]*/
		return;				/*[5.2-1]*/
	     end;

/*[5.2-1]*/
	call hcs_$status_minf (initiate_dir, "cmcs_tree_ctl.control", 1, TYPE, BIT_COUNT, code);

/*[5.2-1]*/
	if code ^= 0				/*[5.2-1]*/
	then do;
		a_code = code;			/*[5.2-1]*/
		return;				/*[5.2-1]*/
	     end;

/*[5.2-1]*/
	user_ctl.tree_ctl_ptr = ptr_array (1);		/*[5.2-1]*/
	substr (user_ctl.tree_ctl_ptr -> SEG, 1, BIT_COUNT) = substr (x_ptr -> SEG, 1);

	call initiate ("cmcs_wait_ctl.control");
	user_ctl.wait_ctl_ptr = x_ptr;		/* whether null or not */

	a_code = 0;

	return;

release:
     entry (a_code);

/*[5.2-1]*/
	call release_temp_segments_ ("cmcs_initiate_ctl_", ptr_array, code);

/*[5.2-1]*/
	if code ^= 0
	then a_code = code;				/*[5.2-1]*/
	return;

/* */

initiate:
     proc (x_name);

dcl	x_name		char (*);

	call hcs_$initiate (initiate_dir, x_name, "", 0, 0, x_ptr, a_code);
	if x_ptr = null ()
	then do;

		call ioa_ ("""^a"" not not available. If needed, correct and retry.", x_name);
		return;

	     end;

	a_code = 0;				/* ptr is good, make code good too */
	return;

     end /* initiate */;

/* */

     end /* cmcs_initiate_ctl_ */;
