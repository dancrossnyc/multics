/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


pps_put_chars: proc (iocb_ptr_arg, buff_ptr_arg, n_bytes_arg, code);



/*		PARAMETERS		*/


dcl  buff_ptr_arg ptr;
dcl  code fixed bin (35);
dcl  iocb_ptr_arg ptr;
dcl  n_bytes_arg fixed bin;


/*		ENTRY CONSTANTS		*/


dcl  pps_print entry (ptr, char (*), ptr, entry, fixed bin (35));
dcl  prt_conv_ entry (ptr, fixed bin, ptr, fixed bin, ptr);


/*		EXTERNAL DATA		*/




/*		BUILTIN FUNCTIONS		*/


dcl  addr builtin;
dcl  substr builtin;


/*		AUTOMATIC STORAGE		*/


dcl  buff_ptr ptr;
dcl  iocb_ptr ptr;
dcl  n_bytes fixed bin;
dcl  out_buf char (160);
dcl  out_len fixed bin;
dcl  out_ptr ptr;


/*		CONSTANTS			*/




/*		INTERNAL STATIC		*/




/*		BASED VARIABLES		*/


dcl  string char (256) based;

/*

   Initialize data.

*/


	iocb_ptr = iocb_ptr_arg -> iocb.actual_iocb_ptr;
	buff_ptr = buff_ptr_arg;
	n_bytes = n_bytes_arg;
	code = 0;
	ppsab_ptr = iocb.attach_data_ptr;
	pcip = addr (ppsab.pps_pci);


/*

   Now process the text supplied.

*/


	out_ptr = addr (out_buf);
	do while (n_bytes>0);
	     call prt_conv_ (buff_ptr, n_bytes, out_ptr, out_len, pcip);
	     if out_len > 0 then
		call pps_print (ppsab.target_iocb_ptr, substr (out_buf, 1, out_len), ppsab.table_ptr, ppsab.mvt_entry, code);
	     if code ^= 0 then return;
	end;


	return;

%include iocbv;

%include pps_attach_block;


     end pps_put_chars;
