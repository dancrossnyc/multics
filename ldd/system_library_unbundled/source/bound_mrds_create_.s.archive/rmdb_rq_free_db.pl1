/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        *********************************************************** */

rmdb_rq_free_db: proc (sci_ptr, info_ptr);


/****^  HISTORY COMMENTS:
  1) change(85-12-04,Spitzer), approve(85-12-04,MCR7311),
     audit(86-09-02,Blair), install(86-10-16,MR12.0-1187):
     If we have a xreference file, destroy it. Terminate the model properly.
                                                   END HISTORY COMMENTS */


/*
   .		       BEGIN_DESCRIPTION
   This  routine  implements  the  relesae_db  request  within   the
   restructure_mrds_db  subsystem.  It  checks  to  be sure that the
   request has been called with 0 arguments and that a database  has
   already been readied so that it makes sense to try to release it.
   .		       END_DESCRIPTION

   Known Bugs:

   Other Problems:






   .                       HISTORY
   82-03-29 Davids: Written

   82-05-25 Davids: modified to set rmdb_ctl.db_model_ptr to null at
   .                the same time that the absolute_db_path  is  set
   .                to "".

   83-05-24 Davids: Changed the argument list to rmdb_free_db to include
   a pointer to the saved_res_version.
*/

   /* PARAMETERS */
	dcl     sci_ptr		 ptr;		/* (input) pointer to the subsystem control info structure */
						/*         need to be able to pass it to the ssu routines */
	dcl     info_ptr		 ptr;		/* (input) pointer to the rmdb_ctl structure which is both */
						/*         read and written. */

/* EXTERNAL STATIC */

	dcl     error_table_$action_not_performed fixed bin (35) external static;
	dcl     error_table_$badcall	 fixed bin (35) external static;

/* ENTRIES */

	dcl     mdbm_util_$xref_destroy entry (ptr, char(*), char(*), char(*), fixed bin(35));
	dcl     rmdb_free_db	 entry (char (168), ptr, char (500), fixed bin (35));
	dcl     ssu_$abort_line	 entry options (variable);
	dcl     ssu_$arg_count	 entry (ptr, fixed bin);
	dcl     terminate_file_	 entry (ptr, fixed bin(24), bit(*), fixed bin(35));

/* INTERNAL AUTOMATIC */

	dcl     code		 fixed bin (35);	/* standard error code */
	dcl     error_message	 char (500);	/* error message returned from rmdb_free_db */
	dcl     nargs		 fixed bin;	/* number of arguments the request was called with */

/* BUILTINS */

	dcl     null		 builtin;

/* INCLUDES */
%page;
%include mrds_rmdb_ctl;
%include terminate_file;
%page;
/*
   Init the value of the rmdb_ctl pointer
*/

	rmdb_ctl_ptr = info_ptr;





/*
   Get the number of arguments that the request was called with - if
   its not 0 its an error.

   Note that ssu_$abort_line does not return.
*/

	call ssu_$arg_count (sci_ptr, nargs);
	if nargs ^= 0
	then call ssu_$abort_line (sci_ptr, error_table_$badcall,
		"^/The free_db (fdb) request is called without any arguments");





/*
   If the absolute_db_path element of the rmdb_ctl structure is null
   it  means  that  no  database  is  currently readied - this is an
   error.
*/

	if rmdb_ctl.absolute_db_path = ""
	then call ssu_$abort_line (sci_ptr, error_table_$action_not_performed,
		"^/There is no currently readied database to be freed");

/*
   the only errors that are now possible will occur within the  call
   to rmdb_free_db.
*/

	call rmdb_free_db (rmdb_ctl.absolute_db_path, rmdb_ctl.saved_res_version_ptr, error_message, code);
	if code ^= 0
	then call ssu_$abort_line (sci_ptr, code, error_message);


/*
   Get rid of the xreference file.
*/

	if rmdb_ctl.crossref_file_info.iocb_ptr ^= null
	then call mdbm_util_$xref_destroy (rmdb_ctl.crossref_file_info.iocb_ptr, rmdb_ctl.temp_dir_path,
	     rmdb_ctl.crossref_file_info.name, (""), (0));


/*
   By changing rmdb_ctl.absolute_db_path  to  ""  we  indicate  that
   there is no currently readied db.
*/

	rmdb_ctl.absolute_db_path = "";

	if rmdb_ctl.db_model_ptr ^= null
	then call terminate_file_ (rmdb_ctl.db_model_ptr, 0, TERM_FILE_TERM, (0));

	return;

     end rmdb_rq_free_db;
