/* ***********************************************************
   *                                                         *
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
   *                                                         *
   *                                                         *
   *********************************************************** */

/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

mrds_rst_meter: proc (rsc_ptr, module_name, in_out, msg);

/*  PARAMETERS */

/* rsc_ptr     	pointer		pointer to rsc control segment
   module_name	char (*)		name of module making call
   in_out		bit (1)		On = entering module  OFF = exiting module
   msg 		char (*)		message to be associated with metering entry.

*/

/* HISTORY:  Initially written by R. D. Lackey October, 1978 */

	dcl     (addr, fixed, rel)	 builtin;
	dcl     module_name		 char (*);	/* (INPUT) Name of module making metering call */
	dcl     in_out		 bit (1);		/* (INPUT) On = entering   OFF = exiting */
	dcl     msg		 char (*);	/* (INPUT) Message to be associated with metering entry */

	dcl     cpu_time_and_paging_	 entry (fixed bin, fixed bin (71), fixed bin);
	dcl     ioa_$ioa_switch	 entry options (variable);
	dcl     vtime		 fixed bin (71);
	dcl     pf		 fixed bin;
	dcl     pd_pf		 fixed bin;
	dcl     enter_exit		 char (5);
	dcl     sys_info$max_seg_size	 ext fixed bin (35);


	if in_out = "1"b then enter_exit = "IN:";
	else enter_exit = " OUT:";

	if rsc.meter_sw then do;			/* Meter */
		call cpu_time_and_paging_ (pf, vtime, pd_pf);

		call ioa_$ioa_switch (rsc.trace_metering_iocb_ptr,
		     "^5a^2x^32a^1x^12d^2x^8d^2x^8d^2x^a",
		     enter_exit, module_name, vtime, pf, pd_pf, msg);
	     end;

	else call ioa_$ioa_switch (rsc.trace_metering_iocb_ptr,
		"^5a^2x^a;", enter_exit, module_name);

	return;
%page;
%include mrds_rst_rsc;

     end mrds_rst_meter;
