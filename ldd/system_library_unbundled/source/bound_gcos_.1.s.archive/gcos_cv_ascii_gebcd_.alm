" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
"
"
"	T R A N S L A T E  A S C I I  T O  B C D
"
"
"  This routine takes four parameters. Parameter 1 is a pointer
"  to a string of ASCII characters. Parameter 2 is the length
"  of that string. Parameter 3 is a pointer to the receiving
"  field for the translated BCD output. Parameter 4 is a count 
"  of the number of BCD characters placed in the receiving field.
"  For the main entry, this is always equal to parameter 2.  This
"  return argument is only used so that existing programs that
"  call this entry need not be changed immediately.  When  all routines
"  that call this entry have been changed to ignore this parameter,
"  this entry can be changed to stop returning it. 
"
"  For the gcos_cv_printline_gebcd_ entry, the count returned in parameter
"  4 may not equal the count of ASCII characters input.
"  Certain special ASCII characters are recognized and converted
"  to printer control information. Newline characters are converted
"  to octal 7701 (skip one line). If n contiguous newlines are found,
"  then a control sequence of 77n is produced (skip n lines). If new
"  page characters are encountered, they are converted to 7720 octal  
"  (skip to head of form). 
"
"  For the gcos_cv_ascii_gebcd_check_ entry, parameter 4 is the character
"  number of the first character in the input string that could not be
"  converted to bcd.  If no such charcters are found, parameter 4 is zero.
"
"
"	WRITTEN BY DICK SNYDER AUGUST 12,1970
"	Modified by Dick Snyder 10/31/72 to add $ incode processing
"	MODIFIED BY T. CASEY JUNE 1974 
"	REWRITTEN BY D. KAYDEN DECEMBER 1974
"	MODIFIED BY R.H. MORRISON  5/19/76
"
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
	name	gcos_cv_ascii_gebcd_
	entry	gcos_cv_ascii_gebcd_
	entry	gcos_cv_ascii_gebcd_check_
	entry	gcos_cv_printline_gebcd_

gcos_cv_ascii_gebcd_:
	eppbp	ap|2,*		bp -> input data
	eppbp	bp|0,*
	lda	ap|4,*		a = length
	sta	ap|8,*		store output string length
	eppbb	ap|6,*		bb -> output buffer
	eppbb	bb|0,*

join:	mvt	(pr,rl),(pr,rl)
	desc9a	bp|0,al
	desc6a	bb|0,al
	arg	table

	short_return


gcos_cv_ascii_gebcd_check_:
	eppbp	ap|2,*
	eppbp	bp|0,*		bp -> input data
	lda	ap|4,*		a = length
	eppbb	ap|6,*		bb -> output buffer
	eppbb	bb|0,*

	tct	(pr,rl)
	desc9a	bp|0,al
	arg	tctable
	arg	bb|0

	stz	ap|8,*
	ttn	join		no illegal chars found
	lda	bb|0
	ana	-1,dl
	ada	1,dl		move count from last good to first bad char
	sta	ap|8,*		store error code
	short_return

gcos_cv_printline_gebcd_:
	save
	eppbp	ap|2,*		bp -> input data
	eppbp	bp|0,*
	lxl7	ap|4,*
	eppbb	ap|6,*		bb -> output buffer
	eppbb	bb|0,*
	stz	tally		zero output character count

	scm	(pr,rl),(du),mask(016)
	desc9a	bp|0,x7
	arg	0
	arg	tally

	ldq	tally
	tze	ttf
	mvt	(pr,rl),(pr,rl)
	desc9a	bp|0,ql
	desc6a	bb|0,ql
	arg	table
	ttn	ret

ttf:	stz	count

pull:	mlr	(pr,ql),(pr),fill(0)
	desc9a	bp|0,1
	desc9a	temp,4

	lda	temp
	cmpa	=o012000,du
	tnz	not_nl
	aos	count
	adq	1,dl
	cmpq	ap|4,*
	tmi	pull
put_nl:	lda	count
	als	24
	ana	=o007700,du
	ora	=o770000,du
	sta	NL
	eppbp	NL
	tra	put_cc

not_nl:	szn	count
	tnz	put_nl
	cmpa	=o014000,du
	tnz	ret
	eppbp	NP
put_cc:	ldq	tally
	mlr	(pr),(pr,ql)
	desc6a	bp|0,2
	desc6a	bb|0,2
	adq	2,dl

ret:	stq	ap|8,*
	return

table:	oct	020020020020
	oct	020020020020
	oct	020020020020
	oct	020020020020
	oct	020020020020
	oct	020020020020
	oct	020020020020
	oct	020020020020
	oct	020077076013
	oct	053074032057
	oct	035055054060
	oct	073052033061
	oct	000001002003
	oct	004005006007
	oct	010011015056
	oct	036075016017
	oct	014021022023
	oct	024025026027
	oct	030031041042
	oct	043044045046
	oct	047050051062
	oct	063064065066
	oct	067070071012
	oct	037034040072
	oct	057021022023
	oct	024025026027
	oct	030031041042
	oct	043044045046
	oct	047050051062
	oct	063064065066
	oct	067070071012
	oct	040034020020

tctable:	dec	-1,-1,-1,-1,-1,-1,-1,-1
	dec	0,0,0,0,0,0,0,0
	dec	0,0,0,0,0,0,0,0
	dec	0,0,0,0,0,0,0
	vfd	9/0,9/0,9/1,9/1

NP:	oct	772000000000
	temp	NL,temp,tally,count
	end
