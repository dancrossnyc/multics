/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


/* *****************************************************************************************
   ******************************************************************************************
   *
   *
   *	P R O C E S S  $ U P D A T E  C A R D
   *
   *  The $ UPDATE control card is used when supplying alter input to a compiler
   *  or assembler. The nondollar filecode will be set to A*.
   *  In addition, bit 9 of the psw and gcos_ext_stat_$save_data.nondollar are turned on.
   *
   *
   *	WRITTEN BY DICK SNYDER JANUARY 11,1971
   *     MODIFIED BY T.CASEY DECEMBER 1972, DECEMBER 1973
   *     MODIFIED BY D. KAYDEN APRIL 1974
   *	Modified by M. R. Jordan, August 1977
   *
   *******************************************************************************************
   ***************************************************************************************** */




gcos_cc_update_: proc (card, indx, gcos_record);

dcl  addr builtin;
dcl  card char (80);						/* ascii card image */
dcl  gcos_record char (*);						/* bcd card image overlayed by char(*) variable */
dcl  gcos_write_$record ext entry (char (*), char (*), bit (8));
dcl  gcos_write_to_er_ entry options (variable);
dcl  indx fixed bin(24);						/* position in cardtable - not used here */
dcl  substr builtin;


	if ^gcos_ext_stat_$save_data.activ then do;			/* ignore if not defining an activity */
	     call gcos_write_to_er_ (
		"Warning:  The following $ UPDATE card is outside an activity definition.  It is being ignored.^/^a^2x^a",
		gcos_ext_stat_$card_num, card);
	     return;
	end;

	gcos_ext_stat_$save_data.nondollar = "1"b;			/* tell gein to expect nondollar cards */

	gcos_ext_stat_$nondollar = "a*";		/* and to put them on A* */



	substr (save_data.psw, 10, 1) = "1"b;	/* set update bit in psw */
	call gcos_write_$record ("a*", gcos_record, (8)"0"b); /* put card on A* */
	return;

%include gcos_ext_stat_;


     end gcos_cc_update_;
