/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

/* APL External Function to write characters to a terminal (or absout) without having them
   translated by the APL DIM.

   Written 800227 by PG
*/

/* format: style3 */
apl_raw_output_:
     procedure (operators_argument);

/* automatic */

declare	code		fixed bin (35),		/* Multics status code */
	right		ptr,			/* pointer to right data array */
	right_vb		ptr;			/* pointer to right value bead */

/* based */

declare	right_arg_string	char (data_elements) based (right);

/* builtins */

declare	null		builtin;

/* entries */

declare	iox_$put_chars	entry (ptr, ptr, fixed bin (21), fixed bin (35));

/* external static */

declare	apl_static_$user_tty
			ptr external static;

/* include files */

%include apl_external_function;

/* program */

/* Usage in APL:
		)MFN RAW_OUTPUT APL_RAW_OUTPUT_
		RAW_OUTPUT 'ANYTHING'		*/

	right_vb = operators_argument.operands (2).value; /* Get ptr to right argument */
	if ^right_vb -> value_bead.value		/* Make sure argument is a value bead */
	then go to domain_error_right;

	if ^right_vb -> value_bead.character_value	/* Make sure argument is character */
	then go to domain_error_right;

	right = right_vb -> value_bead.data_pointer;	/* Point to data array */
	data_elements = right_vb -> value_bead.total_data_elements;

/* Pop right arg off value stack, if necessary. */

	if operators_argument.operands (2).on_stack
	then ws_info.value_stack_ptr = right_vb;

	call iox_$put_chars (apl_static_$user_tty, right, data_elements, code);
	operators_argument.result = null;
	return;

domain_error_right:
	operators_argument.where_error = operators_argument.where_error - 1;
	operators_argument.error_code = apl_error_table_$domain;
	return;

     end apl_raw_output_;
