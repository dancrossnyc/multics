/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


canon_for_volume_label_: proc (resource_type, label_in, label_out, volume_format, code);

/* This procedure performs canonicalization of labels for volumes (tapes,
   disks, etc.)  It can perform a standard, site-settable pre-canonicalization
   of a user-typed label; or it will perform this and additionally add a
   canonicalization of a chosen type to satisfy some standard for internal
   labeling (e.g., create a six-character ANSI tape label from the given
   name.)  These operations are performed in this subroutine rather than
   in the respective I/O modules so that RCP can perform the exact same
   translations when it is checking magnetic labels for authentication.

   Written 04/11/79 by C. D. Tavares */

dcl (resource_type char (*),
     label_in char (*),
     label_out char (*),
     volume_format fixed bin,
     code fixed bin (35)) parameter;

dcl  buffer char (32) varying,
     buffer_nonvar char (32) nonvarying;

dcl (NUMERICS char (10) initial ("0123456789"),
     UPPERCASE char (26) initial ("ABCDEFGHIJKLMNOPQRSTUVWXYZ"),
     LOWERCASE char (26) initial ("abcdefghijklmnopqrstuvwxyz")) static options (constant);

dcl (error_table_$smallarg,
     error_table_$bad_label) ext fixed bin (35) static;

dcl (rtrim, ltrim, substr, length, verify, copy) builtin;

dcl  resource_info_$canonicalize_name entry (char (*), char (*), char (*), fixed bin (35));

%include rcp_volume_formats;
%include rcp_resource_types;


/* The first operation is to do the site-specifiable pre-canonicalization
   as defined in the RTDT. */

	call resource_info_$canonicalize_name (resource_type, label_in, buffer_nonvar, code);
	if code ^= 0 then return;

	buffer = rtrim (buffer_nonvar);
	if length (buffer) = 0 then do;
	     code = error_table_$bad_label;
	     return;
	end;

/* Now we handle extra desired canonicalization */

	if resource_type = VOLUME_TYPE (TAPE_VOL_VTYPEX) then do;

	     if volume_format = Volume_ibm_tape
	     | volume_format = Volume_ansi_tape then do;

		if length (buffer) > 6 then buffer = substr (buffer, 1, 6);

		if verify (buffer, NUMERICS) = 0 then
		     if length (buffer) < 6 then
			buffer = copy ("0", 6 - length (buffer)) || buffer;
						/* pad with leading zeroes */
		     else;
		else buffer = translate (buffer, UPPERCASE, LOWERCASE);
	     end;

	     else if volume_format = Volume_gcos_tape then do;

		if length (buffer) > 5 then buffer = substr (buffer, 1, 5);

		if verify (buffer, NUMERICS) = 0 then
		     if length (buffer) < 5 then
			buffer = copy ("0", 5 - length (buffer)) || buffer;
						/* pad with leading zeroes */
		     else;
		else buffer = translate (buffer, UPPERCASE, LOWERCASE);
	     end;

	     else if volume_format = Volume_multics_tape then; /* none necessary */
	     else if volume_format = 0 then;		/* none requested */

	     else do;
		code = error_table_$bad_label;
		return;
	     end;
	end;

	else do;
	     code = error_table_$bad_label;
	     return;
	end;

	if length (label_out) < length (buffer) then do;
	     code = error_table_$smallarg;
	     return;
	end;

	label_out = buffer;
	code = 0;
	return;
     end canon_for_volume_label_;
