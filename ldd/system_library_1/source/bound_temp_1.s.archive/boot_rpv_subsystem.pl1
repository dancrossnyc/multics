/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        *                                                         *
        *********************************************************** */
/* BOOT_RPV_SUBSYSTEM -- uses hc_load_mpc to load FW in the RPV MPC */
/*                       uses config_data_ and the slt to find the FW */
/*		     contract is to both print (bce_error) informative */
/*		     message on errors and return code */

/* format: style2 */

boot_rpv_subsystem:
     procedure (FWid, Code);

	declare FWid		 character (*);
	declare Code		 fixed bin (35);

	declare hc_load_mpc		 entry (char (8) aligned, ptr, fixed bin (18), char (*), fixed bin (35));
	declare slt_manager$get_seg_ptr
				 entry (char (32) aligned) returns (ptr);
          declare bce_error		 entry options (variable);

          declare slt$		 aligned external static;

	declare sys_boot_info$disk_mpc_chanid
				 char (8) aligned external static;
	declare sys_boot_info$disk_mpc_model_number
				 fixed bin external static;

	declare fw_seg_name		 char (32) aligned;
	declare fw_seg_ptr		 pointer;
	declare fw_seg_length	 fixed bin (18);
	declare x			 fixed bin;
	declare problem		 char (64);
	declare ME		 char (32) init ("boot_rpv_subsystem") int static options (constant);

/* format: off */
%page; %include slte;
%page; %include slt;

/* format: on */


	Code = 0;
	fw_seg_name = "fw." || FWid;

	fw_seg_ptr = slt_manager$get_seg_ptr (fw_seg_name);
	if fw_seg_ptr = null ()
	then do;
		call bce_error (0, "^a: No firmware available for model ^d MPC.", ME,
		     sys_boot_info$disk_mpc_model_number);
		Code = 1;
		return;
	     end;

	sltp = addr (slt$);
	sltep = addr (slt.seg (bin (baseno (fw_seg_ptr), 18)));
	fw_seg_length = divide (slte_uns.bit_count, 36, 24, 0) - 1;

	call hc_load_mpc (sys_boot_info$disk_mpc_chanid, fw_seg_ptr, fw_seg_length, problem, Code);

	if Code ^= 0
	then call bce_error (Code, "^a: ^a booting ^d disk MPC ^a.", ME, problem, sys_boot_info$disk_mpc_model_number,
		sys_boot_info$disk_mpc_chanid);
	return;
     end boot_rpv_subsystem;
