/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        *                                                         *
        *********************************************************** */


/****^  HISTORY COMMENTS:
  1) change(86-06-05,GJohnson), approve(86-06-05,MCR7387),
     audit(86-06-10,Martinson), install(86-07-11,MR12.0-1091):
     Correct error message documentation.
                                                   END HISTORY COMMENTS */


find_file_partition: proc;

/* Routine to cause the segment bootload_file_partition to be mapped onto
the file partition.  Written October 1983 by Keith Loepere. */

/* format: style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */

dcl  addr			        builtin;
dcl  bce_abs_seg$add	        entry (fixed bin (15));
dcl  bootload_file_partition$	        external;
dcl  bootload_fs_$init	        entry (bit (1) aligned, fixed bin (19), fixed bin (35));
dcl  code			        fixed bin (35);
dcl  error_table_$nopart	        fixed bin (35) ext static;
dcl  first_record		        fixed bin (20);
dcl  map_onto_disk		        entry (fixed bin, fixed bin (20), fixed bin, ptr, bit (1) aligned);
dcl  me			        char (19) init ("find_file_partition") static options (constant);
dcl  1 my_label		        aligned like label;
dcl  n_records		        fixed bin;
dcl  px			        fixed bin;
dcl  pvt$root_pvtx		        fixed bin external static;
dcl  read_disk_label	        entry (fixed bin, ptr, char (*), fixed bin (35));
dcl  segno		        builtin;
dcl  syserr		        entry options (variable);
dcl  syserr$error_code	        entry options (variable);
%page;
	code = 0;
	labelp = addr (my_label);
	call read_disk_label (pvt$root_pvtx, labelp, "", code);
	if code = 0 then do px = 1 to label.nparts;
	     if label.parts (px).part = "file" then do;
		first_record = label.parts (px).frec;
		n_records = label.parts (px).nrec;
		go to found;
	     end;
	end;
	code = error_table_$nopart;
found:
	if code = 0 then
	     if n_records < 30 | n_records > 255 then call syserr (CRASH, "^a: file partition is ^d records, not between 30 and 255.", me, n_records);
	if code ^= 0
	then call syserr$error_code (CRASH, code, "^a: No file partition defined on RPV.", me);

	call map_onto_disk (pvt$root_pvtx, first_record, n_records, addr (bootload_file_partition$), "1"b);
	call bce_abs_seg$add (segno (addr (bootload_file_partition$)));

	call bootload_fs_$init ("0"b, 1024 * n_records, code); /* prepare to use */
	if code ^= 0 then do;
	     call syserr$error_code (ANNOUNCE, code, "^a: Initializing file partition.", me);
	     call bootload_fs_$init ("1"b, 1024 * n_records, code);
						/* goodbye old files */
	end;
	return;
%include disk_pack;
%include fs_vol_label;
%include syserr_constants;
%page;
/* BEGIN MESSAGE DOCUMENTATION

   Message:
   find_file_partition: file partition is NNN records, not between 30 and 255.

   S: $crash

   T: $init

   M: The partition holding the bce file system is of an invalid size.  The 
   rpv was either mal-formatted or damaged.

   A: The rpv will need to be rebuilt.

   Message:
   find_file_partition: No file partition defined on RPV.

   S: $crash

   T: $init

   M: The partition used to hold the bce file system is missing from the
   rpv.  Suspect damage of the rpv.

   A: The rpv will need to be rebuilt.

   Message:
   find_file_partition: Initting file partition.

   S: $info

   T: $init

   M: The bce file system was found to be damaged or never initialized.
   Any previous contents are discarded.

   END MESSAGE DOCUMENTATION */

     end find_file_partition;
