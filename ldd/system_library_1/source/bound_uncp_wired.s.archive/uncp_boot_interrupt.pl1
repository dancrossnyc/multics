/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1988                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */



/****^  HISTORY COMMENTS:
  1) change(88-06-14,Berno), approve(88-07-13,MCR7928),
     audit(88-06-14,Parisek), install(88-07-19,MR12.2-1061):
     Created to implement the DSA uncp multiplexer gateway interface.
                                                   END HISTORY COMMENTS */

/* format: style4,delnl,insnl,ifthenstmt,indnoniterend */
uncp_boot_interrupt:
     proc (a_fnp_no);

/* This procedure is called by uncp when it receives an interrupt from an FNP
   *  whose "bootloading" flag is on. This program interprets the bootload status
   *  and wakes up the process that initiated the bootload to inform it of the results
   *  of the bootload.
   *
   *  Written 5/19/76 by Robert S. Coren
   *  Modified 79 June 8 by Art Beattie to handle new config_messages.
   *  Modified 08/26/80 by Robert Coren to ignore spurious bootload interrupts.


   *  THE FOLLOWING HISTORY COMMENTS REFER TO THE CHANGES ASSOCIATED WITH
   *  THE uncp MULTIPLEXER INTERFACE FOR THE DSA GATEWAY.  EXTRACTED FROM
   *  dn355_boot_interrupt.pl1.

   *  Reported in February 1982 the modifications for the DN7100.fd.
   *  Reported the ????mises???? of MR10.1 in June 1983.
   *  Reported in August 1985 the modifications for MR11.0.
   *  Reported in January 1987 - MR12.0.
   *  Modified in MR12.0 by JLB to clean things up.


   Date of the last modification 06/22/87.
*/


/* PARAMETER */

dcl  a_fnp_no fixed bin;


/* AUTOMATIC */

dcl  fnp_no fixed bin;
dcl  fnp_tag char (1);
dcl  igcode fixed bin (35);
dcl  stat_ptr ptr;
dcl  event_message fixed bin (71);			/* event message used to report result */


/* ENTRIES */

dcl  syserr options (variable);
dcl  pxss$ring_0_wakeup entry (bit (36) aligned, fixed bin (71), fixed bin (71), fixed bin (35));


/* BASED */

dcl  1 ev_msg based (addr (event_message)),
       2 fnp_number fixed bin (17) unal,
       2 fnp_state fixed bin (17) unal,
       2 pad bit (36);

dcl  ev_msg_char char (8) based (addr (event_message));	/* ajouter pour dn 7100   */

/* INTERNAL STATIC CONSTANTS */

dcl  READ_ERROR fixed bin int static options (constant) init (2);
dcl  FNP_UP fixed bin int static options (constant) init (4);
dcl  FNP_DOWN fixed bin int static options (constant) init (2);


/* BUILTINS */

dcl  addr builtin;


/* INCLUDE FILES */

%include dn355_messages;

%include dn355_data;

%include dn355_mailbox;

%include sys_log_constants;

	fnp_no = a_fnp_no;
	infop = addr (dn355_data$);
	fnpp = addr (datanet_info.per_datanet (fnp_no));
	fnp_tag = fnp_info.fnp_tag;
	ev_msg.fnp_number = fnp_no;

	call syserr (SL_LOG_SILENT, "uncp_boot_interrupt: FNP ^a started.", fnp_tag);

	ev_msg.fnp_state = FNP_UP;
	fnp_info.running = "1"b;

/* now tell process that started bootload */

	fnp_info.bootloading = "0"b;			/* done now */
	call pxss$ring_0_wakeup (fnp_info.boot_process_id, fnp_info.boot_ev_chan, event_message, igcode);

	return;

request_init:
     entry (a_fnp_no);

/*  This entry is called if request-init comes from the UNCP
   after a UNCP load completed.
*/

	fnp_no = a_fnp_no;
	infop = addr (dn355_data$);

	ev_msg_char = "inituncp";
	call pxss$ring_0_wakeup (datanet_info.per_datanet (fnp_no).boot_process_id,
	     datanet_info.per_datanet (fnp_no).boot_ev_chan, event_message, igcode);

	return;






system_fault:
     entry (a_fnp_no);
	fnp_no = a_fnp_no;
	infop = addr (dn355_data$);
	fnpp = addr (datanet_info.per_datanet (fnp_no));
	call syserr (SL_LOG_SILENT, "uncp_boot_interrupt: FNP ^a System Fault Interrupt Level 1.", fnp_tag);

	mbxp = fnp_info.mbx_pt;

	fnp_tag = fnp_info.fnp_tag;

	ev_msg.fnp_number = fnp_no;

	stat_ptr = addr (datanet_mbx.crash_data);	/* this is where bootload status goes */
	call syserr (SL_LOG_SILENT, "uncp_boot_interrupt: FNP ^a not loaded.", fnp_tag);
	ev_msg.fnp_state = FNP_DOWN;
	return;




/* Begin message documentation invisible

   This message documentation is considered "invisible" and does NOT have the
   normal uppercase type so that it will not get inserted into the released
   to customer message documentation, as this module only implements the 
   uncp DSA gateway interface and is not a product for distribution.


   Message:
   Invalid bootload interrupt for FNP X, status N

   S:	$info

   T:	when bootloading an FNP

   M:	The FNP responded to the bootload attempt with an interrupt, but the high-order
   bit of the reported status was not on. N is the reported status (in octal).

   A:	$inform


   Message:
   Unrecognized bootload status N for FNP X

   S:	$info

   T:	when bootloading an FNP

   M:	The status reported by an FNP in response to a bootload attempt was not one of the ones
   recognized. N is the reported status (in octal).

   A:	$inform



   Message:
   FNP X loaded successfully

   S:	$info

   T:	when bootloading an FNP

   M:	The FNP bootload has completed successfully.

   A:	This message is for informational purposes only.


   Message:
   checksum error in core image for FNP X

   S:	$info

   T:	when bootloading an FNP

   M:	The core image received for loading in the FNP had a checksum error.

   A:	Try to load the FNP again. If the error recurs, either the DIA hardware
   is failing, or the core image in the Multics hierarchy is damaged. In the
   latter case, the core image must be rebound.


   Message:
   error reading core image for FNP X

   S:	$info

   T:	when bootloading an FNP

   M:	An I/O error was detected by the FNP bootload program while attempting to read
   the core image into FNP memory. A hardware failure of either the DIA or the Multics IOM is indicated.

   A:	Try the FNP load again. If it fails again, consult Field Engineering.


   Message:
   configuration error reported by bootloading program for FNP X

   S:	$info

   T:	when bootloading an FNP

   M:	The FNP bootload program, gicb, found an inconsistency in the FNP configuration.

   A:	$inform


   Message:
   configuration error reported by FNP X: DETAILS

   S:	$info

   T:	when bootloading an FNP

   M:	The FNP initialization program detected an error or inconsistency in
   the FNP configuration.  DETAILS is a more specific description of the error.

   A:	If possible, correct the error, either by updating the CDT to reflect the
   actual configuration, or recabling the FNP. If the error cannot be corrected
   or is not understood, inform the systems programming staff.


   Message:
   FNP X not loaded.

   S:	$info

   T:	when bootloading an FNP

   M:	The attempted bootload was not successful. This message is always preceded by one of the
   above error messages.

   A:	This message is for informational purposes only.

   End message documentation invisible */

     end /* uncp_boot_interrupt */;
