/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


debug_check: proc (a_name, a_sw);

/*	Last Modified and Reason

   2/14/76 by S. Webber to convert to using PARM cards
   01/22/76 by TVV for NSS
   10/08/74 by Bernard Greenberg for AST name table
   3/15/74 by A. Kobziar to remove references to tty_buf$ in salvager case
   10/01/73 by RE Mullen to convert to v2pl1
   12/27/73 by R.B.Snyder to make copy_card entry set values in sst etc. from debg card
   84-01-08 BIM to use sst and tc_data definitions, and to handle multiple
	      cards, and not to store numerics in whd.
   10/19/84 by Keith Loepere so that dirw works (one more time). */

dcl  a_name char (4) aligned;
dcl  a_sw bit (1);

declare sst$ast_track bit (1) aligned external static;
declare sst$double_write fixed bin (35) external static;
declare sst$dirlock_writebehind fixed bin (35) external static;

declare tc_data$time_out_severity fixed bin (35) external static;
declare tc_data$notify_check fixed bin (35) external static;

dcl  addwordno builtin;
dcl  bin builtin;
dcl  null builtin;

dcl  i fixed bin;
dcl  searching bit (1) aligned;
dcl  next_opt fixed bin;

dcl  config_$find entry (character (4) aligned, pointer);
dcl  config_$find_parm entry (character (4) aligned, pointer);
dcl  syserr entry options (variable);

dcl 1 wired_hardcore_data$debug_check_options external,
    2 count fixed bin,
    2 opt (14) char (4) aligned;

%include config_parm_card;



	a_sw = "0"b;
	do i = 1 to wired_hardcore_data$debug_check_options.count;
	     if wired_hardcore_data$debug_check_options.opt (i) = a_name then do;
		a_sw = "1"b;
		return;
	     end;
	end;
	return;

copy_card: entry;

	tc_data$time_out_severity = 3;			/* default timeout severity is 3 */
	tc_data$notify_check = 0;			/* don't perform notify checking as default */

	next_opt = 0;
	searching = "1"b;
	parm_cardp = null ();
	do while (searching);			/* search until no more parm cards */
	     call config_$find (PARM_CARD_WORD, parm_cardp);
	     if parm_cardp = null then searching = "0"b;	/* no more */
	     else do;
		do i = 1 to parm_card.n_fields;
		     if parm_card.type_word.field_type (i)
			= CONFIG_STRING_TYPE
			& (i = parm_card.n_fields | (i < parm_card.n_fields & parm_card.field_type (i + 1) = CONFIG_STRING_TYPE))
			then do; /* no value following */
			next_opt = next_opt + 1;
			if next_opt > 14 then call syserr (ANNOUNCE, "debug_check: too many parameters on parm cards");
			wired_hardcore_data$debug_check_options.opt (next_opt) = parm_card.options (i);
		     end;
		end;
	     end;
	end;

	wired_hardcore_data$debug_check_options.count = next_opt;

	parm_ptr = null ();
	call config_$find_parm ("dblw", parm_ptr);
	if parm_ptr ^= null ()
	then sst$double_write = numeric_parm.value;

	parm_ptr = null ();
	call config_$find_parm ("ntfy", parm_ptr);
	if parm_ptr ^= null ()
	then do;
	     tc_data$time_out_severity = numeric_parm.value;
	     parm_ptr = addwordno (parm_ptr, 1);
	     tc_data$notify_check = numeric_parm.value;
	end;

	parm_ptr = null ();
	call config_$find_parm ("astk", parm_ptr);
	sst$ast_track = (parm_ptr ^= null ());

	parm_ptr = null ();
	call config_$find_parm ("dirw", parm_ptr);
	sst$dirlock_writebehind = bin ((parm_ptr ^= null ()), 1);

	return;

 

/* BEGIN MESSAGE DOCUMENTATION

   Message:
   debug_check: too many parameters on parm cards

   S:	$info

   T:	$init

   M:	A total of 14 options may be specified on PARM cards.
   This limit has been exceeded.
   Options after the 14th will be ignored.

   A:	Correct the configuration deck
   before the next bootload.


   END MESSAGE DOCUMENTATION */

%include config_deck;
%include syserr_constants;

     end debug_check;
