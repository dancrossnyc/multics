/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


shutdown_file_system: procedure ();

/* format: style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */

/* Procedure to effect storage system shutdown. The principal goal
   herein is to assign device addresses to all unwritten pages, write them out,
   and update all vtoces of active segments.  We operate on the assumption
   that AST threading is not to be trusted, and some ASTEs may be in the process of
   having their page tables filled.

   For the new Storage System, Bernard Greenberg, 10/20/75
   For demountable volumes, BSG 03/26/76
   For new flags in flagbox, 9/30/76 by Noel I. Morris
   For shutdown with downed drives, BSG 02/26/77
   For shutdown which doesn't give up, W. Olin Sibert, 05/18/81
   For set_procs_required, J. Bongiovanni, October 1981
   To remove Page Multilevel, C. Hornig, December 1981.
   Copied from shutdown, release stack_0's, eliminate FSDCT, J. Bongiovanni, March 1982
   For deactivate_for_demount, J. Bongiovanni, June 1982
   To eliminate RLV parasites, J. Bongioanni, August 1982
   For new ocdcm_$drain_io call... -E. A. Ranzenbach, 830620
   For pmut$bce K. Loepere 8/83
   */



dcl  sst$total_locks_set	        fixed bin external static;
dcl  sst$root_pvtx		        fixed bin external static;
dcl  sst$			        external static;
dcl  pvt$n_entries		        fixed bin external static;
dcl  pvt$root_pvtx		        fixed bin external static;
dcl  pvt$shutdown_state	        fixed bin external static;

dcl  deactivate_for_demount$shutdown  entry (fixed bin (35));
dcl  demount_pv		        entry (fixed bin, fixed bin (35));
dcl  fsout_vol		        entry (fixed bin, fixed bin);
dcl  grab_aste$release_prewithdraw    entry (ptr);
dcl  ocdcm_$drain_io	        entry ();
dcl  pc$flush		        ext entry;
dcl  pmut$bce		        entry;
dcl  syserr		        entry options (variable);
dcl  syserr$error_code	        entry options (variable);


dcl  code			        fixed bin (35);
dcl  drives_inop		        bit (1);
dcl  pvtx			        fixed bin;
dcl  stack_0_x		        fixed bin;

dcl  addr			        builtin;
dcl  ptr			        builtin;
dcl  unspec		        builtin;
%page;
	drives_inop = "0"b;

	pvt_arrayp = addr (pvt$array);

	call fsout_vol (pvt$root_pvtx, 0);		/* Get the fact out */

	call pc$flush;				/* Now get pages for homeless data in core */


/*  Release all stack_0 segments so that demount_pv can deactivate them  */

	sdtp = addr (stack_0_data$);
	sdt.freep = "0"b;

	do stack_0_x = 1 to sdt.num_stacks;
	     sdtep = addr (sdt.stacks (stack_0_x));
	     if sdte.astep ^= "0"b then do;		/* May be retry of shutdown */
		call grab_aste$release_prewithdraw (ptr (addr (sst$), sdte.astep));
		unspec (sdte) = "0"b;
	     end;
	end;

/*  Deactivate all non-hardcore segments, and revert deciduous segments */

	call deactivate_for_demount$shutdown (code);
	if code ^= 0
	then call syserr (ANNOUNCE, "shutdown_file_system: Error deactivating. Quota may be bad.");


/*  Demount all volumes except the rpv */

	do pvtx = 1 to pvt$n_entries;
	     pvtep = addr (pvt_array (pvtx));
	     if pvte.storage_system & pvte.used
	     then pvte.being_demounted = ^pvte.device_inoperative;
						/* Prime demount_pv */
	end;
	do pvtx = 1 to pvt$n_entries;
	     pvtep = addr (pvt_array (pvtx));		/* make_addressable */
	     if ^pvte.rpv & pvte.being_demounted then do; /* RPV will be last */
		call demount_pv (pvtx, code);
		if code ^= 0 then call syserr$error_code (ANNOUNCE, code, "shutdown_file_system: from demount_pv on ^o", pvtx);
	     end;
	     drives_inop = drives_inop | pvte.device_inoperative;
	end;

	if sst$total_locks_set > 0 then do;
	     pvt$shutdown_state = 3;
	     call syserr (ANNOUNCE, "shutdown_file_system: ^d locks set", sst$total_locks_set);
	end;
	else pvt$shutdown_state = 4;

	if drives_inop then do;
	     call syserr (BEEP, "shutdown complete except for devices suspended.");
	     call pc$flush;
	     call ocdcm_$drain_io ();			/* make sure I/O completes...		*/

	     do while ("1"b);
		call pmut$bce;
	     end;
	end;



	if pvt_array (sst$root_pvtx).used then		/* Maybe this is an esd retry */
	     call demount_pv (sst$root_pvtx, (0));	/* No error meaningful */


	fgbxp = addr (flagbox$);			/* Get pointer to the flagbox. */
	fgbx.ssenb = "0"b;				/* Storage system no longer enabled. */
	fgbx.shut = "1"b;				/* Shutdown has been completed. */


	call pc$flush;				/* Drain out log I/O */

	call syserr (ANNOUNCE, "shutdown complete");

	call ocdcm_$drain_io ();			/* quies the console...		*/

	do while ("1"b);
	     call pmut$bce;
	end;

/* That's all, folks. */


%page; %include pvte;
%page; %include flagbox;
%page; %include stack_0_data;
%page; %include syserr_constants;
%page;

/* BEGIN MESSAGE DOCUMENTATION

   Message:
   shutdown_file_system: from demount_pv on PVTX ERROR_MESSAGE

   S: $info

   T: System shutdown

   M: A problem was encountered in shutting down the
   disk whose PVT index is PVTX. Most likely, other messages
   identifying the pack, drive, and/or problem have
   preceded this message.

   A: $note
   If other messages have preceded this message, take
   remedial action as necessary. Attempt emergency shutdown after
   readying appropriate disk drives, if this is the problem.

   Message:
   shutdown_file_system: Error deactivating. Quota may be bad.

   S: $info

   T: System shutdown

   M: The attempt to deactivate all segments in the file system by a
   tree-walk of threaded ASTEs failed, likely due to inconsistent
   threading in the SST. The segments will be deactivated by a
   linear walk of the SST. Quota inconsistencies may be introduced by
   this. These can be corrected by a quota salvage of the hierarchy.

   A: At a convenient time, run a quota salvage of the hierarchy.

   Message:
   shutdown_file_system: NN locks set

   S: $info

   T: System shutdown

   M: Not all data base and directory locks were unlocked by
   the system before shutdown started. During emergency shutdown,
   this is to be expected. During normal shutdown,
   this may be symptomatic of software problems.

   A: If this message occurs during normal shutdown, note for
   system programming staff.

   Message:
   shutdown complete except for devices suspended.

   S: $beep

   T: System shutdown

   M: Some disks could not be shut down due to hardware problems.
   Messages have occurred identifying these drives and the problems.
   All other drives have been shut down- their contents are not
   in main memory or on the paging device. The RPV has
   not been shut down either, so that the system will perform
   some salvaging when it comes up.

   A: Attempt to ready those drives that are not ready. When this
   has been done, retry ESD. If the drives have been made accessible,
   ESD will succeed with a normal "shutdown complete" message. If
   they cannot be made ready, the paging device (if any) is unflushed.
   See the description of the "warning: paging device unflushed" message.

   Message:
   shutdown complete

   S: $info

   T: System shutdown

   M: System shutdown, emergency or regular, has completed successfully.
   The system will return to bce.  If any problem arises
   such that the system does not return to bce, or other error
   condition, the storage system will probably not be affected.
   If such problem arises, attempt ESD. The message "system already
   shut down" will be printed if there is no problem.
   When the "shutdown complete" message is issued, there is no more
   Multics information in main memory.


   END MESSAGE DOCUMENTATION */

     end;
