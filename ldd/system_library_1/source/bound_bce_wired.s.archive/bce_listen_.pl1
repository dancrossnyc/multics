/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        *                                                         *
        *********************************************************** */
/* bce_listen_ -- listener for BCE command level and subsystems */
/* BIM '82*/
/* Modified 8/83 by K. Loepere for new bce switches */
/* Modified 9/83 by K. Loepere for initial command */
/* format: style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */

bce_listen_:
     procedure (Info_ptr, initial_command);

declare  bce_data$get_line		  ext variable entry (ptr, ptr, fixed bin, fixed bin, fixed bin (35));
declare  bce_execute_command_		  entry (ptr, char (*), ptr, fixed bin (35));
declare  bce_ready$nnl		  entry (char (*));
declare  com_err_			  entry options (variable);
declare  command_processor_$subsys_execute_line entry (char (*), ptr, entry, ptr, char (*), fixed bin (35));
declare  error_table_$bad_command_name    fixed bin (35) ext;
declare  wired_hardcore_data$abort_request bit (1) aligned external;

declare  code			  fixed bin (35);
declare  n_read			  fixed bin;
declare  request_line		  char (136);
declare  request_line_read		  char (n_read) based (addr (request_line));
declare  Info_ptr			  pointer;
declare  initial_command		  char (*);

declare  request_abort_		  condition;
declare  sub_request_abort_		  condition;

declare  (addr, length, null, rtrim)	  builtin;
%include bce_subsystem_info_;
%page;

	ss_info_ptr = Info_ptr;
	ss_info.abort_label = new_command;
	request_line = initial_command;
	n_read = length (rtrim (request_line));
	on request_abort_ go to new_command;
	on sub_request_abort_ go to new_command;
	do while ("1"b);
	     if request_line_read ^= "" then do;
		call command_processor_$subsys_execute_line (ss_info.name, ss_info_ptr, bce_execute_command_, null (), request_line_read, code);
		if code ^= 0 then
		     if code = error_table_$bad_command_name then call com_err_ (0, "bce", "Unrecognizable request.  Type lr for a list of requests.");
		     else if code = 100 then;
		     else call com_err_ (code, "bce_listen_: ");
	     end;
new_command:   wired_hardcore_data$abort_request = "0"b;  /* everything running has finished */
	     call bce_ready$nnl (ss_info.name);
	     call bce_data$get_line (addr (bce_data$get_line), addr (request_line), length (request_line), n_read, code);
	end;
	return;
     end;
