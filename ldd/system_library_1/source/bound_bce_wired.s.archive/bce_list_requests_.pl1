/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        *                                                         *
        *********************************************************** */
/* bce_list_requests_.pl1 -- Benson Margulies for bce environment */
/* Modified the last possible day of 1983 by Keith Loepere for multics 
requests. */
/* format: style2 */

bce_list_requests_:
     procedure (Info_ptr);

	declare Info_ptr		 pointer;
	declare bce_map_over_requests_ entry (entry, ptr, ptr);
	declare ioa_		 entry () options (variable);
	declare abort_label		 label static;
	declare sub_request_abort_	 condition;

	declare (addr, null, pointer)	 builtin;

	call ioa_ ("List of requests:^/");
	abort_label = abort;
	call bce_map_over_requests_ (PRINT, null (), Info_ptr -> ss_info.request_table_ptr);
abort:	return;

PRINT:
     procedure (Request_data_ptr, Info_ptr);

	declare Request_data_ptr	 pointer;
	declare Info_ptr		 pointer;
	declare info_ptr		 pointer;
	declare info_length		 fixed bin (21);
	declare info_string		 char (info_length) based (info_ptr);
	declare NULL_STRING		 char (0) int static options (constant) init ("");
	declare nx		 fixed bin;

	declare 1 bce_flags		 aligned based (addr (rq_data.flags)),
		2 system_flags	 bit (15) unal,
		2 valid_at_early	 bit (1) unal,
		2 valid_at_boot	 bit (1) unal,
		2 valid_at_crash	 bit (1) unal;

	rq_data_ptr = Request_data_ptr;

	if rq_data.dont_list then return;

	if sys_info$collection_1_phase = BCE_CRASH_INITIALIZATION then
	     if ^ (bce_flags.valid_at_boot | bce_flags.valid_at_crash) then return;
	     else;
	else if sys_info$collection_1_phase = CRASH_INITIALIZATION then
	     if ^ bce_flags.valid_at_crash then return;
	     else;
	else if sys_info$collection_1_phase = EARLY_INITIALIZATION then
	     if ^ bce_flags.valid_at_early then return;
	     else;
	else if sys_info$collection_1_phase = BOOT_INITIALIZATION then
	     if ^ bce_flags.valid_at_boot then return;
	     else;

	request_name_list_ptr = pointer (rq_data_ptr, rq_data.namelist_loc);

	info_ptr = pointer (rq_data_ptr, rq_data.info_string.loc);
	info_length = rq_data.info_string.lth;
	if info_length = 0
	then info_ptr = addr (NULL_STRING);

	on sub_request_abort_ go to abort_label;
	call ioa_ ("^a^21t^a", request_name_list.name (1), info_string);
	do nx = 2 to request_name_list.n_names;
	     call ioa_ ("  ^a", request_name_list.name (nx));
	end;

	return;
     end PRINT;
%include bce_subsystem_info_;
%include collection_1_phases;
%include "_ssu_request_table";
%include "_ssu_request_data";
     end bce_list_requests_;
