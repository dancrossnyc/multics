/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        *                                                         *
        *********************************************************** */

/* format: style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */

bce_check_abort: proc;

/* Check to see if the operator wants us to abort (unsolicited request key).
If so, ask operator (at console) to what extent he wants to abort.
Keith Loepere, November 1983. */


/****^  HISTORY COMMENTS:
  1) change(86-04-22,Farley), approve(86-07-18,MCR7439),
     audit(86-08-18,Fawcett), install(86-10-20,MR12.0-1189):
     Added check of ss_info.flags.request_handling_opr_aborts to see if
     handling required.
                                                   END HISTORY COMMENTS */


dcl  Abort		        char (7) static options (constant) init ("Abort? ");
dcl  Unknown_response	        char (18) static options (constant) init ("Unknown response.
");
dcl  bce_data$console_get_line        entry (ptr, ptr, fixed bin, fixed bin, fixed bin (35)) variable ext;
dcl  bce_data$console_put_chars       entry (ptr, ptr, fixed bin, fixed bin (35)) variable ext;
dcl  bce_data$subsys_info_ptr	        ptr external;
dcl  buffer		        char (16);
dcl  buffer_read		        char (n_read) based (addr (buffer));
dcl  n_read		        fixed bin;
dcl  (addr, length)		        builtin;
dcl  request_abort_		        condition;
dcl  sub_request_abort_	        condition;
dcl  sys_boot_info$at_bce_cl	        bit (1) aligned external;
dcl  wired_hardcore_data$abort_request bit (1) aligned external;

	if ^wired_hardcore_data$abort_request then return;
	if ^sys_boot_info$at_bce_cl then return;
	if bce_data$subsys_info_ptr -> ss_info.flags.request_handling_opr_aborts then return;
query:	wired_hardcore_data$abort_request = "0"b;
	call bce_data$console_put_chars (addr (bce_data$console_put_chars), addr (Abort), length (Abort), (0));
	call bce_data$console_get_line (addr (bce_data$console_get_line), addr (buffer), length (buffer), n_read, (0));
	n_read = n_read - 1;			/* no nl */
	if buffer_read = "n" | buffer_read = "no" then return; /* false alarm */
	else if buffer_read = "y" | buffer_read = "yes" then signal sub_request_abort_;
	else if buffer_read = "request" | buffer_read = "req" | buffer_read = "r" then signal sub_request_abort_;
	else if buffer_read = "command" | buffer_read = "com" | buffer_read = "c" then signal request_abort_;
	else if buffer_read = "all" | buffer_read = "a" then go to bce_data$subsys_info_ptr -> ss_info.abort_label;
	else do;
	     call bce_data$console_put_chars (addr (bce_data$console_put_chars), addr (Unknown_response), length (Unknown_response), (0));
	     go to query;
	end;
%page; %include bce_subsystem_info_;
     end;
