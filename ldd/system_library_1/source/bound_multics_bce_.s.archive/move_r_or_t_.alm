" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Bull Inc., 1987                *
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************

" This procedure is called by numeric_to_ascii_ to move a float dec(59)
" value with rounding or truncation to specified number of digits
"
" Usage:
"		dcl move_r_or_t_ entry(float dec(59),float dec(59),fixed bin)
"		call move_r_or_t_(target,source,precision)
"
" precision = 0	straight move
"	  < 0	truncate
"	  > 0	round
"
" This routine runs in the stack frame of its caller.
"
" Initial Version: 29 January 1974 by Barry L. Wolman
"
	segdef	move_r_or_t_
"
	equ	target,2
	equ	source,4
	equ	precision,6
"
move_r_or_t_:
	epp1	ap|target,*	get target ptr
	epp2	ap|source,*	get source ptr
	eax0	0		assume rounding
	lda	ap|precision,*	get desired precision
	tze	dont_care		easy if zero
	tpl	3,ic		skip if rounding
	eax0	1		set truncate
	neg	0		and get abs value
	cmpa	59,dl		easy if greater than 59 wanted
	tpl	dont_care
	ada	2,dl		get length for descriptor
	xec	mvn,0		move with round|truncate
	desc9fl	2|0,61		source
	desc9fl	1|0,al		target
	mvn	(pr,rl),(pr)	move back to full length
	desc9fl	1|0,al
	desc9fl	1|0,61
	short_return
"
dont_care:
	mvn	(pr),(pr)
	desc9fl	2|0,61
	desc9fl	1|0,61
	short_return
"
mvn:	mvn	(pr),(pr,rl),round
	mvn	(pr),(pr,rl)
	end
