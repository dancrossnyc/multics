/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        *                                                         *
        *********************************************************** */

/* format: style2,idind30 */

/**** Guts of the "message" request, which allows the operator to 
      edit the MOTD. */

/**** Written 1984-11-01 BIM */


/****^  HISTORY COMMENTS:
  1) change(87-02-08,GDixon), approve(87-05-25,MCR7680),
     audit(87-05-06,Parisek), install(87-08-04,MR12.1-1055):
     Fix coding standard violations.
                                                   END HISTORY COMMENTS */


sc_edit_motd_:
     procedure;
	dcl     code		        fixed bin (35);
	dcl     1 my_qedx_info	        aligned,
		2 header		        aligned like qedx_info.header,
		2 buffers		        aligned like qedx_info.buffers;
						/* just one */
	dcl     motd_pathname	        char (168); /* Path name for message of the day */
	dcl     motd_entryname	        char (32) int static init ("message_of_the_day") options (constant);
	dcl     saved_command_processor       entry variable;

	dcl     cu_$get_command_processor     entry (entry);
	dcl     cu_$set_command_processor     entry (entry);
	dcl     pathname_		        entry (character (*), character (*)) returns (character (168));
	dcl     qedx_		        entry (ptr, fixed bin (35));
	dcl     ssu_$print_message	        entry () options (variable);

	dcl     (addr, unspec)	        builtin;

	dcl     cleanup		        condition;

	call cu_$get_command_processor (saved_command_processor);
	on cleanup call cu_$set_command_processor (saved_command_processor);
	call cu_$set_command_processor (trap_editor_execute);
						/* Trap "E" requests. */
	motd_pathname = pathname_ (sc_stat_$sysdir, motd_entryname);
	unspec (my_qedx_info) = "0"b;
	qedx_info_ptr = addr (my_qedx_info);
	qedx_info.version = QEDX_INFO_VERSION_1;
	qedx_info.editor_name = "message";
	qedx_info.flags.no_rw_path = "1"b;
	qedx_info.flags.query_if_modified = "1"b;
	qedx_info.n_buffers = 1;
	qedx_info.buffers (1).buffer_name = "0";
	qedx_info.buffers (1).buffer_pathname = motd_pathname;
	qedx_info.buffers (1).flags.locked_pathname = "1"b;
	qedx_info.buffers (1).flags.default_read_ok = "1"b;
	qedx_info.buffers (1).flags.default_write_ok = "1"b;
	call qedx_ (qedx_info_ptr, code);

	call cu_$set_command_processor (saved_command_processor);
	return;					/* Done. */

trap_editor_execute:
     procedure;

	call ssu_$print_message (sc_stat_$admin_sci_ptr, 0, """e"" request not permitted.");

     end trap_editor_execute;

%include qedx_info;

%include sc_stat_;

     end sc_edit_motd_;
