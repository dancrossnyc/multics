" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Bull Inc., 1987                *
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************

"	i ** j for integer i and j
"		ldq	i
"		epp1	j
"		epp2	work
"		tsp3	entry
"
"	Modified 770412 by PG to fix 1602 (indicators not reset before rpd)
"	Modified 840123 by HH to work in both BFP and HFP modes.
"
	segdef	integer_power_integer_
"
	equ	i,0
"
integer_power_integer_:
	lda	1|0		get j
	stq	2|i
	cmpq	0,dl		is i = 0
	tze	test
	cmpa	0,dl		is j = 0
	tze	unity		j = 0 => answer = 1
	tmi	clrt		j < 0, test i
	tsx1	clrt+1		test i for -1
	cmpa	36,dl		check for exponent too bit
	tpl	bigexp		too big, unless abs(i) = 1 or 0
	sba	1,dl
	tze	done		j = i, answer = i
	als	10		shift tally into position for rpdx: C(X0)0,7
	eax0	5,al		set rpdx to terminate on all overflows or carry
	eax1	i
	eax2	35
	lls	36
	teo	1,ic		clear exponent overflow indicator
	tov	1,ic		clear overflow indicator
	odd
	rpdx	0,0		repeat until overflow, carry, or tally runout
	mpf	2|0,1
	lls	0,2
	trc	err3
	lrl	36		result to q register
done:	adq	0,dl		set indicators
	tra	3|0
"
err3:	lda	1|0		get j, if j even, ans is o377...76
	ldq	maxno
	cana	1,dl		if i is +, ans is o377...76
	tze	txtp1		if j is odd & i is (-1), ans is o400...02
	szn	2|i
	tpl	txtp1
	lcq	maxno
txtp1:	stq	2|i		err, save value to return
	ldq	60,dl
txtp2:	tsx0	<call_math_error_>|[call_math_error_]
	ldq	2|i
	tra	3|0
"
bigexp:	ldq	7,dl
bigexp1:	tsx0	<call_math_error_>|[call_math_error_]
	ldq	maxno
	tra	3|0
"
err1:	stz	2|i		0 ** 0
	ldq	1,dl
	tra	txtp2
"
unity:	ldq	1,dl
	tra	3|0
"
clear:	ldq	0,dl		return 0
	tra	3|0
"
clrt:	eax1	clear
	cmpq	1,dl		j < 0, if abs(i) > 1, ans = 0
	tze	unity
	cmpq	minus1
	tnz	0,1
	cana	1,dl		i = -1, ans = 1 if j even
	tze	unity
	lcq	1,dl
	tra	done
"
test:	cmpa	0,dl		i = 0, if j = 0 error
	tze	err1
	tpl	clear
	ldq	2,dl
	tra	bigexp1
"
maxno:	oct	377777777776	avoid "noise" word
minus1:	dec	-1
	end
