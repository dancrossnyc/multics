/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        *                                                         *
        *********************************************************** */
bce_query_af: proc (P_ss_info_ptr);

/* Version of query and response active functions for bce.  
Keith Loepere, January 1984. */

/* format: style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */

dcl  P_ss_info_ptr		        ptr parameter;
dcl  active_fnc_err_	        entry options (variable);
dcl  active_function	        bit (1) aligned;	/* as opposed to command usage */
dcl  af_return		        char (af_return_len) based (af_return_ptr) var; /* return for active function */
dcl  af_return_len		        fixed bin (21);
dcl  af_return_ptr		        ptr;
dcl  arg			        char (arg_len) based (arg_ptr); /* command line arg */
dcl  arg_count		        fixed bin;
dcl  arg_len		        fixed bin (21);
dcl  arg_ptr		        ptr;
dcl  bce_query		        entry options (variable);
dcl  bce_query$yes_no	        entry options (variable);
dcl  code			        fixed bin (35);
dcl  com_err_		        entry options (variable);
dcl  cu_$af_return_arg_rel	        entry (fixed bin, ptr, fixed bin (21), fixed bin (35), ptr);
dcl  cu_$arg_ptr_rel	        entry (fixed bin, ptr, fixed bin (21), fixed bin (35), ptr);
dcl  error		        variable entry options (variable);
dcl  ioa_			        entry options (variable);
dcl  me			        char (11);		/* program name */
dcl  must_be_yes_no		        bit (1) aligned;
dcl  requote_string_	        entry (char (*)) returns (char (*));
dcl  response		        char (256);
dcl  rtrim		        builtin;
dcl  yes_no		        bit (1);

	me = "query";
	must_be_yes_no = "1"b;
	go to join;

bce_response_af: entry (P_ss_info_ptr);

	me = "response";
	must_be_yes_no = "0"b;

join:
	ss_info_ptr = P_ss_info_ptr;
	arg_list_ptr = ss_info.arg_list_ptr;
	call cu_$af_return_arg_rel (arg_count, af_return_ptr, af_return_len, code, arg_list_ptr);
	active_function = (code = 0);
	if active_function then error = active_fnc_err_;
	else error = com_err_;

	if arg_count ^= 1 then do;
	     call error (0, me, "Usage is: ^a question", me);
	     return;
	end;

	call cu_$arg_ptr_rel (1, arg_ptr, arg_len, code, ss_info.arg_list_ptr);

	if must_be_yes_no then do;
	     call bce_query$yes_no (yes_no, "^a ", arg);
	     if yes_no then response = "true";
	     else response = "false";
	end;
	else call bce_query (response, "^a ", arg);

	if active_function then af_return = requote_string_ (rtrim (response));
	else call ioa_ (rtrim (response));
	return;
%page; %include bce_subsystem_info_;
     end;
