/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1985 *
        *                                                         *
        *********************************************************** */

/****^  HISTORY COMMENTS:
  1) change(85-07-12,Pozzo), approve(86-08-13,MCR7510),
     audit(86-08-13,EJSharpe), install(86-08-19,MR12.0-1120):
     Modified to initialize the variable local_bracket_mode.
     Change name and date are guesses.
                                                   END HISTORY COMMENTS */

/* format: style4,delnl,insnl,indattr,ifthen,dclind10 */
rcp_compute_bracket_mode:
     procedure (a_acs_path, a_requestor_info_ptr, a_resource_info_ptr, a_bracket_mode, a_rbs, a_error_code);

/*            This internal subroutine implements intraprocess access
   *	    computations (ring brackets) for RCP.
   *            Created 841030 by Maria M. Pozzo
   *
   *            If the ACS segment exists as found in a_acs_path, then get
   *            the ring brackets from the ACS segment and set access as follows:
   *                user validation in 0-r1 ---- REW
   *                user validation in 0-r2 ---- R
   *	    If the ACS segment does not exist, then this check is bypassed.
*/

/*                        ARGUMENT DATA                          */

dcl	a_requestor_info_ptr   ptr;			/* (I) Pointer to information about the real requestor of the RCP operation - not Initializer. */
dcl	a_resource_info_ptr	   ptr;			/* (I) Pointer to information about the resource being requested */
dcl	a_acs_path	   char (168);		/* (I) Pathname of the associated ACS segment */
dcl	a_bracket_mode	   bit (3);		/* (O) Resulting discretionary access mode of requestor to resource */
dcl	a_rbs		   (2) fixed bin (3);	/* (O) The ring brackets of the ACS segment if they exist. */
dcl	a_error_code	   fixed bin (35);		/* (O) Error code */


/*                      AUTOMATIC                    */

dcl	local_bracket_mode	   bit (3);		/* Internal bracket mode */

dcl	acs_path		   char (168);		/* ACS pathname */
dcl	registry_dir	   char (64);		/* Registry directory */

dcl	error_code	   fixed bin (35);		/* Error code */
dcl	user_level	   fixed bin (3);		/* Validation level of caller */
dcl	resource_ring_brackets (3) fixed bin (3);	/* Ring brackets of resource */


/*                      ENTRIES CALLED               */

dcl	hcs_$get_ring_brackets entry (char (*), char (*), (3) fixed bin (3), fixed bin (35));

/*                      ERROR ENTRIES                */

dcl	error_table_$resource_bad_access
			   fixed bin (35) ext static;

%page;

/*  Copy input arguments */

	acs_path = a_acs_path;
	requestor_info_ptr = a_requestor_info_ptr;
	resource_info_ptr = a_resource_info_ptr;

/* Initialize local variables and get set up */

	error_code = 0;
          local_bracket_mode = "000"b;
	user_level = requestor_info.validation_level;
	registry_dir = resource_info.registry_dir;

/*  Find out the ACS segment ring brackets. */

	call hcs_$get_ring_brackets (a_acs_path, "", resource_ring_brackets, error_code);
	if error_code ^= 0 then
	     goto MAIN_RETURN;
	a_rbs (1) = resource_ring_brackets (1);
	a_rbs (2) = resource_ring_brackets (2);

/*  See if we are in the read (R) bracket 0-r2 */

	if user_level <= resource_ring_brackets (2) then
	     local_bracket_mode = R_ACCESS;

/* See if we are in the executive/write bracket (EW) which also implies R bracket. */

	if user_level <= resource_ring_brackets (1) then
	     local_bracket_mode = local_bracket_mode | REW_ACCESS;

MAIN_RETURN:
	if local_bracket_mode = N_ACCESS then
	     error_code = error_table_$resource_bad_access;
	a_bracket_mode = local_bracket_mode;
	a_error_code = error_code;
	return;

%page;
%include access_mode_values;
%page;
%include rcp_requestor_info;
%page;
%include rcp_resource_info;

     end rcp_compute_bracket_mode;
