/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


rcp_auto_register_: proc (rsct, resource_name, group_id, code);


/*

   This procedure will register the specified resource for the specified user.  It is called
   when a volume must be automatically registered for a user.

   Initially coded 3/79 by Michael R. Jordan for MR7.0R

*/

/*		PARAMETERS		*/


dcl  code fixed bin (35);				/* Error code. */
dcl  group_id char (*);				/* Nmae of the user. */
dcl  resource_name char (*);				/* Name of the resource to be registered. */
dcl  rsct char (*);					/* Type of resource to register. */


/*		ENTRIES CALLED		*/


dcl  admin_gate_$syserr entry options (variable);
dcl  rcp_pointers_$com_seg entry () returns (ptr);
dcl  rcprm_find_resource_$auto_register entry (ptr, char (*), fixed bin (35));
dcl  resource_info_$defaults entry (char (*), char (*), ptr, fixed bin, fixed bin (35));


/*		ERROR CODES		*/


dcl  error_table_$action_not_performed fixed bin (35) ext;
dcl  error_table_$rcp_no_auto_reg fixed bin (35) ext;


/*		BUILTIN FUNCTIONS		*/


dcl  addr builtin;
dcl  size builtin;
dcl  string builtin;

%include rcp_com_seg;

%include resource_control_desc;

	code = 0;					/* No error, yet. */
	Resource_count = 1 ;			/* Just one resource to register. */

	begin;
dcl  garbage (size (resource_descriptions)) bit (36);

	     string (garbage) = "0"b;
	     resource_desc_ptr = addr (garbage);
	     resource_descriptions.version_no = resource_desc_version_1;
	     resource_descriptions.n_items = 1;
	     call resource_info_$defaults (rsct, "", resource_desc_ptr, 0, code);
	     if code ^= 0 then return;
	     if ^resource_descriptions.item (1).given.potential_attributes
	     | ^resource_descriptions.item (1).given.potential_aim_range
	     | ^resource_descriptions.item (1).given.charge_type
	     then do;
		code = error_table_$rcp_no_auto_reg;
		return;
	     end;
	     resource_descriptions.item (1).name = resource_name;
	     resource_descriptions.item (1).given.name = "1"b;
	     resource_descriptions.item (1).owner = group_id;
	     resource_descriptions.item (1).given.owner = "1"b;
	     call rcprm_find_resource_$auto_register (resource_desc_ptr, (rcp_pointers_$com_seg () -> rcs.acs_directory), code);
	     if code = error_table_$action_not_performed
	     then code = resource_descriptions.item (1).status_code;
	end;

	if code = 0
	then call admin_gate_$syserr (0, "RCP: ^a ^a registered and acquired to ^a.",
	     rsct, resource_name, group_id);

	return;

/* BEGIN MESSAGE DOCUMENTATION

   Message:
   RCP: RESOURCE_TYPE RESOURCE_NAME registered and acquired to USER.

   S:	$info

   T:	$run

   M:	The resource RESOURCE_NAME has been automatically registered and acquired to
   USER.  It is a resource of the type RESCOURCE_TYPE.

   A:	$ignore


   END MESSAGE DOCUMENTATION */


     end rcp_auto_register_;
