/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) BULL HN Information Systems Inc., 1992   *
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */



/****^  HISTORY COMMENTS:
  1) change(86-01-15,Fawcett), approve(86-04-11,MCR7383),
     audit(86-06-03,GWMay), install(86-07-17,MR12.0-1097):
     Add support for 512_WORD_IO devices.
  2) change(88-10-05,GWMay), approve(88-10-05,MCR8005), audit(88-10-12,Farley),
     install(88-10-17,MR12.2-1173):
     Changed to turn the inconsistent dumper bit map on in the disk label after
     a sucessful reload.
  3) change(92-08-24,Schroth), approve(92-10-15,MCR8265),
     audit(92-10-15,Zimmerman), install(92-10-21,MR12.5-1039):
     To correct the online PVID reported when a PVID mismatch occurs when
     reloading multiple volumes.  Add message documentation for PVID mismatch
     message.  phx21270
                                                   END HISTORY COMMENTS */


/* format: style1,ind2,^inddcls,ifthenstmt,dclind2,declareind2,ifthendo,ifthen*/

rldr_label_: proc;

/* This routine maintains the data base that will be the new label for the volume being reloaded. */
/* Written in antiquity by Dave Vinograd.					        */
/* Modified: 03/83 by GA Texada for multiple physical volume reloading.		        */

dcl code		     fixed bin (35);
dcl pvindex	     fixed bin;
dcl myname	     char (32) static init ("rldr_label_") options (constant);

dcl error_table_$bad_volid ext fixed bin (35);

dcl rldr_report_$error_output entry options (variable);
dcl iox_$position	     entry (ptr, fixed bin, fixed bin, fixed bin (35));
dcl iox_$get_chars	     entry (ptr, ptr, fixed bin, fixed bin, fixed bin (35));
dcl iox_$put_chars	     entry (ptr, ptr, fixed bin, fixed bin (35));

dcl (size, divide, clock) builtin;

/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 	*/


open: entry (rldr_datap, pvindex, code);

/* This entry positions to and reads the label from the physical volume.  It also cross checks
   to see if the correct physical volume has been mounted. */

    code = 0;
						/* position to sector */
    call iox_$position (rldr_data_.outputvol_iocbp (pvindex), 2, sector (LABEL_ADDR), code);
    if code ^= 0 then do;
        call rldr_report_$error_output (rldr_datap, code, myname, "Label position failed for pv ^a",
	   rldr_data_.pvname (pvindex));
        return;
      end;
						/* read label into temp seg */
    call iox_$get_chars (rldr_data_.outputvol_iocbp (pvindex), rldr_data_.labelp (pvindex), size (label) * 4, (0), code);
    if code ^= 0 then do;
        call rldr_report_$error_output (rldr_datap, code, myname, "Label read failed for pv ^a",
	   rldr_data_.pvname (pvindex));
        return;
      end;
						/* cross check label info against registration info */
    labelp = rldr_data_.labelp (pvindex);
    if ^(rldr_data_.pvname (pvindex) = "rpv") then
      if label.pvid ^= rldr_data_.pvid (pvindex) then do;
	code = error_table_$bad_volid;
	call rldr_report_$error_output (rldr_datap, code, myname,
	     "Output volume pvid ^o not equal to online pvid ^o for pv ^a",
	     label.pvid, rldr_data_.pvid (pvindex), rldr_data_.pvname (pvindex));
        end;
    return;

/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 	*/


close: entry (rldr_datap, pvindex, code);

/* This entry updates the physical volume label with the results of the reload. */

    code = 0;
    labelp = rldr_data_.labelp (pvindex);
						/* special case rpv */
    if (rldr_data_.rpv & rldr_data_.pvname (pvindex) = "rpv") then do;
        label.pv_name = "rpv";
        label.lv_name = "root";
        infop = rldr_data_.infop;
        label.pvid = backup_info.rpv_pvid;
        label.lvid = backup_info.rpv_lvid;
        label.root.here = "1"b;
        label.root.shutdown_state = 4;
      end;
						/* set time */
    label.time_last_reloaded = clock;

/* The dumper bit map has not been reloaded. Set the inconsistent flag so    */
/* that the dumper will use seg dtms and automatically build a valid map.    */

    label.inconsistent_dbm = "1"b;
						/* position to sector */
    call iox_$position (rldr_data_.outputvol_iocbp (pvindex), 2, sector (LABEL_ADDR), code);
    if code ^= 0 then do;
        call rldr_report_$error_output (rldr_datap, code, myname, "Label position failed for pv ^a",
	   rldr_data_.pvname (pvindex));
        return;
      end;
						/* write label to physical volume */
    call iox_$put_chars (rldr_data_.outputvol_iocbp (pvindex), labelp, size (label) * 4, code);
    if code ^= 0 then
      call rldr_report_$error_output (rldr_datap, code, myname, "Label write failed on pv ^a",
	 rldr_data_.pvname (pvindex));
    return;

/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 	*/


sector: proc (add) returns (fixed bin);

/* This proc converts Multics record numbers to  sector numbers */

dcl add		     fixed bin;
dcl (dev_idx, sector)    fixed bin;

    dev_idx = rldr_data_.disk_type (pvindex);
    sector = add * SECTORS_PER_RECORD (dev_idx);
    sector = sector + divide (sector, rldr_data_.usable_sectors (pvindex), 17, 0) * rldr_data_.unusable_sectors (pvindex);
    return (sector * words_per_sect (dev_idx) * 4);

  end sector;

%include rldr_data_;

%include backup_info;
%include backup_volume_header;

%include disk_pack;

%include fs_dev_types_sector;

%include fs_vol_label;

/* BEGIN MESSAGE DOCUMENTATION

   Message:
   rldr_label_: Label position failed: ERROR_MESS

   S:	$rld_out

   T:	$reload

   M:	Someting is wrong with a reloader output volume.

   A:	Mount a correct volume and try again.


   Message:
   rldr_label_: Label read failed: ERROR_MESS

   S:	$rld_out

   T:	$reload

   M:	Someting is wrong with a reloader output volume.

   A:	Mount a correct volume and try again.


   Message:
   rldr_label_: Incorrect output medium mounted: ERROR_MESS

   S:	$rld_out

   T:	$reload

   M:	Someting is wrong with a reloader output volume.

   A:	Mount a correct volume and try again.


   Message:
   rldr_label_: Output volume pvid MMMMMMMMMMMM not equal to online 
	      pvid NNNNNNNNNNNN for pv PPPPPPPP. Invalid volume identifier.

   S:	$rld_out

   T:	$reload

   M:	The PVID on the output disk volume does not match the PVID as
          recorded in the pvolog for the disk volume.  This indicates that
	either the label on the PV is incorrect or the pvolog segment
	is corrupted.

   A:	Verify the PVID using output from the display_disk_label command.
	If the PVID from ddl output is differnet from that reported for the
	output volume, use change_volume_registration and init_vol to
	correct the disk label.  If the online PVID does not match, use the
	recover_volume_log command to retrieve a correct pvolog segment.
	Retry the reload.


   Message:
   rldr_label_: Label write failed: ERROR_MESS

   S:	$rld_out

   T:	$reload

   M:	Someting is wrong with a reloader output volume.

   A:	Mount a correct volume and try again.


   END MESSAGE DOCUMENTATION */

  end rldr_label_;
