/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


ring0_init: proc ;

/* last modified by Kobziar 1/25/75 to call priv_init entries */
/* last modified by Greenberg 05/27/76 who changed it back again, and added terminate entries. */
/* last modified by Loepere 11/05/84 to rename terminate to terminate_. */

dcl (level$get, level$set) ext entry (fixed bin) ;

dcl  initiate ext entry (char (*), char (*), char (*), fixed bin (1), fixed bin (2), ptr, fixed bin (35)) ;
dcl  initiate$initiate_count ext entry (char (*), char (*), char (*), fixed bin (24), fixed bin (2), ptr, fixed bin (35)) ;
dcl  terminate_$noname entry (ptr, fixed bin (35));
dcl  terminate_$teseg entry (ptr, fixed bin (1), fixed bin (35));

dcl (dirname, ename, rname) char (*) ;
dcl  tcode fixed bin (35);
dcl  tsptr ptr;
dcl  tsw fixed bin (1);
dcl  segsw fixed bin (1) ;
dcl  copysw fixed bin (2) ;
dcl  count fixed bin (24) ;
dcl  segptr ptr ;
dcl  code fixed bin (35) ;

dcl  save_level fixed bin ;
dcl  esw fixed bin ;

initiate:	entry (dirname, ename, rname, segsw, copysw, segptr, code) ;

	esw = 1 ;
	goto start ;

initiate_count: entry (dirname, ename, rname, count, copysw, segptr, code) ;

	esw = 2 ;
	go to start;

terminate_noname: entry (tsptr, tcode);

	esw = 3;
	go to start;

terminate_seg: entry (tsptr, tsw, tcode);

	esw = 4;

start:
	call level$get (save_level) ;

	call level$set (0) ;

	if esw = 1 then call initiate (dirname, ename, rname, segsw, copysw, segptr, code) ;
	else if esw = 2 then call initiate$initiate_count (dirname, ename, rname, count, copysw, segptr, code);
	else if esw = 3 then call terminate_$noname (tsptr, tcode);
	else if esw = 4 then call terminate_$teseg (tsptr, tsw, tcode);

	call level$set (save_level) ;

	return ;

     end ;
