/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


requote_string_: proc (instring) returns (char (*));

/* How difficult is PL/I for character string manipulation */
/* B. Greenberg 5/31/77 */
/* E. N. Kittlitz. added quote_string entry. */

dcl  instring char (*);
dcl  outstringl fixed bin (21);
dcl  QUOTE char (1) static init ("""") options (constant);
dcl  QUOTEQUOTE char (2) static init ("""""") options (constant);
dcl  outstring char (2 * length (instring) + 2);
dcl (i, j) fixed bin (21);
dcl  requote_sw bit (1) aligned;

dcl (index, length, substr) builtin;

	requote_sw = "1"b;
	outstringl = 1;
	substr (outstring, 1, 1) = QUOTE;
	i = 1;
nextj:	j = index (substr (instring, i), QUOTE);
	if j = 0 then do;
	     substr (outstring, outstringl + 1, length (instring) - i + 1)
		= substr (instring, i);
	     outstringl = outstringl + length (instring) - i + 1;
	     if requote_sw then do;
		outstringl = outstringl + 1;
		substr (outstring, outstringl, 1) = QUOTE;
	     end;
	     return (substr (outstring, 1, outstringl));
	end;
	substr (outstring, outstringl + 1, j - 1) = substr (instring, i, j - 1);
	outstringl = outstringl + j;
	substr (outstring, outstringl, 2) = QUOTEQUOTE;
	outstringl = outstringl + 1;
	i = i + j;
	go to nextj;

quote_string: entry (instring) returns (char (*));

	requote_sw = "0"b;
	outstringl = 0;
	i = 1;
	go to nextj;

     end;
