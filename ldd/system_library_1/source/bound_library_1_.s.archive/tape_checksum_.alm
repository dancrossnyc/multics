" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Bull Inc., 1987                *
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1983 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************
	name	tape_checksum_


" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
"
" Calling Sequence:
"	call tape_checksum_ (physical_record_pointer, checksum_pointer)
"
" Where:
"	physical_record_pointer - pointer to beginning of physical tape record
"	checksum_pointer - pointer to word to contain checksum
"
"	The checksum will be computed as described in MPM
"	Reference Guide Section 8.4.
"	The format of the physical record header and
"	the physical record trailer are described in MPM
"	Reference Guide Section 5.3.
"
"
" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "




" 

	segdef	tape_checksum_

tape_checksum_:
	eppbp	ap|2,*		bp -> physical record pointer
	eppbp	bp|0,*		bp -> physical record

	eax1	0		x1 is physical record header index
	ldq	bp|4		get length of data in bits
	anq	=o777777,dl	isolate record size
	div	36,dl		compute word count
	eax2	8,ql		x2 is physical record trailer index
	eax3	1		x3 is rotate index
	lda	0,dl		clear the a register
	ldi	=o4000,dl		clear indicators and set overflow mask

odd;	rpda	6,1		do the record header
	awca	bp|0,1		compute checksum on header
	alr	0,3		..
	awca	bp|1,1		add in last word of header
	alr	0,3		..

odd;	rpda	8,1		now do the trailer
	awca	bp|0,2		compute checksum on trailer
	alr	0,3		..

	awca	0,dl		add in any remaining carries

	eppbp	ap|4,*		bp -> checksum pointer
	sta	bp|0,*		store the checksum

	short_return

	end
