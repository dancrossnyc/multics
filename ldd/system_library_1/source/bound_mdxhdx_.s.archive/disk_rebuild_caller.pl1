/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


/****^  HISTORY COMMENTS:
  1) change(86-01-16,Fawcett), approve(86-04-11,MCR7383),
     audit(86-05-14,LJAdams), install(86-07-17,MR12.0-1097):
     Add support for subvolumes, and 512_WORD_IO, 3380 and 3390.
                                                   END HISTORY COMMENTS */


disk_rebuild_caller: proc (a_dtp, apvtx1, apvtx2, opt_bits);

/* Written by Kobziar from init_disk_pack_. */
/* Reworked for fill_vol_extents_, BSG 08/31/76 */
/* Modified for countervalidate_label_ BSG 12/1/76 */
/* Modified for to allow rebuild to larger disk, 7/23/81 M.R. Jordan */
/* Modified for new volume format, and to allow reduction in number
          of VTOCEs, March 1982, J. Bongiovanni */
/* Modified '83 KPL for fix to error message about rebuild */

dcl  opt_bits bit (36) aligned,
    (pvtx1, pvtx2) fixed bin,				/* Physical Volume Table Indexes */
     tpsp fixed bin,				/* total partition space */
     a_dtp ptr,
    (apvtx1, apvtx2) fixed bin,			/* drive args */
    (dev_type1, dev_type2) fixed bin,			/* drive types index */
     code fixed bin (35);				/* error code */



dcl  num_pages fixed bin,				/* Number of records in paging area on this volume */
     baseadd fixed bin,
     i fixed bin,
     interlace fixed bin init (2),			/* use alternate address assignment in copying */
     old_n_vtoce fixed bin,
     n_vtoce fixed bin;				/* number of VTOC entries in VTOC */

dcl  buffer (512) fixed bin (71);

dcl  (addr, clock) builtin;

dcl  com_err_ entry options (variable);
dcl  countervalidate_label_$query entry (ptr, char (*), char (*), char (*)) returns (bit (1));
dcl     fill_vol_extents_	 entry (ptr, fixed bin, fixed bin, fixed bin, fixed bin, bit (1) aligned, fixed bin (17), fixed bin (35));
dcl  initializer_gate_$disk_rebuild entry (fixed bin, fixed bin, ptr, bit (36) aligned, fixed bin, fixed bin (35));
dcl  initializer_gate_$read_disk entry (fixed bin, fixed bin, ptr, fixed bin (35));
dcl  ioa_ entry options (variable);
%page;
	labelp = addr (buffer);

	dtp = a_dtp;
	pvtx1 = apvtx1;
	pvtx2 = apvtx2;
	dev_type1 = dt.array (pvtx1).device_type;
	dev_type2 = dt.array (pvtx2).device_type;

	call ioa_ ("rebuild_disk: volume ^a from ^a onto ^a", dt.array (pvtx1).pvname,
	     dt.array (pvtx1).drive_name, dt.array (pvtx2).drive_name);

	call initializer_gate_$read_disk (pvtx2, LABEL_ADDR, labelp, code);
	if code ^= 0 then go to ERR;

	if ^countervalidate_label_$query (labelp, (dt.array (pvtx1).pvname), "disk_rebuild",
	(dt.array (pvtx2).drive_name)) then return;

	call initializer_gate_$read_disk (pvtx1, LABEL_ADDR, labelp, code);
	if code ^= 0 then go to ERR;
	if ^dt.array (pvtx1).used			/* Must be in use for rin-0 to work */
	     then do;
	     call ioa_ ("rebuild_disk: Volume ^a must be mounted before rebuilding", dt.array (pvtx1).drive_name);
	     return;
	end;
	

	label.time_map_updated, label.time_unmounted, label.time_salvaged = clock ();
	label.shutdown_state = 0;			/* If you believe this... */
	label.esd_state = 0;

	interlace = 2;				/* Default, triggers f_v_e that this is rebuild */


	tpsp = 0;

	call ioa_ ("^/ Current disk parameters:^/");

	do i = 1 to label.nparts;
	     call ioa_ ("part ^a ^d ^d", label.parts (i).part, label.parts (i).frec, label.parts (i).nrec);
	     tpsp = tpsp + label.parts (i).nrec;
	end;

	old_n_vtoce = (label.vtoc_size - VTOC_ORIGIN) * VTOCES_PER_RECORD (dev_type1);
	call ioa_ ("Vtoc size is ^d, ave. seg length = ^.3f",
	     label.vtoc_size, ((label.vol_size - tpsp - VTOC_ORIGIN) / (label.vtoc_size - VTOC_ORIGIN)) / VTOCES_PER_RECORD (dev_type1));
	call ioa_ ("Current number of VTOCEs = ^d", old_n_vtoce);
	call ioa_ ("");


	call ioa_ ("^/New starting parameters (no partitions defined):");

	if dt.array (pvtx2).is_sub_vol then do;
	      dtep = addr (dt.array (pvtx2));
	      label.vol_size = rec_per_sv (dte.device_type);
	      label.number_of_sv = dte.num_of_sv;
	      label.this_sv = dte.sv_num;
	      label.sub_vol_name = valid_sv_array (dte.sv_num);
	end;
	else do;
	      label.vol_size = rec_per_dev (dt.array (pvtx2).device_type);
	      label.number_of_sv = 0;
	      label.this_sv = 0;
          end;
comloop:	call fill_vol_extents_ (labelp, interlace, n_vtoce, baseadd, num_pages, "0"b, (dev_type2), code);
	if code ^= 0 then return;

	call initializer_gate_$disk_rebuild (pvtx1, pvtx2, labelp, opt_bits, interlace, code);
	return;

ERR:	call com_err_ (code, "rebuild_disk", "Error in rebuild of volume ^a.", dt.array (pvtx1).pvname);
	return;

%page;  %include disk_pack;
%page;  %include disk_table;
%page;  %include fs_vol_label;
%page;  %include fs_dev_types;

/* BEGIN MESSAGE DOCUMENTATION

   Message:
   rebuild_disk: volume PVNAME from DSKA_XX onto DSKA_YY
   .br
   Current disk parameters:
   .br
   part NAME FREC NREC
   .br
   Vtoc size is XX, ave. seg length = Y.ZZZ
   .br
   Current number of VTOCEs = XX

   S:	$initializer_io

   T:	$response

   M:	This is the response to the operator command "rebuild_disk" issued in ring 1.

   A:	$ignore


   Message:
   rebuild_disk: Volume PVNAME must be mounted before rebuilding

   S:	$initializer_io

   T:	$response

   M:	The rebuild_disk command was invoked on an mounted volume.
   Only volumes which are mounted may be rebuilt.
   No action was taken.

   A:	Salvage the volume first,
   and then reissue the rebuild_disk command.


   Message:
   New starting parameters (no partitions defined):

   S:	$initializer_io

   T:	$response

   M:	This message requests the input of new disk parameters.

   A:	Input the new disk parameters. Use the "end" request when done.


   Message:
   Cannot shrink VTOC from XX to YY VTOCEs. Respecify parameters.

   S:	$initializer_io

   T:	$response

   M:	An attempt has been made to shrink the VTOC, which is illegal.

   A:	Respecify the parameters.


   Message:
   rebuild_disk: Error XX in rebuild of volume PVNAME.

   S:	$initializer_io

   T:	$response

   M:	An error has occurred trying to rebuild the disk.
   The new copy should not be used.

   A:	If the problem can be repaired,
   repair it and try again.
   $inform



   END MESSAGE DOCUMENTATION */

     end disk_rebuild_caller;
