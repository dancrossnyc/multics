/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


/* PRDS_INIT - Copy Template Info into new PRDS.
          Modified 2/11/76 by Noel I. Morris	
	Modified 2/22/81 by J. Bongiovanni for fast connect code initialization
	       and to move some initializations from prds.cds
											*/

prds_init: proc (pp, tag, idle_ptr);

dcl  pp ptr,
     idle_ptr ptr,
     tag fixed bin (3);

dcl  p1 ptr,
     code fixed bin (35),
     basedptr ptr based (pp),
     basedbit36 bit (36) aligned based (pp),
     basedfixed fixed bin(17) based (pp) ;




dcl fast_connect_init entry (ptr, fixed bin (3), fixed bin (35));
dcl syserr entry options (variable);

dcl  prds$ fixed bin ext,
     prds$cache_luf_reg bit (36) aligned ext,
     prds$processor_tag ext bit (36) aligned,
     prds$idle_ptr ptr ext;

dcl (addr, null, ptr, rel, size) builtin;



% include stack_header;



/* Copy the stack header from the top of the prds.
   Then set up the stack pointer.
    */
	sb = addr (prds$);
	pp -> stack_header_overlay = sb -> stack_header_overlay;

	pp -> stack_header.signal_ptr = null ();
	pp -> stack_header.sct_ptr = null ();

	p1 = ptr (pp, rel (addr (prds$cache_luf_reg)));
	p1 -> basedbit36 = "000000000003"b3;

	p1 = ptr (pp, rel (addr (prds$processor_tag)));
	p1 -> basedfixed = tag;

	p1 = ptr (pp, rel (addr (prds$idle_ptr)));
	p1 -> basedptr = idle_ptr;

	call fast_connect_init (pp, tag, code);
	if code^=0 
	     then call syserr (1, "prds_init: Invalid size for prds$fast_connect_code");

	return;

/* BEGIN MESSAGE DOCUMENTATION

Message:
prds_init: Invalid size for prds$fast_connect_code

S:	$crash

T:	$init

M:	There is an inconsistency between modules prds and
fast_connect_init on the boot tape.  Specifically, the amount of
space allocated for fast connect code in the prds does not
agree with the size of the code in fast_connect_init.  The
most likely cause is that one of these modules is not
up to date.

A:	$contact_sa
A new boot tape must be generated with the proper versions of
modules prds and fast_connect_init.


END MESSAGE DOCUMENTATION */

     end prds_init;
