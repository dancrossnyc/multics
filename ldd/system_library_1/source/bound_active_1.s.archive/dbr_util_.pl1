/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        *                                                         *
        *********************************************************** */
dbr_util_: proc;

/* Routine to take apart (and assemble?) dbr (descriptor segment base register)
values.  Initially coded by Keith Loepere, October 1983. */

/* format: style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */

dcl  dbr_ptr		        ptr parameter;
dcl  p_dbr_info_ptr		        ptr parameter;
dcl  sys_info$system_type	        fixed bin external static;
%page;
dissect: entry (dbr_ptr, p_dbr_info_ptr);

	dbr_info_ptr = p_dbr_info_ptr;
	if sys_info$system_type = ADP_SYSTEM then do;
	     dbr_info.address = bin (dbr_ptr -> adp_dbr.add, 26);
	     dbr_info.bound = (bin (dbr_ptr -> adp_dbr.bound, 14) + 1) * 16;
	     dbr_info.stack_base_segnum = dbr_ptr -> adp_dbr.stack_base_segno * 8;
	     dbr_info.paged = ^ dbr_ptr -> adp_dbr.unpaged;
	end;
	else do;
	     dbr_info.address = bin (dbr_ptr -> l68_dbr.add, 24);
	     dbr_info.bound = (bin (dbr_ptr -> l68_dbr.bound, 14) + 1) * 16;
	     dbr_info.stack_base_segnum = dbr_ptr -> l68_dbr.stack_base_segno * 8;
	     dbr_info.paged = ^ dbr_ptr -> l68_dbr.unpaged;
	end;
	return;
%page; %include "dbr.adp";
%page; %include "dbr.l68";
%page; %include dbr_info;
%page; %include system_types;
     end;
