" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Bull Inc., 1987                *
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1986 *
" *                                                         *
" ***********************************************************

" HISTORY COMMENTS:
"  1) change(86-09-19,Fawcett), approve(86-09-19,MCR7473),
"     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
"     Written to support control point management.  This was actually done in
"     March 1985 by G. Palter in pl1 with 5 statements. Rewritten in alm to
"     eliminate the cost of pushing and popping the stack frame for such a
"     trivial task.
"                                                      END HISTORY COMMENTS

	name	get_control_point_id_

" This short routine is used by bound_cpm_ and bound_ipc_.  It's
" function is to return the control point id, this is defined as the
" baseno of the stack that control point runs on.  If control point
" management is not enabled then the baseno of the current stack is
" returned.

"
"  USAGE:
"
"  dcl get_control_point_id_ entry () returns (bit (36) aligned);
"
"  ID = get_control_point_id_ ();
"
	
	entry     get_control_point_id_
	
get_control_point_id_:

" First check to see if control point management is enabled.
" If stack_header.cpm_enabled is not zero then it is enabled.

          lxl7       sb|stack_header.cpm_enabled	" Lower half of word

 " transfer if control point is enabled (not zero)

          tnz       real_cp            

" not enabled (zero), the ID is this stack baseno placed in the A
" register by the Effective Pointer in the AQ register.

          epaq      sb|0

" AND a mask to the upper half of the A register. Thats where the epaq
" placed the segment number, in bits 3-17.

          ana       =o077777,du
	sta       ap|2,*		" return the ID to the caller.
          short_return		" short_return because no stack frame
				" was pushed.


real_cp:  

" Now that we KNOW that control point management is enabled, load the
" ID in the A register and return it to the caller.

          eax7	cpd.id
          lda	sb|stack_header.cpm_data_ptr,*7
          sta       ap|2,*		" return the ID to the caller.
          short_return		" short_return because no stack frame
				" was pushed.
          
%include cpm_control_point_data;
%include stack_header;

          end
