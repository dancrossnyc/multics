/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        *                                                         *
        *********************************************************** */



/****^  HISTORY COMMENTS:
  1) change(86-05-13,GJohnson), approve(86-05-13,MCR7387),
     audit(86-05-13,Martinson), install(86-05-14,MR12.0-1056):
     Correct error message documentation.
                                                   END HISTORY COMMENTS */


/* format: style1,^inddcls,^indnoniterdo,insnl,linecom,indcomtxt */

set_sys_audit_thresholds_:
     procedure (a_covert_channel_sw, a_covert_channel_threshold,
	a_successful_access_sw, a_successful_access_threshold,
	a_unsuccessful_access_sw, a_unsuccessful_access_threshold,
	a_ec);

/* format: off */
	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
	/*									*/
	/* SET_SYS_AUDIT_THRESHOLDS							*/
	/*									*/
	/* Routine to set the system security access audit enable flags and thresholds in	*/
	/* sys_info.  This routine is called from as_init with values extracted from the system	*/
	/* installation parms.  This routine can be called only through hphcs_.		*/
	/*									*/
	/* History:								*/
	/* 84-12-03 EJ Sharpe - minor cosmetic fix
	/* 84-11-28 EJ Sharpe - created						*/
	/*									*/
	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* format: on */


/* PARMETERS */

dcl     a_covert_channel_sw	 parameter bit (1) aligned;
dcl     a_covert_channel_threshold
			 parameter bit (72) aligned;
dcl     a_successful_access_sw parameter bit (1) aligned;
dcl     a_successful_access_threshold
			 parameter bit (72) aligned;
dcl     a_unsuccessful_access_sw
			 parameter bit (1) aligned;
dcl     a_unsuccessful_access_threshold
			 parameter bit (72) aligned;
dcl     a_ec		 parameter fixed bin (35);


/* AUTOMATIC ARG COPIES */

dcl     covert_channel_sw	 bit (1) aligned;
dcl     covert_channel_threshold
			 bit (72) aligned;
dcl     successful_access_sw	 bit (1) aligned;
dcl     successful_access_threshold
			 bit (72) aligned;
dcl     unsuccessful_access_sw bit (1) aligned;
dcl     unsuccessful_access_threshold
			 bit (72) aligned;
dcl     ec		 fixed bin (35);


/* AUTOMATIC */

dcl     1 event_flags	 aligned like audit_event_flags;
dcl     allowed_range	 (2) bit (72) aligned init (
			 sys_info$access_class_floor,
			 sys_info$access_class_ceiling);


/* EXTERNAL CONSTANT */

dcl     error_table_$ai_out_range
			 fixed bin (35) external;
dcl     access_operations_$system_audit_thresh_modify
			 bit (36) aligned external;
dcl     sys_info$access_class_ceiling
			 bit (72) aligned external;
dcl     sys_info$access_class_floor
			 bit (72) aligned external;


/* EXTERNAL THAT WE MODIFY */

dcl     sys_info$audit_covert_channel
			 bit (1) aligned external;
dcl     sys_info$covert_channel_threshold
			 bit (72) aligned external;
dcl     sys_info$audit_successful_access
			 bit (1) aligned external;
dcl     sys_info$successful_access_threshold
			 bit (72) aligned external;
dcl     sys_info$audit_unsuccessful_access
			 bit (1) aligned external;
dcl     sys_info$unsuccessful_access_threshold
			 bit (72) aligned external;


/* ENTRIES */

dcl     access_audit_$log_general
			 entry options (variable);
dcl     aim_check_$in_range	 entry (bit (72) aligned, (2) bit (72) aligned) returns (bit (1) aligned);
dcl     display_access_class_	 entry (bit (72) aligned) returns (char (32) aligned);
dcl     level$get		 entry () returns (fixed bin);


/* MISC */

dcl     null		 builtin;
dcl     string		 builtin;
%page;
/* copy args */

	covert_channel_sw = a_covert_channel_sw;
	covert_channel_threshold = a_covert_channel_threshold;
	successful_access_sw = a_successful_access_sw;
	successful_access_threshold = a_successful_access_threshold;
	unsuccessful_access_sw = a_unsuccessful_access_sw;
	unsuccessful_access_threshold = a_unsuccessful_access_threshold;

	ec = 0;					/* will be copied to arg on output */

	if ^aim_check_$in_range (covert_channel_threshold, allowed_range)
	     | ^aim_check_$in_range (successful_access_threshold, allowed_range)
	     | ^aim_check_$in_range (unsuccessful_access_threshold, allowed_range)
	then ec = error_table_$ai_out_range;
	else do;
						/* need to audit only if args were legal */
	     string (event_flags) = ""b;
	     event_flags.special_op = "1"b;
	     event_flags.priv_op = "1"b;
	     event_flags.grant = "1"b;
	     call access_audit_$log_general ("set_sys_audit_thresholds_", level$get (),
		string (event_flags), access_operations_$system_audit_thresh_modify, "", 0, null (), 0,
		"Covert channel audit ^[enable^;disable^], threshold=^a.  Successful access audit ^[enable^;disable^], threshold=^a.  Unsuccessful access audit ^[enable^;disable^], threshold=^a."
		,
		covert_channel_sw, display_access_class_ (covert_channel_threshold),
		successful_access_sw, display_access_class_ (successful_access_threshold),
		unsuccessful_access_sw, display_access_class_ (unsuccessful_access_threshold));

	     sys_info$audit_covert_channel = covert_channel_sw;
	     sys_info$covert_channel_threshold = covert_channel_threshold;
	     sys_info$audit_successful_access = successful_access_sw;
	     sys_info$successful_access_threshold = successful_access_threshold;
	     sys_info$audit_unsuccessful_access = unsuccessful_access_sw;
	     sys_info$unsuccessful_access_threshold = unsuccessful_access_threshold;
	end;

	a_ec = ec;

	return;
%page;
%include access_audit_eventflags;
%page;

/* BEGIN MESSAGE DOCUMENTATION

   Message:
   AUDIT (set_sys_audit_thresholds_): GRANTED|DENIED modification of system audit flags and thresholds ADDED_INFO

   S:	$access_audit

   T:	$run

   M:	Indicates that the system wide audit enable flags and the
   thresholds have been changed as indicated.

   A:	$ignore

   END MESSAGE DOCUMENTATION */

     end set_sys_audit_thresholds_;
