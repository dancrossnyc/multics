" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Bull Inc., 1987                *
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" ***********************************************************

" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
"
"	map_free_count
"
"	Routine to examine a part of a bit-map in standard format and
"	return the number of free entries in the map. Standard format
"	means the following:
"
"	    1. Each word represents 32 items
"
"	    2. Bit ON => the item is free
"
"	    3. Bits 1 - 32 only are used
"
"	The Volume Map and the VTOC Map are in this format.
"
"	call map_free_count (map_ptr, map_n_words, free_count)
"
"	where
"	    map_ptr points to the first word (Input)
"	    map_n_words is the number of words (Input)
"	    free_count is the number of free entries (Output)
"
"	This is coded in ALM to perform the computation with ruthless
"	efficiency.
"
"	Written March 1982 by J. Bongiovanni
"	Modified December 1982 by J. Bongiovanni to reset overflow before fno
"
" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "

	name	map_free_count

	entry	map_free_count

map_mask:
	oct	377777777770		" Mask of used bits in word
map_low_bits:
	oct	177777777770		" To strip out high bit


map_free_count:
	
	eppbp	ap|2,*			" bp -> ptr -> map
	eppbp	bp|0,*			" bp -> map
	lxl0	ap|4,*			" x0 = number of words
	ldx1	0,du			" x1 = number free items

	stz	ap|6,*			" Clear return value

map_word_loop:
	eax0	-1,x0			" Decrement word count
	tmi	map_returns_count		" Done
	ldq	0,dl
	lda	bp|0,x0			" Next word
	ana	map_mask			" Used bits only
	tze	map_word_loop		" No free items this word
	arl	1			" Initial alignment

map_bit_loop:
	eax1	1,x1			" One more free
	ldi	0,dl			" Make sure overflow is Off
	lde	0,du
	fno				" Get next On bit high
	ana	map_low_bits		" And strip it out
	tze	map_word_loop		" Done this word
	tra	map_bit_loop		" More On bits this word

map_returns_count:
	sxl1	ap|6,*			" Number free items
	short_return

	end
