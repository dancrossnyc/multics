" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Bull Inc., 1987                *
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************

" " " " " " " " " " " " " " " " " " " " " " " " " "
"
"	pc_trace		tracing routine called by the alm
"			part of page control to print out tracing
"			information by calling pc_trace_pl1 with
"			pre-canned arument lists.
"
" " " " " " " " " " " " " " " " " " " " " " " " " " "

" Written sometime by somebody, whose august identity is now sadly
"  lost in the dim mists of antiquity.
" Modified 03/01/81, W. Olin Sibert, for new sst include file and ADP conversion
"
	name	pc_trace

	include	pxss_page_stack
	include	sst
	include	page_info

	segdef	move_page,zero_page,no_paging_device,rws_truncated
	segdef	done,page_fault,page_fault_end,write_page
	segdef	abort_complete,running,rws_complete
	segdef	tr_pd_delete_,tr_rws,rehash,depositing,withdrawing

" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "

page_fault:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace_pf,dl
	tze	0,7
	spribp	arg+18
	tsx5	setup_argl_4
	call	pc_trace_pl1$page_fault(arg)
	tra	0,7

" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "

page_fault_end:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace_pf,dl
	tze	0,7
	spribp	arg+18
	tsx5	setup_argl_4
	call	pc_trace_pl1$page_fault_end(arg)
	tra	0,7

" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "

write_page:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace_pf,dl
	tze	0,7
	eppap	sst|0,4
	spriap	arg+18
	tsx5	setup_argl_4
	call	pc_trace_pl1$write_page(arg)
	tra	0,7

" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "

done:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace_pf,dl
	tze	0,7
	eppap	sst|0,4
	spriap	arg+18
	tsx5	setup_argl_4
	call	pc_trace_pl1$done(arg)
	tra	0,7

" " " " " " " " " " " " " " " " " " " " " " " " " " " " "

abort_complete:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace,dl
	tze	0,7
	eppap	sst|0,1		get a pointer to the pdmep
	spriap	arg+18
	spribp	arg+20		save ptp
	tsx5	setup_argl_1
	call	pc_trace_pl1$abort_complete(arg)
	tra	0,7

setup_argl_1:
	epplb	arg+18
	sprilb	arg+2
	epplb	arg+20
	sprilb	arg+4
	ldaq	argl1
	staq	arg
	tra	0,5
	even
argl1:
	zero	4,4
	zero	0,0

" " " " " " " " " " " " " " " " " " " " " " " " " " " " "

move_page:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace,dl
	tze	0,7
	tsx5	setup_argl_2
	call	pc_trace_pl1$move_page(arg)
	tra	0,7

setup_argl_2:
	epplb	devadd
	sprilb	arg+2
	ldaq	argl2
	staq	arg
	tra	0,5
	even
argl2:
	zero	2,4
	zero	0,0

" " " " " " " " " " " " " " " " " " " " " " " " " " " " "

zero_page:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace,dl
	tze	0,7
	spribp	arg+18		save ptp
	tsx5	setup_argl_3
	call	pc_trace_pl1$zero_page(arg)
	tra	0,7

	even
setup_argl_3:
	epplb	arg+18
	sprilb	arg+4
	epplb	devadd
		sprilb	arg+2
	ldaq	argl3
	staq	arg
	tra	0,5
	even
argl3:
	zero	4,4
	zero	0,0

" " " " " " " " " " " " " " " " " " " " " " " " " " " " "

no_paging_device:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace,dl
	tze	0,7
	spribp	arg+18		save ptp
	tsx5	setup_argl_3
	call	pc_trace_pl1$no_pd_(arg)
	tra	0,7

" " " " " " " " "" " " " " " " " " " " " " " " " " " " " "

rws_truncated:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace,dl
	tze	0,7
	eppap	sst|0,1
	spriap	arg+18		save pointer to pdme
	tsx5	setup_argl_3
	call	pc_trace_pl1$rws_truncated(arg)
	tra	0,7

" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "

tr_pd_delete_:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace,dl
	tze	0,7
	eppap	sst|0,0
	spriap	arg+18
	tsx5	setup_argl_4
	call	pc_trace_pl1$tr_pd_delete_(arg)
	tra	0,7

setup_argl_4:
	epplb	arg+18
	sprilb	arg+2
	ldaq	argl2
	staq	arg
	tra	0,5
	even
argl4:
	zero	2,4
	zero	0,0
argl0:
	zero	0,0
	zero	0,0

" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "

tr_rws:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace,dl
	tze	0,7
	eppap	sst|0,1
	spriap	arg+18
	tsx5	setup_argl_4
	call	pc_trace_pl1$tr_rws(arg)
	tra	0,7

" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "

rehash:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace,dl
	tze	0,7
	lda	ap|2,*		old devadd
	sta	arg+18
	lda	ap|4,*
	sta	devadd
	tsx5	setup_argl_3
	call	pc_trace_pl1$rehash(arg)
	tra	0,7

" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "

depositing:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace,dl
	tze	0,0
	tsx5	setup_argl_2
	call	pc_trace_pl1$depositing(arg)
	tra	0,0

" " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "

withdrawing:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace,dl
	tze	0,0
	tsx5	setup_argl_2
	call	pc_trace_pl1$withdrawing(arg)
	tra	0,0

" " " " " " " " " " " " " " " " " " " " " " " " " " " " "

running:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace,dl
	tze	0,6
	call	pc_trace_pl1$running(argl0)
	tra	0,6

" " " " " " " " " " " " " " " " " " " " " " " " " " " " "

rws_complete:
	ldq	sst|sst.trace_sw
	canq	sst.pc_trace,dl
	tze	0,7
	eppap	sst|0,1
	spriap	arg+18
	tsx5	setup_argl_4
	call	pc_trace_pl1$rws_complete(arg)
	tra	0,7
" 
	end
