/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


list_partitions:
     procedure () options (variable);

/* *	Command to use phcs_$read_disk_label and to list the partitions on a volume.
   *
   *	    list_partitions Pvname
   *
   *	10/18/80, W. Olin Sibert
   */

dcl  ap pointer;
dcl  al fixed bin (21);
dcl  arg char (al) based (ap);
dcl  code fixed bin (35);
dcl (nargs, argno) fixed bin;

dcl  pvname char (32);
dcl  pvid bit (36) aligned;
dcl  part_idx fixed bin;

dcl 1 local_label aligned like label automatic;

dcl  com_err_ entry options (variable);
dcl  cu_$arg_count entry (fixed bin, fixed bin (35));
dcl  cu_$arg_ptr entry (fixed bin, pointer, fixed bin (21), fixed bin (35));
dcl  phcs_$read_disk_label entry (bit (36) aligned, pointer, fixed bin (35));
dcl  ioa_ entry options (variable);
dcl  mdc_$pvname_info entry (char (*), bit (36) aligned, char (*), bit (36) aligned, fixed bin, fixed bin (35));

dcl (error_table_$badopt,
     error_table_$too_many_args,
     error_table_$noarg) fixed bin (35) external static;

dcl  WHOAMI char (32) internal static options (constant) init ("list_partitions");

dcl  linkage_error condition;

dcl (addr, char) builtin;

/*  */

	pvname = "";

	call cu_$arg_count (nargs, code);
	if code ^= 0 then do;
	     call com_err_ (code, WHOAMI);
RETURN:	     return;
	     end;

	do argno = 1 to nargs;
	     call cu_$arg_ptr (argno, ap, al, (0));

	     if char (arg, 1) = "-" then do;
		call com_err_ (error_table_$badopt, WHOAMI, "^a", arg);
		goto RETURN;
		end;

	     else if pvname = "" then 		/* first arg is volume name */
		pvname = arg;

	     else do;
		code = error_table_$too_many_args;
		goto USAGE;
		end;
	     end; 				/* of argument loop */

	if pvname = "" then do;
	     code = error_table_$noarg;
USAGE:	     call com_err_ (code, WHOAMI,
		"^/Usage:^-^a pvname", WHOAMI);
	     goto RETURN;
	     end;

/*  */

	call mdc_$pvname_info (pvname, pvid, (""), (""b), (0), code);
	if code ^= 0 then do;
	     call com_err_ (code, WHOAMI, "^a", pvname);
	     goto RETURN;
	     end;

	labelp = addr (local_label);

	on condition (linkage_error) begin;	     /* exit gracefully */
	     call com_err_ (0, WHOAMI,
		"This opertaion requires privileged access (phcs_) not given to this process.");

	     goto RETURN;			     /* and punt */
	     end;

	call phcs_$read_disk_label (pvid, labelp, code);

	revert condition (linkage_error);

	if code ^= 0 then do;
	     call com_err_ (code, WHOAMI, "Cannot read label of ^a", pvname);
	     goto RETURN;
	     end;

	call ioa_ ("Volume ^a:", pvname);
	call ioa_ ("^8d records, ^5d VTOC records.", label.vol_size, label.vtoc_size);
	call ioa_ ("^[No^s^;^d^] partition^[s^]^[:^/^2xName^5xStart^5xSize^;.^]",
	     (label.nparts = 0), label.nparts, (label.nparts ^= 1), (label.nparts ^= 0));

	do part_idx = 1 to label.nparts;
	     call ioa_ ("^2x^4a^2x^8o^2x^6o^x(^d.)",
		label.parts.part (part_idx), label.parts.frec (part_idx),
		label.parts.nrec (part_idx), label.parts.nrec (part_idx));
	     end;

	call ioa_ ("");				/* end with a blank line */

	goto RETURN;				/* all done */

%page;
%include fs_vol_label;

	end list_partitions;
