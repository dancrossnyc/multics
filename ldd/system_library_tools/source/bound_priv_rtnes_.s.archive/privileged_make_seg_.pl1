/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


privileged_make_seg_: proc (dname, ename, rname, mode, segp, ecode);

/* This subroutine is provided as a replacement for hcs_$make_seg
   for use by processes having access to the system_privilege_
   gate.  It should be used instead of hcs_$make_seg whenever it
   is desired to "make" a segment which can have an access class
   different from the process authorization.
*/

/* Written by J. Stern, 2/5/75 */


dcl  dname char (*);				/* directory name */
dcl  ename char (*);				/* entry name */
dcl  rname char (*);				/* reference name */
dcl  mode fixed bin (5);				/* access mode */
dcl  segp ptr;					/* segment pointer */
dcl  ecode fixed bin (35);				/* error code */
dcl  priv_code fixed bin (35);			/* code returned by dir_priv_on */
dcl  code1 fixed bin (35);				/* code returned by append_branch */
dcl  code2 fixed bin (35);				/* code returned by initiate */

dcl  null builtin;
dcl  error_table_$namedup fixed bin (35) ext static;
dcl  cleanup condition;

dcl  system_privilege_$dir_priv_on entry (fixed bin (35));
dcl  system_privilege_$dir_priv_off entry (fixed bin (35));
dcl  hcs_$append_branch entry (char (*), char (*), fixed bin (5), fixed bin (35));
dcl  system_privilege_$initiate entry (char (*), char (*), char (*), fixed bin (1), fixed bin (2), ptr, fixed bin (35));

          segp = null();				/* like hcs_$make_seg does for caller		*/
	priv_code = 1;				/* indicates no change to dir privilege yet */
	on cleanup begin;
	     if priv_code = 0 then call system_privilege_$dir_priv_off (priv_code);
	end;

	call system_privilege_$dir_priv_on (priv_code);	/* turn on directory privilege */

	call hcs_$append_branch (dname, ename, mode, code1);

	if priv_code = 0 then			/* directory priv was not on before */
	     call system_privilege_$dir_priv_off (priv_code);
	priv_code = 1;

	if code1 ^= 0 then
	     if code1 ^= error_table_$namedup then go to set_code;

	call system_privilege_$initiate (dname, ename, rname, 0, 1, segp, code2);
	if code2 ^= 0 then ecode = code2;
	else
set_code:	ecode = code1;


     end privileged_make_seg_;
