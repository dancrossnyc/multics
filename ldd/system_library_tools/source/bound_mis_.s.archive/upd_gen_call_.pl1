/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


upd_gen_call_:	procedure (lp, ap);


/*

	This procedure is used within the Multics Online Updater
	to call all user-ring task procedures.  The interface is
	identical to that of cu_$gen_call, except that the procedure
	pointer is indirect, pointing to the true procedure pointer
	in the entry table maintained by upd_make_ptr_.  This allows
	task calls to be made in a new process without regenerating
	pointers in the task elements, by simply re-initializing
	the entry table.

	P. Bos, May 1972

*/

     dcl	lp			ptr,		/* task linkage pointer */
	ap			ptr;		/* task arglist pointer */

     dcl	cu_$gen_call		entry (ptr, ptr),
	hcs_$make_ptr		entry (ptr, char(*), char(*), ptr, fixed bin(35)),
	signal_			entry (char(*), ptr, ptr, ptr);

     dcl (addr, null)		builtin;

     dcl	1 l			based (lp),	/* task linkage table entry */
	  2 procp			ptr,		/* procedure pointer or null */
	  2 rname			char(32),		/* refname of procedure to be called */
	  2 ename			char(32);		/* entry point name to be called */

     dcl	1 s			aligned,		/* status block for "task_linkage_err_" */
	  2 proc			char(32),		/* name of procedure causing error */
	  2 entry			char(32),		/* entry point name */
	  2 code			fixed bin(35),	/* status code */
	  2 sev			fixed bin,	/* severity code */
	  2 rname			char(32),		/* refname of called procedure */
	  2 ename			char(32);		/* entry point name of called procedure */

/**/

/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */


	if l.procp = null then do;			/* has procedure entry pointer been set up? */
retry:	     call hcs_$make_ptr (null, l.rname, l.ename, l.procp, s.code);	/* no, do it */
	     if s.code ^= 0 then do;			/* error? */
		s.proc, s.entry = "upd_gen_call_";	/* that's us! */
		s.sev = 4;			/* very fatal error */
		s.rname = l.rname;			/* fill in name of called procedure */
		s.ename = l.ename;			/* and entry point */
		call signal_("task_linkage_err_", null, addr (s), null);	/* signal error */
		go to retry;			/* retry call if signal_ returns */
		end;
	     end;
	call cu_$gen_call (l.procp, ap);		/* call task procedure with specified arglist */

	return;					/* back to task dispatcher */


	end upd_gen_call_;
