/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


/* format: style4 */
create_homedir_: proc (P_person, P_alias, P_minimum_auth, P_project, P_homedir, P_projdir, P_code);

/* This program is used to create home directories.
   If the "P_person" argument is "anonymous" no directory will be created.
   Some checks are made to ensure that a home directory will be below the project dir.
   THVV */
/* Modified May 1981, E. N. Kittlitz. Don't create through link. as_log creation notice
   severity changed to 0.  Miscellaneous changes */
/* Modified September 1982, E. N. Kittlitz. Set dir rbs to 7,7. Fix anonymous. */
/* Modified 1984-08-27 BIM. No more automatic project dir creations.
	  Handle upgraded users. */
/* Modified 1984-12-27, Keith Loepere.  Set dir_quota at append. */

dcl  P_alias char (*);
dcl  P_code fixed bin (35);
dcl  P_homedir char (*);
dcl  P_person char (*);
dcl  P_projdir char (*);
dcl  P_project char (*);
dcl  P_minimum_auth bit (72) aligned;

dcl  bitcount fixed bin (24);
dcl  code fixed bin (35);
dcl  hd char (32);
dcl  i fixed bin;
dcl  ignore_code fixed bin (35);
dcl  type fixed bin (2);
dcl  uid char (32);
dcl  (hdd, hdd_dir) char (168);
dcl  hdd_entryname char (32);
dcl  pd_acc bit (72) aligned;
dcl  1 cbi aligned like create_branch_info;

dcl  error_table_$badpath fixed bin (35) external;
dcl  error_table_$noentry fixed bin (35) external;
dcl  error_table_$notadir fixed bin (35) external;

dcl  aim_check_$greater entry (bit (72) aligned, bit (72) aligned) returns (bit (1) aligned);
dcl  display_access_class_ entry (bit (72) aligned) returns(character (32) aligned);
dcl  expand_pathname_ entry (char (*), char (*), char (*), fixed bin (35));
dcl  get_group_id_ entry () returns (char (32));
dcl  hcs_$add_dir_acl_entries entry (char (*), char (*), ptr, fixed bin, fixed bin (35));
dcl  hcs_$chname_file entry (char (*), char (*), char (*), char (*), fixed bin (35));
dcl  hcs_$get_access_class entry (char (*), char (*), bit (72) aligned, fixed bin (35));
dcl  hcs_$create_branch_ entry (char (*), char (*), ptr, fixed bin (35));
dcl  hcs_$status_minf entry (char (*), char (*), fixed bin (1), fixed bin (2), fixed bin (24), fixed bin (35));
dcl  ioa_$rsnnl entry options (variable);
dcl  pathname_ entry (char (*), char (*)) returns (char (168));
dcl  sys_log_ entry options (variable);
dcl  sys_log_$error_log entry options (variable);


dcl  1 acla (4) aligned,				/* structure for setting ACL of new dir */
       2 userid char (32),
       2 mode bit (36),
       2 rcode fixed bin (35);

dcl  (addr, substr, unspec) builtin;

/* -------------------------------------------------------- */

	P_code = 0;
	code = 0;

	call ioa_$rsnnl ("^a.^a.*", uid, i, P_person, P_project);

	if substr (P_homedir, 1, 5) = "[pd]>" then return;/* act_proc will create home dir below process dir */
	call expand_pathname_ (P_homedir, hdd, hd, code);
	if code ^= 0 then go to no_homedir;		/* invalid pathname  */
	call hcs_$status_minf (hdd, hd, 0, type, bitcount, code); /* see if there's an entry */
	if code = 0 then if type = 2 then return;
	     else do;				/* Type not 2: non-directory branch found. */
		if type = 0 then do;		/* it's a link, do some more looking */
		     call hcs_$status_minf (hdd, hd, 1, type, bitcount, code);
		     if code = 0 & type = 2 then return;/* link is to directory, nothing more to do */
		end;
		code = error_table_$notadir;		/* Fuss fuss */
		go to no_homedir;
	     end;
	if code ^= error_table_$noentry then go to no_homedir;

/* We have a regular user with an nonexistent home directory */

	if hdd ^= P_projdir then			/* Only certain places we will create it */
	     if hdd ^= pathname_ (">user_dir_dir", P_project) then do; /* try to fabricate with project name */
		if hdd ^= pathname_ (">udd", P_project) then do; /* ditto */
		     code = error_table_$badpath;
		     go to no_homedir;
		end;
	     end;


	call hcs_$get_access_class (">udd", P_project, pd_acc, code);
	if code ^= 0 then pd_acc = ""b;

	unspec (cbi) = ""b;
	cbi.version = create_branch_version_2;
	cbi.dir_sw = "1"b;
	cbi.chase_sw = "0"b;			/* make it plain - no chasing! */
	cbi.parent_ac_sw = ^aim_check_$greater (P_minimum_auth, pd_acc);
	cbi.access_class = P_minimum_auth;
	cbi.mode = SMA_ACCESS;
	cbi.userid = uid;
	cbi.rings (*) = 7;				/* no restrictions here */
	call hcs_$create_branch_ (hdd, hd, addr (cbi), code);
	if code ^= 0 then go to no_homedir;		/* Don't try to delete - might bite branch with same name */

	if P_alias ^= "" then call hcs_$chname_file (hdd, hd, "", P_alias, code);

	call sys_log_ (0, "create_homedir_: creating ""^a"" for ""^a"" ^a", P_homedir, uid, display_access_class_ (P_minimum_auth));
	return;					/* all OK, proceed */

no_homedir:

	if code = 0 then P_code = error_table_$noentry;
	else P_code = code;
	call sys_log_$error_log (0, P_code, "create_homedir_", """^a"" ""^a"" ^a", P_homedir, uid, display_access_class_ (P_minimum_auth));


%page;
%include access_mode_values;
%include create_branch_info;
%page;

/* BEGIN MESSAGE DOCUMENTATION

   Message:
   create_homedir_: creating "DIRNAME" for "USERID"

   S:	as (severity0).

   T:	$run

   M:	The user USERID did not have a home directory.  It was
   created for him during login, or when his project's PDT was installed.
   This is reasonable if this is the first time he has logged in.
   However, his directory may have been destroyed by the Salvager, in
   which case you have to retrieve his files.

   A:	A retrieval of the user's directory may be necessary.


   Message:
   create_homedir_: Bad syntax in pathname. DIRNAME NAME.PROJ

   S:	as (severity0).

   T:	$run

   M:	Typically caused by a homedir specification  starting with other than
   >user_dir_dir or >udd. It may also occur while attempting to create the
   home directory for the user with name NAME and project PROJ.

   A:	$note_sa


   Message:
   create_homedir_: ERROR_MESSAGE. DIRNAME NAME.PROJ

   S:	as (severity0).

   T:	$run

   M:	An error occurred while attempting to create the home
   directory for the user with name NAME and project PROJ.

   A:	$note_sa

   END MESSAGE DOCUMENTATION */

     end create_homedir_;
