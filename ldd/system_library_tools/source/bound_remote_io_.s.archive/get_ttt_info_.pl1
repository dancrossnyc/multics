/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(87-03-17,LJAdams), approve(87-04-03,MCR7646),
     audit(87-05-05,Gilcrease), install(87-05-14,MR12.1-1030):
     Changed ttd_version to ttd_version_3.
                                                   END HISTORY COMMENTS */


get_ttt_info_: proc (rttp, code);

dcl  code fixed bin (35);

dcl 1 local_terminal_type_data like terminal_type_data;

dcl  ttt_info_$terminal_data entry (char (*) aligned, fixed bin, fixed bin, ptr, fixed bin (35));
dcl  (addr, null) builtin;


%include remote_ttt_info;
%include prt_conv_info;
%include prt_info;
%include tty_convert;
%include terminal_type_data;

	ttdp = addr (local_terminal_type_data);
	terminal_type_data.version = ttd_version_3;
	call ttt_info_$terminal_data (remote_ttt_info.terminal_type, -1, 300, ttdp, code);
	if code ^= 0 then return;

	if terminal_type_data.input_tr_ptr ^= null then
	     remote_ttt_info.input_mvtp = addr (terminal_type_data.input_tr_ptr -> cv_trans_struc.cv_trans);
	if terminal_type_data.output_tr_ptr ^= null then
	     remote_ttt_info.output_mvtp = addr (terminal_type_data.output_tr_ptr -> cv_trans_struc.cv_trans);
	if terminal_type_data.input_cv_ptr ^= null then
	     remote_ttt_info.input_tctp = addr (terminal_type_data.input_cv_ptr -> cv_trans_struc.cv_trans);
	if terminal_type_data.output_cv_ptr ^= null then
	     remote_ttt_info.output_tctp = addr (terminal_type_data.output_cv_ptr -> cv_trans_struc.cv_trans);
	if terminal_type_data.input_cv_ptr ^= null then
	     remote_ttt_info.input_tctp = addr (terminal_type_data.input_cv_ptr -> cv_trans_struc.cv_trans);
	if terminal_type_data.special_ptr ^= null then
	     remote_ttt_info.specp = addr (terminal_type_data.special_ptr -> special_chars_struc.special_chars);
	remote_ttt_info.specp = addr (terminal_type_data.special_ptr -> special_chars_struc.special_chars);
	remote_ttt_info.erase_char = terminal_type_data.erase;
	remote_ttt_info.kill_char = terminal_type_data.kill;


	return;
     end get_ttt_info_;
