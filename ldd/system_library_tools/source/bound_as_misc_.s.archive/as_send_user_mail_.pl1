/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
   *                                                         *
   *********************************************************** */
/* as_send_user_mail_ -- as utility to send mail to user */
/* format: style2,idind30 */

/**** NOTE: This does NOT validate the user's access to deliver
      mail to the destination. Clients of this should not
      set Destination to other than "" unless they are willing
      to use the AS's full access in delivering.

      Also note that this does not yet send interactive messages
      at all. Until the mail system can do without headers on
      interactive messages, this seems required. */

as_send_user_mail_:
     procedure (Caller, Destination, Group_id, Subject, Message, Access_class, Sender);

	declare (
	        Caller,				/* for error messages */
	        Destination,			/* preferred destination */
	        Group_id,				/* user name used to construct possible default destinations */
	        Subject,
	        Message,
	        Sender
	        )			        char (*);
	declare Access_class	        bit (72) aligned;
	declare code		        fixed bin (35);

	declare mlsys_utils_$send_message_to_recipient
				        entry (char (*), char (*), fixed bin, char (*), char (*),
				        bit (72) aligned, char (*) varying, fixed bin (35));

	declare sys_log_$error_log	        entry options (variable);

	declare mlsys_et_$message_delivered   fixed bin (35) ext static;
	declare mlsys_et_$message_queued      fixed bin (35) ext static;
	declare mlsys_et_$message_queued_and_delivered
				        fixed bin (35) ext static;


	if Destination ^= ""
	then do;
		call try_delivery (Destination, code);
		if code ^= 0
		then call sys_log_$error_log (SL_LOG_SILENT, code, Caller,
			"Failed to deliver mail to requested destination ^a.", Destination);
		else return;			/* all done */
	     end;

	call try_delivery (before (Group_id, "."), code); /* try for mail table */
	if code ^= 0
	then call try_delivery (substr (Group_id, 1, length (rtrim (Group_id)) - 2 /* tag */), code);
	if code ^= 0
	then call sys_log_$error_log (SL_LOG_SILENT, code, Caller, "Failed to deliver mail to user ^a.", Group_id);
	return;

try_delivery:
     procedure (addr, code);

	declare addr		        char (*);
	declare code		        fixed bin (35);

	call mlsys_utils_$send_message_to_recipient (Sender, addr, ORDINARY_DELIVERY, Subject, Message, Access_class,
	     (""), code);
	if code = mlsys_et_$message_delivered | code = mlsys_et_$message_queued
	     | code = mlsys_et_$message_queued_and_delivered
	then code = 0;
	return;
     end try_delivery;



%include mlsys_deliver_info;
%include sys_log_constants;
     end as_send_user_mail_;
