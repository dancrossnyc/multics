/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1987                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        *********************************************************** */


/****^  HISTORY COMMENTS:
  1) change(85-12-05,Swenson), approve(87-07-13,MCR7741),
     audit(87-07-24,Brunelle), install(87-08-04,MR12.1-1055):
     Modified to pass the command_error and command_question conditions.
                                                   END HISTORY COMMENTS */


/* format: style4 */

as_check_condition_: proc (a_condition, a_continue, a_non_local);

/* Answering Service utility to do the right thing by "ucs" handlers. */
/* 82-09-24 wrought  by E. N. Kittlitz. */
/* 82-12-02 modified by E. N. Kittlitz. don't continue on command_question, command_error, command_abort_ */
/* 1985-01-02, BIM: added signal_io_ to condition list. */

dcl  a_condition char (*);				/* condition name */
dcl  a_continue bit (1) unaligned;			/* set "1"b if caller should pass on condition */
dcl  a_non_local bit (1) unaligned;			/* set "1"b if this is an unwinder */

dcl  i fixed bin;

dcl  hbound builtin;

dcl  non_local_names (3) char (20) unaligned static options (constant) init (
	"cleanup",
	"finish",
	"program_interrupt");

dcl  continue_names (12) char (20) unaligned static options (constant) init (
	"alrm",
	"cput",
	"command_error",
	"command_question",
	"endfile",
	"endpage",
	"mme2",
	"quit",
	"signal_io_",
	"storage",
	"sus_",
	"trm_");
%page;
	do i = 1 to hbound (non_local_names, 1);
	     if a_condition = non_local_names (i) then do;
		a_continue = "0"b;			/* it's up to you */
		a_non_local = "1"b;			/* but I'd like to go further */
		return;
	     end;
	end;

	do i = 1 to hbound (continue_names, 1);
	     if a_condition = continue_names (i) then do;
		a_continue = "1"b;			/* don't bother looking */
		a_non_local = "0"b;
		return;
	     end;
	end;

	a_continue, a_non_local = "0"b;
	return;

     end as_check_condition_;
