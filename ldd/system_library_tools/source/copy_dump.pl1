/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


copy_dump: proc;

/*	copy_fdump - interface to hphcs_$copy_fdump - October, 1971 David M. Jordan

   This procedure interfaces to hphcs_$copy_fdump and to
   hphcs_$set_fdump_num.

   ENTRY:	copy_dump$copy_dump

   This entry copies the contents of the dump partition into the Multics
   heirarchy in >dumps.  The contents are placed into up to ten segments in
   that directory with names of the form:

   mmddyy.tttt.s.eee

   where

   mmddyy	is the date the dump was taken
   tttt	is the time the dump was taken
   s	is a sequence number (0, 1, 2, ... 9)
   eee	is the ERF number used in reporting this dump

   Note that copy_dump will copy a given dump only once and will return an
   error code if an attempt is made to re-copy a dump.

   ENTRY:	copy_dump$set_fdump_number eee
   or copy_dump$sfdn eee

   where

   eee	is the ERF number to be assigned to the next FDUMP taken.

   This entry sets the value of the next FDUMP to be taken by changing
   the value associated with the ERF number in the dump partition.

   Note that copy_dump$set_fdump_number will modify the dump partition only
   after the last dump taken has been copied.  If an attempt is made to change
   the ERF number before a dump has been copied an error message will be returned.

*/

declare  code fixed bin (35),				/* error code */
         aptr pointer,				/* argument pointer */
         alen fixed bin,				/* argument length */
         arg char (alen) based (aptr),			/* argument */
         erf_no fixed bin;				/* fdump erf number to be set */

declare (hphcs_$copy_fdump entry (fixed bin (35)),
         com_err_ entry options (variable),
         cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35)),
         cv_dec_check_ entry (char (*), fixed bin (35)) returns (fixed bin),
         error_table_$badcall fixed bin (35),
         error_table_$noarg fixed bin (35),
         hphcs_$set_fdump_num entry (fixed bin, fixed bin (35))) external;


	call hphcs_$copy_fdump (code);

	if code ^= 0
	then call com_err_ (code, "copy_dump");
	return;

set_fdump_number: sfdn: entry;

	call cu_$arg_ptr (1, aptr, alen, code);

	if code ^= 0
	then do;

	     call com_err_ (error_table_$noarg, "set_fdump_number",
		"Usage is:^/set_fdump_number erf^/Where ""erf"" is the number of the next ERF.");
	     return;

	end;

	erf_no = cv_dec_check_ (arg, code);

	if code ^= 0
	then do;

	     call com_err_ (error_table_$badcall, "set_fdump_number", "Not a decimal number: ^a", aptr -> arg);
	     return;

	end;

	call hphcs_$set_fdump_num (erf_no, code);

	if code ^= 0
	then call com_err_ (code, "set_fdump_number");

	return;
     end copy_dump;
