/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
   *                                                         *
   *********************************************************** */
/* CREATE_PNT:  Program to create an empty PNT.  Used by acct_start_up.ec
   when setting up the answering service environment for the first time. */

/* format: style2 */
/* Written 1984-07-26 by E. Swenson */
/* Modified 1984-09-20 by E. Swenson to use pnt_manager_. */

create_pnt:
     procedure options (variable);

/* Automatic */

	dcl     argument_idx	 fixed bin (17);
	dcl     argument_lth	 fixed bin (21);
	dcl     argument_ptr	 ptr;
	dcl     code		 fixed bin (35);
	dcl     dirname		 char (168);
	dcl     entryname		 char (32);
	dcl     n_arguments		 fixed bin (17);
	dcl     size		 fixed bin (17);

/* External Entries */

	dcl     com_err_		 entry () options (variable);
	dcl     cu_$arg_count	 entry (fixed bin, fixed bin (35));
	dcl     cu_$arg_ptr		 entry (fixed bin, ptr, fixed bin (21), fixed bin (35));
	dcl     cv_dec_check_	 entry (char (*), fixed bin (35)) returns (fixed bin (35));
	dcl     expand_pathname_$add_suffix
				 entry (char (*), char (*), char (*), char (*), fixed bin (35));
	dcl     pathname_		 entry (char (*), char (*)) returns (char (168));
	dcl     pnt_manager_$create	 entry (char (*), char (*), fixed bin (17), fixed bin (35));

/* External Static */

	dcl     error_table_$noarg	 fixed bin (35) external static;
	dcl     error_table_$bad_arg	 fixed bin (35) external static;
	dcl     error_table_$badopt	 fixed bin (35) external static;

/* Based */

	dcl     argument		 char (argument_lth) based (argument_ptr);

/* Constant */

	dcl     ME		 char (32) initial ("create_pnt") internal static options (constant);
	dcl     SIZE_DEFAULT	 fixed bin (17) initial (100) internal static options (constant);

%page;
	call cu_$arg_count (n_arguments, code);
	if code ^= 0
	then do;
		call com_err_ (code, ME);
		return;
	     end;

	if n_arguments = 0
	then do;
		call com_err_ (0, ME, "Usage: ^a pathname_of_new_pnt -control_args", ME);
		return;
	     end;

	call cu_$arg_ptr (1, argument_ptr, argument_lth, (0));
	call expand_pathname_$add_suffix (argument, "pnt", dirname, entryname, code);
	if code ^= 0
	then do;
		call com_err_ (code, ME, "^a", argument);
		return;
	     end;

	size = SIZE_DEFAULT;			/* Initialize default size of PNT */

	do argument_idx = 2 to n_arguments;
	     call cu_$arg_ptr (argument_idx, argument_ptr, argument_lth, (0));
	     if argument = "-size"
	     then do;
		     if argument_idx = n_arguments
		     then do;
			     call com_err_ (error_table_$noarg, ME, "-size");
			     return;
			end;
		     argument_idx = argument_idx + 1;
		     call cu_$arg_ptr (argument_idx, argument_ptr, argument_lth, (0));
		     size = cv_dec_check_ (argument, code);
		     if code ^= 0
		     then do;
			     call com_err_ (error_table_$bad_arg, ME, "-size ^a", argument);
			     return;
			end;
		end;
	     else do;
		     call com_err_ (error_table_$badopt, ME, "^a", argument);
		     return;
		end;
	end;

	call pnt_manager_$create (dirname, entryname, size, code);
	if code ^= 0
	then call com_err_ (code, ME, "Creating PNT ^a.", pathname_ (dirname, entryname));
	return;

     end create_pnt;
