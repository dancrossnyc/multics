/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


copy_as_meters: proc;

/* This program copies the contents of "stat_seg"
   from where the answering service program as_meter_
   has created it into a file in the user area, and
   resets the stat_seg pointer to start again at the bottom.

   THVV 2/72 */
/* Modofied June 1979 by C. Hornig to copy wholw stat_seg. */

dcl  dn char (168) aligned,
     en char (32) aligned,
     statp ptr,
     movelen fixed bin,
     ap ptr,
     al fixed bin,
     ec fixed bin,
     p ptr;

dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin),
     expand_path_ entry (ptr, fixed bin, ptr, ptr, fixed bin),
     ioa_ entry options (variable),
     com_err_ entry options (variable);

dcl  hcs_$initiate entry (char (*) aligned, char (*) aligned, char (*) aligned, fixed bin (1),
     fixed bin (2), ptr, fixed bin),
     hcs_$make_seg entry (char (*) aligned, char (*) aligned, char (*) aligned, fixed bin (5), ptr, fixed bin),
     hcs_$terminate_noname entry (ptr, fixed bin);

dcl (addr, null) builtin;

declare  sys_info$max_seg_size fixed bin (19) external static;

dcl 1 movetable based aligned,
    2 moveary (movelen) fixed bin (35);

%include stat_seg;

/* ------------------------------------------------------- */

	call cu_$arg_ptr (1, ap, al, ec);
	if ec ^= 0 then do;
er:	     call com_err_ (ec, "copy_as_meters", "");
	     return;
	end;
	call expand_path_ (ap, al, addr (dn), addr (en), ec);
	if ec ^= 0 then go to er;

	call hcs_$make_seg (dn, en, "", 1011b, p, ec);
	if p = null then go to er;

	call hcs_$initiate (">system_control_dir", "stat_seg", "", 0, 1, statp, ec);
	if statp = null then go to er;

	if statistics.wrapped ^= 0			/* is it has wrapped */
	then movelen = sys_info$max_seg_size;		/* copy the whole segment */
	else movelen = STAT_header_lth + statistics.index * STAT_entry_lth; /* otherwise copy the used part */

	p -> movetable = statp -> movetable;

	statp -> statistics.index = 0;
	statp -> statistics.wrapped = 0;

	if p -> statistics.wrapped ^= 0 then call ioa_ ("wrapped");

	call hcs_$terminate_noname (p, ec);
	call hcs_$terminate_noname (statp, ec);

     end;
