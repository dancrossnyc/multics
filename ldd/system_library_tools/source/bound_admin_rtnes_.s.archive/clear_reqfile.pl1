/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
%;
/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

clear_reqfile: proc;

dcl  (path, dn) char (168) aligned,
     en char (32) aligned,
    (i, j, k, l, m, n) fixed bin,
     movelen fixed bin,
     ap ptr,
     al fixed bin,
     bchr char (al) unaligned based (ap),
     ec fixed bin,
    (p, q, p1, q1, qp) ptr;

dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin),
     expand_path_ entry (ptr, fixed bin, ptr, ptr, fixed bin),
     com_err_ entry options (variable);

dcl (addr, null, substr) builtin;

dcl  hcs_$initiate entry (char (*) aligned, char (*) aligned, char (*) aligned, fixed bin (1),
     fixed bin (2), ptr, fixed bin),
     hcs_$make_seg entry (char (*) aligned, char (*) aligned, char (*) aligned, fixed bin (5), ptr, fixed bin),
     hcs_$set_bc entry (char (*) aligned, char (*) aligned, fixed bin (24), fixed bin),
     hcs_$terminate_noname entry (ptr, fixed bin),
     hcs_$delentry_seg entry (ptr, fixed bin),
     hcs_$truncate_seg entry (ptr, fixed bin, fixed bin);


dcl 1 movetable based aligned,
    2 moveary (movelen) fixed bin (35);

%include reqfile;

/* ====================================================== */

	call cu_$arg_ptr (1, ap, al, ec);
	if ec ^= 0 then do;
	     path = "reqfile";
	     al = 7;
	end;
	else path = bchr;
	call expand_path_ (addr (path), al, addr (dn), addr (en), ec);
	if ec ^= 0 then do;
er:	     call com_err_ (ec, "clear_reqfile", path);
	     return;
	end;

	call hcs_$initiate (dn, en, "", 0, 1, qp, ec);
	if qp = null then go to er;

	call hcs_$make_seg ("", "", "", 1011b, p, ec);
	if p = null then go to er;

	movelen = loqh;
	p -> movetable = qp -> movetable;

	movelen = loqe;

	m = 0;
	     do i = 1 to nacts;
	if qdf(i) ^= 0 then go to skip;
	m = m + 1;
		p1 = addr (reqfiletab (i));
		q1 = addr (p -> reqfiletab (m));
		q1 -> movetable = p1 -> movetable;
skip:	     end;

	movelen = loqh + m * loqe;

	call hcs_$truncate_seg (qp, 0, ec);
	qp -> movetable = p -> movetable;
	nacts = m;
	call hcs_$set_bc(dn,en,movelen*36,ec);

	call hcs_$terminate_noname (qp, ec);
	call hcs_$delentry_seg (p, ec);

     end;
