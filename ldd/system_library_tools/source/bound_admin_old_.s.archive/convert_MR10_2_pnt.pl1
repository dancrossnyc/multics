/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
   *                                                         *
   *********************************************************** */
/* CONVERT_MR10_2_PNT: This program converts a MR10.2 PNT to an MR11 PNT.
   MR11 PNTs use Version 3 MSTBs for better integrity and use a new format
   PNT entry which accomodates longer passwords, AIM ranges, and a version
   number (currently 2). */

/* format: style2 */

/* Written 1984-08-08 by E. Swenson */
/* Modified 1984-09-18 by E. Swenson to use pnt_admin_gate_. */

convert_MR10_2_pnt:
     procedure options (variable);

/* Automatic */

	dcl     argument_idx	 fixed bin (17);
	dcl     argument_lth	 fixed bin (21);
	dcl     argument_ptr	 ptr;
	dcl     code		 fixed bin (35);
	dcl     dirname		 char (168);
	dcl     entryname		 char (32);
	dcl     n_arguments		 fixed bin (17);
	dcl     pathname		 char (168);

/* Based */

	dcl     argument		 char (argument_lth) based (argument_ptr);

/* External Entries */

	dcl     com_err_		 entry () options (variable);
	dcl     cu_$arg_count	 entry (fixed bin, fixed bin (35));
	dcl     cu_$arg_ptr		 entry (fixed bin, ptr, fixed bin (21), fixed bin (35));
	dcl     expand_pathname_	 entry (char (*), char (*), char (*), fixed bin (35));
	dcl     ioa_		 entry options (variable);
	dcl     pnt_admin_gate_$convert_v2_pnt
				 entry (char (*), char (*), fixed bin (35));
	dcl     pathname_		 entry (char (*), char (*)) returns (char (168));

/* Constant */

	dcl     ME		 char (32) initial ("convert_MR10_2_pnt") internal static options (constant);
%page;
/* Program */

	call cu_$arg_count (n_arguments, code);
	if code ^= 0
	then do;
		call com_err_ (code, ME);
		return;
	     end;

	if n_arguments = 0
	then do;
		call com_err_ (0, ME, "Usage: ^a pathname_of_pnt_to_convert", ME);
		return;
	     end;

	call cu_$arg_ptr (1, argument_ptr, argument_lth, (0));
	call expand_pathname_ (argument, dirname, entryname, code);
	if code ^= 0
	then do;
		call com_err_ (code, ME, "^a", argument);
		return;
	     end;

	pathname = pathname_ (dirname, entryname);

	call ioa_ ("^a: Beginning conversion of ^a.", ME, pathname);
	call pnt_admin_gate_$convert_v2_pnt (dirname, entryname, code);
	if code ^= 0
	then do;
		call com_err_ (code, ME, "Converting ^a", pathname);
		return;
	     end;
	call ioa_ ("^a: Finished conversion of ^a.", ME, pathname);
	return;

     end convert_MR10_2_pnt;
