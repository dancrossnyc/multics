/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


/* Modified July 1983 by B. Margolin to delete the corresponding
   Mail Table entry */

remove_user: procedure options (variable);

declare  iox_$user_input pointer external;

declare  pnt_manager_$remove_entry entry (character (*), fixed bin (35)),
         urf_manager_$remove_entry entry (character (*), fixed bin (35)),
         mail_table_priv_$delete entry (char (*) varying, bit (1), fixed bin (35)),
         cu_$arg_ptr entry (fixed bin, pointer, fixed bin (21), fixed bin (35)),
         cu_$arg_count entry returns (fixed bin),
         iox_$get_line entry (ptr, ptr, fixed bin (21), fixed bin (21), fixed bin (35)),
        (com_err_, ioa_) entry options (variable);

declare  ME char (32) init ("remove_user") static options (constant);

declare  arg char (al) based (ap);
declare  al fixed bin (21),
         ap pointer,
        (nargs, i) fixed bin,
         uid character (32),
         code fixed bin (35);

declare (addr, length, substr) builtin;

	nargs = cu_$arg_count ();
	if nargs = 0
	then do;
	     call ioa_ ("User ID:");
	     call iox_$get_line (iox_$user_input, addr (uid), length (uid), al, code);
	     if code ^= 0 then do;
		call com_err_ (code, ME, "Reading user ID.");
		return;
	     end;
	     substr (uid, al) = "";			/* blank out rest of string */
	     call process (uid);
	end;
	else do i = 1 to nargs;
	     call cu_$arg_ptr (i, ap, al, code);
	     if code ^= 0 then do;
		call com_err_ (code, ME, "Getting argument ^d.", i);
		return;
	     end;
	     call process (arg);
	end;
	return;

process:	procedure (User);
declare  User char (*) parameter;
declare  code fixed bin (35);

	     call pnt_manager_$remove_entry (User, code);
	     if code ^= 0 then call com_err_ (code, ME, "Deleting PNT entry for ""^a"".", User);
	     call urf_manager_$remove_entry (User, code);
	     if code ^= 0 then call com_err_ (code, ME, "Deleting URF entry for ""^a"".", User);
	     call mail_table_priv_$delete (rtrim (User), "1"b, code);
	     if code ^= 0 then call com_err_ (code, ME, "Deleting Mail Table entry for ""^a"".", User);
	end process;

     end;
