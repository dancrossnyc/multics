/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1988                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */

print_projfile: proc;

/* Print out "projfile" */
/*
   Modified Feb 1980 by M. B. Armstrong to implement multiple rate structures. (UNCA)
   Modified June 1981 by E. N. Kittlitz for UNCA rate structures.
   Modified 1984-08-27 BIM for projfile version, unaligned strings.
*/


/****^  HISTORY COMMENTS:
  1) change(87-08-11,GDixon), approve(88-08-15,MCR7969),
     audit(88-08-04,Lippard), install(88-08-29,MR12.2-1093):
     Set ec error code when only rate structure 0 is used. (phx14422)
                                                   END HISTORY COMMENTS */


dcl  ap ptr,
     al fixed bin (21),
     bchr char (al) based (ap),
     dn char (168),
    (dt1, dt2) char (8),
     x (0:7) float bin,
     disk_price (0:9) float bin,
     dcost float bin,
    (co, dp) char (64) aligned,
     en char (32),
    (i, np) fixed;
dcl  pp ptr;
dcl  ec fixed bin (35);
dcl  rs_number fixed bin;				/* rate structure index */
dcl  max_rs_number fixed bin;

dcl  com_err_ entry options (variable),
     cu_$arg_ptr entry (fixed bin, ptr, fixed bin (21), fixed bin (35)),
     get_wdir_ entry () returns (char (168)),
     cv_$mwvf entry (float bin) returns (char (15)),
     date_time_ entry (fixed bin (71), char (*)),
     system_info_$titles entry options (variable),
     system_info_$max_rs_number entry (fixed bin),
     expand_pathname_ entry (char (*), char (*), char (*), fixed bin (35)),
     hcs_$initiate entry (char (*), char (*), char (*), fixed bin (1), fixed bin (2), ptr, fixed bin (35)),
     hcs_$terminate_noname entry (ptr, fixed bin (35)),
     ioa_ entry options (variable);
dcl  search_sat_$rs_number entry (char (*), fixed bin, fixed bin (35));
dcl  search_sat_$clean_up entry;
dcl  system_info_$prices_rs entry (fixed bin,
    (0: 7) float bin, (0: 7) float bin, (0: 7) float bin, (0: 7) float bin, float bin, float bin);
dcl  error_table_$noentry external fixed bin (35);

dcl  null builtin;


%include projfile;

/* - - - - */

	call system_info_$max_rs_number (max_rs_number);

	call cu_$arg_ptr (1, ap, al, ec);
	if ec ^= 0 then do;
	     dn = get_wdir_ ();
	     en = "projfile";
	end;
	else do;
	     call expand_pathname_ (bchr, dn, en, ec);
	     if ec ^= 0 then go to er;
	end;
	call hcs_$initiate (dn, en, "", 0, 1, pp, ec);
	if pp = null then do;
er:	     call com_err_ (ec, "print_projfile", "");
	     return;
	end;

	np = pp -> projfile.nproj;

	call system_info_$titles (co, dp);
	call ioa_ ("^|^a^/^/^-^a^/^/Project file listing: ^d entries^/^/",
	     co, dp, np);
	if projfile.version ^= PROJFILE_VERSION
	then call com_err_ (0, "print_projfile", "Warning, projfile version is ^d, not current version ^d.", projfile.version, PROJFILE_VERSION);

	do rs_number = 0 to max_rs_number;		/* get all rates */
	     call system_info_$prices_rs (rs_number, x, x, x, x, disk_price (rs_number), x (1));
	end;

	do i = 1 to np;
	     call date_time_ (on (i), dt1);
	     if off (i) = 0 then dt2 = "";
	     else call date_time_ (off (i), dt2);
	     if max_rs_number = 0 then ec, rs_number = 0;
	     else call search_sat_$rs_number ((id (i)), rs_number, ec); /* get rate index */
	     if ^(ec = error_table_$noentry & disk_psec (i) = 0) then do;
		if ec ^= 0 then
		     call com_err_ (ec, "print_projfile",
		     "Trying to locate project ""^a"" in the sat.  Default rates will be used.", id (i));
	     end;
	     dcost = disk_psec (i) * disk_price (rs_number);
	     call ioa_ ("^9a^3x^52a ^8a ^8a",
		id (i), title (i), dt1, dt2);
	     call ioa_ ("^12xInvestigator: ^32a ^32a", inv (i), inv_addr (i));
	     call ioa_ ("^12xSupervisor:^3x^32a ^32a ^16a", sup (i), sup_addr (i), sup_phone (i));
	     call ioa_ ("^12xDisk charge:  ^15a  ^d/^d directory ^d/^d",
		cv_$mwvf (dcost), disk_quota (i), disk_use (i), dir_disk_quota (i), dir_disk_use (i));
	     if misc_charges (i) ^= 0e0 then
		call ioa_ ("^12xMisc charges: ^15a  ^d", cv_$mwvf (misc_charges (i)), n_misc (i));
	     call ioa_ ("");
	end;
	call hcs_$terminate_noname (pp, ec);
	call search_sat_$clean_up;			/* tidy up */
     end;
