/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */



/****^  HISTORY COMMENTS:
  1) change(2016-01-15,Swenson), approve(2016-01-15,MCR10003):
     Fix to support 4-character time zone abbreviations.
                                                   END HISTORY COMMENTS */

(stringsize):
gen_pl1_version_:
	procedure(pl1_version_struc,RELEASE,code);

/*     Written:  12 Dec 1979 by PCK to generate pl1_version information
	from the installation time (the current clock time) and the
	RELEASE string */

/* parameters */

dcl  RELEASE character(3) varying;
     /* RELEASE = "EXL" for the >experimental_library compiler,
	      = <release_number> for the >system_standard_library compiler */
dcl  1 pl1_version_struc,
	2 pl1_version character(256) varying,
	2 pl1_release character(3) varying;
dcl  code fixed bin(35);

/* external entries */

dcl  ioa_ entry options (variable);
dcl  decode_clock_value_$date_time entry (fixed bin(71), fixed bin, fixed bin, fixed bin, fixed bin, fixed bin, 
	fixed bin, fixed bin(71), fixed bin, char(4), fixed bin(35));

/* builtins */

dcl  (clock,addr) builtin;

/* internal static */

dcl  day_of_week_string(1:7) character(9) varying int static options(constant) 
     init("Monday","Tuesday","Wednesday","Thursday",
	"Friday","Saturday","Sunday");
dcl  month_string(1:12) character(9) varying int static options(constant)
     init("January","February","March","April","May","June","July","August",
	"September","October","November","December");
dcl  my_name character(16) int static init("gen_pl1_version_") options(constant);

/* conditions */

dcl  (stringsize,error) condition;

/* automatic */

dcl  (clock_reading,microsecond) fixed bin(71);
dcl  (month,day_of_month,year,day_of_week,hour,minute,second) fixed bin;
dcl  time_zone character(4) init("");
dcl  pl1_version_string character(256) varying;
dcl  year_pic picture "9999";
dcl  day_of_month_pic picture "zz";
dcl  hour_pic picture "99";
dcl  minute_pic picture "99";

/* on unit */

	on stringsize
	begin;
	     call ioa_("^a: ^a",my_name,"Stringsize raised.");
	     signal error;
	end;

/* program */

	/* Read system clock and convert to calendar date-time */

	clock_reading = clock();
	call decode_clock_value_$date_time(clock_reading,month,day_of_month
	     ,year,hour,minute,second,microsecond,day_of_week,time_zone,code);

	if code^=0
	then return;

	year_pic = year;
	day_of_month_pic = day_of_month;

	/* Generate a pl1_version_string appropriate for an EXL or SSS compiler */

	if RELEASE ^= "EXL"
	then pl1_version_string = "Multics PL/I Compiler, Release "
		|| RELEASE || ", of " || month_string(month)
		|| " " || ltrim(day_of_month_pic) || ", " || year_pic;
	else do;
		hour_pic = hour;
		minute_pic = minute;
		pl1_version_string = "Experimental PL/I Compiler of "
		     || day_of_week_string(day_of_week) || ", "
		     || month_string(month) || " " || day_of_month_pic
		     || ", " || year_pic || " at " || hour_pic
		     || ":" || minute_pic;
	     end;
	

	/* Fill in pl1_version_struc with version and release info */

	pl1_version = pl1_version_string;
	pl1_release = RELEASE;

	code = 0;
	return;

	end /* gen_pl1_version_ */;
