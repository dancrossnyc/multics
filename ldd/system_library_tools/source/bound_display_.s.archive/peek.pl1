/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


peek:	proc(string);

/*	Modified: 1 April 1980 by PCK to add by_name_agg	*/

dcl	string char(*);

dcl	p ptr static,
	set bit(1) aligned,
	debug entry,
	(index,null,ptr,substr) builtin,
	pl1_stat_$root ptr ext,
	cu_$arg_count entry returns(fixed bin),
	cv_oct_ entry(char(*) aligned) returns(fixed bin),
	n fixed bin;

%include by_name_agg;
%include reference;
%include operator;
%include symbol;
%include statement;
%include label;
%include list;
%include block;
%include context;
%include token;
%include cross_reference;
%include machine_state;
%include temporary;
%include array;
%include default;
%include sf_par;
%include fdata_nodes;

	set = "0"b;

join:	if cu_$arg_count() = 0 then p = null;
	else do;
	     n = index(string,"|");
	     if n = 0 then p = ptr(pl1_stat_$root,cv_oct_((string)));
	     else p = ptr(baseptr(cv_oct_(substr(string,1,n-1))),cv_oct_(substr(string,n+1)));
	     end;

	if ^ set then call debug;

	return;

l:	p -> reference.symbol,
	p -> symbol.reference,
	p -> operator.operand(1),
	p -> block.son,
	p -> token.next,
	p -> temporary.next,
	p -> context.next,
	p -> label.next,
	p -> cross_reference.next,
	p -> list.element(1),
	p -> machine_state.next,
	p -> array.bounds,
	p -> bound.lower,
	p -> default.next,
	p -> sf_par.parsym,
	p -> data_list.next,
	p -> by_name_agg.next,
	p -> statement.root = p;
	return;

peek$set: entry(string);

	set = "1"b;
	goto join;

	end;
