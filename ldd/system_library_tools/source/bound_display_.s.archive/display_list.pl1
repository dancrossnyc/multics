/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


display_list: proc(q,tree_level) recursive;			/* prints initial lists */

/*	Modified on:	23 October 1970 by PG */
/*	Modified on:	19 November 1979 by PCK to print a tree level indented listing */

dcl	(p,q,r) ptr,
	tree_level fixed bin,
	(ioa_,ioa_$nnl) entry options(variable),
	display_any_node_name entry(char(*) aligned,ptr,fixed bin),
	display_exp entry(ptr,fixed bin),
	(i,n) fixed bin(15);

dcl	null builtin;

%include token;
%include list;
%include nodes;
	p = q;
begin:
	if p=null then return;
	if p->node.type ^= list_node
	then do;
		call display_any_node_name("display_list: arg is not a list node, arg=",p,tree_level+1);
		return;
	end;
	n=p->list.number;
	call ioa_("^/^vxLIST ^p, ^d elements",tree_level,p,n);
	do i=1 to n;
	r=p->list.element(i);
	if r ^= null
	then do; call ioa_("^vxELEMENT (^d) of ^p =",tree_level,i,p);
		call display_exp(r,tree_level+1);  end;
	else call ioa_("^vxELEMENT (^d) of ^p = NULL",tree_level,i,p);
	end;

	call ioa_("^vxEND LIST ^p^/",tree_level,p);

	return;
	end display_list;
