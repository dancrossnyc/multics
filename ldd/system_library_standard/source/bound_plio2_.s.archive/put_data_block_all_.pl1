/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

/* written 05.30.73 by A. Downing as part of the pl1 runtime suport */
put_data_block_all_: proc (psp) options(support);
dcl (duplication, n) fixed bin;
dcl (block_ptr,					/* points at current block */
     save_sp,					/* save the stack pointer */
     save_bp,					/* save the block ptr */
     sslpsaved,
     psp) ptr,					/* points at ps */
     more bit(1) aligned,
     ptrsave bit(72) aligned based,
     put_data_var_all_ ext entry (fixed bin, fixed bin, ptr, ptr, ptr),
     1 bounds (128) aligned int static,
     2 lower fixed bin,
     2 upper fixed bin,
    (addrel,addr, rel, null) builtin;

%include stu_frame;
%include runtime_symbol;
%include plio2_ps;











	block_ptr = ps.ST_block_p;

  	addr(sslpsaved)->ptrsave=addr(ps.ss_list_p)->ptrsave;
	addr(save_bp  )->ptrsave=addr( block_ptr  )->ptrsave;
	addr(save_sp  )->ptrsave=addr( ps.stack_frame_p  )->ptrsave;

	duplication = 0;
	more="1"b;

	do while(more);
	     n = 0;
	     call put_data_var_all_ (duplication, n, addrel (block_ptr, block_ptr -> runtime_block.start), addr (bounds), psp);
	     block_ptr = addrel (block_ptr, block_ptr -> runtime_block.father);

	     if block_ptr -> runtime_block.father = block_ptr -> runtime_block.header
	     then more="0"b;
	     else
		do;
		     if ^ block_ptr -> runtime_block.quick then
		     psp -> ps.stack_frame_p = ps.stack_frame_p -> frame.display;
		     psp -> ps.ST_block_p = block_ptr;
		end;
	end;

	addr(ps.ST_block_p   )->ptrsave=addr( save_bp  )->ptrsave;
	addr(ps.stack_frame_p)->ptrsave=addr( save_sp  )->ptrsave;
	addr(ps.ss_list_p    )->ptrsave=addr(sslpsaved )->ptrsave;

	return;

     end put_data_block_all_;
