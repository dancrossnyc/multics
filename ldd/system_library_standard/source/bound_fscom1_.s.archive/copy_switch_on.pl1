/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


/* Copy switch commands:
	copy_switch_on, csn 	Turn it on.
	copy_switch_off, csf	Turn it off.
   first coded by Noel I. Morris  April 1969
   last modified by M. Weaver  22 January 1970  14:35
   Names changed to copy_switch_(on off) and moved to >sss>bound_fscom1_ 05/25/79 S. Herbst
   Fixed to print proper error messages 05/31/79 W. Olin Sibert */

copy_switch_on: csn: setcopysw: proc options (variable);

dcl  np ptr;
dcl  path char (168);
dcl  entry char (32);
dcl  name char (lng) based (np);
dcl  err_name char (32) aligned;
dcl  sw fixed bin (1);
dcl  nargs fixed bin;
dcl (lng, i) fixed bin;
dcl  code fixed bin (35);

dcl  error_table_$noarg ext fixed bin (35);
dcl  cu_$arg_count entry (fixed bin);
dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35));
dcl  com_err_ entry options (variable);
dcl  expand_pathname_ entry (char (*), char (*), char (*), fixed bin (35));
dcl  hcs_$set_copysw entry (char (*), char (*), fixed bin (1), fixed bin (35));

/*  */

	sw = 1b;					/* turn on copy switch */
	err_name = "copy_switch_on";
	go to join;

copy_switch_off: csf: resetcopysw: entry options (variable);

	sw = 0b;					/* turn off copy switch */
	err_name = "copy_switch_off";

join:
	call cu_$arg_count (nargs);
	if nargs = 0 then do;
	     call com_err_ (error_table_$noarg, err_name, "^/Usage:^-^a path{s}", err_name);
	     return;
	end;

	do i = 1 to nargs;				/* process all arguments */
	     call cu_$arg_ptr (i, np, lng, code);	/* grab an argument */

	     call expand_pathname_ (name, path, entry, code); /* get directory and entry names */
	     if code ^= 0 then do;
		call com_err_ (code, err_name, "^a", name);
		return;
	     end;

	     call hcs_$set_copysw (path, entry, sw, code); /* fix the copy switch */
	     if code ^= 0 then do;
		call com_err_ (code, err_name, "^a^[>^]^a", path, (path ^= ">"), entry);
		return;
	     end;

	end;

	return;

     end copy_switch_on;
