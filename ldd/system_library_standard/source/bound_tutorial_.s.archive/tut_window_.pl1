/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */

/* format: style2 */

/* Written by J. Siwila 3/30/83 */

/* This procedure carves out the menu and io windows for the Tutorial. */

tut_window_:
     proc (iocb_ptr, auto_window_info, new_height, change_origin, code);


/* Automatic */

	dcl     change_origin	 bit (1) aligned;
	dcl     code		 fixed bin (35);
	dcl     ME_TUT_WINDOW	 char (11) init ("tut_window_");
	dcl     iocb_ptr		 ptr;
	dcl     1 user_io_window_info	 like window_position_info;
	dcl     1 auto_window_info	 like window_position_info;
	dcl     new_height		 fixed bin;
	dcl     new_origin		 fixed bin;
	dcl     height_change	 fixed bin;

/* Builtin */

	dcl     addr		 builtin;

/* Entries */

	dcl     tut_quit_		 entry () options (variable);

/* Static */

	dcl     MIN_USER_IO_HEIGHT	 fixed bin static options (constant) init (5);
	dcl     USER_IO		 char (8) static options (constant) init ("user_i/o");

	auto_window_info.version = window_position_info_version_1;
	call window_$clear_window (iocb_ptr, code);
	if code ^= 0
	then do;
		call tut_quit_ (code, ME_TUT_WINDOW, "This ain't it.", iocb_ptr, auto_window_info);
		return;
	     end;

	call iox_$control (iocb_ptr, "get_window_info", addr (auto_window_info), code);
	if code ^= 0
	then do;
		call tut_quit_ (code, ME_TUT_WINDOW, "Can't get window info.", iocb_ptr, auto_window_info);
		return;
	     end;
	height_change = new_height - auto_window_info.height;
	if change_origin
	then do;
		if new_height < MIN_USER_IO_HEIGHT
		then do;
			call tut_quit_ (0, ME_TUT_WINDOW, "Window""user_i/o"" is too small.", iocb_ptr,
			     auto_window_info);
			return;
		     end;
		new_origin = auto_window_info.line - height_change;
		auto_window_info.line = new_origin;
	     end;
	auto_window_info.height = new_height;
	call iox_$control (iocb_ptr, "set_window_info", addr (auto_window_info), code);
	if code ^= 0
	then do;
		call tut_quit_ (code, ME_TUT_WINDOW, "Unable to shrink window""user_i/o"".", iocb_ptr,
		     auto_window_info);
		return;
	     end;


%page;
%include iox_dcls;
%page;
%include window_dcls;
%page;
%include window_control_info;
%page;
%include menu_dcls;

     end tut_window_;
