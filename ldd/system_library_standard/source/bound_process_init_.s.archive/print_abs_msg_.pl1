/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


/* format: style2 */
/* First thusly manifested at some unknown time, courtesy of some masked (and wired) man -- probably BIM. */
/* Fixed to rtrim its control strings, to prevent trailing space in absouts 09/15/82 S. Herbst */
/* Modified October 1982 by E. N. Kittlitz to print absentee request id */
/* Modified June 1984 by J A Falksen to utilize date_time_$format("date_time",... */

print_abs_msg_:
print_abs_logout_msg_:
     procedure;					/* synonym for logout */


	dcl     request_id		 fixed bin (71);
	dcl     time		 char (64)var;
	dcl     person		 char (22);
	dcl     project		 char (9);
	dcl     login_time		 fixed bin (71);
	dcl     (mins, secs)	 fixed bin (35);
	dcl     minstring		 char (16);
	dcl     anonymous		 fixed bin;	/* = 1 if this is an anonymous process */

	dcl     date_time_$format	 entry (char(*), fixed bin(71), char(*), char(*)) returns(char(250) var);
	dcl     (
	        ioa_$ioa_switch,
	        ioa_$rsnnl
	        )			 entry options (variable);
	dcl     hcs_$get_process_usage entry (ptr, fixed bin (35));
	dcl     request_id_ entry (fixed bin(71)) returns(char(19));
	dcl     user_info_$absentee_request_id entry (fixed bin (71));
	dcl     user_info_$login_data	 entry options (variable);

	dcl     logout_control	 char (120) aligned static options (constant)
				 init (
				 "^/^[A^;Anonymous a^]bsentee user ^a ^a logged out ^a^/CPU usage ^a, memory usage ^.1f units"
				 );

	dcl     login_control	 char (120) aligned static options (constant)
				 init ("^/^[A^;Anonymous a^]bsentee user ^a ^a logged in: ^a, request_id: ^a");

	dcl     1 data,				/* filled in by hcs_$get_process_usage */
		2 wanted		 fixed bin,
		2 can_get		 fixed bin,
		2 cpu_usage	 fixed bin (71),
		2 memory		 fixed bin (71),
		2 demand_page	 fixed bin (35),
		2 pre_page	 fixed bin (35),
		2 virtual_cpu	 fixed bin (71);

dcl  iox_$user_io ptr ext static;

dcl (addr, clock, divide, float, mod, rtrim) builtin;
%page;
logout:
     entry;
	call user_info_$login_data (person, project, (""), anonymous);
	data.wanted = 5;
	call hcs_$get_process_usage (addr (data), (0));	/* get data for logout message */
	secs = float (data.virtual_cpu, 63) / 1e6 + .5e0; /* convert microseconds to seconds, rounded */
	data.memory = float (data.memory, 63) / 1e3;	/* convert memory units to kilomemory units */
	if secs >= 60
	then do;					/* must print out minutes */
		mins = divide (secs, 60, 35, 0);	/* calculate minutes */
		secs = mod (secs, 60);		/* calculate remaining seconds */
		call ioa_$rsnnl ("^d min ^d sec", minstring, (0), mins, secs);
	     end;
	else do;					/* need seconds only */
		call ioa_$rsnnl ("^d sec", minstring, (0), secs);
	     end;
	time = date_time_$format ("date_time",clock (),"","");   /* get time */
	call ioa_$ioa_switch (iox_$user_io, rtrim (logout_control), (anonymous ^= 1), person, project, time, minstring, data.memory);  
						/* print absentee logout message */

	return;

login:
     entry;

	call user_info_$login_data (person, project, "", anonymous, (0), (0), login_time);
	call user_info_$absentee_request_id (request_id);

	time = date_time_$format ("date_time",login_time,"","");
	call ioa_$ioa_switch (iox_$user_io, rtrim (login_control), (anonymous ^= 1), person, project, time, request_id_ (request_id));
						/* recurse to put out the chars */
	return;

     end print_abs_logout_msg_;
