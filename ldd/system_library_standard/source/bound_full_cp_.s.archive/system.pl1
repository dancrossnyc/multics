/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) BULL HN Information Systems Inc., 1989   *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(89-04-28,Vu), approve(89-04-28,MCR8100), audit(89-05-05,Lee),
     install(89-06-09,MR12.3-1057):
     use the process date_time format rather than the concatenation of the
     process date and time format for all keywords starting with date_time_**.
                                                   END HISTORY COMMENTS */


system: proc;

/*
   Modified Feb 1980 by M. B. Armstrong to implement multiple rate structures.(UNCA)
   Changed to requote return string 03/19/80 S. Herbst
   Modified June 1981 by E. N. Kittlitz for UNCA rate structures

   Modified Sept 1982 by Linda Pugh to add date_time_XXX and default_absentee_queue
   keys.  The following key words are obsolete and are no longer documented;
   however, they are retained for compatibility (time_up, next_down_time,
   down_until time, shift_change_time, date_up, next_down_date, last_down_time,
   last_down date, shift_change_date, down_until_date)

   Modified May 1983 by Art Beattie to add version_id key word.
   Modified 10/3/83 by C Spitzer to add all keyword, printed in sorted list
			   make last_down_reason return  ERFnn instead of just nn.
   Modified 06/19/84 by J A Falksen to utilize date_time_$format with keywords
			   "date", "time", and "date_time".
   Modified 840619 for session_type keyword, and to make ERF DUMP... -E. A. Ranzenbach
   Modified 841113 to put back BIM's trusted_path_login keyword that was mistakenly backed out
   by the date_time_$format installation...
*/

dcl  ap ptr,					/* ptr to argument */
     al fixed bin (21),				/* lth of argument */
     bchr char (al) based (ap) unal,			/* argument */
     answer char (al) varying based (ap);		/* return argument */

dcl  time fixed bin (71),
     nactsw bit (1),
     all_switch bit (1) aligned,
     stp_sw bit (36) aligned,
     switch fixed bin,
     host_num fixed binary (16),
     ec fixed bin (35),
     rs_number fixed bin,
     rs_name char (32),
     tli fixed bin (71),
     wd char (9) aligned,
     dn char (168),
     j fixed bin,
    (t1, t2) fixed bin,
     i35 fixed bin (35),
     string char (300) varying init ("");
dcl  max_rs_number fixed bin;
dcl  default_q fixed bin;

dcl  error entry options (variable) variable;
dcl  get_arg entry (fixed bin, ptr, fixed bin (21), fixed bin (35)) variable;

dcl  inarg char (32) aligned;


dcl  item (38) char (32) aligned int static options (constant) init (
     "ARPANET_host_number",				/* case 1 */
     "company",					/* case 2 */
     "date_time_last_down",				/* case 3 */
     "date_time_last_up",				/* case 4 */
     "date_time_next_down",				/* case 5 */
     "date_time_next_up",				/* case 6 */
     "date_time_shift_change",			/* case 7 */
     "date_up",					/* case 8 */
     "default_absentee_queue",			/* case 9 */
     "department",					/* case 10 */
     "down_until_date",				/* case 11 */
     "down_until_time",				/* case 12 */
     "ds_company",					/* case 13 */
     "ds_department",				/* case 14 */
     "installation_id",				/* case 15 */
     "last_down_date",				/* case 16 */
     "last_down_reason",				/* case 17 */
     "last_down_time",				/* case 18 */
     "max_rate_structure_number",			/* case 19 */
     "max_units",					/* case 20 */
     "max_users",					/* case 21 */
     "n_units",					/* case 22 */
     "n_users",					/* case 23 */
     "next_down_date",				/* case 24 */
     "next_down_time",				/* case 25 */
     "next_shift",					/* case 26 */
     "rate_structure_name",				/* case 27 */
     "rate_structure_number",				/* case 28 */
     "reason_down",					/* case 29 */
     "shift",					/* case 30 */
     "shift_change_date",				/* case 31 */
     "shift_change_time",				/* case 32 */
     "sysid",					/* case 33 */
     "time_up",					/* case 34 */
     "version_id",					/* case 35 */
     "session_type",				/* case 36 */
     "trusted_path_login",				/* case 37 */
     "all");					/* MUST BE LAST */

dcl  error_table_$badopt fixed bin (35) ext,
     error_table_$bad_arg fixed bin (35) ext,
     error_table_$not_act_fnc fixed bin (35) ext;

dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin (21), fixed bin (35)),
     cu_$af_arg_ptr entry (fixed bin, ptr, fixed bin (21), fixed bin (35)),
     cu_$af_return_arg entry (fixed bin, ptr, fixed bin (21), fixed bin (35)),
     cv_dec_check_ entry (char (*), fixed bin (35)) returns (fixed bin (35)),
     active_fnc_err_ entry options (variable),
     com_err_ entry options (variable),
     ioa_ entry options (variable),
     date_time_$format entry (char(*), fixed bin(71), char(*), char(*)) returns(char(250) var),
     requote_string_ entry (char (*)) returns (char (*)),
     system_info_$installation_id entry (char (*)),
     system_info_$sysid entry (char (*)),
     system_info_$session entry (char (*)),
     system_info_$trusted_path_flags entry (bit(36) aligned),
     system_info_$version_id entry (char (*)),
     system_info_$titles entry options (variable),
     system_info_$users entry options (variable),
     system_info_$timeup entry (fixed bin (71)),
     system_info_$next_shutdown entry options (variable),
     system_info_$next_shift_change entry options (variable),
     system_info_$last_shutdown entry options (variable),
     system_info_$ARPANET_host_number entry (fixed bin (16)),
     system_info_$rs_number entry (char (*), fixed bin, fixed bin (35)),
     system_info_$rs_name entry (fixed bin, char (*), fixed bin (35)),
     system_info_$max_rs_number entry (fixed bin),
     system_info_$default_absentee_queue entry (fixed bin),
     ioa_$rsnnl entry options (variable);

dcl (hbound, ltrim, rtrim) builtin;

/* ======================================================= */

	call cu_$af_arg_ptr (1, ap, al, ec);
	if ec = error_table_$not_act_fnc then do;
	     error = com_err_;
	     get_arg = cu_$arg_ptr;
	     call get_arg (1, ap, al, ec);
	     nactsw = "1"b;
	end;
	else do;
	     error = active_fnc_err_;
	     get_arg = cu_$af_arg_ptr;
	     nactsw = "0"b;
	end;
	if ec ^= 0 then do;
er:	     call error (ec, "system");
	     return;
	end;
	inarg = bchr;

	all_switch = "0"b;
	do switch = 1 to hbound (item, 1);
	     if inarg = item (switch) then go to have_good_item;
	end;
	call error (error_table_$badopt, "system", """^a""", inarg);
	return;

have_good_item:
	if switch = hbound (item, 1)
	then if nactsw
	     then do;
		all_switch = "1"b;
		switch = 1;
		end;
	     else do;
		call error (error_table_$bad_arg, "system", "^a", inarg);
		end;

ok:	go to case (switch);

case (15):					/* installation_id */
	call system_info_$installation_id (dn);
rtrim_string:
	string = rtrim (dn);
	go to exit;
case (33):					/* sysid */
	call system_info_$sysid (dn);
	go to rtrim_string;
case (37): 					/* trusted_path_login */
	call system_info_$trusted_path_flags (stp_sw);
	if stp_sw then dn = "true";
	else dn = "false";
	go to rtrim_string;

case (36):					/* session_type */
	call system_info_$session (dn);
	go to rtrim_string;
case (2):						/* company */
	call system_info_$titles (dn, wd, wd, wd);
	go to rtrim_string;
case (10):					/* department */
	call system_info_$titles (wd, dn, wd, wd);
	go to rtrim_string;
case (13):					/* ds_company */
	call system_info_$titles (wd, wd, dn, wd);
	go to rtrim_string;
case (14):					/* ds_department */
	call system_info_$titles (wd, wd, wd, dn);
	go to rtrim_string;
case (21):					/* max_users */
	call system_info_$users (t1, t2, t2, t2);
cv_num:
	call ioa_$rsnnl ("^d", string, j, t1);
	go to exit;
case (23):					/* n_users */
	call system_info_$users (t2, t1, t2, t2);
	go to cv_num;
case (20):					/* max_units */
	call system_info_$users (t2, t2, t1, t2);
cv_float:
	call ioa_$rsnnl ("^.1f", string, j, t1*1e-1);
	go to exit;
case (22):					/* n_units */
	call system_info_$users (t2, t2, t2, t1);
	go to cv_float;
case (34):					/* time_up */
	call system_info_$timeup (tli);
cv_time:
	string = date_time_$format ("time",tli,"","");
	go to exit;
case (25):					/* next_down_time */
	call system_info_$next_shutdown (tli);
	if tli = 0 then do;
notime:	     string = "none";
	     go to exit;
	end;
	go to cv_time;
case (12):					/* down_until_time */
	call system_info_$next_shutdown (time, dn, tli);
	if time = 0 then go to notime;
	if tli = 0 then go to notime;
	go to cv_time;
case (29):					/* reason_down */
	call system_info_$next_shutdown (tli, dn);
	if tli = 0 then go to notime;
	go to rtrim_string;
case (30):					/* shift */
	call system_info_$next_shift_change (t1, tli, t2);
	go to cv_num;
case (32):					/* shift_change_time */
	call system_info_$next_shift_change (t1, tli, t2);
	go to cv_time;
case (26):					/* next_shift */
	call system_info_$next_shift_change (t2, tli, t1);
	go to cv_num;
case (8):						/* date_up */
	call system_info_$timeup (tli);
cv_date:
	string = date_time_$format ("date",tli,"","");
	go to exit;
case (24):					/* next_down_date */
	call system_info_$next_shutdown (tli);
	if tli = 0 then go to notime;
	go to cv_date;
case (11):					/* down_until_date */
	call system_info_$next_shutdown (time, dn, tli);
	if time = 0 then go to notime;
	if tli = 0 then go to notime;
	go to cv_date;
case (31):					/* shift_change_date */
	call system_info_$next_shift_change (t1, tli, t2);
	go to cv_date;
case (18):					/* last_down_time */
	call system_info_$last_shutdown (tli);
	go to cv_time;
case (16):					/* last_down_date */
	call system_info_$last_shutdown (tli);
	go to cv_date;
case (17):					/* last_down_reason */
	call system_info_$last_shutdown (tli, dn);
	go to rtrim_string;
case (1):						/* ARPANET_host_number */
	call system_info_$ARPANET_host_number (host_num);
	t1 = host_num;
	go to cv_num;
case (28):					/* rate_structure_number */
	string = "";
	call get_arg (2, ap, al, ec);
	if ec ^= 0
	then if all_switch
	     then goto exit;
	     else go to er;
	call system_info_$rs_number (bchr, rs_number, ec);
	if ec ^= 0 then do;
	     call error (ec, "system", "Rate structure name ""^a"".", bchr);
	     if all_switch then goto exit;
	     else return;
	end;
	t1 = rs_number;
	go to cv_num;
case (27):					/* rate_structure_name */
	call system_info_$max_rs_number (max_rs_number);
	string = "";
	call get_arg (2, ap, al, ec);
	if ec = 0 then do;
	     i35 = cv_dec_check_ (bchr, ec);
	     if ec ^= 0 then do;
rs_nm_error:	ec = error_table_$bad_arg;
		call error (ec, "system", "Rate structure number ^a.", bchr);
		if all_switch then goto exit;
		else return;
	     end;
	     if i35 < 0 | i35 > max_rs_number then go to rs_nm_error; /* outside capbility of rs_number? */
	     rs_number = i35;
	     call system_info_$rs_name (rs_number, rs_name, ec);
	     if ec ^= 0 then goto rs_nm_error;
	     string = rtrim (ltrim (rs_name));
	end;
	else do rs_number = 0 to max_rs_number;
	     call system_info_$rs_name (rs_number, rs_name, ec);
	     if ec ^= 0 then go to exit;
	     if string ^= "" then string = string || " ";
	     string = string || rtrim (rs_name);
	end;
	go to exit;
case (19):					/* max_rate_structure_number */
	call system_info_$max_rs_number (rs_number);
	t1 = rs_number;
	go to cv_num;
case (4):						/* date_time_last_up */
	call system_info_$timeup (tli);
cv_date_time:

/**** vp: phx19051; use the process date_time format rather than the
      concatenation of the process date and time for all keywords 
      starting with date_time_**                                      ****/

          string = date_time_$format ("date_time",tli,"","");
	go to exit;
case (5):						/* date_time_next_down */
	call system_info_$next_shutdown (tli);
	if tli = 0 then go to notime;
	go to cv_date_time;
case (6):						/* date_time_next_up */
	call system_info_$next_shutdown (time, dn, tli);
	if time = 0 then go to notime;
	if tli = 0 then go to notime;
	go to cv_date_time;
case (3):						/* date_time_last_down */
	call system_info_$last_shutdown (tli);
	go to cv_date_time;
case (7):						/* date_time_shift_change */
	call system_info_$next_shift_change (t1, tli, t2);
	go to cv_date_time;
case (9):						/* default_absentee_queue */
	call system_info_$default_absentee_queue (default_q);
	t1 = default_q;
	go to cv_num;
case (35):					/* version_id */
	call system_info_$version_id (dn);
	go to rtrim_string;

exit:	if all_switch then do;
	     if string ^= "" then call ioa_ ("^a:^28t^a", item (switch), string);
	     switch = switch + 1;
	     if switch = hbound (item, 1) then return;
	     else goto ok;
	     end;
	else if nactsw then do;
		call ioa_ ("^a", string);
		return;
	     end;
	call cu_$af_return_arg (j, ap, al, ec);
	if ec ^= 0 then go to er;
	answer = requote_string_ ((string));

     end;
