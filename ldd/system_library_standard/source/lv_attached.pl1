/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


lv_attached: proc;

/* LV_ATTACHED - true if user mounted vol */

dcl  ec fixed bin (35),
     nactsw bit (1) init ("0"b),
     ap ptr, al fixed bin,
     ap1 ptr, al1 fixed bin,
     bchr char (al) based (ap),
     return_value char (al1) varying based (ap1),
     answer char (5) var,
     i fixed bin,
     lvid bit (36);

dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35));
dcl  cu_$af_arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35));
dcl  cu_$af_return_arg entry (fixed bin, ptr, fixed bin, fixed bin (35));
dcl  error_table_$not_act_fnc fixed bin (35) ext;
dcl  active_fnc_err_ entry options (variable);
dcl  com_err_ entry options (variable);
dcl  ioa_ entry options (variable);
dcl  hcs_$lv_attached entry (bit (36), fixed bin (35));
dcl  mdc_$find_lvid entry (char (*), bit (36), fixed bin (35));

	call cu_$af_arg_ptr (1, ap, al, ec);
	if ec ^= 0 & ec = error_table_$not_act_fnc then do;
	     call cu_$arg_ptr (1, ap, al, ec);
	     nactsw = "1"b;
	end;
	if ec ^= 0 then do;
er:	     if nactsw then call com_err_ (ec, "lv_attached", "");
	     else call active_fnc_err_ (ec, "lv_attached", "");
	     return;
	end;
	call mdc_$find_lvid (bchr, lvid, ec);
	if ec = 0 then call hcs_$lv_attached (lvid, ec);
	if ec = 0 then answer = "true";
	else answer = "false";
	if nactsw then call ioa_ ("^a", answer);
	else do;
	     call cu_$af_return_arg (i, ap1, al1, ec);
	     if ec ^= 0 then go to er;
	     return_value = answer;
	end;

     end;
