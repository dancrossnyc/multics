/* ***********************************************************
   *                                                         *
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
   *                                                         *
   *                                                         *
   *********************************************************** */

/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

mrds_dsl_declare: declare: proc (dbi, fn_name, code);

/* NOTES:

   BEGIN_DESCRIPTION
   This procedure makes the user-specified function known to the MRDS
   while processing the data base corresponding to the dbi.  The entry
   fn_name$fn_name is located using hcs_$make_ptr, and a scalfn_info
   block is created and put at the head of the known function list.
   Hence, all user_defined functions are searched prior to builtin
   functions.
   END_DESCRIPTION
*/

/* HISTORY:

   77-06-01 J. A. Weeldreyer: Initially Written.

   80-10-17 Rickie E. Brinegar: Use of hcs_$make_ptr was changed to expand_pathname_
   and cv_ptr_ to permit the use of absolute pathnames with declare for scalar
   functions.

   80-11-03 Rickie E. Brinegar: Use of cv_ptr_ changed to cv_entry_ so that
   the proper linkage information is set up.


   81-01-19 Jim Gray : added correct handling of old version database callers,
   so that dsl_v1_$declare gets called for them.

   81-01-29 Jim Gray : removed references to mdbm_data_$current_version,
   using a constant instead to allow for future db version expansion.

   81-06-23 Jim Gray : added call to mrds_dsl_get_builtins so that builtin
   functions are defined on an as needed basis.

   82-05-28 Mike Kubicar : removed incompatible change where dsl_$declare
   required the use of pathnames instead of refnames.  Now both are permitted.

   83-06-20 Davids: Removed check for old version database and the call
   to v1 code if it was an old version db (old version dbs can no longer
   be opened)
*/

	dcl     (dbi,				/* Input: data base index */
	        code,				/* Output: status code */
	        icode)		 fixed bin (35);	/* internal status code */

	dcl     fn_name		 char (*);	/* Input: name of function */

	dcl     fn_entry		 entry variable;	/* entry of function */

	dcl     mrds_error_$invalid_db_index fixed bin (35) ext;

	dcl     null		 builtin;

	dcl     cv_entry_		 entry (char (*), ptr, fixed bin (35)) returns (entry);
	dcl     mu_database_index$get_resultant_model_pointer entry (fixed bin (35), ptr);
	dcl     mrds_dsl_thread_fn_list entry (ptr, entry, fixed bin (35));

	declare sys_info$max_seg_size	 fixed bin (35) ext;/* largest segment */
	declare (fixed, rel, addr)	 builtin;
	declare mrds_dsl_get_builtins	 entry (ptr, fixed bin (35)); /* defines builtin functions */

	call mu_database_index$get_resultant_model_pointer (dbi, dbcb_ptr);
	if dbcb_ptr = null then call error (mrds_error_$invalid_db_index);

	fn_entry = cv_entry_ (fn_name, null (), icode);
	if icode ^= 0 then
	     call error (icode);

/* BEGIN CHANGE 81-06-23 ******************************************** */

	if dbcb.sfi_ptr = null () then do;
		call mrds_dsl_get_builtins (dbcb_ptr, icode);
		if icode ^= 0 then call error (icode);
	     end;

/* END CHANGE 81-06-23 *********************************************** */

	call mrds_dsl_thread_fn_list (dbcb_ptr, fn_entry, icode); /* thread at head of list */
	if icode ^= 0 then
	     call error (icode);

	code = 0;
exit:	return;

error: proc (cd);

/* error procedure */

	dcl     cd		 fixed bin (35);

	code = cd;
	go to exit;

     end error;

%include mrds_dbcb;

     end mrds_dsl_declare;
