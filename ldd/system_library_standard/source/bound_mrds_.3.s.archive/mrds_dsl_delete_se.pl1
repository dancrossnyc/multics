/* ***********************************************************
   *                                                         *
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
   *                                                         *
   *                                                         *
   *********************************************************** */

/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

mrds_dsl_delete_se: proc (dbcb_ptr, caller, code);

/*
                   BEGIN_DESCRIPTION
   This procedure clears selection expression values in the dbcb
   when a new selection expression is specified.  The select area (which
   contains all allocations for the previous selection expression)
   is initialized at this time.
                   END_DESCRIPTION
*/

/* HISTORY:

   Initially written by J. A. Weeldreyer -- March, 1976.

   Modified  by  J.  A.  Weeldreyer  to   free   complex   selection
   expressions and arithmetic expressions -- April, 1977.

   Modified by Oris D. Friesen to free resultant info for tuples  to
   be stored -- Dec. 1977.

   Modified by J.  A.  Weeldreyer  to  correctly  reset  DBCB  flags
   pertaining to select. expr. being deleted -- March, 1978.

   Modified for MR7.0 by JA Weeldreyer -- November, 1978.

   Modified by Al Kepner, June 8, 1979 to use select_area.

   Modified by E Brunelle,  9/80  to  free  all  temp  segments  for
   dsl_search for the specific dbi

   Modified by Jim Gray - - 80-10-20, to  change  temp  seg  routine
   name to mdbm_util_ standard

   Modified by Jim Gray - -  80-10-21,  to  call  free_all_temp_segs
   instead   of   relase_all_temp_segs,  so  that  the  overhead  of
   truncation will not be  incurred.  This  is  a  tradeoff  between
   capacity  and  performance,  since the temp segs will grow to the
   largest usage of a single selection expression  and  remain  that
   size until close time.

   Modified by Jim Gray - - 80-10-24, to add resetting of  new  dbcb
   bit  new_selct_expr,  so that mrds_dsl_search can properly manage
   tid_list space usage.

   81-04-25   Jim   Gray   :   changed   length   delcarations    of
   mrds_data_$temp_seg_name,   and  dbi_pic  to  allow  three  digit
   db_index values as part of incresing from 64 to 128.

   81-07-06 Jim Gray : added increment of  current  select  expr  ID
   number.

   83-02-28 Davids: explicitly declared variables that were declared by
   context of implication and removed declarations to variables that
   were never referenced.

   84-10-20 Hergert: Added check to make sure the right select_area_ptr
   is going to be used. If we were called during a compile we leave it alone.
   If not, its possible that the last operation was done using a cse so 
   we have to reset the select_area_ptr to the default one. Also cleaned up
   duplicate initializations.
*/

/* INPUT CONDITIONS:

   dbcb_ptr points to a valid DBCB.
*/

/* OUTPUT DEFINITIONS:

   code = 0;  if no errors are encountered.
*/

/* ***************************************************************************************************************** */

	dbcb.another_flag,				/* reset s.e. flags */
	     dbcb.current_flag,
	     dbcb.dup_retain,
	     dbcb.prev_select,
	     dbcb.possible_op,
	     dbcb.sel_clause,
	     dbcb.val_mod,
	     dbcb.val_del,
	     dbcb.val_rtrv,
	     dbcb.val_dtr = "0"b;

	dbcb.ss_ptr,				/* null out appropriate dbcb pointers */
	     dbcb.range_ptr,
	     dbcb.select_ptr,
	     dbcb.ti_ptr,
	     dbcb.current_ptr,
	     dbcb.lit_ptr,
	     dbcb.so_ptr = null;

	dbcb.new_select_expr = "1"b;			/* tell search to start new tid_list management period */

/* BEGIN CHANGE 81-07-06 ************************************************** */

	dbcb.last_s_e_id_num =
	     mod (dbcb.last_s_e_id_num + 1, 999999);	/* increment the select expr ID for current S.E. */

/* END CHANGE 81-07-06 ************************************************ */

	if dbcb.compiled_se_info_ptr ^= null then 
	     if dbcb.select_area_ptr ^= dbcb.compiled_se_info_ptr -> compiled_se_info.real_select_area_ptr &
	     caller ^= mrds_data_$caller_compile then
	     dbcb.select_area_ptr = dbcb.compiled_se_info_ptr -> compiled_se_info.real_select_area_ptr;

	call mrds_dsl_init_select_area (dbcb_ptr, icode);
	if icode ^= 0 then call error (icode);
	dbi_pic = dbcb.dbi;

	call mu_temp_segments$free_all_temp_segments (mrds_data_$temp_seg_name || dbi_pic, icode);
	if icode ^= 0 & icode ^= error_table_$argerr then call error(icode) ;	/* no temp segs found */

	code = 0;					/* indicate successful completion */

exit:	return;

error: proc (cd);
	dcl     cd		 fixed bin (35) parm;
	code = cd;
	go to exit;
     end error;

%include mrds_dbcb;
%page;
%include mrds_compiled_se_info;

          dcl     caller                 fixed bin(35);
	dcl     code		 fixed bin (35);	/* Output -- return code */
	dcl     icode		 fixed bin (35);	/* internal error code */
	dcl     dbi_pic		 pic "999";
	declare mrds_data_$temp_seg_name char (23) ext;	/* common name for temp segments */
          dcl mrds_data_$caller_compile  fixed bin (35) ext;

	dcl     (sys_info$max_seg_size,
	        error_table_$argerr)	 fixed bin (35) ext;
	dcl     mrds_dsl_init_select_area entry (ptr, fixed bin (35));
	dcl     mu_temp_segments$free_all_temp_segments entry (char (*), bin (35));

	dcl     (null,
	        addr,
	        fixed,
	        mod,
	        rel)		 builtin;

     end mrds_dsl_delete_se;
