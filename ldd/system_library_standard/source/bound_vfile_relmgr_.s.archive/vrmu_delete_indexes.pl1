/* ***********************************************************
   *                                                         *
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
   *                                                         *
   *                                                         *
   *********************************************************** */

/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

vrmu_delete_indexes: proc (iocb_ptr, key_list_ptr, tuple_id, code);

/* NOTES:

   This procedure deletes all keys in the list pointed to by key_list_ptr from the tuple
   designated by tuple_id.
*/

/* HISTORY:

   Initially written by JA Weeldreyer -- January, 1979.
   Modified by R. Harvey September 1982 for vfile_relmgr_

*/
%page;
/* vrmu_delete_indexes: proc (iocb_ptr, key_list_ptr, tuple_id, code); */

/* Parameters */

	dcl     iocb_ptr		 ptr;		/* vfile iocb */

/*	dcl     key_list_ptr	 ptr;		/* key values to be deleted */
	dcl     tuple_id		 bit (36) aligned;	/* record keys were associated with */
	dcl     code		 fixed bin (35);	/* output error code */


	do i = 1 to key_list.number_of_keys;		/* delete each key in list */

	     key_list.key_info.vf_info.input_key (i),	/* set up info for vfile */
		key_list.key_info.vf_info.input_desc (i) = "1"b;
	     addr (key_list.key_info.vf_info.vf_desc (i)) -> b36 = tuple_id;

	     call iox_$control (iocb_ptr, "delete_key", addr (key_list.key_info.vf_info (i)), icode); /* let vfile do work */
	     if icode ^= 0 then call error (icode);

	end;					/* deleting keys */

	code = 0;

exit:
	return;
%page;
error: proc (cd);

/* Error procedure */

	dcl     cd		 fixed bin (35);

	code = cd;
	go to exit;

     end error;
%page;
%include vrm_key_list;


	dcl     i			 fixed bin;	/* internal index */
	dcl     b36		 bit (36) based;	/* template */

	dcl     icode		 fixed bin (35);	/* internal status code */

	dcl     addr		 builtin;

	dcl     iox_$control	 entry (ptr, char (*), ptr, fixed bin (35));



     end vrmu_delete_indexes;
