/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


/* procedure to return pointer to reference node of an automatic integer variable

   Initial Version: 12 December 1971 by BLW
	Modified:	20 July 1973 by RAB for EIS
	Modified:	30 March 1980 by RAB for reference.aligned_for_store_ref.
		See prepare_operand for details.	*/

get_variable: proc(pt) returns(ptr);

dcl	pt ptr;		/* points at block node */

dcl	(p,cb) ptr,
	null builtin,
	create_symbol entry(ptr,ptr,bit(3) aligned) returns(ptr);

dcl	max_string_len_p	init(24) fixed bin int static;

%include block;
%include symbol;
%include reference;
%include data_types;
%include declare_type;

	cb = pt;
	p = create_symbol(cb,null,(by_compiler));
	p -> symbol.c_word_size = 1;
	p -> symbol.c_dcl_size = max_string_len_p;

	p -> symbol.allocate,
	p -> symbol.fixed,
	p -> symbol.binary,
	p -> symbol.real,
	p -> symbol.auto = "1"b;

	p -> symbol.location = cb -> block.last_auto_loc;
	p -> symbol.allocated = "1"b;

	cb -> block.last_auto_loc = cb -> block.last_auto_loc + 1;

	p = p -> symbol.reference;

	p -> reference.data_type = real_fix_bin_1;
	p -> reference.aligned_ref,
	p -> reference.aligned_for_store_ref,
	p -> reference.allocate,
	p -> reference.allocated = "1"b;

	return(p);
	end;
