/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


get_imaginary:	proc(pt) returns(ptr);

/* Modified: 25 Apr 1979 by PCK to implement 4-bit decimal */

/* Produces a reference to the imaginary part of a complex variable.
   Note that c_length refers to the length of the real and imaginary parts
   combined.  */

dcl	(p,pt,q,s) ptr;

dcl	get_reference entry() returns(ptr);

dcl	(divide,mod) builtin;

%include reference;
%include boundary;
%include symbol;

	q = get_reference();
	p = pt;
	if ^ p -> reference.shared
	     then p -> reference.ref_count = p -> reference.ref_count + 1;
	q -> reference.qualifier = p;
	q -> reference.symbol = p -> reference.symbol;
	q -> reference.c_length = p -> reference.c_length;

	s = p -> reference.symbol;
	q -> reference.c_offset = divide(q -> reference.c_length,2,24,0);

	if s -> symbol.unaligned
	then do;
		q -> reference.units = digit_;
		q -> reference.c_offset = q -> reference.c_offset + mod(q -> reference.c_offset,2);
	     end;
	else q -> reference.units = character_;

	q -> reference.data_type = p -> reference.data_type;
	q -> reference.defined_ref = "1"b;

	return(q);

end;
