/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
%;
/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

name_assign: proc(name) returns(bit(18) aligned);

dcl	name char(*) aligned,
	(n,def_pos) fixed bin(18),
	(p,q) ptr;

dcl	create_list entry(fixed bin) returns(ptr);

dcl	(addrel,divide,fixed,length,null,rel) builtin;

dcl	(cg_static_$name_list,cg_static_$def_base) ptr ext,
	(cg_static_$def_origin,cg_static_$def_pos) fixed bin(18) ext;

dcl	1 name_mask	aligned based,
	2 count		unal bit(9),
	2 string		unal char(n);

%include list;

	p = cg_static_$name_list;

	do while(p ^= null);

	     q = p -> list.element(2);

	     n = fixed(q -> count,9);
	     if length(name) = n
	     then if name = q -> string
		then do;
		     def_pos = fixed(rel(q),18) - cg_static_$def_origin;
		     goto ret;
		     end;

	     p = p -> list.element(1);
	     end;

	n = length(name);
	p = create_list(2);

	p -> list.element(1) = cg_static_$name_list;
	cg_static_$name_list = p;

	def_pos = cg_static_$def_pos;
	p -> list.element(2), q = addrel(cg_static_$def_base,def_pos);

	q -> count = bit(fixed(n,9),9);
	q -> string = name;

	cg_static_$def_pos = def_pos + divide(n+4,4,17,0);

ret:	return(bit(def_pos,18));

	end;
