/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

dcsin_: proc (number) returns (complex float bin (63));

dcl (number, a, b) complex float bin (63),
    (sinx, cosx, sinhy, coshy) float bin (63),
	(abs, cos, cosh, imag, real, sin, sinh) builtin,
     i fixed bin (17);

dcl  code_ ext entry (fixed bin (17));

	i = 1;

csins:	
	a = number;

test:	
	if abs (imag (a))>88.018e0
	     then do;
	     call code_ (61);

	     sinhy,
	     coshy = 170141182.0e30;
	end;
	else do;
	     sinhy = sinh (imag (a));
	     coshy = cosh (imag (a));
	end;

	if abs (real (a)) >= 18104398509481984.0e0
	     then do;
	     call code_ (62);

	     return (0.0e0);
	end;

	sinx = sin (real (a));
	cosx = cos (real (a));

	if i>0
	     then do;
	     real (a) = sinx*coshy;
	     imag (a) = cosx*sinhy;
	end;
	else if i<0
	     then do;
	     real (a) = cosx*sinhy;
	     imag (a) = -sinx*coshy;

	     i = -i;
	end;

	if i = 1 then return (a);

	real (b) = cosx*coshy;
	imag (b) = -sinx*sinhy;

	if i = 0 then goto ret;

	if b = 0.0e0
	     then do;
	     call code_ (64);
	     return (170141182.0e30*sinx);
	end;

	b = a/b;

ret:	
	return (b);

dccos_: entry (number) returns (complex float bin (63));

	i = 0;
	goto csins;

dctan_: entry (number) returns (complex float bin (63));

	i = 2;
	goto csins;

dcsinh_: entry (number) returns (complex float bin (63));

	i = -1;

csinhs:	
	real (a) = -imag (number);
	imag (a) = real (number);

	goto test;

dccosh_: entry (number) returns (complex float bin (63));

	i = 0;
	goto csinhs;

dctanh_: entry (number) returns (complex float bin (63));

	i = -2;
	goto csinhs;

     end dcsin_;
