/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

dxp12_: procedure (base, exponent) returns (float binary (63));

declare (base, a, f) float binary (63),
        (exponent, h, k, m) fixed binary (71);
dcl  code_ ext entry (fixed bin);
dcl	(abs, divide, sign) builtin;
	a = base;
	k = exponent;
	f = 1.e0;
if a = 0.0e0 then test: do;
if k > 0 then clear: return (a);
	     call code_ (3 - sign (k));
	     go to clear;
	end test;
	if k = 0 then go to finis;
	m = abs (k);
loop:	h = divide (m, 2, 71, 0);
	if h+h ^= m then f = f*a;
	if h = 0 then go to invert;
	m = h;
	a = a*a;
	go to loop;
invert:	if k < 0 then f = 1.e0 / f;
finis:	return (f);
     end dxp12_;
