/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

diexp_: procedure (base, exponent) returns (fixed binary (71));
						/*     compute integer base ** integer exponent     */
declare (base, exponent, h, i, j) fixed binary (17),
         f fixed binary (71),
         code_ entry (fixed binary);
	i = base;
	j = exponent;
	f = 1;
if i = 0 then test: do;
	     if j > 0 then go to clear;
	     call code_ (5 - sign (j));
	     go to clear;
	end test;
	if j = 0 then go to finis;
	if abs (i) = 1 then j = mod (j, 2);
else if j < 0 then clear: return (0);
loop:	h = divide (j, 2, 17, 0);
	if h+h ^= j then f = f*i;
if h = 0 then finis: return (f);
	j = h;
	i = i*i;
	go to loop;
     end diexp_;
