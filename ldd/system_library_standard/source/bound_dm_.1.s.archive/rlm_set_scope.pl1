/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */


/* DESCRIPTION:

         Records  the given scope settings and, if the relation is protected,
     calls page_file_manager_ to record the implied lock advice.
*/

/* HISTORY:

Written by Matthew Pierret, 10/06/82.
Modified:
03/16/83 by Matthew Pierret: Changed to use rlm_opening_info$get_dont_refresh.
06/18/84 by Matthew Pierret:  Removed declaration of the un-used null builtin.
*/
/* format: style2,ind3 */
%page;
/* format: style2,ind3 */

rlm_set_scope:
   proc (p_rel_opening_id, p_this_process_permission, p_other_processes_permission, p_code);

/* START OF DECLARATIONS */
/* Parameter */

      dcl	    p_rel_opening_id       bit (36) aligned parameter;
      dcl	    p_this_process_permission
			       bit (2) aligned parameter;
      dcl	    p_other_processes_permission
			       bit (2) aligned parameter;
      dcl	    p_code	       fixed bin (35) parameter;

/* Automatic */

      dcl	    lock_mode	       fixed bin;

/* Based */
/* Builtin */
/* Constant */

      dcl	    myname	       init ("rlm_set_scope") char (32) varying int static options (constant);

/* Entry */

      dcl	    rlm_opening_info$get_dont_refresh
			       entry (bit (36) aligned, ptr, fixed bin (35));
      dcl	    rlm_update_opening_info$lock_advice
			       entry (ptr, bit (2) aligned, bit (2) aligned, fixed bin (35));
      dcl	    file_manager_$lock_advice
			       entry (bit (36) aligned, fixed bin, fixed bin (35));

/* External */
/* END OF DECLARATIONS */

      p_code = 0;

      call rlm_opening_info$get_dont_refresh (p_rel_opening_id, relation_opening_info_ptr, p_code);
      if p_code ^= 0
      then return;

      call
         rlm_update_opening_info$lock_advice (relation_opening_info_ptr, p_this_process_permission,
         p_other_processes_permission, p_code);

      if p_other_processes_permission = NO_PERMISSION
      then lock_mode = LOCK_MODE_X;
      else if p_other_processes_permission = READ_PERMISSION
      then if p_this_process_permission = READ_PERMISSION
	 then lock_mode = LOCK_MODE_S;
	 else lock_mode = LOCK_MODE_SIX;
      else if p_this_process_permission = READ_PERMISSION
      then lock_mode = LOCK_MODE_IS;
      else lock_mode = LOCK_MODE_IX;

      call file_manager_$lock_advice (p_rel_opening_id, lock_mode, p_code);

      return;
%page;
%include dm_rlm_opening_info;
%page;
%include dm_rlm_permissions;
%page;
%include dm_lock_modes;

   end rlm_set_scope;
