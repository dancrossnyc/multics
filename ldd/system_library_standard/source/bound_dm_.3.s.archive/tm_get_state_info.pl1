/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */
/* format: style4,ifthenstmt,^indproc,^indcomtxt */
/*---------------*/

tm_get_state_info: proc (A_state, A_op_name, A_op_error_code);


/* DESCRIPTION:

   Given the state of a transaction left in error or part-way through a TM
   operation, returns the name of the interrupted operation and the appropriate
   error code dm_error_$unfinished_(abort commit rollback).
*/

/* HISTORY:

Written by Steve Herbst, 01/18/83.
Modified:
08/23/84 by Steve Herbst: Changed to use OP_NAME... constants.
10/17/84 by Steve Herbst: Changed in response to audit comments.
*/

/* DECLARATIONS */

/* Parameters */

dcl  A_state fixed bin parameter;
dcl  A_op_name char (*) parameter;
dcl  A_op_error_code fixed (35) parameter;


/* Constants */

/* Based */

/* Static */

/* Automatic */

dcl state fixed bin;

/* External */

dcl dm_error_$unfinished_abort fixed bin (35) ext;
dcl dm_error_$unfinished_commit fixed bin (35) ext;
dcl dm_error_$unfinished_rollback fixed bin (35) ext;

/* Entries */

/* Builtins */

/* Conditions */

/* END OF DECLARATIONS */
%page;
	if A_state > TM_ERROR_INCREMENT then		/* an error state */
	     state = A_state - TM_ERROR_INCREMENT;	/* look instead at the corresponding pre-call state */
	else state = A_state;

	if state >= LOWEST_ABORT_STATE & state <= HIGHEST_ABORT_STATE then do;
	     A_op_name = OP_NAME_ABORT;
	     A_op_error_code = dm_error_$unfinished_abort;
	end;
	else if state >= LOWEST_COMMIT_STATE & state <= HIGHEST_COMMIT_STATE then do;
	     A_op_name = OP_NAME_COMMIT;
	     A_op_error_code = dm_error_$unfinished_commit;
	end;
	else if state >= LOWEST_ROLLBACK_STATE & state <= HIGHEST_ROLLBACK_STATE then do;
	     A_op_name = OP_NAME_ROLLBACK;
	     A_op_error_code = dm_error_$unfinished_rollback;
	end;
	else do;
	     A_op_name = "";
	     A_op_error_code = 0;
	end;

	return;
%page;
%include dm_tm_states;


end tm_get_state_info;
