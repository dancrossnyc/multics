/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */
/* format: style4,ifthenstmt,^indproc,^indcomtxt */
/*---------------*/

tm_adjust_tdt: proc;

/* DESCRIPTION:

   This procedure adjusts all the dead transactions in the TDT.
   A dead transaction is one that either  1) belongs to a process whose
   process_id is rejected by hcs_$validate_processid (dead process) or
   2) has its dead_process_sw on (turned on by tm_$terminate_process)
   even though the owner process may not yet be dead.
*/

/* HISTORY:

Written by Steve Herbst, 11/01/82
Modified:
12/07/82 by Steve Herbst: Fixed to adjust only if txn is not in error state.
01/11/83 by Steve Herbst: Changed to adjust txn only if daemon has not erred
	trying to adjust it.
01/24/83 by Steve Herbst: Refined this to "if daemon has not erred
	MAX_DAEMON_ERRORS times".
02/16/83 by Steve Herbst: Changed to log failure to adjust a txn
	MAX_DAEMON_ERRORS times.
09/25/84 by Steve Herbst: Changed in response to audit comments.
11/27/84 by Steve Herbst: Changed further in response to audit comments.
03/05/85 by Steve Herbst: Replaced dm_log_ with dm_misc_util_$log.
*/

/* DECLARATIONS */

/* Parameters */


/* Constants */

dcl MAX_DAEMON_ERRORS fixed bin int static options (constant) init (3);
dcl ME char (32) int static options (constant) init ("tm_adjust_tdt");

/* Based */

/* Static */

/* Automatic */

dcl tdt_index fixed bin;

/* External */

dcl dm_data_$tm_tdt_ptr ptr ext;
dcl error_table_$unimplemented_version fixed bin (35) ext;

/* Entries */

dcl dm_misc_util_$log entry options (variable);
dcl dm_send_request_$adjust_tdt_entry entry (bit (36) aligned, fixed bin, fixed bin (35));
dcl dm_send_request_$adjust_txn entry (bit (36) aligned, fixed bin, fixed bin (35));
dcl hcs_$validate_processid entry (bit (36) aligned, fixed bin (35));

/* Builtins */

dcl (fixed, index, substr) builtin;

/* Conditions */

/* END OF DECLARATIONS */
%page;
	tm_tdt_ptr = dm_data_$tm_tdt_ptr;

	if tm_tdt.version ^= TM_TDT_VERSION_3 then do;
	     call dm_misc_util_$log (ERROR_SV, error_table_$unimplemented_version, ME);
	     return;
	end;

	do tdt_index = 1 to tm_tdt.entry_count;

	     if tm_tdt.process_id (tdt_index) ^= "0"b then	/* entry in use */

		if tm_tdt.daemon_adjust_count (tdt_index) = MAX_DAEMON_ERRORS then do;

		     tm_tdt.daemon_adjust_count (tdt_index) = tm_tdt.daemon_adjust_count (tdt_index) + 1;
		     call dm_misc_util_$log (ERROR_SV, "**** Daemon tried ^d times to adjust TDT entry and is giving up.
^7x(index = ^d, id = ^o, process = ^w (^[d^;a^]), owner = ^a, state = ^d)",
			MAX_DAEMON_ERRORS, tdt_index, fixed (tm_tdt.txn_id (tdt_index)),
			tm_tdt.process_id (tdt_index), DEAD_PROCESS (tdt_index),
			PERSON_ID (tdt_index), tm_tdt.state (tdt_index));
		end;

		else if tm_tdt.daemon_adjust_count (tdt_index) < MAX_DAEMON_ERRORS then do;

		     if DEAD_PROCESS (tdt_index) | tm_tdt.dead_process_sw (tdt_index) then

			if tm_tdt.txn_id (tdt_index) ^= "0"b then
			     call dm_send_request_$adjust_txn (tm_tdt.txn_id (tdt_index), tdt_index, 0);
					/* causes tm_$adjust_txn to be called, cleans up txn too */

			else call dm_send_request_$adjust_tdt_entry ("0"b, tdt_index, 0);
					/* causes tm_$adjust_tdt_entry to be called */
					/* (No transaction to adjust before cleaning up TDT entry) */
		end;
	end;

	return;
%page;
DEAD_PROCESS: proc (P_index) returns (bit (1));

dcl P_index fixed bin;
dcl code fixed bin (35);

	if tm_tdt.process_id (P_index) = "0"b then return ("0"b);

	call hcs_$validate_processid (tm_tdt.process_id (P_index), code);
	return (code ^= 0);

end DEAD_PROCESS;
%page;
PERSON_ID: proc (P_index) returns (char (22));

dcl P_index fixed bin;
dcl name char (32);

	name = tm_tdt.owner_name (P_index);
	return (substr (name, 1, index (name, ".") - 1));

end PERSON_ID;
%page;
%include dm_tm_tdt;
%page;
%include dm_log_sv_codes;


end tm_adjust_tdt;
