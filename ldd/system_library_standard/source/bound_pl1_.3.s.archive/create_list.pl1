/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
%;
/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

create_list: proc(n) returns(ptr) ;

/*	Modified on:	April 1977 by RHS for new allocation methods */

dcl	(n,i,nodetype) fixed bin(15);
dcl	p ptr;

dcl	pl1_stat_$free_ptr(18) ptr ext static;

dcl	(fixed,null) builtin;
dcl	pl1_stat_$node_uses(32) fixed bin ext;

%include pl1_tree_areas;
%include nodes;

%include list;

begin:
	if n=2
	then nodetype = fixed(list_node,15,0);
	else nodetype = fixed(operator_node,15,0);

	if (n=2 | n=3) & pl1_stat_$free_ptr(nodetype)^=null
	then do;
		p = pl1_stat_$free_ptr(nodetype);
		pl1_stat_$free_ptr(nodetype) = p->list.element(1);
	end;
	else do;
	     pl1_stat_$node_uses(11) = pl1_stat_$node_uses(11) + 1;
	     allocate list in(xeq_tree_area) set(p);
	     end;

	p->list.node_type = list_node;
	do i=1 to n;
	p->list.element(i)=null;
	end;
	return(p);
	end;
