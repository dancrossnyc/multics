/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


refer_extent: proc(p,q);

dcl	(p,q,r) ptr;
dcl	(i,n) fixed bin(15);
dcl	null builtin;
%include language_utility;
%include nodes;
%include reference;
%include operator;
%include op_codes;

begin:
	if p = null then return;
	if p->node.type = reference_node
		then do;
			r = p->reference.qualifier;
			call refer_extent(r,q);
			p->reference.qualifier = r;
			r = p->reference.offset;
			call refer_extent(r,q);
			p->reference.offset = r;
			r = p->reference.length;
			call refer_extent(r,q);
			p->reference.length = r;
			return;
		     end;
	if p->node.type = operator_node
		then do;
			if p->op_code = refer
			then do;
				p = p->operand(2);
				if p->node.type=token_node
				then	p = create_reference(p);
				if q->node.type=reference_node
				then	if q->reference.shared
					&  q->reference.qualifier=null
					&  q->reference.offset=null
					&  q->reference.length=null
					then do;
						p->reference.qualifier = q;
						return;
					end;

				p->reference.qualifier = copy_expression((q));
				return;
			end;

			do i = 1 to p->operator.number;
			r = p->operand(i);
			call refer_extent(r,q);
			p->operand(i) = r;
			end;
			return;
		     end;
	end refer_extent;
