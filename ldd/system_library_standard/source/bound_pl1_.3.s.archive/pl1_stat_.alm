" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************

"	pl1_stat_, fortran_stat_
"	External static storage segment for PL/1 and Fortran Version II
"	B. L. Wolman, 10 January 1971
"
"	Modified: 24 May 1979 by PCK to implement options(packed_decimal)
"	Modified: 26 May 1979 by D. Spector for -single_symbol_list, -ssl
"	Modified: 26 Dec 1979 by PCK to implement by name assignment
"	Modified: 27 October 1980 to increase length of pl1_stat_$options

	name	pl1_stat_
	use	textc
	use	linkc
	join	/link/linkc
	join	/text/textc


"	FIXED SCALARS.

	use	linkc

	segdef	error_width
error_width:
	dec	70			" width of console line

	segdef	compiler_created_index
	bss	compiler_created_index,1	" used by create_identifier

	segdef	index
	bss	index,1

	segdef	st_start
	bss	st_start,1		" start of statement in source seg

	segdef	st_length
	bss	st_length,1		" length of statement (in chars)

	segdef	line_count		" number of lines in source program.
	bss	line_count,1

	segdef	tree_vec_index
tree_vec_index:
	dec	-1			" index in extra free seg list

"	BIT-STRING SCALAR.

	segdef	error_memory
	bss	error_memory,14		" 500 bits to remember if text has been printed.

"	FIXED SCALARS.

	segdef	char_pos			" character offset into listing segment
	bss	char_pos,1

	segdef	convert_len		" bit count of converted segment
	bss	convert_len,1

	segdef	condition_index
	bss	condition_index,1

	segdef	last_source		" index of last source file in source_list.
last_source:
          dec       -1

	segdef	cur_level
	bss	cur_level,1

	segdef	greatest_severity
	bss	greatest_severity,1

	segdef	last_severity
last_severity:
	dec	0

	segdef	last_statement_id
last_statement_id:
	dec	0

	segdef	max_list_size		" maximum size in chars of listing seg
	bss	max_list_size,1

	segdef	phase
	bss	phase,1

	segdef	profile_length
	bss	profile_length,1

	segdef	severity_plateau
	bss	severity_plateau,1

	segdef	source_seg		" subscript of current source segment in source_list.
	bss	source_seg,1

	segdef	statement_id
	bss	statement_id,1

	segdef	stop_id
	bss	stop_id,1

	segdef	version			version of compiler being used
version:
	dec	0

	segdef	expl_continuation_count
	bss	expl_continuation_count,1

"	ONE-WORD BIT STRING SCALARS.

	segdef	level_0_colon
	bss	level_0_colon,1

	segdef	level_0_equal
	bss	level_0_equal,1

	segdef	brief_error_mode		" command option
	bss	brief_error_mode,1

	segdef	debug_semant		" command option
	bss	debug_semant,1

	segdef	error_flag
	bss	error_flag,1

	segdef	generate_symtab
	bss	generate_symtab,1

	segdef	had_data_io
	bss	had_data_io,1

	segdef	hollerith_mode
	bss	hollerith_mode,1

	segdef	eis_mode
eis_mode:
	oct	400000000000

	segdef	apostrophe_mode
	bss	apostrophe_mode,1

	segdef	card_input
	bss	card_input,1

	segdef	convert_switch
	bss	convert_switch,1

	segdef	check_ansi
	bss	check_ansi,1

	segdef	listing_on		" command option
	bss	listing_on,1

	segdef	optimize			" command option
	bss	optimize,1

	segdef	multi_type
	bss	multi_type,1

	segdef	no_quick_blocks
	bss	no_quick_blocks,1

	segdef	check_bounds		" fortran command option
	bss	check_bounds,1

	segdef	use_old_area		" to support the new area operator
	bss	use_old_area,1

	segdef	compiler_invoked
compiler_invoked:
	dec	0

	segdef	stmnt_unreachable		" tells if stmnt is unreachable
stmnt_unreachable:
	dec	0

	segdef	new_fortran_option		" fortran command option
new_fortran_option:
	dec	0

	segdef	print_cp_dcl		" command option
	bss	print_cp_dcl,1

	segdef	profile			" profile option
	bss	profile,1

	segdef	single_symbol_list		" command option
	bss	single_symbol_list,1

	segdef	table			" command option
	bss	table,1

	segdef	unaligned_dec		" a variable with the unaligned and decimal attributes exists
	bss	unaligned_dec,1
	segdef	options_packed_dec		" options(packed_decimal) specified on the main procedure
	bss	options_packed_dec,1

"	POINTER SCALARS.

	even
	segdef	constant_list
	bss	constant_list,2

	segdef	defined_list
	bss	defined_list,2

	segdef	dummy_block
	bss	dummy_block,2

	segdef	ok_list
	bss	ok_list,2

	segdef	error_messages		" ptr to error messages segment
	bss	error_messages,2

	segdef	temporary_list
	bss	temporary_list,2

	segdef	cur_block
	bss	cur_block,2

	segdef	cur_statement
	bss	cur_statement,2

	segdef	equivalence_base
	bss	equivalence_base,2

	segdef	err_stm
err_stm:	its	-1,1,n

	segdef	source_list_ptr		" ptr to source_list
	bss	source_list_ptr,2

	segdef	token_list_ptr		" ptr to token_list
	bss	token_list_ptr,2

	segdef	list_ptr			" ptr to listing segment
	bss	list_ptr,2

	segdef	convert_ptr		" ptr to converted segment
	bss	convert_ptr,2

	segdef	list3_node
	bss	list3_node,2

	segdef	list5_node
	bss	list5_node,2

	segdef	quick_pt
	bss	quick_pt,2

	segdef	root			" ptr to root block
	bss	root,2

	segdef	validate_proc
	bss	validate_proc,2

	segdef	one			" ptr to token "1", dec_integer
	bss	one,2

	segdef	LHS
	bss	LHS,2

	segdef	LHS_ref

	bss	LHS_ref,2

	segdef	format_list
	bss	format_list,2

	segdef	hash_table_ptr		" ptr to create_token's hash table.
	bss	hash_table_ptr,2

	segdef	by_name_free_list		" ptr to free list used by
	bss	by_name_free_list,2		" expand_by_name

	segdef	by_name_parts_tree		" ptr to tree of by_name_agg
	bss	by_name_parts_tree,2	" nodes used by expand_primitive

	segdef	by_name_parts_free_list	" ptr to free list of by_name_agg
	bss	by_name_parts_free_list,2	" nodes 

	segdef	by_name_ref_list		" ptr to list of list nodes
	bss	by_name_ref_list,2		" (by_name_ref nodes) built by
					" expand_by_name

"	LABEL SCALARS.

	segdef	unwind			" used by parse
	bss	unwind,4

	segdef	abort_label		" used by command
	bss	abort_label,4

"	ENTRY SCALARS

	segdef	util_abort
	bss	util_abort,4

	segdef	util_error
	bss	util_error,4

"	AGGREGATES, arranged in order of increasing size.


	segdef	user_id		"dcl pl1_stat_$user_id char(32) ext aligned;
	bss	user_id,8

	segdef	seg_name		"dcl pl1_stat_$seg_name char(32) varying ext static;
seg_name: dec	0
	bss	,8

	segdef	options		"dcl pl1_stat_$options char(400) varying ext static;
options:	dec	0
	bss	,100

"	POINTER VECTORS

	even
	segdef	tree_area_ptr
tree_area_ptr:
	its	-1,1,n

	segdef	xeq_tree_area_ptr
xeq_tree_area_ptr:
	its	-1,1,n

	segdef	free_ptr		" dcl pl1_stat_$free_ptr(18) ext ptr;
	bss	free_ptr,2*18

	segdef	locator		"dcl pl1_stat_$locator(128) ptr ext;
	bss	locator,2*128

	segdef	compiler_name	"dcl pl1_stat_$compiler_name char(8) var
compiler_name:
	dec	3
	aci	"pl1     "

	segdef	modetable		"dcl fortran_stat_$modetable(0:52) ext static
	bss	modetable,53

	segdef	pathname		"dcl pl1_stat_$pathname char(168) var ext;
	bss	pathname,43


"	NODE USAGE INFORMATION.

	use	textc
	segdef	max_node_type
max_node_type:
	dec	20

	segdef	node_name		"dcl pl1_stat_$node_name(1) char(12) ext
node_name:
	aci	"block       "
	aci	"statement   "
	aci	"operator    "
	aci	"reference   "
	aci	"token       "
	aci	"symbol      "
	aci	"context     "
	aci	"array       "
	aci	"bound       "
	aci	"format      "
	aci	"list        "
	aci	"default     "
	aci	"state       "
	aci	"source      "
	aci	"label       "
	aci	"xref        "
	aci	"sf_par      "
	aci	"temporary   "
	aci	"label_array_"
	aci	"by_name_agg "
	segdef	node_size		"dcl pl1_stat_$node_size(1) fixed bin ext
node_size:
	oct	54  " 53+1	block (53+1 means 53 words for the node +1 for eveness)
	oct	14		statement
	oct	4		operator (average of 3, formula = 1 + n)
	oct	14		reference
	oct	6		token (average of 8 chars, formula = 4 + n/2)
	oct	34		symbol
	oct	4   " 3+1		context
	oct	14		array
	oct	16  " 15+1	bound
	oct	4		format value
	oct	4		list (average of 3, formula = 1 + n)
	oct	14  " 13+1	default
	oct	422		machine state
	oct	20		source (average of 36 chars, formula = 7 + n/4)
	oct	12		label
	oct	2		cross reference
	oct	4		sf_par
	oct	10		temporary
	oct	4		label_array_element
	oct	7		by_name_agg
	use	linkc
	segdef	node_uses		"dcl pl1_stat_$node_uses(1) fixed bin ext
	bss	node_uses,20

	end
