/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


ffip:	proc(inp, len, ip, ret_value);
/* ffip converts a free format inputted string into a bin float number */
dcl
	(len, code, ip, ex, j, llen) fixed bin(17),
	(val_mult, new_div, ret_value) float bin(27),
	(pos, e_pos, frac) bit(1),
	in char(llen) based(inp1) unaligned,
	(inp, inp1) ptr,
	wrk char(1) aligned,
	(value, new) float bin(63),
	ten float bin(27) static init(10e0);

	code = 5000;
	llen = len;
	inp1 = inp;
blank:	if ip>len then do;
		code = 5001;
		return;
		end;
	if substr(in,ip,1)^=" " then go to non_blank;
	ip = ip+1;
	go to blank;

non_blank:	pos = "1"b; frac = "0"b; val_mult = ten; new_div = 1.e0; value = 0.e0;
	wrk = substr(in,ip,1);
	if wrk="+" then go to plus;
	if wrk^="-" then go to no_sign;
		pos = "0"b;
	 plus:ip = ip+1;
		if ip>len then return;
		wrk = substr(in,ip,1);
no_sign: next:
	new = index("0123456789", wrk)-1;
	if new<0e0 then go to not_num;
	code = 0;
	if frac then do;
		new_div = new_div*ten;
		new = new / new_div;
		end;
	value = val_mult*value+new;
	ip = ip+1;
	if ip>len then go to fin;
	wrk = substr(in,ip,1);
	go to next;
not_num:	if wrk="." then do;
		if frac then go to fin;
		frac = "1"b;
		ip = ip+1;
		if ip>len then go to fin;
		wrk = substr(in,ip,1);
		val_mult = 1.e0;
		go to next;
		end;
	if wrk^="e" then
	   if wrk^="E" then go to fin;
	e_pos = "1"b; ex = 0;
	ip = ip+1;
	if ip>len then go to fin;
	wrk = substr(in,ip,1);
	if wrk="+" then go to e_plus;
	if wrk^="-" then go to e_no_sign;
		e_pos = "0"b;
	 e_plus:ip = ip+1;
		if ip>len then go to fin;
		wrk = substr(in,ip,1);
e_no_sign: e_next:
	j = index("0123456789",wrk)-1;
	if j<0 then go to e_fin;
	ex = ten*ex+j;
	ip = ip+1;
	if ip>len then go to e_fin;
	wrk = substr(in,ip,1);
go to e_next;
e_fin:	if ^e_pos then ex = -ex;
	value = value*10.e0**ex;
fin:	if ^pos then value= - value;
	ret_value = value;
	return;
	end;
