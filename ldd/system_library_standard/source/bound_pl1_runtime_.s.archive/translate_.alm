" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1983 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************

" Procedure to implement PL/1 translate builtin function
"
"
" The PL/1 statement
"	R = translate(S,T);
" is compiled as
"	call trans_2_(R,Rdesc,S,Sdesc,T,Tdesc);
" where Rdesc, Sdesc, Tdesc are Version II descriptors, but the call is non-standard.
"
" The PL/1 statement
"	R = translate(S,T,C);
" is compiled as
"	call trans_3_(R,Rdesc,S,Sdesc,T,Tdesc,C,Cdesc);
" where all args are as above
"
	name	translate_
	entry	trans_2_
	entry	trans_3_

	bool	varying,010000
	equ	r_arg,2
	equ	r_desc,4
	equ	s_arg,6
	equ	s_desc,8
	equ	t_arg,10
	equ	t_desc,12
	equ	c_arg,14
	equ	c_desc,16

	temp	s_length,t_length,t_offset,c_length,c_mask,long
	temp	count,temp
	tempd	s_pt,c_pt

trans_2_:
	push
	stz	long		this is short form

join:	epp2	ap|s_arg,*	get ptr to s
	lda	ap|s_desc,*	get desc(s)
	cana	varying,du	is it varying?
	tze	2,ic		no
	lda	bp|-1		yes, get current length
	ana	=o77777777	mask to 24 bits
	neg	0		and save - length
	tze	done		return if zero length input
	sta	s_length
	spri2	s_pt		save ptr to s
	lda	ap|s_arg+1	extract bit offset of s
	ars	9
	ana	=o77,dl
	eax2	0,al		and save in x2

	epp2	ap|t_arg,*	get ptr to t
	lda	ap|t_desc,*	get desc(t)
	cana	varying,du	is it varying
	tze	2,ic		no
	lda	bp|-1		yes, get current length
	ana	=o77777777	mask to 24 bits
	sta	t_length
	ldq	ap|t_arg+1	get bit offset of t
	qrs	9
	anq	=o77,dl
	div	9,dl		convert to char offset
	stq	t_offset		and save

	epp4	ap|r_arg,*	get ptr to r
	ldq	ap|r_arg+1	extract bit offset of r
	qrs	9
	anq	=o77,dl
	div	9,dl		convert to char offset
	eax3	0,al		and save in x3

	epp0	s_pt,*		get ptr to s

loop:	ldq	ap|0		get current character of s
	lls	9,2		into al
	ana	=o177,dl

	szn	long		is this long form?
	tze	check		no, use current char as index

	sta	temp		yes, must do index(c), so form
	als	9		word containing current character
	ora	temp		in each character position
	sta	temp
	als	18
	ora	temp		now have CCCC in a register

	lcq	c_length		init loop
	stq	count
	ldq	c_mask		get initial mask
	eax4	0

index:	cmk	c_pt,*4		check character
	tze	succ		zero means we found it

	aos	count		update counter
	tze	use_same		use this character if index failed

	qlr	27		shift mask right 9 bits
	tmi	index		and repeat if not done with word

	adx4	1,du		update for next word
	tra	index		and continue search

use_same:
	ana	=o177000,du	use input character
	tra	use_ch

succ:	lda	count		compute position in c
	ada	c_length

check:	cmpa	t_length		should we select char from t
	tpl	use_bl		no, use blank
	ada	t_offset		add char offset of t
	lrs	2		form word and char offset
	qrl	16
	lda	bp|0,al		get replacement char
	lls	shift,qu*
	tra	2,ic		and join common section

use_bl:	lda	=o040000,du

use_ch:
	arl	shift,3*		shift character to position for r
	xec	stba,3		store new character

	aos	s_length		bump length counter
	tze	done		zero means we're done

	adx2	9,du		update bit offset of s
	cmpx2	36,du		do we need another word
	tmi	3,ic		no
	epp0	ap|1		yes, update ptr
	eax2	0		and reset count

	adx3	1,du		update char offset of r
	cmpx3	4,du		do we need another word
	tmi	loop		no, repeat loop
	epp4	lp|1		yes, update ptr
	eax3	0		reset shift
	tra	loop		and then loop

done:	return

"	this entry is called with another argument specifying a string
"	to be searched.
"
trans_3_:
	push
	stc1	long		is this is the long case

	epp2	ap|c_arg,*	get ptr to c
	spri2	c_pt		save
	ldq	ap|c_arg+1	get char offset of c
	qrs	9
	anq	=o7,dl		only legal char offsets are 11,22,33,0 bits
	ldq	index_mask,ql	get initial mask for index operation
	stq	c_mask		and save
	lda	ap|c_desc,*	get desc(c)
	cana	varying,du	is it varying
	tze	2,ic		no
	lda	bp|-1		yes, get current length
	ana	=o77777777	mask to 24 bits
	sta	c_length		save length of c
	tra	join		join common section

shift:	dec	0b17,9b17,18b17,27b17

stba:	stba	lp|0,40
	stba	lp|0,20
	stba	lp|0,10
	stba	lp|0,04

index_mask:
	oct	000777777777
	oct	777000777777
	oct	777777000777
	oct	777777777000

	end
