/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */
setonsource:	proc(str) options(support);

/* recoded by M. Weaver 1/14/74 for new pl1 signalling discipline */

dcl  str char(256) var;

dcl  type fixed bin;

dcl (addr, null, substr) builtin;
dcl  pl1_signal_$help_plio2_signal_ entry(char(*), ptr, fixed bin(35), char(256) var, fixed bin);

%include on_data_;

%include condition_info;
declare 1 CI aligned like condition_info;

%include pl1_info;
%include condition_info_header;

/**/
/* This procedure must change the onsource string in both the old ondata_
   segment and in the relevant structure.
   If there is no relevant structure to change, the calling procedure is in error */

	type = 1;					/* indicate onsource */
	if find_struc() then do;			/* true if relevant struc()ture found */
	     ondata_$onsource = str;			/* set in old way */
	     pl1_info.onsource = str;			/* set in new way */
	     return;
	end;

sig_err:					/* no relevant structure found */
	call pl1_signal_$help_plio2_signal_("error", null, 170, "", 0);
	return;


set_onchar:	entry(ch);

dcl  ch char(1);

	type = 2;					/* indicate onchar */
	if find_struc() then do;
	     substr(ondata_$onsource, ondata_$oncharindex-3, 1) = ch;
	     substr(pl1_info.onsource, pl1_info.oncharindex, 1) = ch;
	     return;
	end;

	go to sig_err;

/**/
find_struc:	proc() returns(bit(1) aligned);

/* internal procedure to find  the info structure associated with the
   most recent condition to set onsource/onchar */

dcl  code fixed bin(35);
dcl (nsp, sp) ptr;
dcl find_condition_frame_ entry(ptr) returns(ptr);
dcl find_condition_info_ entry(ptr, ptr, fixed bin(35));

	nsp, sp = null;
next_frame:
	nsp = find_condition_frame_(sp);		/* look for the next condition frame */
	if nsp = null then return("0"b);		/* can't even find frame */
	call find_condition_info_(nsp, addr(CI), code);
	if code ^= 0 then return("0"b);		/* something must be wrong; stop here */

	pl1_info_ptr = CI.info_ptr;
	if pl1_info_ptr ^= null
	then if pl1_info.id = "pliocond" then do;	/* have a pl1 structure */
	     if type = 1 then if pl1_info.onsource_sw then return("1"b);
	     if type = 2 then if pl1_info.onchar_sw then return("1"b);
	end;

	sp = nsp;
	go to next_frame;				/* look for next */

	end;

	end;
