/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */
/* format: style2,ind3 */
om_init:
   proc (p_number_of_entries, p_table_ptr, p_code);

/* DESCRIPTION:

         Sets  up an empty table of pointers to opening info structures.  The
     table is allocated in the area pointed to  by  dm_data_$opening_area_ptr.
     The table is set up as a hash of p_number_of_entries buckets.
*/

/* HISTORY:

Written by Matthew Pierret, 07/26/82.
Modified:
08/11/82 by Matthew Pierret:  Changed opening_table to be 0-originned.
04/12/83 by Matthew Pierret:  Changed to use OPENING_TABLE_VERSION_2, which is
            0-originned.  This is necessary because hash_index can return a
            value of 0.
11/14/84 by Stanford S. Cox:  MAIN:  Chg to init opening_table.version.
*/

/* START OF DECLARATIONS */
/* Parameter */

      dcl	    p_number_of_entries    fixed bin (17) parameter;
      dcl	    p_table_ptr	       ptr parameter;
      dcl	    p_code	       fixed bin (35) parameter;

/* Automatic */

      dcl	    work_area_ptr	       ptr;

/* Based */

      dcl	    work_area	       area (sys_info$max_seg_size) based (work_area_ptr);

/* Builtin */

      dcl	    null		       builtin;

/* Constant */
/* Entry */

      dcl	    get_dm_free_area_      entry () returns (ptr);

/* External */

      dcl	    sys_info$max_seg_size  ext fixed bin (35);

/* END OF DECLARATIONS */

      p_code = 0;

      work_area_ptr = get_dm_free_area_ ();

      ot_upper_bound = p_number_of_entries - 1;

      alloc opening_table in (work_area);

      opening_table.hash_entry_ptr = null;

      p_table_ptr = opening_table_ptr;
      opening_table.version = OPENING_TABLE_VERSION_2;

      return;
%page;
%include dm_om_table;


   end om_init;
