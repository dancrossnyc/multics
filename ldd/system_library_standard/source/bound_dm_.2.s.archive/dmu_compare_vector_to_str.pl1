/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */

/* format: style2,ind3 */

dmu_compare_vector_to_str:
   proc (p_field_table_ptr, p_simple_typed_vector_ptr, p_key_string_ptr, p_key_string_length, p_last_field_idx,
      p_first_inequal_field_id, p_vector_equal_to_key, p_vector_less_than_key, p_code);

/* DESCRIPTION:  
          This program compares the value of a simple_typed_vector and a key.
     It is responsible for "parsing" the key bit string into its constituent
     fields, using the information provided by the field_table.  Dimension I
     of the simple_typed_vector is assumed to be the same field as field I of
     the key.
          The comparison is done a-field-at-a-time, starting with field 1 and
     continuing with field 2, field 3, etc. until either an inequality is
     found or all of the fields have been compared.  
     
          All of the code is in the internal procedure
     COMPARE_VECTOR_TO_STRING, which is in the include file 
     dm_comp_vec_str_proc.incl.pl1.  This is so that other procedures can
     get the same functionality this module provides without the expense of
     an external call.
     
          COMPARE_VECTOR_TO_STRING takes no arguments.  It assumes that
     the main procedure has declared and set a set of global variables which
     COMPARE_VECTOR_TO_STRING will use as if they were parameters.  These
     variables are described in the Parameters section of 
     COMPARE_VECTOR_TO_STRING.
*/

/* HISTORY:

Written by Lindsey Spratt, 03/30/82.
Modified:
04/22/82 by Lindsey Spratt:  Added the maximum_field_idx to allow for
	  comparisons against branch keys which are less than full length.
	  Extended the calling sequence to allow for the last_field_idx, as
	  well.
05/17/82 by Lindsey Spratt:  Changed to use the
	  field_table.varying_field_map.varying_field_index to determine if
	  a field is a varying string.
06/30/82 by Lindsey Spratt:  Changed to accept simple_typed_vectors which are
	  less than full length.  The "maximum_field_idx" is set to the
	  minimum of the number of dimensions in the simple_typed_vector and
	  either the p_last_field_idx (if greater than 0) or the number of
	  the fields in the field table.
08/02/82 by Lindsey Spratt:  Changed to set the p_first_inequal_field_id.
09/01/82 by Lindsey Spratt:  Changed to use simple_typed_vectors which have
	  packed value ptrs.
10/27/82 by Lindsey Spratt:  Changed to return the "true"
	  first_inequal_field_id.  It is possible for this value to be one
	  greater than the maximum_field_idx, which in turn may mean that it
	  is one greater than the number of fields in the key.
11/04/82 by Lindsey Spratt:  Fixed comparison for the last field to not return
	  "equal" if the last field is truncated to a value which
	  is shorter than the vector value.
11/22/82 by Matthew Pierret: Changed an if-then statement to an if-then if-then
            statement.  One of the components of the if-clause contains a
            pointer that is not set if the other components are not true.
            This test is the one that determines if vector and key are not 
            equal based on differing lengths.
12/08/82 by Lindsey Spratt:  Fixed code which looks at varying field lengths
	  to cope with any size field length variable (currently 9, 18 and
	  36 bit length variables are possible).
01/12/83 by Lindsey Spratt:  Fixed the offset calculation for varying length
	  fields to take into account whether the length value is in bits or
	  characters.  Streamlined this code to make use of the previous
	  calculation for the previous varying length field, rather than add
	  up the lengths of all varying length fields prior to the field
	  being looked at.
06/29/83 by Lindsey L. Spratt:  Fixed to set the
            location_of_first_varying_field correctly when p_last_field_idx >
            0 but field_table.field(p_last_field_idx) is not a truncated
            field.
11/16/83 by Lindsey L. Spratt:  Fixed to always set the
            last_field_is_truncated flag correctly.
04/10/84 by Matthew Pierret:  Changed to use local copies of parameters for
            enhanced performance.  Also changed to set pointers to locatins
            in the key_string using the addbitno builtin instead of
            addr(key_bit_array,...). Changed to test the descriptor type for
            varying_char_dtype or varying_bit_dtype instead of looking in the
            varying_field_map to determine if a field is varying.
04/20/84 by Matthew Pierret:  Moved code into the internal subroutine
            COMPARE_VECTOR_TO_STRING which is contained in the include file
            dm_comp_vec_str_proc.incl.pl1.
05/03/84 by Matthew Pierret:  Changed to use FIELD_TABLE_VERSION_3.
*/

/* START OF DECLARATIONS */
/* Parameter */

      dcl	    p_field_table_ptr      ptr;
      dcl	    p_simple_typed_vector_ptr
			       ptr;
      dcl	    p_key_string_ptr       ptr;
      dcl	    p_key_string_length    fixed bin (24);
      dcl	    p_last_field_idx       fixed bin (17) unaligned;
      dcl	    p_first_inequal_field_id
			       fixed bin (17) parameter;
      dcl	    p_vector_equal_to_key  bit (1) aligned;
      dcl	    p_vector_less_than_key bit (1) aligned;
      dcl	    p_code	       fixed bin (35);

/* Automatic */

      dcl	    cvs_p_field_table_ptr  ptr;
      dcl	    cvs_p_simple_typed_vector_ptr
			       ptr;
      dcl	    cvs_p_key_string_ptr   ptr;
      dcl	    cvs_p_key_string_length
			       fixed bin (35);
      dcl	    cvs_p_last_field_idx   fixed bin (17);
      dcl	    cvs_p_first_inequal_field_id
			       fixed bin (17);
      dcl	    cvs_p_vector_equal_to_key
			       bit (1) aligned;
      dcl	    cvs_p_vector_less_than_key
			       bit (1) aligned;
      dcl	    cvs_p_code	       fixed bin (35);

/* Based */
/* Builtin */
/* Controlled */
/* Constant */

      dcl	    myname	       init ("dmu_compare_vector_to_str") char (32) varying internal static
			       options (constant);
      ;

/* Entry */
/* External */

/* END OF DECLARATIONS */

      cvs_p_field_table_ptr = p_field_table_ptr;
      cvs_p_simple_typed_vector_ptr = p_simple_typed_vector_ptr;
      cvs_p_key_string_ptr = p_key_string_ptr;
      cvs_p_key_string_length = p_key_string_length;
      cvs_p_last_field_idx = p_last_field_idx;

      call COMPARE_VECTOR_TO_STRING ();

      p_first_inequal_field_id = cvs_p_first_inequal_field_id;
      p_vector_equal_to_key = cvs_p_vector_equal_to_key;
      p_vector_less_than_key = cvs_p_vector_less_than_key;
      p_code = cvs_p_code;

      return;
%page;
%include dm_comp_vec_str_proc;

   end dmu_compare_vector_to_str;
