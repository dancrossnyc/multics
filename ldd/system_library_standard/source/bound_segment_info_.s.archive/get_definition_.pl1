/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   *********************************************************** */
/* GET_DEFINITION_ - Get pointer to definition for external symbol.
	coded 9/27/76 by Noel I. Morris		*/


/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */


get_definition_: proc (defsp, seg, sym, defp, code);

dcl  defsp ptr,					/* pointer to definitions section */
     seg char (*),					/* segment name */
     sym char (*),					/* external symbol name */
     defp ptr,					/* returned pointer to definition */
     code fixed bin (35);				/* error code */

dcl  l fixed bin;

dcl 1 segacc aligned,
   (2 l fixed bin (8),
    2 c char (31)) unal;

dcl 1 symacc aligned,
   (2 l fixed bin (8),
    2 c char (31)) unal;

dcl  get_defptr_ entry (ptr, ptr, ptr, ptr, fixed bin (35));

dcl (addr, length, reverse, substr, unspec, verify) builtin;



	l = length (seg) - verify (reverse (seg), " ") + 1;
	substr (unspec (segacc), 1, 36) = "0"b;
	segacc.l = l;
	substr (segacc.c, 1, l) = seg;

	l = length (sym) - verify (reverse (sym), " ") + 1;
	substr (unspec (symacc), 1, 36) = "0"b;
	symacc.l = l;
	substr (symacc.c, 1, l) = sym;

	call get_defptr_ (defsp, addr (segacc), addr (symacc), defp, code);

	return;


     end;
