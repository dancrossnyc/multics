/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
   *                                                         *
   *********************************************************** */

/* format: style4,indattr,ifthenstmt,ifthen,^indcomtxt,idind33 */

bj_cleanup_tables$handler:
     procedure (code);

/* DESCRIPTION:
     A temporary procedure to address the need for a centralized
routine to undo changes to the PST during journalization.
*/

/* HISTORY:
Written by Mike Pandolf, 06/28/82.
Modified:
11/12/82 by M. Pandolf:  elimiated call to ioa_ just before unlocking tables.
03/09/83 by M. Pandolf:  to use new pste locking.
12/06/83 by L. A. Newcomb:  Renamed before_journal_manager_static_ to
            bjm_data_ and moved some cells from dm_data_ to bjm_data_.
*/
%page;	
/* handler:						 entry for invocation from expected error handler
	entry (code); */

	reason_invoked = HANDLER;
	code = 0;

	call BEGIN_CLEANUP;

	return;

crawl_out:					/* entry for invocation from unexpected error handler */
     entry (code);

	reason_invoked = CRAWLOUT;
	code = 0;

	call BEGIN_CLEANUP;

	return;

dead_process:					/* entry for invocation after a process destruction */
     entry (code);

	reason_invoked = DEAD_PROCESS;
	code = 0;

	call BEGIN_CLEANUP;

	return;

%page;

/* INTERNAL PROCEDURES */

BEGIN_CLEANUP:
     procedure ();

	my_process_id = get_process_id_ ();

	bj_pst_ptr = bjm_data_$bj_pst_ptr;

	do pste_no = 1 to bj_pst.max_n_entries;
	     if bj_pst.e (pste_no).lock.pid = my_process_id
	     then call bj_pste_lock$unlock_cleanup (addr (bj_pst.e (pste_no)));
	end;

	if bj_pst.lock.pid = my_process_id
	then do;
	     call lock_manager_$unlock_fast (addr (bj_pst.lock), code);
	end;

	return;

     end BEGIN_CLEANUP;


/* DECLARATIONS */

/* Parameters */

dcl  code			        fixed bin (35) parameter; /* standard status code */

/* Automatic */

dcl  reason_invoked		        fixed bin automatic;	/* indicator for the rest of the procedure */
dcl  my_process_id		        bit (36) aligned;
dcl  pste_no		        fixed bin;

/* Static, External */

dcl  bjm_data_$bj_pst_ptr	        pointer external static;

/* Entry */

dcl  bj_pste_lock$unlock_cleanup      entry (ptr);
dcl  lock_manager_$unlock_fast        entry (ptr, fixed bin (35));
dcl  get_process_id_	        entry returns (bit (36));

/* Constants */

dcl  HANDLER		        internal static options (constant) fixed bin init (1);
dcl  CRAWLOUT		        internal static options (constant) fixed bin init (2);
dcl  DEAD_PROCESS		        internal static options (constant) fixed bin init (3);

/* Condition */

dcl  error		        condition;

/* Include Files */

%page;
%include dm_bj_static;
%page;
%include dm_bj_pst;
%page;
%include dm_bj_pste;
%page;

     end bj_cleanup_tables$handler;
