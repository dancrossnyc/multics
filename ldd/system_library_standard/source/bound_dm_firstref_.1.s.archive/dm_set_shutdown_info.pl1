/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
   *                                                         *
   *********************************************************** */

/* DESCRIPTION:

         This  program  sets the real shutdown information in dm_system_data_
     for all processes.  It gets  the  administratively  set  shutdown  values
     saved  in  the  system  data,  calculates the DMS shutdown times from the
     Multics down time, compares the times, sets the real shutdown step times,
     and returns the resulting shutdown_info structure to the caller.

          THIS PROGRAM SHOULD ONLY BE CALLED BY THE DM DAEMON'S STATIC HANDLER
     FOR THE system_shutdown_scheduled_ IPS,  OR  THE  SHUTDOWN  IPC_  REQUEST
     HANDLER.            This      should     be     the     same     program,
     dm_daemon_util_$schedule_shutdown.
*/

/* HISTORY:

Written by Lee A. Newcomb, 09/21/84.
Modified:
*/

/* format: style2,ll79,ind3,^indprocbody,ifthendo,ifthen,^indnoniterdo */
/* format: ^inddcls,dclind5,idind35,linecom */

dm_set_shutdown_info:
   proc (p_shutdown_info_ptr);

/* START OF DECLARATIONS */
/* Parameter */
dcl  (
     p_shutdown_info_ptr		ptr		/* where to return the resulting shutdown info */
     )				parameter;

/* Automatic */
dcl  (
     1 admin_shutdown_info		aligned like shutdown_info,
     1 multics_shutdown_info		aligned like shutdown_info,
     1 multics_shutdown_spec		aligned like shutdown_spec,
     1 resultant_shutdown_info	aligned like shutdown_info
     )				automatic;

/* Based */
/* Builtin */
dcl  (addr, null, unspec)		builtin;

/* Constant */
dcl  (
     myname			init ("dm_set_shutdown_info")
				char (32) varying
     )				internal static options (constant);

/* Entry */
dcl  (
     dm_compare_shutdown_info		entry (ptr, ptr, ptr),
     dm_process_shutdown_spec		entry (ptr, ptr),
     sub_err_			entry () options (variable)
     )				external;

/* External */
dcl  (
     (
     dm_system_data_$begin_shutdown_time,		/* shutdown time cells */
     dm_system_data_$daemon_logout_time,
     dm_system_data_$saved_begin_shutdown_time,
     dm_system_data_$saved_daemon_logout_time,
     dm_system_data_$saved_user_bump_time,
     dm_system_data_$saved_user_shutdown_time,
     dm_system_data_$saved_user_warning_time,
     dm_system_data_$user_bump_time,
     dm_system_data_$user_shutdown_time,
     dm_system_data_$user_warning_time
     )				fixed bin (71),
     (
     dm_system_data_$shutdown_reason,			/* shutdown reason cells */
     dm_system_data_$saved_shutdown_reason
     )				char (64) aligned,
     error_table_$unimplemented_version fixed bin (35)
     )				external static;

/* END OF DECLARATIONS */
%page;
   shutdown_info_ptr = p_shutdown_info_ptr;
   call CHECK_VERSION (shutdown_info.version, SHUTDOWN_INFO_VERSION_1,
        "shutdown_info");

FILL_IN_ADMIN_INFO:
   do;
      unspec (admin_shutdown_info) = ""b;
      admin_shutdown_info.version = SHUTDOWN_INFO_VERSION_1;
      admin_shutdown_info.reason = dm_system_data_$saved_shutdown_reason;
      admin_shutdown_info.user_warning_time =
	 dm_system_data_$saved_user_warning_time;
      admin_shutdown_info.begin_shutdown_time =
	 dm_system_data_$saved_begin_shutdown_time;
      admin_shutdown_info.user_shutdown_time =
	 dm_system_data_$saved_user_shutdown_time;
      admin_shutdown_info.user_bump_time =
	 dm_system_data_$saved_user_bump_time;
      admin_shutdown_info.daemon_logout_time =
	 dm_system_data_$saved_daemon_logout_time;
   end FILL_IN_ADMIN_INFO;

PREPARE_MULTICS_SHUTDOWN_INFO:
   do;
      unspec (multics_shutdown_info) = ""b;
      multics_shutdown_info.version = SHUTDOWN_INFO_VERSION_1;
   end PREPARE_MULTICS_SHUTDOWN_INFO;

PROCESS_MULTICS_SHUTDOWN_SPEC:
   do;
      unspec (multics_shutdown_spec) = ""b;
      multics_shutdown_spec.version = SHUTDOWN_SPEC_VERSION_1;
      call dm_process_shutdown_spec (addr (multics_shutdown_spec),
	 addr (multics_shutdown_info));
   end PROCESS_MULTICS_SHUTDOWN_SPEC;

SET_NEW_SHUTDOWN_INFO:
   do;

/* Always set the shutdown info in dm_system_data_.  The use of	*/
/* the compare entry is to get the effective shutdown times and the	*/
/* no_time_specified flag set for the caller in the login ring.  It	*/
/* is possible to optimize this further to do a comparison with the	*/
/* currently set shutdown times to avoid sending multiple		*/
/* dm_shutdown_scheduled_ IPS' that are effectively no-ops.  At this 	*/
/* time, it is believed that the number of no-op IPS sendings will be	*/
/* so few that the extra complexity is not warranted.		*/

      unspec (resultant_shutdown_info) = ""b;
      resultant_shutdown_info.version = SHUTDOWN_INFO_VERSION_1;
      call dm_compare_shutdown_info (addr (multics_shutdown_info),
	 addr (admin_shutdown_info), addr (resultant_shutdown_info));

      dm_system_data_$user_warning_time =
	 resultant_shutdown_info.user_warning_time;
      dm_system_data_$begin_shutdown_time =
	 resultant_shutdown_info.begin_shutdown_time;
      dm_system_data_$user_shutdown_time =
	 resultant_shutdown_info.user_shutdown_time;
      dm_system_data_$user_bump_time = resultant_shutdown_info.user_bump_time;
      dm_system_data_$daemon_logout_time =
	 resultant_shutdown_info.daemon_logout_time;
      dm_system_data_$shutdown_reason = resultant_shutdown_info.reason;

      shutdown_info = resultant_shutdown_info;
   end SET_NEW_SHUTDOWN_INFO;

MAIN_RETURN:
   return;


/* end dm_set_shutdown_info; */
%page;
CHECK_VERSION:
   proc (cv_p_received_version, cv_p_expected_version, cv_p_structure_name);

dcl  (
     cv_p_received_version		char (*) aligned,
     cv_p_expected_version		char (*) aligned,
     cv_p_structure_name		char (*)
     )				parameter;

   if cv_p_received_version ^= cv_p_expected_version then
      call sub_err_ (error_table_$unimplemented_version, myname,
	 ACTION_CANT_RESTART, null, 0,
	 "^/Expected version ^a of the ^a structure.
Received version ^d instead.", cv_p_expected_version, cv_p_structure_name,
	 cv_p_received_version);

   end CHECK_VERSION;
%page;
%include dm_shutdown_spec;
%page;
%include sub_err_flags;


   end dm_set_shutdown_info;
