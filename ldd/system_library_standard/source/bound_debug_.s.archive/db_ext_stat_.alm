" ***********************************************************
" *                                                         *
" * Copyright, (C) Honeywell Information Systems Inc., 1982 *
" *                                                         *
" * Copyright (c) 1972 by Massachusetts Institute of        *
" * Technology and Honeywell Information Systems, Inc.      *
" *                                                         *
" ***********************************************************

"     db_ext_stat_.alm contains the external static data for debug.
"
"     Modified 7/75 by S.E. Barr to add instructions to restart an EIS break.
"
"     dcl  1 db_ext_stat_$db_ext_stat_ ext static aligned,
"
"       2 debug_input char(32) aligned,		/* Input switch name.  Initially 'user_input' */
"       2 debug_output char(32) aligned,	/* output switch name.  Initially 'user_output' */
"       2 return_label label,			/* The label used to do a non local goto out of debug when
"					  it was entered via a fault.  It will go to debug in
"					  another frame.  */
"
"       2 debug_io_ptr(2) ptr,		/* pointers to iocb for i/o 
"					  1 = input switch iocb ptr
"					  2 = output switch iocb ptr      */
"       2 flags aligned,
"         3 debug_io_attach(2) bit(1) unaligned, 	/* 1= debug made the attachment */
"         3 debug_io_open(2) bit(1) unaligned,	/* 1 = debug opened the switch */
"         3 in_debug bit(1) unaligned,		/* Switch for the any_other condition.  0 = send the
"					  condition on.  1 = use the debug condition handler */
"	3 static_handler_call bit (1) unal,	/* ON if static handler */
"         3 pad bit(30) unaligned,		/* Reserved for future use */
"       2 instructions (9) bit (36) aligned	/* Instructions to restart EIS breaks */
"
"
	name      db_ext_stat_
	segdef     db_ext_stat_
	segdef	break_instructions
"
"  These instructions are used to restart a break at an EIS instruction.  The EIS instruction must be restored
"  because the hardware may restart an EIS instruction in certain cases.  The break restart code restores the EIS
"  instruction and places a transfer in the word following the EIS instruction.  The transfer is to these instructions
"  which have been copied into the break map header in the object segment.  The instructions put the mme2 back
"  into the text and restore the word following the eis instruction.
"
break_instructions:

	sti	ind_save-*,ic
	sta	a_reg-*,ic
	lda	mme2-*,ic
	sta	mme2_indw-*,ic*
	lda	inst-*,ic
	sta	inst_indw-*,ic*
	lda	a_reg-*,ic
	ldi	ind_save-*,ic
	tra	inst_indw-*,ic*

mme2_indw:	arg	0		"  Offset of EIS break
inst_indw:	arg	0		"  Offset of instruction following EIS break
a_reg:		arg	0		"  Contents of a reg.
mme2:		arg	0		"  Used to save mme2
inst:		arg	0		"  Used to save instruction following EIS break
ind_save:		arg	0		"  Used to save indicators

	use	linkc
	join	/link/linkc
db_ext_stat_:
	aci	"user_input                      "
	aci	"user_output                     "
	bss	,9

	end
