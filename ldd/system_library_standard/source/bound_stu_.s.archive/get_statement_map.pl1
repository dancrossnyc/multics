/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

get_statement_map: proc (head_pt, map_pt, end_pt, map_size);


/*	Procedure used by stu_$get_runtime_location & stu_$get_runtime_line_no to
	get limits of a statement map, given a pointer to the symbol header

	Coded 12 March 1973 by Robert S. Coren
*/

	dcl     head_pt		 ptr;		/* pointer to standard symbol header */
	dcl     map_pt		 ptr;		/* pointer to beginning of statement map (output) */
	dcl     end_pt		 ptr;		/* pointer to end of statement map (output) */
	dcl     map_size		 fixed bin;	/* size of statement map entry in words */

	dcl     hpt		 ptr;
	dcl     block_pt		 ptr;

	dcl     (addrel, fixed, null, size) builtin;


%include std_symbol_header;
%include pl1_symbol_block;
%include statement_map;



	hpt = head_pt;
	if hpt = null then go to no;
	if hpt -> std_symbol_header.identifier ^= "symbtree" then go to no;
	if hpt -> std_symbol_header.area_pointer = "0"b then go to no;

	block_pt = addrel (hpt, hpt -> std_symbol_header.area_pointer);

	if block_pt -> pl1_symbol_block.map.first = (18)"0"b then go to no;
	map_pt = addrel (hpt, block_pt -> pl1_symbol_block.map.first);
	map_size = size (statement_map);
	end_pt = addrel (hpt, block_pt -> pl1_symbol_block.map.last);


	return;

no:	map_pt, end_pt = null;
	return;

     end get_statement_map;
