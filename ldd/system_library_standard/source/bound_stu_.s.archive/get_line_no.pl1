/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

/* Procedure to get the line number corresponding to a given location
   in an object segment compiled by PL/I or Fortran

   Modified: 25 September 1972 by BLW for std obj segment */

get_line_no: proc(block_pt,offset,start,num,line_no);

dcl	block_pt	ptr,		/* points at symbol block */
	offset	fixed bin(18),	/* an offset in text segment (input) */
	start	fixed bin(18),	/* set to start location of statement */
	num	fixed bin(18),	/* set to number of words in statement */
	line_no	fixed bin(18);	/* set to line number of statement */

dcl	(p,q) ptr,
	std bit(1) aligned,
	(ln,loc,inc) fixed bin(18);

dcl	(addrel,fixed,null,size) builtin;

dcl	1 map		aligned based,
	2 location	unal bit(18),
	2 line		unal bit(18);

%include runtime_symbol;
%include statement_map;

	q = block_pt;
	if q = null then goto no;

	if q -> runtime_block.first = (18)"0"b then goto no;

	std = q -> runtime_block.standard;
	if std then inc = size(statement_map); else inc = size(map);

	p = addrel(q,q -> runtime_block.first);
	q = addrel(q,fixed(q -> runtime_block.last,18) + inc);

	line_no = -1;

	do while(p ^= q);

	     if std
	     then do;
		ln = fixed(p -> statement_map.source_id.line,14);
		loc = fixed(p -> statement_map.location,18);
		end;
	     else do;
		ln = fixed(p -> map.line,18);
		loc = fixed(p -> map.location,18);
		end;

	     if loc <= offset
	     then if line_no ^= ln
		then do;
		     start = loc;
		     line_no = ln;
		     end;
		else;
	     else do;
		if line_no = ln then goto step;
		if line_no = -1 then goto no;
		num = loc - start;
		return;
		end;

step:	     p = addrel(p,inc);
	     end;

no:	start = -1;
	end;
