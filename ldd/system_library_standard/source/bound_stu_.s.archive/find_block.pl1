/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

/* Procedure to search for a symbol block

   Initial Version: 15 May 1970 by BLW
	Modified: 25 September 1972 by BLW for std obj segments */

find_block: proc(pt,name) returns(ptr);

dcl	pt	ptr,		/* points at symbol header */
	name	char(*) aligned;	/* name of block to look up */

dcl	(hp,bp) ptr,
	root bit(18) aligned,
	(addrel,length,null) builtin;

%include symbol_header;
%include symbol_node;
%include std_symbol_header;
%include pl1_symbol_block;

	hp = pt;

	if hp -> std_symbol_header.identifier ^= "symbtree"
	then root = hp -> symbol_header.root;		/* non-std symbol header */
	else do;

	     /* have std symbol header, look for pl1 symbol block */

	     if hp -> std_symbol_header.area_pointer = (18)"0"b then return(null);

	     bp = addrel(hp,hp -> std_symbol_header.area_pointer);
	     if bp -> pl1_symbol_block.identifier ^= "pl1info" then return(null);

	     root = bp -> pl1_symbol_block.root;
	     end;

	if root = (18)"0"b then return(null);

	return(search(addrel(hp,root)));

search:	     proc(block_pt) returns(ptr);

dcl	     (block_pt,p,bp) ptr,
	     n fixed bin;

dcl	     1 acc	aligned based,
	     2 size	unal bit(9),
	     2 string	unal char(n);

	     bp = block_pt;

check:	     if bp -> symbol_block.name = (18)"0"b then goto step;

	     p = addrel(bp,bp -> symbol_block.name);
	     n = fixed(p -> acc.size,9);
	     if n ^= length(name) then goto step;

	     if name = p -> acc.string then return(bp);

step:	     if bp -> symbol_block.son
	     then do;
		p = search(addrel(bp,bp -> symbol_block.son));
		if p ^= null then return(p);
		end;

	     if bp -> symbol_block.brother
	     then do;
		bp = addrel(bp,bp -> symbol_block.brother);
		goto check;
		end;

	     return(null);

	     end;

	end;
