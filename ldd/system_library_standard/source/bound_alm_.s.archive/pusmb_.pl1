/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1988                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */


pusmb_:
	procedure( pc, word, relwrd ) ;

/* Last modified by NA on June 24, 1970 at 1022 */
  
	/* makes calls to stack the symbol words and stack the
	 associated relocation bits in the scratch segment */

declare	(pc, word, relwrd) fixed bin (26);
declare	(lbits, rbits, itemp, nl, nr, i, ival ) fixed bin ( 17 ) aligned ;

% include objnfo ;

declare	object_$objst ext entry (fixed bin (26), fixed bin (26)),
	object_$wrbst ext entry (fixed bin (26), fixed bin (26)),
	object_$getbst ext entry (fixed bin, fixed bin, fixed bin) ;

	call object_$objst( pc, word ) ;	/* write the symbol into the scratch segment */

	call object_$wrbst( pc, relwrd ) ;	/* insert the relocation bits into the proper place in the scratch segment */ 


	return ;




symcnt:	entry( ival ) ;	/* entry to count the number of relocation bits for the symbol portion */

	ival = 0 ;

	itemp = istpc - 1 ;

label_1000:
	do i = 0 to itemp ;

		call object_$getbst( i, lbits, rbits ) ;

		nl = 1 ;

		nr = 1 ;

		if lbits ^= 0 then nl = 5 ;

		if rbits ^= 0 then nr = 5 ;

		ival = nl + nr + ival ;

end label_1000 ;


	istcnt = ival ;

end pusmb_ ;
