/****^  ***********************************************************
        *                                                         *
        * Copyright, (C) Honeywell Bull Inc., 1988                *
        *                                                         *
        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        *                                                         *
        * Copyright (c) 1972 by Massachusetts Institute of        *
        * Technology and Honeywell Information Systems, Inc.      *
        *                                                         *
        *********************************************************** */




/****^  HISTORY COMMENTS:
  1) change(86-10-01,JRGray), approve(86-10-01,MCR7507),
     audit(86-10-27,RWaters), install(86-11-12,MR12.0-1202):
     Modified to allow for joining blocks to the definition section.
                                                   END HISTORY COMMENTS */


putout_:	procedure ;

  
/* Modified for separate static on 06/15/75 by Eugene E Wiatrowski */
/* Modified on 11/23/72 at 00:56:57 by R F Mabee. Removed eb_data_$zerbuf. */
/* Modified by RHG on 7 August 1970 at 0534 to fix dimension of eb_data_$zerbuf */
% include varcom ;

% include concom ;

% include curlc ;

declare	(lary, rary, xlary, xlword) ptr ;
 
 declare	binword (n) fixed binary based (lary);
 
declare	relword(n) based (rary) fixed bin (35) ;
 
declare	( xpc, xary, xword, xhow, xn, how, rword, xrary, xrword, relwrd, origin, segmnt, i, n ) fixed bin (35) ; 
	declare word fixed bin (35);

declare	( eb_data_$mb28, eb_data_$mb29) fixed bin ( 35 )  ext ;

	/* EXTERNAL FUNCTIONS */
declare	glpl_$clh ext entry (fixed bin) returns (fixed bin),
	glpl_$crh ext entry (fixed bin) returns (fixed bin),
	utils_$or ext entry (fixed bin (35), fixed bin (35)) returns (fixed bin (35)),
	utils_$and ext entry (fixed bin (35), fixed bin (35)) returns (fixed bin (35)) ;

	/* EXTERNAL ENTRIES */
declare	putxt_$putxt_ ext entry (fixed bin (35), fixed bin (35), fixed bin (35)),
	pulnk_$pulnk_ ext entry (fixed bin (35), fixed bin (35), fixed bin (35)),
	pudef_$pudef_ ext entry (fixed bin (35), fixed bin (35), fixed bin (35)),
	pusmb_$pusmb_ ext entry (fixed bin (35), fixed bin (35), fixed bin (35)),
	prwrd_$prwrd2 ext entry (fixed bin (35), fixed bin (35), fixed bin (35), fixed bin (35)) ;


putlst:	entry( xpc, xary, xhow, xn, xrary ) ;

	n = xn ;

	lary = addr( xary ) ;

	rary = addr(xrary) ;
  
	go to label_1000 ;



putwrd:	entry( xpc, xword, xhow, rword ) ;

	n = 1 ;

	lary = addr( xword ) ;

	rary = addr( rword ) ;

	go to label_1000;




putblk:	entry( xpc, xlary, xhow, xn, xlword ) ;

	n = xn ;

	lary = xlary ;

	rary = xlword ;






label_1000:

	origin = glpl_$clh( curlc + 3 ) ;

	segmnt = glpl_$crh( curlc + 4 ) ;


label_1030:

	do i = 1 to n ;

		word = lary -> binword(i)  ;

		if rary ^= null () then relwrd = rary -> relword (i) ; else relwrd = 0;

		how = xhow ;

	if utils_$and( word, eb_data_$mb29 ) ^= 0 & how = i642 then how = i1542 ;

	if tinhib ^= 0 & ( how = i642 | how = i1542 ) then word = utils_$or( word, eb_data_$mb28 ) ;

	if segmnt = 1 then go to label_1010 ;	/* link */

	if segmnt = 2 then go to label_1015 ;	/* symbol */

	if segmnt = 4 then go to label_1010 ;   /* separate static */

	if segmnt = 8 then go to label_1017 ;   /* definition */


label_1005:
				/* text */

	call putxt_$putxt_ ( xpc+origin, word, relwrd ) ;

	go to label_1020 ;


label_1010:

	call pulnk_$pulnk_ ( xpc+origin, word, relwrd ) ;

	go to label_1020 ;

label_1015:

	call pusmb_$pusmb_ ( xpc+origin, word, relwrd ) ;

	go to label_1020 ;

label_1017:

	call pudef_$pudef_ ( xpc+origin, word, relwrd ) ;


label_1020:

	call prwrd_$prwrd2( xpc+origin, word, how, relwrd ) ;

	xpc = xpc + 1 ;

end label_1030 ;

end putout_ ;
