/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


ta_util_: proc; return;

/* This module handles random utility functions for tape_archive.

   Written 06/29/77 by C. D. Tavares.
   Last modified 09/24/79 by CDT to make it understand ".." and ".".
*/

%skip(5);
get_next_token: entry (input_line) returns (char (168));

dcl  input_line char (*) parameter;

dcl  output_token char (168) varying,
     i fixed bin;

dcl (search, index, ltrim, length, substr) builtin;

dcl  TAB_SP char (2) static options (constant) initial ("	 ");

	output_token = "";

	input_line = ltrim (input_line, TAB_SP);

	if substr (input_line, 1, 1) = """" then do;
	     do while (substr (input_line, 1, 1) = """");
		i = index (substr (input_line, 2), """") + 1;
		if i = 0 then i = length (input_line);
		output_token = output_token || substr (input_line, 2, i-1);
		if i = length (input_line) then input_line = "";
		else input_line = substr (input_line, i+1);
	     end;

	     return (substr (output_token, 1, length (output_token) - 1));
	end;

	if substr (input_line, 1, 1) = "." then do;
	     if substr (input_line, 1, 2) = ".." then do;
		input_line = substr (input_line, 3);
		return ("..");
	     end;

	     else do;				/* single dot */
		output_token = input_line;
		input_line = "";
		return (output_token);
	     end;
	end;

	i = search (input_line, TAB_SP) - 1;
	if i = -1 then i = length (input_line);
	output_token = substr (input_line, 1, i);
	if i = length (input_line) then input_line = "";
	else input_line = substr (input_line, i+1);

	return (output_token);
     end ta_util_;
