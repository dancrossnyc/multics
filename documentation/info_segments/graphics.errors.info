
09/21/87  graphics 
Known errors in the current release of graphics.
#	Associated TR's
Description

99  phx15957
Can't use calcomp_915 module since ntape_ got unsupported.

98  phx12939
setup_graphics when used twice without a remove_graphics in between,
attempts to do the remove_graphics for the user.  However, if -online
is used on the second setup_grahics command, it will say that it is in
error.

97  phx12908
calls get_to_text_mode too early to set rawo mode, thus sometimes not
going to ^rawo mode when done.  This happens for any GSP that returns
any characters from its close entrypoint.

96  phx12390
Uses graphic output buffer to store modes returned from GSP.  If mode
string exceeds Message_size, it can get shipped to terminal by mistake.

95  phx12256
Uses enter_graphic_mode entry to set plot number on tape.  This results
in resetting the plot number erroneously if the user should use
changemode on his graphic switch.  The open entry or a similar
mechanism should be used.

94  phx12179
DSB-chaining code always references through null pointer when creating
second and subsequent DSB's.

93  phx11126
Attach description and modes for graphic_dim_ not well documented in
AS40.

92  phx11825
remove_graphics assumes all online switches go to tty_i/o, even when
set up elsewhere via sg -online -to xxx.

91  
Passes unrecognized control orders except when they are "sub-orders"
of the "io_call" order.  It should pass these, too.

90  phx11334
Use of the "999." feature of ccs_$symbol and ccs_$number after an
intervening call to most other entrypoints in ccs_ will produce
incorrect placement/sizing of the output.

89  phx10008
Calcomp tape format only accommodates 63 characters per text string,
but calcomp_915_ ignores this limitation.

88  phx09736
Module calcomp_915_dim_ leaves attach table in half-baked state if
attach through it fails.

87  phx09637
Masking of event calls, necessary to keep asynchronous output (notably
interactive messages) from appearing in mid-picture, has side-effects
including interfering with tape I/O.  There is no general solution to
this problem, and the only workable write-around is non-trivial.

86  
graphics_editor (show in particular) cannot handle max-sized
lists/arrays.  When the current limit is removed, the whole strategy
will have to be reworked in any case.

85  phx09633
The graphic_dim_ never invokes GDT's at their "Prepare_for_graphics"
entries.  (EXL only)

84  MPRF06514
Return conversion errors occur in gm_$examine_list if supplied array is
too small.

83  
graphic_dim_ allows event-calls (e.g., interactive messages) to occur
at the most inopportune moments.  (EXL only)

82  
Misdeclaration of argument in graphic_dim_order causes set_tty command
to complain about undefined order requests.

80  MPRF06412
Compatibility feature "-offline" to setup_graphics gives various
errors, process terminations, and so on.

79  phx08622
Run units and setup_graphics don't mix.  The perprocess-static switch
needs to be set in the bindfile for bound_graphics_system_.
(Temporarily set 12/09/80 in both >exl and >unb via
perprocess_static_sw_on command.)

78  phx08462
String extents arguments returned by graphic_chars_$long and $long_tb
fail to account for character scale factors supplied in call.

77  
The new graphic_code_util_ uses a stack temporary reserved for
pl1_operators_.  (EXL only)

76  
When detaching a graphic switch, graphic_dim_ first closes out the GDT
and then tries to tell it to go into text mode.  This bug was caused by
the fix to bug 66.  (EXL only)

75  
Bug in tektronix_40XX_ causes it to forget to zero an error code which
it ignores anyway when it is writing to a file instead of to the
terminal.

74  phx09014
graphic_compiler_ puts out spurious shifts before text elements in
lists (not arrays).

73  
A bug introduced with the implementation of suggestion 44 causes the
graphic_compiler_ to mess up coordinates of single elements and
elements of lists.  (EXL only)

72  
graphic_dim_ faults in modes entry if graphics attached to a file
through a GDT.

71  phx07892
lsm_$set_blk does not complain about attempts to grow lists or arrays
past their max-- instead, it copies the entire list over again in the
WGS and doesn't grow it at all.  This results in the WGS filling up
rather quickly with useless dead lists when using things like ccs_.

70  phx07462
ge replay will print very small coordinate values in "e" format,
even though when they are re-input, it cannot understand them.

69  phx07461
gr_print_ reverses blinking and sensitivity when interpreting graphics
code.

68  phx07431 phx07842
If a mode or mapping occurs as the last element of an array, the
graphic_compiler_ will lock up solid.

67  phx07453
Scaling in graphic_editor, when given no arguments, defaults to "0 1
1" instead of "1 1 1".  Looks like an incomplete fix to bug 34.

66  phx07285
If any characters are output by a GSP's close entry, the graphic_dim_
will leave the process in rawo mode.

65  phx06411
plot_ will attempt to take log of a negative value when performing auto
scaling of data, when all data consists of identical negative numbers.

64  phx06160
Never really draws points or setpoints.

63  
Sometimes plot_ will come out with something silly like 4.2345e-9
instead of zero for an axis value.

62  
Signalling of arbitrary condition in graphic_dim_ should be changed to
call to sub_err_.

61  phx05706
Requests to ccs_$plot to reset the origin fail if the current graphic
position already happens to be at the designated point.

60  
The graphic_decompiler_ signals things instead of using sub_err_.

59  
list_pgs_contents initiates the pgs directly instead of using lsm_; if
the segment is not a real pgs it will fault or otherwise fail.  (EXL
only)

58  
lsm_fs_$init_seg never checks the segment it is initiating to see if it
even resembles an lsm_ segment.

57  
Even though users have >exl>gs in their search rules before >unb, use
of parts of the graphics system for which no experimental copy exists
will sometimes cause the process (via the referencing_dir rule) to use
bits and pieces of >unb versions of the graphics system.  The most
common symptom is for one version to create a WGS and for the other to
swear it doesn't exist.  The only workable fix for this is to keep an
entire complement of the executable bound segments in EXL whether they
have been changed or not.  (EXL only)

56  
If graphic_element_length_ is used incorrectly by a user (the MGS
validates better than this) it signals "illegal_graphic_effector".
This should at least be a call to sub_err_.

55  phx05493 phx06847
Entry gm_$examine_color fails because it uses an unset pointer.

54  phx05492
Input arrays of more than 4095 elements cause graphic_decompiler_ to
garbage its stack and fail.  This bug may be finessed instead by a
timely implementation of suggestion 52.

53  
Support of color terminals is not possible until the redundancy
inherent in defining both color and intensity effectors is dealt with;
intensity is physically a function of color as color is defined in the
MGS.  The fix for this design deficiency is to de-define the intensity
effector altogether, which must await implementation of planned
improvement 46.

52  
The MR8.0 MGS refuses to operate on version 6 PGS's having a symbol in
slot 0 of the hashtable.  Attempts result in spurious and
uncircumventable "Node out of bounds" messages.

51  
Tektronix devices at 9600 baud sometimes draw crooked lines.  This is
due to an undocumented restriction on the speed at which these devices
can draw lines.  Manufacturer's suggested solution is to disable
character transmission optimization software for terminals at this
speed or above.

50  
When automatically upgrading a PGS to the version 7 format,
gm_$use_file (really lsm_fs_$pull) creates a symbol hashtable one word
too long (and thus of nonprime size).

40  
Tektronix GSP does not clip to the size of the screen.  Vectors that
cross the edges of the screen become badly distorted.
