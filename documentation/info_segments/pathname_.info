02/13/84  pathname_

The pathname_ subroutine contains entry points for constructing
pathnames and archive component pathnames given a directory name, entry
name, and optionally, an archive component name.

When a directory name and an entry name are combined to form a
pathname, the result may be longer than 168 characters.  If truncating
the pathname doesn't matter, e.g.  in an error message in a call to
com_err_ for another, more important error, then use the pathname_ or
pathname_$component entry points.  These entry points create an invalid
pathname with the characters "PATHNAME TOO LONG" to let the reader know
truncation occured.  If truncating the pathname matters, use the
pathname_$component_check entry point.


Entry points in pathname_:
   (List is generated by the help command)


:Entry: pathname_: 02/13/84 pathname_

Function: given a directory name and an entry name, returns the
pathname of the entry.


Syntax:
declare pathname_ entry (char (*), char (*)) returns (char (168));
path = pathname_ (dirname, entryname);


Arguments:
path
   is the pathname of the entry in the given directory.  (Output)
dirname
   is the pathname of the containing directory.  (Input)
entryname
   is the entryname of the entry.  (Input)


Notes:  If the resulting pathname is longer than 168 characters, then
the last 20 characters of the result are set to " <PATHNAME TOO LONG>".


:Entry:  component:  02/13/84 pathname_$component


Function: given a directory name, an entry name, and optionally, an
archive component name, constructs a pathname or an archive component
pathname.


Syntax:
declare pathname_$component entry (char (*), char (*), char (*))
     returns (char (194));
path = pathname_$component (dirname, entryname, component_name);


Arguments:
path
   is the pathname of the entry in the given directory, or is an
   archive component pathname.  (Output)
dirname
   is the pathname of the containing directory.  (Input)
entryname
   is the entryname of the entry.  (Input)
component_name
   is the name of an archive component, or is null.  (Input)


Notes:  If component_name is not null, the archive suffix on the
entryname is optional, and is assumed if not specified.  If
component_name is not null and entryname ends with the archive suffix,
the suffix is omitted from the returned pathname.

If component_name is null and the resulting pathname is longer than 168
characters, then the last 20 characters of the pathname are set to
" <PATHNAME TOO LONG>". If component_name is not null and the resulting
archive component pathname is longer than 194 characters, then the last
20 characters of the dirname>entryname portion of the archive pathname
are changed to " <PATHNAME TOO LONG>" and the component_name remains in
the pathname.


:Entry:  component_check:  02/13/84 pathname_$component_check


Function:  This entry point is the same as pathname_$component except a
status code indicates truncation instead of an invalid pathname
containing "PATHNAME TOO LONG".


Syntax:
declare pathname_$component_check entry (char (*), char (*), char (*),
     char (*), fixed binary (35));
call pathname_$component_check (dirname, entryname, component_name,
     path, code);


Arguments:
dirname
   is the pathname of the containing directory.  (Input)
entryname
   is the entryname of the entry.  (Input)
component_name
   is the name of an archive component, or is null.  (Input)
path
   is the pathname of the entry in the given directory, or is an
   archive component pathname.  (Output)
code
   is a standard status code.  (Output) It can be:
   error_table_$pathlong
      the pathname was truncated.


Notes:  If component_name is not null, the archive suffix on the
entryname is optional, and is assumed if not specified.  If
component_name is not null and entryname ends with the archive suffix,
the suffix is omitted from the returned pathname.
