02/06/84  ebcdic_to_ascii_

The ebcdic_to_ascii_ subroutine performs isomorphic (one-to-one
reversible) conversion from EBCDIC to ASCII.  The input data is a
string of valid EBCDIC characters.  A valid EBCDIC character is defined
as a 9-bit byte with a hexadecimal value in the range
00 <= hex_value <= FF (octal value in the range
000 <= oct_value <= 377).

Calling the ebcdic_to_ascii_ subroutine is extremely efficient,
since conversion is performed by a single MVT instruction and the
procedure runs in the stack frame of its caller.


Entry points in ebcdic_to_ascii_:
   (List is generated by the help command)


:Entry: ebcdic_to_ascii_: 02/06/84  ebcdic_to_ascii_

Function: This entry point accepts an EBCDIC character string and
generates an ASCII character string of equal length.


Syntax:
declare ebcdic_to_ascii_ entry (char(*), char(*));
call ebcdic_to_ascii_ (ebcdic_in, ascii_out);


Arguments:
ebcdic_in
   is the string of EBCDIC characters to be converted.  (Input)
ascii_out
   is the ASCII equivalent of the input string.  (Output)


:Entry:  ea_table:  02/06/84 ebcdic_to_ascii_$ea_table


Function:  This entry point defines the 256-character translation table
used to perform conversion from EBCDIC to ASCII.


Syntax:
declare ebcdic_to_ascii_$ea_table char(256) external static;


Notes: Of the 256 valid EBCDIC characters, only 128 have ASCII
equivalents.  These latter 128 characters are defined in the
Isomorphic ASCII/EBCDIC Conversion Table (in the Subroutines manual.)

For defined characters, the mappings implemented by the
ebcdic_to_ascii_ and ascii_to_ebcdic_ subroutines are isomorphic;
i.e., each character has a unique mapping, and mappings are
reversible.  An undefined (but valid) EBCDIC character is mapped into
the ASCII SUB (substitute) character, octal 032; the mapping of such a
character is anisomorphic.  The result of converting an invalid
character is undefined.
