02/19/85  check_gate_access_


This subroutine will allow a caller to determine whether a user has
access to a gate before trying to call it.  It will differentiate
between not finding the gate and not having access.


Entry points in check_gate_access_:
   (List is generated by the help command)


:Entry:  check_gate_access_:  02/19/85 check_gate_access_


Function:
allows a caller to determine whether a user has access to a gate
before trying to call it.


Syntax:
dcl check_gate_access_ entry (char(*), ptr, fixed bin (35));
call check_gate_access_ (gate_name, ref_ptr, code);


Arguments:
gate_name
   is the name of the gate.  (e.g., "phcs_")
ref_ptr
   is a pointer used to determine the desired referencing directory.
   (Input) It can be null (), in which case the referencing_dir search
   rule is not used, or can be a pointer to a procedure, usually the
   caller of check_gate_access_, whose containing directory will be
   used as the referencing directory.
code
   is a standard system status code.  (Output) It's value will be zero
   if the gate is located using the search rules of the current ring
   and if the access to the gate includes execute access.  If the gate
   cannot be located, the error code returned is error_table_$noentry.
   If the gate is located, but execute access is lacking, then
   error_table_$moderr is returned.


Notes:  Programs which can take alternate paths based on the access of
lack of access to a gate should use this subroutine rather than trying
to reference the gate explicitly and generating an access violation
audit message in the process.
