09/05/87  accept_messages, am

Syntax as a command:  am {mbx_specification} {-control_args}


Function: initializes or reinitializes your process both for accepting
messages that are sent by send_message and for notifications.


Arguments:
mbx_specification
   specifies the mailbox on which messages are to be accepted.  If not
   given, the user's default mailbox (>udd>Project>Person>Person.mbx)
   is used.


List of mbx specifications:
-log
   specifies the user's logbox and is equivalent to
      -mailbox >udd>Project_id>Person_id>Person_id.sv.mbx
-mailbox path, -mbx path
   specifies the pathname of a mailbox.  The suffix .mbx is added if
   necessary.
-save path, -sv path
   specifies the pathname of a savebox.  The suffix .sv.mbx is added if
   necessary.


-user STR
   specifies either a user's default mailbox or an entry in the system
   mail table.
STR
   is any noncontrol argument, and is first interpreted as -mailbox
   STR; if no mailbox is found, STR is then interpreted as -save STR;
   if no savebox is found, it is interpreted as -user STR.


Control arguments:
-brief, -bf
   prevents accept_messages from informing you that it is creating a
   mailbox, and prints messages in short format.
-call {cmdline}
   when the message is received, instead of printing it in the default
   format, accept_messages calls the command processor with a string of
   the form
      cmdline number sender time message {path}
   where:
   cmdline
      is any Multics command line; enclose it in quotes if it contains
      blanks or other command language characters.


   number
      is the sequence number of the message, assigned when you use
      -hold_messages; otherwise it is 0.
   sender
      is the User_id of the person who sent the message.
   time
      is the date-time the message was sent.
   message
      is the message sent.
   path
      is the pathname of the mailbox to which the message was sent.  If
      the message was sent to the default mailbox, path is omitted.
   To suppress a previous -call, give -call with no cmdline argument.


-flush DT
   discards messages sent before the specified date-time (see
   time_strings.gi for valid DT values).  This control argument should
   be used by operators and consultants.
-hold_messages, -hdmsg
   holds messages until explicitly deleted by delete_message.  Messages
   printed when -hold_messages is in effect are preceded by an
   identifying number.
-hold_notifications, -hdnt
   holds notifications in the mailbox after being printed.  This
   implies -notifications.
-long, -lg
   precedes every message printed by the sender's Person_id and
   Project_id and prints the date-time string.  It prints the message
   number only if you use -hold_messages.  (Default)


-no_hold_messages, -nhdmsg
   reverts -hold_messages.
-no_hold_notifications, -nhdnt
   deletes notifications after being printed.  (Default)
-no_notifications, -nnt
   deletes notifications as they are received.  This implies
   -no_hold_notifications.
-no_print, -npr
   does not print old messages.  (Default)
-no_short_prefix, -nshpfx
   does not print the prefix when messages are printed in short format.
-notifications, -nt
   prints notifications.  (Default)


-prefix STR, -pfx STR
   places STR in front of all messages printed as they are received.
   STR can be up to 12 characters long, and can contain the ioa_
   control strings ^/, ^|, and ^- if desired.
-print, -pr
   prints all messages that you received since the last time you were
   accepting messages.  The messages are deleted after printing, unless
   you are holding them.
-short, -sh
   precedes consecutive messages from the same sender by "=" instead of
   the Person_id and Project_id, and prints the date-time string only
   if less than five minutes have passed since the previous message.
   It omits the date if the current message and the previous one are
   received on the same date.


-short_prefix, -shpfx
   prints the prefix when messages are printed in short format.
   (Default)
-time N, -tm N
   prints undeleted messages every N minutes, preceded by a message of
   the form
      You have X messages
   where X is the number of undeleted messages.  If N equals 0, the
   time mode is reset.


Notes: A default mailbox is created the first time you issue
print_mail, read_mail, or accept_messages.  The default mailbox is
   >udd>Project_id>Person_id>Person_id.mbx

Messages sent when you are not logged in or when you are deferring
messages (see defer_messages) are saved in the mailbox; you can read
them later with print_messages.  The send_mail command stores mail in
the same mailbox.

Don't share the same mailbox with others.


At any time, only one process can be accepting messages from a given
mailbox.  If you create two processes that accept messages from the
same mailbox, the second process (i.e., the one issuing an
accept_messages most recently) automatically take over the command
function.  The first process receives no indication that messages are
being routed to the second process.  If the second process logs out or
is destroyed, the messages do not revert to an earlier process; thus if
you send a message to that mailbox, you are informed that the addressee
is currently not accepting messages or is not logged in.  So if you are
registered on multiple projects using a common mailbox, be aware that
this behavior affects your processes.

Generally don't accept messages in absentee processes; the start_up.ec
should distinguish between interactive and absentee processes, and
should issue accept_messages only in an interactive process.


You can accept messages on more than one mailbox at a time and on a
mailbox other than the default.  If you use a nondefault mailbox and it
does not exist, accept_messages queries you whether it should be
created.  When messages are printed from a nondefault mailbox, the
mailbox is always identified.
