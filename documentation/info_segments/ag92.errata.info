10/31/92  AG92 (Multics Commands and Active Functions)
          Errata Information for MR12.5


pg 3-14.1:  for the "add_name" command, add the following under
     the CONTROL ARGUMENTS section.

     -interpret_as_extended_entry -inaee
         interprets the selected entry as an extended entry type

     -interpret_as_standard_entry -inase
         interprets the selected entry as a standard entry type


pg 3-20:  for the "alm" command, under ARGUMENTS change the
     description of "path" to the following.

     path
         is the pathname of an ALM source program; the alm suffix
         need not be given.  The archive component pathname
         convention is allowed.


pg 3-101:  for the "calc" command, under NOTES ON ASSIGNMENT
     STATEMENTS replace the second sentence (that begins "The
     name of the variable...") with the following.

     The name of the variable must be from one to eight
     characters in length and must be made up of letters
     (uppercase and/or lowercase), digits (if not at the
     beginning of the name), and the underscore character (_).


pg 3-112:  for the "cancel_daemon_request" command, in the NOTES
     section replace "If the request is already running,...
     ...are ignored by the system" (two paragraphs) with the
     following.

     If the request is already running, the running request will
     not be stopped and the request's entry will not be removed
     from the queue.  A warning message will be displayed to warn
     the user of this action.


pg 3-115:  for the "cancel_output_request" command, in the NOTES
     section replace "If the request is already running,...
     ...are ignored by the system" (two paragraphs) with the
     following.

     If the request is already running, the running request will
     not be stopped and the request's entry will not be removed
     from the queue.  A warning message will be displayed to warn
     the user of this action.


pg 3-160:  for the "copy" command, under NOTES add the paragraph
     below.
pg 3-164; for the "copy_dir" command, under NOTES add the
     paragraph below.
pg 3-585; for the "move" command, under NOTES add the paragraph
     below.
pg 3-591; for the "move_dir" command, under NOTES add the
     paragraph below.

     If copying a non-empty mailbox requires that the max_length
     characteristic of the source be applied to the target, then
     the target max_length value will take on the default value
     that was given to it when created.


pg 3-242:  for the "delete_name" command, add the following under
     the CONTROL ARGUMENTS section.

     -interpret_as_extended_entry -inaee
         interprets the selected entry as an extended entry type

     -interpret_as_standard_entry -inase
         interprets the selected entry as a standard entry type


pg 3-252:  add the following two new control arguments to the     |
     "wait" request of the "dial_out" command.                    |
                                                                  |
     -inhibit_error, -ihe                                         |
         specifies that dial_out should not abort after a timeout |
         has occured.  (See the '-timeout' control argument.)     |
         This control argument is most useful when wait is used   |
         as an active request.                                    |
                                                                  |
     -no_inhibit_error, -nihe                                     |
         Specifies that timeouts should result in an abort.  This |
         is the default.                                          |


pg 3-263:  add the following new documentation for the
     "display_forms_info" command.

     Name:  display_forms_info, dfi

     SYNTAX AS A COMMAND

     dfi {-request_type} rqt_name

     FUNCTION

     returns forms information based on a request type.  It will
     take a request type name and display a table showing forms
     options applicable to the request type.


     ARGUMENTS

     rqt_name
         is the name of the request type for which forms
         information (if any) will be displayed.


pg 3-263 to 3-264:  replace the documentation for the
     "display_mailing_address" command with the following.

     SYNTAX AS A COMMAND

     dsmla {name(s)} {-control arguments}


     FUNCTION

     displays the specified mail table entries, in the format
     used in message headers displayed by read_mail.  The default
     mailing address(es) is(are) given, and any alias names
     associated with the mail table entry are displayed.  In
     addition, if the mail table entry specifies an ACS segment
     (to allow other maintainers the mail table entry), the
     pathname of this segment is also displayed.


     ARGUMENTS

     name(s)
         is (are) the Person_id(s) or alias(es) of the user whose
         mailing address should be displayed, or the name(s) or
         alias(es) of a mail table entry for a forum or mailing
         list.  The command displays the mailing address for each
         one (printing a warning message for those that are
         invalid).  If none are given, the default is the mailing
         address of the user invoking the dsmla command.  The
         star convention is allowed and the address information
         of any name(s) matching the starname will be displayed
         (See "Notes on starnames").


     CONTROL ARGUMENTS

     -name STR, -nm STR
         specifies a mail table entry name.  By using this
         control argument, STR may literally contain characters
         which are starname characters (e.g.  *, ?).

     NOTES ON STARNAMES

     As dsmla is insensitive to the type case of the specified
     name, the matching of starnames is also performed
     insensitive to type case.  If more than one mail table are
     equal (except for type case) and all match the given
     starname, then all are displayed.


pg 3-271:  at the beginning of the page add the following new
     documentation for the "dm_set_free_area" command.

     Name:  dm_set_free_area

     SYNTAX AS A COMMAND

     dm_set_free_area PATH {-control_args}

     FUNCTION

     Sets the directory in which the dm_free_area is placed.
     Optionally, if there is an existing dm_free_area known to
     the process, it can be released.


     CONTROL ARGUMENTS

     -area_directory pathname, -adr pathname
         specifies the pathname of the directory to contain
         dm_free_area.
     -release_old_area, -roa
         releases the existing dm_free_area.
     -no_release_old_area, -nroa
         prevents the existing dm_free_area from being released.


pg 3-324:  for the "exec_com" command (version 2), under LIST OF
     LITERALS add the following after the description of &NL.

     &CR, &CR(N)
         expands to a single carriage return character (ASCII
         015) or to N carriage returns.


pg 3-335:  for the "exec_com" command (version 2), under LIST OF
     CONTRUCTS replace the line

         &&NL, &QT, &SP, &VT List of literals
     with
         &&NL, &CR, &QT, &SP, &VT List of literals


pg 3-395:  for the "fortran" command, under ARGUMENTS change the
     description of "path" to the following.

     path
         is the pathname of a FORTRAN source program; you need
         not give the fortran suffix.  The archive component
         pathname convention is allowed.


pg 3-420:  for the "get_pathname" command, under CONTROL
     ARGUMENTS add a NOTES section with the following.

     NOTES

     Since the pathname is returned in quotes, the command
     processor treats it as a single argument regardless of
     special characters in the name.


pg 3-471:  for the "kermit" command, under LIST OF MODES
     AFFECTING FILE TRANSFER, add the following note to the
     description of the "packet_length N" mode.

     Note:  Long packets are selected when the user has
     explicitly selected N, which is larger than 94 with a SET
     command.  The maximum length of long packets can be up to
     1500 characters.


pg 3-491:  for the "link" command, under CONTROL ARGUMENTS add
     the following control arguments.

     -chase
         creates a link to the ultimate target of path1A if
         path1A is a link.  The default is to create a link to
         path1A itself.

     -no_chase
         creates a link directly to the target specified.
         (Default)


pg 3-492.4:  for the "links" command, under CONTROL ARGUMENTS
     delete the "-chase" and "-no_chase" control arguments and
     change the "-inhibit_error" and "-no_inhibit_error" control
     arguments to the following.

     -inhibit_error, -ihe
         ignores star_names that are invalid or if access to tell
         of an entry's existance is lacking.

     -no_inhibit_error, -nihe
         prints an error message if given an invalid star_name or
         if access to tell of an entry's existence is lacking.
         (Default)


pg 3-560:  for the "memo" command, under LIST OF MEMO OPTIONS
     delete the following sentence under the description of the
     "-repeat_when_processed" control argument.

     This is useful for memos that are only significant within a
     single process.


pg 3-569:  for the "menu_get_choice" command, in the NOTES
     section replace the last two sentences beginning with "Thus,
     the string..."  with the following.


     For example, if the string " ?p q" is specified with the
     -dfkeys argument, it means that you do not care whether the
     terminal has a function key 0, or a function key 3, but you
     wish to use function keys 1, 2, and 4.  If any one or more
     of these three functions keys is not defined for the
     terminal type, then the -dfkeys string is used to create the
     function key definitions (i.e., esc-?  substitutes for F1,
     esc-p substitutes for F2, esc-q substitutes for F4, and no
     other function keys are available.)  However, if all three
     of these function keys are available, then no substitution
     is made and all the function keys defined for the terminal
     type are available.


     If neither the -fkeys argument nor the -dfkeys control
     argument is used and the terminal has no function keys, then
     the default function key string used is "0123456789".


pg 3-616.5:  for the "nothing" command, at the end of the NOTES
     section add the following.

     When the functionality of the command 'nothing' is needed in
     a program, use the entrypoint 'null_entry_' (See AG93,
     Subroutines and I/O Modules).


pg 3-637:  for the "pl1" command, under ARGUMENTS change the
     description of "path" to the following.

     path
         is the pathname of a PL/I source program; the pl1 suffix
         need not be given.  The archive component pathname
         convention is allowed.


pg 3-640:  for the "pl1" command, add the following to the
     CONTROL ARGUMENTS section.

     -version
         requests printing of the current version of the
         compiler.  (Default)

     -no_version
         suppresses printing of the current version of the
         compiler.


pg 3-643:  for the "pl1" command, under NOTES ON LISTING, add the
     following paragraph before the paragraph beginning with "If
     you select -map...".

     If you select -optimize, the compiler will invoke an extra
     compiler phase just before code generation to perform
     certain optimizations, and a different algorithm to keep
     track of the uses and references of variables.  This
     algorithm can warn users about unexpected programming
     practices under more general conditions, some of which may
     not be very obvious to users.  For example, both optimized
     and non-optimized compilation may list different variables
     that have been referenced but never set.


pg 3-680:  for the "print_wdir" command, add the following as the
     second paragraph to the NOTES section.

     Since the working_dir is returned in quotes, the command
     processor treats it as a single argument regardless of
     special characters in the name.


pg 3-682:  for the "probe" command, before NOTES ON COBOL, add
     the following section.

     NOTES ON PL/I

     Probe uses a PL/I-like syntax when the current language is
     PL/I.  Probe communicates with you based on information in
     the symbol table and the statement map, both which are
     produced by the PL/I compiler.  The limitations of the
     symbol table sometimes limit the communication with probe.
     For instance,


     (1) Probe cannot determine the correct dimension size of an
         array if the upperbound of the dimension is an element
         other than the first element of an "external" structure.
         For example:

           dcl x dim (l:struct.e4) fixed bin based (pt);

         where "e4" is the fourth element in, and "struct" is the
         external structure.  Probe (symbol) incorrectly
         interprets the upperbound of the dimension as the first
         element instead of the proper element in the external
         structure.


     (2) Probe cannot determine the correct value of a variable
         if the variable has an implicit subscripted base
         reference.  For example:

           dcl x fixed bin based (b (3));

         Probe (value) interprets "x based (b (3))"
         as "b(1) -> x".


     (3) Probe cannot determine the correct value of a variable
         if the address of the variable has an implicit base
         reference containing the address expression or is a
         defined reference.  For example

           dcl x fixed bin based (addr (pl));
         or
           dcl x fixed bin defined (p2);


pg 3-714.1:  for the "program_interrupt" command correct the
     spelling of the word "supports" on the last line of the
     page.


pg 3-729:  for the "query" command, add the following to the
     CONTROL ARGUMENTS section.

     -no_trim
         does not trim trailing spaces from the question
         argument.

     -trim
         trims trailing spaces from the question argument.
         (Default)


pg 3-804:  for the "response" command, add the following to the
     CONTROL ARGUMENTS section.

     -no_trim
         does not trim trailing spaces from the question
         argument.

     -trim
         trims trailing spaces from the question argument.
         (Default)


pg 3-876:  for the "set_mailing_address" command replace the
     "-user name" control argument with the two following.

     -entryname
         specifies the entry whose mailing address is to be
         updated.  Enclose the name in quotes if it contains
         white space.  If name is an alias, its associated
         regular entry is updated.  You can use -entry only if
         you have rw access to the ACS segment associated with
         the entry.  (Default:  your own entry)


     -user address
         specifies the recipient address.  The address can be any
         address accepted by send_mail.  You can specify only one
         address.  Use -user in place of the address field if the
         address can be interpreted as a control argument.  It is
         incompatible with the -dp argument.


pg 3-920:  for the "status" command, replace the description of   |
     the "-author" control argument with the following:           |
                                                                  |
     -author, -at                                                 |
         prints the author of the entry.  The author is the name  |
         of the user who created the segment or directory.  This  |
         attribute cannot be modified.                            |


pg 9-921.1:  for the "status" command, under LIST OF              |
     TYPE-SPECIFIC CONTROL ARGUMENTS, replace the description of  |
     "-bc_author" with the following:                             |
                                                                  |
     -bc_author, -bca                                             |
         prints the bit count author of the entry.  The bit count |
         author is the name of the user who last set the bit      |
         count of the segment or directory.  This attribute is    |
         automatically updated when the bit count is set.  Not    |
         valid for DM files.                                      |


pg 3-1009:  for the "terminate_refname" command add the following
     to the CONTROL ARGUMENTS section.

     -brief, -bf
         suppresses all error messages.


pg 3-1046:  under LIST OF KEYS for the "user" command, add        |
     "cutoff_date" after the description of "cpu_secs".           |
                                                                  |
     cutoff_date                                                  |
         returns the cutoff date for your spending.               |


pg 3-1057.1:  for the "value_list" command, under the "-all"
     control argument, replace

         If you select -all, the default is to omit data
         variables.

     with

         If you do not select -all, the default is to omit data
         variables.


pg 3-1094:  for the "working_dir" command, change the description
     of the -no_header control order to the following.

     -no_header, -nhe
         suppresses the heading before the stack contents are
         displayed.  [default]


pg 3-1094:  for the "working_dir" command, after CONTORL
     ARGUMENTS add the following NOTES section.

     NOTES

     Since the working_dir is returned in quotes, the command
     processor treats it as a single argument regardless of
     special characters in the name.



     The current working directory is located at location zero.
     The most recent prior working directory is at the stack
     position 1 and the least recent prior working directory is
     at the Nth (last position).  If a stack of prior working
     directories is empty then only the current working directory
     is printed.  For the case when the current working directory
     has been deleted, an attempt to print it out will display
     the "directory has been deleted" message in square brackets,
     separated from the directory pathname by a blank space.
     This does not apply when one or more prior working
     directories on the stack have been deleted.  See also the
     change_wdir (cwd) command for stack features.


     Examples:  Assume the stack looks like the following:

        0     >udd>m>tai>archive_dev
        1     >udd>m>tai>abbrev_dev
        2 XXX >udd>m>tai>cwd_dev
        3     >udd>m>tai

     then

        ! wd XXX
        2 XXX >udd>m>tai>cwd_dev


        ! wd 2 -he
        LOC LABEL PATHNAME

          2 XXX >udd>m>tai>cwd_dev

        ! wd f:XXX
        LOC LABEL PATHNAME

          0     >udd>m>tai>archive_dev
          1     >udd>m>tai>abbrev_dev
          2 XXX >udd>m>tai>cwd_dev

        ! string [wd XXX]
        >udd>m>tai>cwd_dev


        ! string [wd 2]
        >udd>m>tai>cwd_dev

        ! string [wd a]
        >udd>m>tai>archive_dev >udd>m>tai>abbrev_dev
             >udd>m>tai>cwd_dev >udd>m>tai

        ! dd >udd>m>tai>archive_dev
        ! wd a


        LOC LABEL PATHNAME

          0    >udd>m>tai>archive_dev [directory has been deleted]
          1    >udd>m>tai>abbrev_dev
          2 XXX >udd>m>tai>cwd_dev
          3    >udd>m>tai

        ! string [wd a]
        >udd>m>tai>archive_dev >udd>m>tai>abbrev_dev
             >udd>m>tai>cwd_dev >udd>m>tai


