:Info: get_page_length_:  2020-07-06  get_page_length_

Function: returns the page length currently in effect on a given I/O
switch.  If the page length is not available (for any reason), a
status code is returned, and a default page length is returned.


Entry points in get_page_length_:
   (List is generated by the help command)


:Entry:  stream:  2020-07-06  get_page_length_$stream


Function:  This entry point returns the page length of a given I/O
switch, identified by name.


Syntax:
declare get_page_length_$stream entry (char(*), fixed bin(35)) returns
     (fixed bin);
page_length = get_page_length_$stream (switch_name, code);


Arguments:
switch_name
   is the name of the switch whose page length is desired.  (Input) If
   switch_name is an empty string, the user_output I/O switch is
   assumed.
code
   is a standard status code.  (Output)
page_length
   is the page length of switch_name.  (Output)


:Entry:  switch:  2020-07-06  get_page_length_$switch


Function:  This entry point returns the page length of a given I/O
switch, identified by pointer.


Syntax:
declare get_page_length_$switch entry (ptr, fixed bin(35)) returns
     (fixed bin);
page_length = get_page_length_$switch (switch_ptr, code);


Arguments:
switch_ptr
   is a pointer to the I/O control block of the switch whose page
   length is desired.  (Input) If switch_ptr is null, the user_output
   I/O switch is assumed.
code
   is a standard status code.  (Output)
page_length
   is the page length of switch_name.  (Output)


:Internal: history_comment.gi:  2020-07-06  history_comment

/****^  HISTORY COMMENTS:
  1) change(2020-07-06,GDixon), approve(2020-07-06,MCR10082),
     audit(2020-07-22,Swenson), install(2020-07-22,MR12.6g-0048):
     Initial version, created from get_line_length_.info.
                                                   END HISTORY COMMENTS */
