02/06/84  pl1_io_

The pl1_io_ subroutine is a collection of utility functions for
extracting information about PL/I files that is not available within
the language itself.


Entry points in pl1_io_:
   (List is generated by the help command)


:Entry:  error_code:  02/06/84 pl1_io_$error_code


Function: returns the last nonzero status code encountered by PL/I I/O
while performing file operations.  This is a standard Multics status
code and describes the most recent error more specifically than the
PL/I condition which is raised after an error.


Syntax:
declare pl1_io_$error_code entry (file) returns (fixed bin(35));
code = pl1_io_$error_code (file_variable);


Arguments:
file_variable
   is a PL/I file value.  (Input)
code
   is the last nonzero status code associated with the file.  (Output)


Notes:  The specific values returned by this function are subject to
change.  See "Handling Unusual Occurrences" in the Programmer's
Reference Manual.


:Entry:  get_iocb_ptr:  02/06/84 pl1_io_$get_iocb_ptr


Function: returns the I/O control block pointer for the Multics I/O
System switch associated with an open PL/I file.  This pointer may be
used to perform control and modes operations upon the switch
associated with that file.


Syntax:
declare pl1_io_$get_iocb_ptr entry (file) returns (ptr);
iocb_ptr = pl1_io_$get_iocb_ptr (file_variable);


Arguments:
file_variable
   is a PL/I file value.  (Input)
iocb_ptr
   is a pointer to the I/O control block for the file.  (Output)


Notes:  Performing explicit operations via the Multics I/O System upon
switches in use by PL/I I/O is potentially dangerous unless care is
taken that certain conventions are observed.  No calls should be made
that affect the data in the PL/I data set being accessed, the
positioning of the data set, or the status or interpretation of any I/O
operations that may be in progress.  In general, this limits such calls
to those which obtain status information.
