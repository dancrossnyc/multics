
09/21/87  mrpg 
Known errors in the current release of mrpg.
#	Associated TR's
Description

69  phx16531
H_F_common.I_page is improperly declared, causing PL/I compilation
errors due to data mismatch.

68  phx16531
MRPG fails with various faults when compiling
a program with >10 nested IF statements.

58  phx12612
There is a limitation of 100 on the number of variables which may be
DCL'ed in an MRPG program.  There is an expense involved in having this
limit be "very" large and 100 was picked as a compromise between the
expense and the usefullness.  number of DCL's in a program.

51  phx09474
MRPG seems to have a bug in the interaction of control breaks with page
headings.

42  
When a PAGEHEAD is defined with an absolute line number less than 4
when output is not going to user_output and then is followed up by
relative line references, extra blank lines are generated until it
thinks it has made it past line 4.

41  
When a level 4 value includes the CHAR(n) attribute, if the data given
is longer than (n) then improper formating occurs.

37  
The action of TRANSFORM when the key supplied is not in table is not
properly documented.

36  phx01889
The SWITCH keyword is not documented clearly.

32  
Varying input/parameter fields passed to set/table procedures gives a
warning due to data-type mismatch.

30  phx03244
DETAILHEAD MAXLINE does not work.

28  
Some combinations of empty detail lines and headers/footers causes
improper page layout.  (P_line needs rel_line,abs_line parameter)

26  
MRPG reports need to make a better check on record length vs data field
definitions.

24  
The parse_failed message is misleading when the problem is a missing
DETAIL keyword.

23  
The PAUSE option on a line generates and compiles without complaint,
but it does not pause.

19  
When a SET is declared and then not used, MRPG generates the
corresponding internal procedure.  Since this procedure is not
referenced, PL/I gives a warning.

10  
A warning is issued if a comment contains an imbedded /*, but the line
number may be wrong.  

7  
When the user is HOLDing data and the amount gets very large,
record_quota_overflow can occur in the process directory.

5  
When the user leaves out a necessary SP delimiter the parse sometimes
fails without being very informative.
