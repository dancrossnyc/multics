02/08/84  mdc_

The mdc_ subroutine (actually a ring 1 gate) provides a series of entry
points for manipulation of master directories.


Entry points in mdc_:
   (List is generated by the help command)


:Entry:  create_dir:  02/08/84 mdc_$create_dir


Function:  This entry point is used to create a new master directory.
Its arguments are roughly analogous to the hcs_$append_branchx entry
point.


Syntax:
declare mdc_$create_dir entry (char(*), char(*), char(*), fixed bin(5),
     (3) fixed bin(3), char(*), fixed bin, fixed bin(35));
call mdc_$create_dir (dir_name, entryname, volume, mode, rings,
     user_id, quota, code);


Arguments:
dir_name
   is the pathname of the containing directory.  (Input)
entryname
   is the entryname of the subdirectory.  (Input)
volume
   is the name of the logical volume that is to contain segments
   created in the new directory.  (Input)
mode
   is the user's access mode.  (Input)
rings
   are the ring brackets of the directory.  (Input) Only the first
   values are used.


user_id
   is an access control name.  (Input)
quota
   is the quota to be placed on the new directory.  (Input)
code
   is a standard status code.  (Output)


:Entry:  create_dirx:  02/08/84 mdc_$create_dirx


Function:  This entry point is an extension of the mdc_$create_dir
entry point, which is similiar to hcs_$create_branch_ entry point.


Syntax:
declare mdc_$create_dirx entry (char(*), char(*), char(*), ptr,
     fixed bin(35));
call mdc_$create_dirx (dir_name, entryname, volume, info_ptr, code);


Arguments:
dir_name
   is the pathname of the containing directory.  (Input)
entryname
   is the entryname of the subdirectory.  (Input)
volume
   is the name of the logical volume that is to contain segments
   created in the new directory.  (Input)
info_ptr
   is a pointer to the create_branch_info structure as described under
   the hcs_$create_branch_ entry point.  (Input)


:Entry:  delete_dir:  02/08/84 mdc_$delete_dir


Function:  This entry point is used to delete a master directory.


Syntax:
declare mdc_$delete_dir entry (char(*), char(*), fixed bin(35));
call mdc_$delete_dir (dir_name, entryname, code);


Arguments:
dir_name
   is the pathname of the containing directory.  (Input)
entryname
   is the entryname of the subdirectory.  (Input)
code
   is a standard status code.  (Output)


:Entry:  pvname_info:  02/08/84 mdc_$pvname_info


Function:  This entry point gets various kinds of information about a
specified storage-system physical volume.


Syntax:
declare mdc_$pvname_info entry (char (*), bit (36) aligned, char (*),
     bit (36) aligned, fixed bin, fixed bin (35));
call mdc_$pvname_info (pvname, pvid, lvname, lvid, device_type, code);


Arguments:
pvname
   is the name of the physical volume about which information is to be
   returned.  (Input)
pvid
   is the physical volume id of the specified volume.  It can be used
   as a parameter to ring-zero volume and partition interfaces.
   (Output)
lvname
   is the name of the logical volume to which the physical volume
   belongs.  (Output)
lvid
   is the logical volume id of the logical volume to which the physical
   volume belongs.  (Output)


device_type
   is a number indicating what type of device the specified physical
   volume is mounted on.  The names and characteristics of these
   devices are listed in various arrays declared in the include file
   fs_dev_types.incl.pl1.  (Output)
code
   is a standard system-status code.  It is nonzero if the information
   about the volume cannot be obtained or if the volume does not exist.
   (Output)


:Entry:  set_mdir_account:  02/08/84 mdc_$set_mdir_account


Function:  This entry point is used to set the quota account of a
master directory.


Syntax:
declare mdc_$set_mdir_account entry (char(*), char(*), char(*),
     fixed bin(35));
call mdc_$set_mdir_account (dir_name, entryname, account, code);


Arguments:
dir_name
   is the pathname of the containing directory.  (Input)
entryname
   is the entryname of the subdirectory.  (Input)
account
   is the name of the new quota account.  The directory quota is
   returned to the old account and redrawn from this new account.
code
   is a standard system status code.  (Output)


:Entry:  set_mdir_owner:  02/08/84 mdc_$set_mdir_owner


Function:  This entry point is used to set the owner name of a master
directory.


Syntax:
declare mdc_$set_mdir_owner entry (char(*), char(*), char(*),
     fixed bin(35));
call mdc_$set_mdir_owner (dir_name, entryname, owner, code);


Arguments:
dir_name
   is the pathname of the containing directory.  (Input)
entryname
   is the entryname of the subdirectory.  (Input)
owner
   is the new owner name of the master directory, in the form
   Person_id.Project_id.tag.  (Input)
code
   is a standard system status code.  (Output)


:Entry:  set_mdir_quota:  02/08/84 mdc_$set_mdir_quota


Function:  This entry point is used to set the quota on a master
directory.


Syntax:
declare mdc_$set_mdir_quota entry (char(*), char(*), bit(1) aligned,
     fixed bin, fixed bin(35));
call mdc_$set_mdir_quota (dir_name, entryname, sw, quota, code);


Arguments:
dir_name
   is the pathname of the containing directory.  (Input)
entryname
   is the entryname of the subdirectory.  (Input)
sw
   is a switch indicating the kind of quota change.  (Input)
   "0"b sets the directory quota to the quota parameter.
   "1"b algebraically adds the quota parameter to the current directory
        quota.
quota
   is the quota to be placed on the new directory.  (Input)
code
   is a standard system status code.  (Output)


:Entry:  set_volume_quota:  02/08/84 mdc_$set_volume_quota


Function:  This entry point is used to set the volume quota for a quota
account on a logical volume.


Syntax:
declare mdc_$set_volume_quota entry (char(*), char(*), bit(1) aligned,
     fixed bin, fixed bin(35));
call mdc_$set_volume_quota (volume, account, sw, quota, code);


Arguments:
volume
   is the name of the logical volume that is to contain segments
   created in the new directory.  (Input)
account
   is the name of the quota account in the form
   Person_id.Project_id.tag.  The quota account name may contain stars.
   (Input)
sw
   is a switch indicating the kind of quota change.  (Input)
   "0"b sets the directory quota to the quota parameter.
   "1"b algebraically adds the quota parameter to the current directory
        quota.


quota
   is the quota to be placed on the new directory.  (Input)
code
   is a standard system status code.  (Output)
