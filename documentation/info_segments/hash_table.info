:Info: hash_table: ht:  2020-05-14  hash_table, ht

Syntax as a command:  ht PATH {NB}


Function: creates, modifies, or searches a hash table.  Enters an
interactive request level to insert, delete, and search for entries
in the table.  The hash_ subroutine manages the table.


Arguments:
PATH
   specifies the pathname of a segment, which is a new or existing
   hash table.
NB
   is the (optional) number of buckets with which the hash table is to
   be created.  If you don't give nb or if it is out of range (0 < nb
   <= 6552), then a default is assigned to it.


List of requests:
   The command operates in response to the following requests.  Each
   request name must be the first non-blank character of the line and
   followed by one or more arguments separated by any number of
   blanks.  A blank before the first argument is optional.  For help
   on any request, from command level type: help ht -info REQUEST_NAME

a NAME1 VALUE1 ... NAMEn VALUEn
   add hash table entries.
d NAMEs
   delete hash table entries.
q
   quit the hash_table subsystem.
s NAMEs
   search for hash table entries.


Notes: If the hash table ever becomes full or inefficient, the number
of buckets is doubled or assigned the maximum, the hash table is
rehashed, and a message is printed.


:[Info]: a:  2020-05-14  a


Syntax:  a NAME1 VALUE1...NAMEn VALUEn


Function: inserts an entry into the hash table for NAMEi and its
corresponding VALUEi.


Arguments:
NAMEi
   is a character string less than, or equal to, 32 characters.
VALUEi
   is a decimal number you associate with namei to indicate its
   location in the corresponding data table.  It can be array
   subscript.


:[Info]: d:  2020-05-14  d


Syntax:  d NAMEs


Function: deletes the entry NAME from the hash table and prints the
value it was associated with.


Arguments:
NAME
   is a character string less than, or equal to, 32 characters.


:[Info]: q:  2020-05-14  q


Syntax:  q


Function: exits the hash_table subsystem.


:[Info]: s:  2020-05-14  s


Syntax:  s NAMEs


Function: searches the hash table for NAME and prints its
corresponding value.  You can then locate NAME in your data table by
using the given value.


Arguments:
NAME
   is a character string less than, or equal to, 32 characters.


:hcom:



/****^  HISTORY COMMENTS:
  1) change(2020-05-14,GDixon), approve(2021-02-22,MCR10088),
     audit(2021-05-27,Swenson), install(2021-05-27,MR12.6g-0056):
      A) Restructure info segment as a command invoking a small subsystem
         accepting four requests.
      B) Since existing hash_table.pl1 code does not support its own help
         request, and does not implement a .. COMMAND_LINE escape in its
         request line processing, document method for displaying info block
         for each request as a Multics command:  help ht -info REQUEST_NAME
                                                   END HISTORY COMMENTS */



