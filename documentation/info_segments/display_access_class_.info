
10/07/86  display_access_class_


Entry points in display_access_class_:
   (List is generated by the help command)


:Entry:  display_access_class_:  10/07/86  display_access_class_ 

						
Syntax:
declare display_access_class_$display_access_class entry (bit(72)
     aligned, char(32) aligned);
call display_access_class_$display_access_class (aim_bits, aim_chars);


The display_access_class_ function converts a bit(72) aligned
representation of an access authorization or access class into a
character string of the form
   LL...L:CC...C
where LL...L is an octal sensitivity level number, and CC...C is an
octal string representing the access category set.


Arguments:
aim_bits
   is the binary representation to be converted.  (Input)
aim_chars
   is the character string representation.  (Output)


Notes: Only significant digits of the level number (usually a single
digit from 0 to 7) are printed.

Currently, only 18 access category bits are used, so that only six
octal digits are required to represent access categories.  Therefore,
aim_chars is padded on the right with blanks, which may be used at a
later time for additional access information.  Trailing zeros are NOT
stripped.

If either the level or category field of aim_bits is invalid, the
erroneous field is returned as full octal (6 digits for level, 12
digits for category), followed by the string "(undefined)".


:Entry: range:  10/07/86 display_access_class_$range


Function: The display_access_class_$range function converts an AIM
access class range to a character string when the names of levels and
categories are not available.


Syntax:
declare display_access_class_$range entry ((2) bit(72) aligned char(32)
     aligned);

call display_access_class_$range (AIM_range, string_range)


Arguments:
AIM_range
   is a standard access class range.  (Input)
string_range
   is a string of the form
      l:cccccc-L:CCCCCC
   where l is the level, from 0 to 7, of the bottom of the range.
   (Output)
   cccccc are the categories of the bottom of the range.

   The categories are a bit string (one bit per category) represented
   in octal.

   L is the level, from 0 to 7, of the top of the range.
   CCCCCC are categories of the top of the range.

   The categories are a bit string (one bit per category) represented
   in octal.
