05/12/82  numeric_to_ascii_base_


Entry points in numeric_to_ascii_base_:
   (List is generated by the help command)


:Entry:   numeric_to_ascii_base_:  03/03/82   numeric_to_ascii_base_


Function: formats a real decimal floating-point number.  Integer,
fractional, or exponential format is used depending on the number
being formatted.  The value returned by this function is a varying
character string that can contain an optional minus sign, from 1 to 59
decimal digits, and, in some cases, an exponent field.  The caller can
control the number of digits placed in the string.


Syntax:
declare numeric_to_ascii_base_ entry (float dec(59), fixed bin, 
     fixed bin) returns (char(72) varying);
result = numeric_to_ascii_base_ ((value), precision, base);


Arguments:
value
   is the value to be formatted.  (Input) The PL/I compiler converts to
   float dec(59) if the attributes of value are different.  The extra
   pair of parentheses around value suppresses the warning message
   about the conversion that would normally be generated.
precision
   controls the number of digits placed in the output string.  (Input)
   See "Notes" below.
base
   is the radix of the number system in which the result is to be
   represented.  (Input) For example, a base of 2 produces a binary
   representation, a base of 10 produces decimal, and a base of 16
   produces hexadecimal.  Bases from 2 through 16 are allowed.
result
   is the character-string representation of value; it contains no
   blanks.  (Output)


Notes: If precision is equal to 0, from 1 to 59 digits are placed in
the result string depending on the value being formatted.  If
precision is less than 0, the decimal value is truncated to the
specified number of digits.  If precision is greater than 0, the
decimal value is rounded to the specified number of digits.  In the
cases where precision is not 0, no more than the specified number of
digits are placed in the output string.


If precision equals 0, 59 is used for the precision.  In the
following discussion, P is equal to min (59, precision).

A number in integer format consists of a string of from 1 to P decimal
digits without a decimal point.  Integer format is used for integers
whose absolute value is less than 10**P.

A number in fractional format consists of from 1 to P decimal digits
with a decimal point.  Trailing zeros in the fractional part are
omitted; a number less than 1 has a 0 to the left of the decimal point.
Fractional format is used for nonintegers that can be exactly
represented in this format.


A number in exponential format appears as--

	xey	or	xe-y

where x is a number greater than 1 and less than 10 in fractional
format and y is a power of 10 such that the numeric value being
formatted is x*10**y.  Exponential format is used whenever integer or
fractional format cannot be used.


When the result is represented in base 16, the following characters are
used to express the result--

   0 1 2 3 4 5 6 7 8 9 a b c d e f

When the result is represented in another base N, the first N
characters from this list are used to express the result.
