
09/21/87  misc_commands 
Known errors in the current release of misc_commands.
#	Associated TR's
Description

528  phx20941
If the segment requested for replacing is a non-existent segment then
the archive replace operation refuses to create new archive component.
This is true, but the archive command must print out an error message
to users.


526  phx17201
Assume there is a null link named foo, then the get_effective_access
command returns error_table_$action_not_performed for a null link.  It
should return error_table_$noentry for a null link.  For example:

   ! link >foo
   ! gea foo
     get_effective_access: The request operation is not supported.
     >udd>m>Lippard>foo

525  phx17148
If users call the suffix_name_$new_suffix entrypoint and supply the
input argument suffix that begins with a period character (".") then
the returned new suffix begins with two consecutive periods ("..") and
the return error code value is zero.


518  phx14448
Assume there is a "-working_dir" search path contained in the "info"
search list.  The help command gets error when it hits the -working_dir
search path.  For example:

  ! create_dir test_dir
  ! cwd test_dir
  ! delete_dir [wd]
  ! help
    Error:  get_wdir_ error by change_wdir_$get_wdir_ |1065
            (>sss>bound_fscom1_)
            No working directory set for this process

This is incompatible with its behavior.  If there is a pathname in the
search path that references a non-existent directory, then the help
command should issue a warning message and then continues to search.


517  phx05578
The list commands incorrectly reports effective mode for inconsistent
MSFs.  Currently, it reports "rw" modes for a specified inconsistent
MSF.  It must report only the "r" mode for a specified inconsistent
MSF.

516  phx14711
The previous error list entry has been lost.  This problem is a limited
display field.  See the TR.  This problem is repaired in the exl
version of list.

515  phx20750
exec_com [verified] gets confused by unbalanced parentheses in
 quoted strings .


514  phx20749
print command [verified]. The print command should not change tty_ modes.

513  phx20747 segs active function [verified].   The order of the
 segments listed has been incompatibly changed without notice.

512  phx20744 fortran_abs command [verified]
 "fa" command doesn't accept -card control arg.  .

511  phx20699
display_audit_file [verified].  Generates error when asked to display
 an audit file with nothing in it other than the header.


510  phx20694
Problem description:  The "display_audit_file" command accepts a
 non-standard file name for "-output_file" control argument with a
 command like:

   !  daf -of nuke..

Proposed solution:

The "display_audit_file" command will not accept strange names when
"-output_file" control argument is specified.

The "check_star_name_" system subroutine will be called in order to
produce correct error codes.  The control mask contains CHECK_STAR_
REJECT_WILD which declared in check_star_name.incl.pl1.


508  phx20673 enter_output_request (eor) [verified]
 If you request that a file be indented when printed and that it
 print with centered labels, the labels are also indented off center.

507  phx20811 phx20658 phx19390 phx17261
Problem description:  The reorder_archive command references
 error_table_$record_quota_ overflow.  This generates a linkage fault.

Proposed solution:

Change the reorder_archive.pl1 to reference the error_table_$rqover
entry point which is defined in the error_table_.alm.  Note that this
status code is already documented in the Multics Programer's Reference
Manual, page 7-23.


506  phx20645 date_compiled [verified].  Prints more than was asked for.

505  phx20639 access_commands [verified].  The -exclude facility does not
 exclude ACL entries with explicit tags if a "*" is given for the tag in
 the argument list.  If the user exceeds the allowed ten -ex arguments,
 the command can malfunction.

504  phx20630 exec_com [verified].
 Bad parsing of arguments in &set command.


503  phx20628 delete [verified].  The delete command incorrectly
 prints the message for error_table_$badstar when given a blank
 argument.

502  phx20573 exec_com &trace [verified].  exec_com &trace &prefix
 will not accept a quoted string with embedded blanks.  Worked okay
 in MR10, fails in MR11.  .

501  phx20481 copy [verified].  copy -all gives incorrect error message.

499  phx19798 cv_ptr_ [investigating].  Doesn't work on inner ring
 virtual pointer strings.  .


498  phx19667 cv_float_ subroutine [verified].  cv_float_ doesn't
 accept "1.e3" as first argument ("1.0e3" is OK however).

497  phx19503 ioa_ [verified].  The ioa_ control string ^va gives
 different results than ^a when a BS ("010"b3) character is passed.

496  phx19233 truncate [verified].  Fails to truncate an MSF, even
 though I have rw access to it.


495  phx17260
Problem description:  pa_search_list.pl1 references the undefined
 error code, error_table_$programming_error.

Proposed solution:  Remove error_table_$programming_error from
 pa_search_list.pl1

494  phx170221 error_table_ and company [verified].  There are
 error_table_ codes which are not referenced in the system.  Worse
 yet, there are codes referenced which are not defined!


493  phx14945
Problem description:  When an user fails to supply a path for
 -output_file, then compare_ascii command uses the argument follows
 -output_file as the pathname.  For example:

   ! cpa foo bar -of -he

directs the output of the comparison to the "-he" file.

Proposed solution:

Use error_table_$noarg to produce error code when an user does not
supply an output file for -of.


491  phx14364 compare_ascii [verified].  Indication of a large
 block of differences when there aren't any.

484  phx20624 find_common_acl_names_ [verified].  This subroutine
 returns error_table_$badstar where error_table_$bad_name should
 be returned.  As time and resources permit this problem will be
 evaluated and better defined at a future date.


483  phx20622
Problem description:  The "rename" command misuses the
 "error_table_$badstar" error code in two different ways.

   a.  "rename" displays an incorrect error message if the "-name" control
       argument is NOT specified for nonstandard entrynames. For example:

       ! rename foo  *.FOO
         rename:  Invalid syntax in starname. *.FOO

   b.  So does for an ojbect type such as a mailbox.  For example:

       ! rename TLNguyen.mbx foo
         rename:  Invalid syntax in starname. foo


Proposed solution:

The "check_star_name_" must be used in order to produce correct error
code.  The control mask should contain CHECK_STAR_IGNORE_ EQUAL since
the target pathname accepts equal convention.

Change "error_table_$badstar" to "error_table_$not_seg_type" to report
an invalid suffix (.foo) has been given for an object type such as a
mailbox (.mbx)


481  phx20597 archive [verified].  archive aborts unpleasantly
 when it tries to add a module that will push the archive over
 it's maximum segment length.  As time and resources permit this
 problem will be evaluated and better defined at a future date.

480  phx20572 calendar [verified].  calendar does not properly
 handle centuries other than 1900.  As time and resources permit
 this problem will be evaluated and better defined at a future date.

478  phx20562 locate_words [verified].  Displays the wrong lines
 when -lines is used.  As time and resources permit this problem
 will be evaluated and better defined at a future date.


475  phx20430 ldw command [verified].  There appears to be an
 internal inconsistancy in >udd>Doc>lib>Doc.dict which causes
 the ldw command to loop.  As time and resources permit this problem
 will be evaluated and better defined at a future date.

472  phx20415 sort_strings [verified].  Fails when one of the
 arguments to be sorted contains a newline character.  As time
 and resources permit this problem will be evaluated and better
 defined at a future date.

470  phx20375 general [verified].  (ls -dtcm) "list file -dtcm"
 gives incorrect info when file is a MSF.  As time and resources
 permit this problem will be evaluated and better defined at a
 future date.


469  phx20366
online documentation, cv_float_check_.info [investigating]
 This help file appears to be obsolete.  The entry is not in the 
 manual, I'm unable to locate it on the system, and the described
 entry does not seem to offer anything not done by cv_float_.
 As time and resources permit this problem will be evaluated and better
 defined at a future date.

468  phx20363 delete_dir or suffix_forum_ mode [verified].  A ring1
 process is unable to delete a directory whose subhierarchy contains
 a forum meeting.  As time and resources permit this problem will be
 evaluated and better defined at a future date.

467  phx20305 dump_segment [error].  dump_segment_$string conflict .
 As time and resources permit this problem will be evaluated and better
 defined at a future date.


466  phx20291 Documentation/help files [verified].  help files for 
 sort_ and merge_ are missing.  As time and resources permit this
 problem will be evaluated and better defined at a future date.

465  phx20241 fortran_abs [investigating].  fortran_abs incorrectly
 enforces (-card & (^-quote | ^-point)).  As time and resources permit
 this problem will be evaluated and better defined at a future date.

464  phx20071 calc [investigating].  The calc command does not 
 diagnose random characters between a function name and the associated
 argument for the function.  As time and resources permit this problem
 will be evaluated and better defined at a future date.

461  phx19950 get_shortest_path [verified].  Faults in inner ring in
 particular conditions.  As time and resources permit this problem will
 be evaluated and better defined at a future date.


459  phx19848 cross_reference [verified].  cross_reference
 incorrectly reports the namesof source segment that were
 components of archives.  As time and resources permit this
 problem will be evaluated and better defined at a future date.


458  phx19836
Problem description:  If you attempt to run delete_acl on
 "Data_Managment.Daemon" access control name from a DM file with
 a command like:

   !  da dmf Data_Managment.Daemon

 then no warning error message is printed.  It is true that users are
 not supposed to remove Data_Management.Daemon's access from a DM file,
 but users should be told that he cannot do such thing.


Proposed solution:

Change dm_error_.alm and fm_attribute_.pl1 to return an appropriate
error message to an user when he/she tries to manipulate ACL of
Data_Management.Daemon.* from a DM file.

I.  Add the folowing error code to dm_error_.alm

   dm_error_$acl_restriction
   (ACL change invalid "rw Data_Management.Daemon.*" required on
    DM files.)

   dm_error_$acl_entry_no_rw
   (ACL element denies "rw Data_Management.Daemon.*" required on
    DM files.)

   dm_error_$acl_entry_no_star
   (DM files allow only Data_Management.Daemon ACL entry with
    a star instance tag.)


II.  Change the fm_attribute_.pl1 such that

  1. For add_acl_entries,

     if Data_Management.Daemon.* ACL exists:
        if mode is rw then the operation is OK;
        else reject that element and abort the operation;

  2. For delete_acl_entries,

     if ACL contains element for Data_Management.Daemon.*
        then reject that element and abort the operation;


  3. For replace_acl

     if ACL entry is for Data_Management.Daemon.*:
        if mode is rw then opeation is OK;
        else reject that element and abort the operation;

     if ACL does not contain entry for Data_Management.Daemon.*
        then if sysdaemon_sw is on
             then add rw Data_Management.Daemone.* term;
             else reject the operation;


III.  Finally, I have changed the status of this TR from
      "dev" back to "error" because of the following reasons:

      1.  The current delete_acl entry in acl_commands_.pl1
          invokes fs_util_$replace_acl instead of fs_util_$
          delete_acl_entries.  Therefore, in order to fix
          the problem correctly, Gary Dixon said


          a. to change the delete_acl so that the
             delete_acl will pass matched individual access name
             and its code to fm_attribute_$delete_acl_entries.
             As a result, fm_attribute will return the deleted
             access name and the code back to the delete_acl
             so that the error message will be included the
             deleted access name which is typed in by an user.
             Currently, the delete_acl only passed UN-matched
             individual access names and their error codes to
             fm_attribute_$replace_acl.  Therefore, fs_atribute_
             does not have information that the user typed
             in.  So it only return the new error code back to
             the delete_acl.  As a result, the error message does
             not have specified access names that the user wants
             to delete.


          b. to change the set_acl to call fs_util_$add_acl_entries
             to add a new acl entry to the current acl entries.
             Currently, the set_acl calls fs_util_$replace_acl
             to add a new acl entry to the current acl entries.


453  phx19616
Problem description:

Try to reference the path1 when moving a specified segment (which is
already existed in path1) to a specified parent directory position.
Assume that this new position has multiple names and the user has "sma"
access modes to a specified parent directory.


For example:

 ! cd dir1; an dir1 dir1.name; cwd dir1
 ! cd dir2; cwd dir2; cr seg1
 !  move seg1  <
    move:  Name duplication.  Old name dir1 remove from >udd>m>barmar>dir1.name
    move:  Some directory in path specified doesn't exist.
           >udd>m>barmar>dir2>seg1
    Segment  >udd>m>barmar>dir2>seg1  not deleted


452  phx19589 trace [error].  References a non-existent thingie.
 As time and resources permit this problem will be evaluated and better
 defined at a future date.


449  phx19518
Problem description:

If you attempt to run "delete_acl" against the component within a forum
meeting with a command like:

   !  da xxx.forum>Proceedings.1 Margulies.. Holmstedt.. -brief

in a ring 1 process like Backup.SysDaemon, then the ACL get changed
(and xmode get lost) even though there are no matches for Margulies..
or Holmstedt..  on the ACL.

NB:  suffix_forum_ is NOT involved here because fs_util_ does NOT
realize that the segment in question is a component of a forum meeting.


Proposed solution:

The following conversion between Frank Martinson and Gary Dixon
explained why I have changed the "not_error" status back to "error"
status:


I'm sorry, but this is still an error.  I am therefore reopening the
TR.  I don't know what Frank Martinson may have done to reverify the
TR.  I had no problem reproducing the problem, as follows:
   ! fcr
   ! test1.forum
   ! test.forum
   ! Martinson
   ! Beattie
   !  .  This creates a test forum.  Use list_acl to examine its ACL.
Then login as Ring_1_Repair and change to the wdir containing the new
forum.
   ! cwd test1.forum
   !  da Attendees Brunelle..  Then logout from Ring_1_Repair.  If you
now use list_acl from your own process on the test1.forum, you will see
that now all ACL entries show null extended access mode.  The
delete_acl command has modified the ACL, even though there was no match
in the ACL for Brunelle.  In the process of modifying the ACL, it has
destroyed the extended access modes in all ACL entries.

Therefore, the following proposal still holds:  the "delete_acl" must
not change the ACL when no matching entries are found.


447  phx19473 >sss>pl1.dcl [verified].  There is an entry for
 assign_$computational which does not exist and no entry for
 assign_$computational_ which does exist.  As time and resources permit
 this problem will be evaluated and better defined at a future date.

446  phx19461 library_print [verified].  lpr does not properly
 handle ** as a search name.  As time and resources permit this problem
 will be evaluated and better defined at a future date.

445  phx19431 check_info_segs command [change_pending].  Unable to
 update time value in value seg without listing all the changed info
 segs.  As time and resources permit this problem will be evaluated
 and better defined at a future date.


443  phx19277 l_set_acl, l_set_ring_brackets, etc [verified].
 These commands don't work with inner-ring MSFs.  As time and
 resources permit this problem will be evaluated and better
 defined at a future date.

439  phx19109 list command [verified].  Doesn't rtrim the pathname
 in ""Directory empty"" message.  The exprimental library version
 of this command fixes this problem.

438  phx19106 save_dir_info [verified].  Produces error saving quota
 of a dir immediately below the root.  As time and resources permit
 this problem will be evaluated and better defined at a future date.


436  phx19051 system active function [investigating].  The system
 active function / command should use the process date_time format
 not the date format and the time  format.  As time and resources permit
 this problem will be evaluated and better defined at a future date.

435  phx19039 mrpg [investigating].  Incorrect code generated by mrpg.
 As time and resources permit this problem will be evaluated and better
 defined at a future date.

434  phx19026 trim_wordlist [verified].  Words in the dictionary with
 an apostrophe do not trim out words that are the same except for being
 capitalized.  As time and resources permit this problem will be 
 evaluated and better defined at a future date.


433  phx18987 trace command [error].  The command "trace foo$*" prints
 a confusing message when "foo" is a name on a bound segment that does
 not contain a component "foo".  As time and resources permit this
 problem will be evaluated and better defined at a future date.

432  phx18949 memo [verified].  Repeating memo's cause strange this to
 happen if a user with multip is logged on twice.  As time and resources
 permit this problem will be evaluated and better defined at a future date.

431  phx18928 describe_entry_type [verified].  Should have an option to
 display all accepted switch names,  rather than just the primary name
 and default switch setting.  As time and resources permit this problem
 will be evaluated and better defined at a future date.


430  phx18917 response AF [error].  The response active function trims
 the question.  As time and resources permit this problem will be
 evaluated and better defined at a future date.

427  phx18830 peruse_crossref [verified].  Should accept names of the
 form *system$xmail_data_ptr to list references to external vars whose
 names do not include $.  As time and resources permit this problem will
 be evaluated and better defined at a future date.

425  phx18729 >doc>is>list_acl.info [verified].  The info file is
 seriously out of synch with the command.

423  phx18336 copy command does not copy an msf correctly [verified].
 copy command does not copy a multi-segment file correctly if there are
 gaps in the sequence numbers of the component segments.


421  phx18231 commands [verified].  calc shouldn't set up a pi handler
 when invoked as an active function.

420  phx18216 swn & swf commands [verified].  Documentation out of
 sync with software.

419  phx18187 mrpg [investigating].  mrpg fail with fault_tag_1 ascii
 data where pointer expected.

416  phx17988 copy_dir & move_dir [investigating].  Using copy_dir or
 move_dir with a target which is contained in the subtree being
 processed is pathological {pathname-ological}.

415  phx17983 library tools [investigating].  "archive" and
 "library_info" report different times updated for archive components.


414  phx17976
Problem description:  The "copy_dir" command adds the names of the
 source directory to the target directory.  This causes unexpected
 "Do you want to delete ..." messages to appear for apparently no reason.

For example:  the current working directory is
             >udd>m>TLNguyen>copy_dir_dev
 ! ls -a
   segments = 1,  lengths = 0
   r w   0   save

  directories = 1
  sma  source
       s


 ! copy_dir source  <save
   copy_dir:  creating   >udd>m>TLNguyen>save

 ! ls <save -dir
   sma   save
         source
         s

 !copy_dir <save  source -replace
  copy_dir:  Name duplication.  Do you want to delete the old segment
             >udd>m>TLNguyen>copy_dir_dev>save?


Proposed solution:

This is not an error.  The copy_dir command works correct as its
documentation.  Since the user did not specified the "-primary" control
argument the copy_dir command copied all the names of the source
directory to a specified target directory.

For the particular exampled describled above.  The copy_dir command
copies all the names of the source directory named "source" and "s" to
a specified target directory named "save".  As a result, "save" has
multiple or additional names which are "source" and "s".  Further-
more, the last error message is correct because the "nd_handler_"
subroutine is called to resolve the name duplication and "source"
already exists in the user'working directory,
>udd>m>TLNguyen>copy_dir_dev, and "source" is a single segment name (or
only one name).  Therefore, "nd_handler_" asks the user if he/she wants
to delete the old segment.

Finally, the "copy_dir" command works correct according to its
documentation description.


413  phx17969 standard commands [investigating].  The "move"
 (copy) command currently installed in >sss makes some
 invalid assumptions about the suffix_XXX_$move capabilities.

412  phx17939 general_ready [error].  It is impossible to get the
 gr command to produce the date properly in UK format.

411  phx17904 repeat_line (rpl) active function [error].  Imbedded
 characters in prompt.

410  phx17901 peruse_crossref [verified].  Peruse_crossref takes an
 out_of_bounds when given a name which begins with an "invalid"
 character.


408  phx17779 tools [investigating].  cross_reference (cref) does
 not handle archive format errors in the middle of archives and faults
 with an attempt to reference through null pointer.

407  phx17771 cross_reference command [verified].  Deletes the
 output_file if it gets an error initiating it.

406  phx17743 library maintenance software [investigating].  The -time
 control argument to library_cleanup does not accept date_time strings.

404  phx17636 fortran_abs command [verified].  Does not accept valid
 fortran arguments.

403  phx17608 l_delete [verified].  l_delete loops trying to delete a
 segment with its copy_switch on.


402  phx17575 l_delete [verified].  Gives wrong entry type in message.

401  phx17483 cref, crossreferencer [verified].  A command ends up no
 being cref'd as it and its synonym sho up as always indicating the user
 should see the other entry.

400  phx17234 peruse_crossref [verified].  Can't find references to 
 cv_dec_check_.

399  phx17082 copy_dir [investigating].  Doesn't copy iacl of higher
 rings {lower privilege} than ring of execution .

398  phx17000 calc command [error].  Calc does it's arithmetic in binary,
 and gives incorrect answers for simple decimal arithmetic.  When you add
 up a list containing dollars and cents, the answer isn't correct.


397  phx16970 copy_cards command [investigating].  copy_cards
 bungles starnames.

396  phx16644 runoff_abs [change_pending] Linked TRs:  phx16311
 runoff_abs does not work.

395  phx16628 ou_ (object utils) [investigating].  Produces an
 object segment with a looping definitions section.

394  phx16521 general_ready active function [investigating].
 [general_ready] returns its string with a trailing newline.

393  phx16310 calc [verified].  Problem displaying small numbers.


391  phx16109 area_status [verified].  Prints incorrect offsets for
 areas in the middle of segments.

390  phx16050 algol_68_abs [change_pending].  The a68a command does not
 recognise the -no_check control arg.

389  phx15962 debug [verified].  If used in the video system, often
 complains of "Undefined order request."

388  phx15814 print command with -page_length control argument [verified].
 print with -pl mishandles backspaces on a terminal .


387  phx15461 commands [error].  A number of commands do not check
 that they are erroneously used as active functions.

385  phx15189 list command [verified] Linked TRs:  phx05578.
 Lists acl of an msf incorrectly.

384  phx14921 list command [verified].  If given a control arg of -^d
 will take a conversion error in formline_ or report error incorrectly.

383  phx14676 sss -- copy_cards [verified].  This module is showing
 its age and could be cleaned up quite a bit.

382  phx14627 peruse_crossref [investigating]. I tried to
 peruse_crossref backup_volume_record.incl.pl1.


381  phx14116
Problem description:  If you attempt to run "set_acl" on a specified
 incosistent multi-segment file (MSF) with the following commands like:

   !  cd foo_dir
   !  sbc foo_dir 1
   !  sa  foo_dir rw
      set_acl:  MSF is inconsistent


Proposed solution:

I.  Change the msf_manager_ to ignore the "Entry not found" error code
when it calls hcs_$list_acl to list acl of the component zero within an
imcompleted (inconsistent) MSF.  Since the inconsistent MSF does not
have any component within it so hcs returns "Entry not found" to
msf_manager_.

Currently, msf_manager_ will returns error_table_$inconsistent_msf to
the caller after hcs_ returns "Entry not found" to msf_manager_.


II.  Finally, Gary Dixon said that the solution only accepted according
to the existing implementation of the source program.  He wants me to
change the source to allow IACL-for_segment work on MSF directories.
So, for the case of an inconsistent MSF which does not have the zero
component then the set_acl will take the ACL of MSF since the ACL of
MSF is the same as the ACL of each component within the MSF .
Therefore, I will change status of this TR back to error and I will
work on this one again when my project leader says ok.


378  phx12360 list_mdir [error].  Tells you there are no master
 directories when you know there are.

369  phx09588 calc [error].  calc sets up a pi handler when invoked
 as an active function.

362  phx18653 ascii_to_bcd_ [verified].  (ascii_to_bcd_) subroutine
 missing.


357  phx05578
Problem description:  The list command chooses the wrong place to look
for the ACL of an MSF.  That is the list command uses the directory
access mode, rather than using the ACL of component zero of the MSF.
As a result, the list command reports a misleading mode for an MSF with
an inconsistent ACL.

For instance:  Assume that the correct mode was "r".  Then the list
              command reports it as "rw".


347  phx19100
The the list commands handling of the command "ls < **" looks the same
as "ls <<**".

This is not an error.

By specifying "ls <" the containing directory is set to "<<" so the the
directory directly above the current on can be listed.  By adding the
"**" entry specifier afterward, the entries ** are being requested for
the same directory of the previous selection.

345  phx11304
memo has strange bug-like incompatible changes.

343  phx20419
(archive) Appends suffix at first occurrence of a space in the archive
name.


341  phx20322
(exec_com) Doesn't close [...]'s properly.

340  phx20310 phx20323
(archive) Saying "ac r foo nonexistent_seg" produces no error message.

339  phx20303
Problem description:

In create_branch_info.incl.pl1, the version constants are not declared
"options (constant)", which causes them to be allocated in the static
option and be writable.

Proposed solution:  Declare the version 2 as options (constant).


329  phx19927
(exec_com) &on catches only the first occurrence of any condition.

327  phx12135
(list) "list -first 0" lists all entries.

325  phx19818
(archive) Erroneous "All components have been deleted" message when
extracting into nonexistent directory.

324  phx19725
(exec_com) Mis-read quoted string causes error about unbalanced
brackets.


315  phx19493
(convert_ec) Bugs in equal convention and error messages.

314  phx19408
(signal) Gets a garbage code value when given a non-system error table
code with -code.

313  none
(value_) Gets not_in_read_bracket when value seg contains no values.
See 05/29/85 mail from Noah Davids in misc_commands.sv.mbx.

309  phx19322
terminate_segno does not check that that the segment number is within
the range of non-hardcore segment numbers used in the process.


308  phx18884
(delete_dir) Given "dd x.*" where x.two has its safety switch on, you
get the starname query but not a separate query for x.two.

307  phx19128
(walk_subtree) Shouldn't walk through extended objects implemented as
directories.  Also add -inase to allow walk through.

305  phx19192
(exec_com) &goto from a nested handler does not properly exit.


297  none
(exec_com) Null &else clause makes parser forget it's in a nested &if.

294  phx18806
(validate_info_seg) Doesn't complain if multiple paragraphs between
double blank lines add up to more than 15 lines.

287  phx18651
(date_deleter) Should return et$nomatch if no entries match a starname.

279  phx18522
(exec_com) Traces &set lines with quotes incorrectly.  To be fixed in
&version 3.


277  phx18455
(get_quota) Given a starname, treats MSF's as directories.  Should
ignore them.

273  phx18264
(exec_com) Extra quotes on value of &r2.  This problem is solved, but
TR remains open pending fix of minor &trace problem that omits some
text.

270  phx18171
(date_deleter) Does not respect the safety switch.  Suggest
-query_protected (default), -delete_protected, and -skip_protected.

266  phx18142
(where) Takes fault referencing an initiated seg deleted by another
process.


248  phx17505
(exec_com) Gets end-of-data executing a certain teco program.  Have
asked for shorter test case.

247  phx17505
(exec_com) Problem feeding teco a control that causes it to get
end-of-data.

236  phx17200
(exec_com) Error expanding &if &[...] nested inside &if-&then-&do.

227  none
Commands that append default suffixes to pathname args (eg.  pl1, rdm)
often print the un-suffixed name for "Entry name too long."


210  phx16271 phx16419
When a user tries shortest_path on a component pathname, it returns the
input arguments with nothing done to them.  This is actually a problem in the
supporting subr.

206  phx05178
(where) "wh hphcs_" gets moderr but "wh hphcs_ -all" works fine.  Also,
moderr error msg when correct should print full pathname.

205  phx07909
(create_area) message describing location should not be printed by
default


204  phx11484
(print_bind_map) prints a line of octal zeroes for the pathname of a
nonexistent bindfile

203  phx03385 phx13618
(logout) should leave ips signals masked after detaching I/O switches

202  phx03255
(logout) absentee logout message is printed too early (before
signalling finish, etc.)

183  phx15989
(delete) With -query_all, should list which have safety switch on and
omit the subsequent individual queries.


169  phx15640
(switch_on) Won't set the damaged switch of a directory.  - Not an
error in the command since damaged_switch is meaningless for dirs.
Forwarded to Ranzenbach to fix set.pl1 not to set damaged switch on a
dir.

159  phx15386
(exec_com) "&trace &control on &command off" should work like you
expect.

127  phx14665
(rename) -name isn't calling expand_pathname_, also bug in error
message.


123  phx14570
Problem description:  The "value_list" command no longer accepts
 long starnames.  For example:

   ! vls -match this_sure_is_a_long_name.this_one_is_too.*.how_about_that -var
     value_list:  Invalid syntax in star name.

Proposed solution:  Long starnames will be accepted.

The "check_star_name_" system subroutine will be called to handle
starnames.  The control mask contains CHECK_STAR_IGNORE_LENGTH to
accept long starnames.


119  phx14527
(exec_com) <whitespace>&+ doesn't work.  Found a spurious char before
the &+.

114  phx14401
(qedx) Now emits extra blank line after "gp/.../" output.

95  phx02582
(status) Active function error for "Segment contents not in VTOC".
Should work at least when called with -dsw.

82  phx14082
(value_) value_set adds new value rather than replacing old one.


71  MIT
(where) Should say which bound component if >1 match for entry point
name.  (JSLove.PDO at MIT)

65  phx13256
(value_get) Locking problem, see TR text.

17  phx09397
(command_query_) Should ignore blank lines.
