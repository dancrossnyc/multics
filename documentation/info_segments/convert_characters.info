02/28/84	convert_characters, cvc

Syntax:  cvc key1 {oldpath} {newpath}
    or:  cvc key2 char_string


Function:	 allows the rapid editing of a segment in the case where a
one-for-one replacement of certain characters by certain other
characters must be done.  An example of its use is the conversion of
all uppercase characters in a segment to lowercase characters.
Keywords specify the conversion to take place.  For certain of the keys
convert_characters maintains a from_string and a to_string that define
the conversion to be made.  The converted segment is the same as the
original except that every instance of the i'th character of
from_string present in the original segment is replaced by the i'th
character of to_string.

The conversion for the key "sp" uses a from_string and to_string that
must have been previously set by use of the "from" and "to" keys.


Arguments:
key1
   are any of the keys listed below in "List of keywords."
oldpath
   is the pathname of a segment to be converted.  If omitted, the
   from_string and to_string related to key1 are printed.
newpath
   the pathname of the output segment.	If omitted, newpath is assumed
   to be the same as oldpath and the converted copy replaces the
   original.


key2
   is either "to" or "from" to set to_string or from_string for the
   "sp" key.
char_string
   is the string to be set as to_string or from_string.  If it contains
   blanks, it must be enclosed in quotes.


List of keywords:
lc
   converts alphabetic characters to lowercase.
uc
   converts alphabetic characters to uppercase.
mp
   converts from Multics PL/I format to IBM 360 PL/I.
bcd
   converts BCD special characters to ASCII/EBCDIC equivalents.


dart
   converts Multics special characters to corresponding Dartmouth
   special characters as follows:
      ^	  '
      -	  =
      >	  "
      +	  <
      =	  >
      '	  :
      {	  +
      "	  ?
      ?
sp
   uses conversion strings set earlier by the from and to keys: cvc
   from char_string1;cvc to char_string2.


Notes: The most recent setting of from_string and to_string in your
process is used for conversion with the "sp" key.  No conversion is
attempted for the "sp" key unless both the from_string and the
to_string are of the same nonzero length.  Any character not present
in the from_string is not changed.
