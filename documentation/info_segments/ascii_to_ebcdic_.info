02/13/84  ascii_to_ebcdic_

The ascii_to_ebcdic_ subroutine performs isomorphic (one-to-one
reversible) conversion from ASCII to EBCDIC.  The input data is a
string of valid ASCII characters.  A valid ASCII character is defined
as a 9-bit byte with an octal value in the range
0 <= octal_value <= 177.

Calling ascii_to_ebcdic_ is as efficient as using the PL/I translate
builtin, since conversion is performed by a single MVT instruction and
the procedure runs in the stack frame of its caller.


Entry points in ascii_to_ebcdic_:
   (List is generated by the help command)


:Entry: ascii_to_ebcdic_: 02/13/84  ascii_to_ebcdic_


Function: This entry point accepts an ASCII character string and
generates an EBCDIC character string of equal length.


Syntax:
declare ascii_to_ebcdic_ entry (char(*), char(*));
call ascii_to_ebcdic_ (ascii_in, ebcdic_out);


Arguments:
ascii_in
   is a string of ASCII characters to be converted.  (Input)
ebcdic_out
   is the EBCDIC equivalent of the input string.  (Output)


:Entry:  ae_table:  02/13/84 ascii_to_ebcdic_$ae_table


Function:  This entry point defines the 128-character translation table
used to perform conversion from ASCII to EBCDIC.  The mappings
implemented by the ascii_to_ebcdic_ and ebcdic_to_ascii_ subroutines
are isomorphic; i.e., every valid character has a unique mapping, and
mappings are reversible.  (See the ebcdic_to_ascii_ subroutine.)  The
result of an attempt to convert a character that is not in the ASCII
character set is undefined.


Syntax:
declare ascii_to_ebcdic_$ae_table char(128) external static;


Notes:  Refer to the Subroutines manual for the isomorphic
ascii/ebcdic conversion table.
