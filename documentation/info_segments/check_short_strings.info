06/18/80	check_short_strings

Syntax:  check_short_strings path


Function:	 checks a program for some particular cases of invalid PL/I that will
no longer happen to work in PL/I Release 26.


Arguments:
path
   is the pathname of a PL/I source segment; the pl1 suffix may be omitted.


Notes:  For information on how PL/I release 26 differs from previous releases,
please see pl1_code_changes.info.  Check_short_strings only checks for some
entry misdeclarations; it does not check for misdeclarations in based variables
or external static variables.

Check_short_strings will indicate if a program misdeclares an entry so there is
a mismatch in the alignment attribute for short bit string or short character
parameters or return values, and the invalid program would have happened to
work with PL/I release 25 and will not work in PL/I release 26.  Programs with
this type of misdeclaration declare an entry to have an unaligned short string
parameter or return value, the called program actually has the parameter or
return value declared aligned, and the argument passed to the entry is a member
of a structure and starts on the first bit of a word.  If the argument is a
level one variable, the values of any pad bits to the right of the value of the
variable are not used for data.  If the argument doesn't start on the first bit
of the word, the programs fail with PL/I release 25 and check_short_strings
will not indicate this.  Check_short_strings is designed to only catch invalid
programs that happened to work with release 25 and won't work with release 26.


Check_short_strings compiles the program in the process directory.  It then
checks all call statements and function references to see if a short string
argument is a member of a structure and starts on a word boundary.  If this is
the case, it initiates the called program using the search rules and checks the
called program's argument descriptors to see if the corresponding parameter or
return value is aligned.  If so, it prints a message.


Check_short_strings must be able to find PL/I release 26 via the search rules.
