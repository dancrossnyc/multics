10/17/84  signal

Syntax as a command:  signal CONDITION_NAME {-control_args}


Function:  signals Multics conditions, allowing you to specify some
information to be associated with the condition.  The result of a
condition signal depends on your program or the system program handling
the condition signal.


Arguments:
CONDITION_NAME
   is the name of the condition to signal.  It can't contain embedded
   white space because condition names are only significant to the
   first space character.  It can't be longer than 256 characters.


Control arguments:
-cant_restart
   sets the cant_restart flag for this signal.  The default handler
   establishes a new listener level after printing a message and
   refuses to accept the start command.  (See "Notes.")
-code ET_CODE_NAME
   associates the error table code name ET_CODE_NAME with this signal.
   It must be a virtual pointer to an error table acceptabe to cv_ptr_.
   If you omit the segment name portion of the virtual pointer,
   error_table_ is assumed.  The text message defined for this error
   table code is printed if an error message is printed; thus an
   ET_CODE_NAME of noentry is interpreted as error_table$noentry, not
   as a pointer to noentry|0.


-default_restart
   sets the default_restart flag for this signal.  The default handler
   prints a message and restarts execution.
-info_string INFO_MESSAGE
   associates the string INFO_MESSAGE with this signal.  If an error
   message is printed, this string is also printed.  Enclose it in
   quotes if it contains white space or special characters.  The string
   can't be longer than 256 characters.


-quiet_restart
   sets the quiet_restart flag for this signal.  The default handler
   restarts execution without printing a message.
-support_signal
   sets the support_signal flag for this signal.  This indicates that
   the error is being signaled on behalf of another procedure and
   should only be used when your handler is present on the stack that
   expects it.


Notes:  The descriptions that follow assume that the signal is handled
by the default unclaimed signal handler (default_error_handler_$wall).
Any messages described are sent over the error_output switch.

Don't use this command with any of the system conditions defined in the
Programmer's Reference Manual or with PL/I language conditions because
they require other associated information that you can't specify with
signal and unpredictable results may occur.

You can use the on command to handle signals produced with this
command.


The default handler deals with all condition signals that are otherwise
unhandled by your programs or system programs on the stack.  If you
select none of -cant_restart, -default_restart, or -quiet_restart, the
default handler prints the error message described below, and
establishes a new listener level.  If you type "start" at this point,
execution continues.  If the command is executed in an exec_com and you
type start, execution continues with the next command in the exec_com.

The default message printed for a condition signaled is of the form
   Error: CONDITION_NAME condition by signal$signal|octalnumber
   ERROR_TABLE_MESSAGE
   INFO_STRING_MESSAGE

If you give no -info_string, the INFO_STRING_MESSAGE line is omitted.
If you don't chose -code, the ERROR_TABLE_MESSAGE line is omitted.
