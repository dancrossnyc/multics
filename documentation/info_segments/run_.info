02/08/84  run_

The run_ subroutine manages the environment for a run unit and invokes
the main program of a run unit.  See the run command for an
explanation of run units.


Entry points in run_:
   (List is generated by the help command)


:Entry: run_: 02/08/84  run_

Function: This entry sets up the run unit environment, invokes the
main program, and restores the environment when the run ends.


Syntax:
declare run_ entry (entry, ptr, ptr, fixed bin(35));
call run_ (main_entry, arglist_ptr, run_cs_ptr, code);


Arguments:
main_entry
   is the entry point to be called as the main program of the run unit.
   (Input)
arglist_ptr
   is a pointer to the argument list for the main program.  (Input)
run_cs_ptr
   is a pointer to the structure which is declared in
   run_control_structure.incl.pl1.  (Input)
code
   is a standard status code.  (Output)


:Entry:  environment_info:  02/08/84 run_$environment_info


Function:  This entry enables the symbolic debugging tools to obtain
the saved stack header information used by a given stack frame.


Syntax:
declare run_$environment_info entry (ptr, ptr, fixed bin(35));
call run_$environment_info (stack_frame_ptr, info_ptr, code);


Arguments:
stack_frame_ptr
   is a pointer to an active stack frame on the current stack.  (Input)
info_ptr
   is a pointer to the env_ptrs structure declared in
   env_ptrs.incl.pl1.  (Input)
code
   is a standard system status code.  (Output)
