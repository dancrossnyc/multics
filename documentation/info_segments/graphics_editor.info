01/10/83  graphics_editor, ge

Syntax:  ge paths


Function:  Creates and modifies graphic structures interactively.


Arguments:
path
   is the pathname of a segment containing editor commands and assignments.
   The segment must have a suffix of "ge".


Editor requests:
Requests fall into two categories-- commands and assignments.
Newlines may terminate statements unless an assignment is pending,
there exist some unclosed sets of parentheses, or the character
preceding the newline is a comma.  A semicolon is ALWAYS required to
end a statement if it contains ANY assignments.  As a general rule--
when in doubt, type semicolon.

A complete specification of the assignment language and descriptions
of complex operations is too lengthy to place into an info file.  The
interested user may find this information in the MPM Graphics
Reference Manual.


List of positional elements:
setposition {x {y {z}}}, sps {x {y {z}}}
setpoint {x {y {z}}}, spt {x {y {z}}}
vector {x {y {z}}}, vec {x {y {z}}}
shift {x {y {z}}}, sft {x {y {z}}}
point {x {y {z}}}, pnt {x {y {z}}}
   where x, y, and z are numbers.  (DEFAULT-- 0.)


List of modal elements:
intensity i, int i
   where i is one of the identifiers off, on, or full; or a number 
   from 0 through 7.  (DEFAULT-- full.)
linetype l, lin l
   where l is one of the identifiers solid, dashed, dotted,
   dash_dotted, or long_dashed; or the numbers 0 through 4
   respectively.  (DEFAULT-- solid.)


blink b, blk b
   where b is one of the identifiers steady or blinking; or 0 or 1 
   respectively.  (DEFAULT-- steady.)
sensitivity s, sns s
   where s is one of the identifiers insensitive or sensitive; or 0
   or 1 respectively.  (DEFAULT-- insensitive.)
color {r {b {g}}}
   where r, b, and g are numbers in the range 0 through 63, 
   representing relative saturations of red, blue, and green 
   respectively.  (DEFAULT-- 63.)


List of mapping elements:
rotation {x {y {z}}}, rot {x {y {z}}}
   where x, y, and z are numbers representing degrees.  (DEFAULT-- 0) 
   scaling {x {y {z}}}, scl {x {y {z}}} where x, y, and z are numbers.
   (DEFAULT-- 1)


List of miscellaneous elements:
null
   is the graphic no-op and takes no arguments.
text str align
   where str is a string optionally enclosed in quotes and align is an
   alignment chosen from the following list: upper_left, ul;
   upper_center, uc; upper_right, ur; left, l; center, c; right, r;
   lower_left, ll; lower_center, lc; lower_right, lr; or the numbers 0
   through 9 respectively.
datablock str, data str
   where str is a string optionally enclosed in quotes.


List of system macros:
circle x y
   where x and y are numbers representing the relative location of 
   the center of the desired circle.  The current graphic position 
   defines the perimeter.
arc x y frac
   where x and y are as for circle; and frac is a number specifying 
   the desired fraction of the circle.
box x y
   where x and y are numbers specifying the dimensions of the box.


polygon x y n
   where x and y are as for circle; n specifies the number of sides.
ellipse x y eccen ang frac
   where x, y, and frac are as for arc; eccen is a number specifying
   the desired ratio of major to minor axis;  and ang is a number
   specifying the angle between the x axis and the major axis.
varying_text str align w h table, vtext str align w h table
   where str and align as as for text;  w and h are numbers specifying
   the (average) desired width and height of each character in the 
   string; and table is the path or name of a graphic character table.
						

List of editor commands:
display exprn, di exprn
   erases the screen and displays the object exprn.
list items {-control_args}, ls items {-control_args}
   lists symbols, macros, and other defined items.  Control arguments
   allowed are--
   -commands, -com
      list editor commands.
   -system, -sys
      list system symbols.
   -macros, -mc
      list user-defined macros (DEFAULT).
   -symbols, -sym
      list user-defined symbols (DEFAULT).
   -all, -a
      list all of the above.


show exprn
   prints an abbreviated description of exprn.
replay exprn
   prints a description of exprn in assignment notation, suitable for 
   later re-input to the editor.
macro show name_1 ... name_N,
macro replay name_1 ... name_N
   same as show and replay commands, for macros.
macro macroname arg_1 ... arg_n = exprn
   defines a macro named macroname with dummy arguments arg_1 ... arg_N
   as the editor request exprn.
use path
   loads the contents of the PGS named path.
save path
   saves all known graphic items into the PGS named path.


get {-control_args} (path) name_1 ... name_N,
put {-control_args} (path) name_1 ... name_N
   transfers the specified graphic items between the editor and the
   PGS named path.  Control arguments handle the action taken on
   symbol name duplication.  Parentheses around path are required.
   -safe
      halt the transfer and print error message (DEFAULT)
   -force
      overwrite the old contents.
   -replace_only, -rpo
      force the named symbol.  On duplication of inferior symbols, use 
      existing copy.  Create null symbols for other inferior symbols.
   -replace_all, -rpa
      like -rpo, except contents of inferior symbols which do not already 
      exist are transferred.


execute command_line, exec command_line
   passes command_line to the command processor.
quit, q
   is used to exit from the editor.


restart
   reinitializes the editor.
help, ?
   directs the user to relevant documentation.
read path
   reads and interprets the editor requests contained in the segment 
   named path.  The segment must have the suffix "ge".
vtext_type table, vtype table
   sets the default graphic character table for varying_text elements.
input (devicename) sym_1 ... sym_N
   requests "what" graphic input from device devicename and defines 
   sym_1 ... sym_N to be the result.  Valid device names are-- any,
   joystick, keyboard, lightpen, mouse, pen_tablet, terminal_program,
   and trackball.
.
   identifies the version of the invocation of the graphics_editor in use.


increment <count> <delay> <expern>, inc <count> <delay> <expern>
   increments the parameter values of the single positional, modal,
   or mapping terminal graphic element specified by <expern> <count
   times with a delay of <delay> seconds between increments.
synchronize, synch
   causes the graphics system to await the completion of all 
   previously received increment commands.
