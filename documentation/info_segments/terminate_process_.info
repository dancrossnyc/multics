03/31/83  terminate_process_


Entry points in terminate_process_:
   (List is generated by the help command)


:Entry: terminate_process_: 02/15/83  terminate_process_


Function: This procedure causes the process in which it is called to
be terminated.  The arguments determine the exact nature of the
termination.


Syntax:
declare terminate_process_ entry (char(*), ptr);
call terminate_process_ (action, info_ptr);


Arguments:
action
   specifies one of four general actions to be taken upon process
   termination.  (Input) The permissible values are logout, new_proc,
   fatal_error, or init_error (see "Notes").
info_ptr
   points to more specific information about the action to be taken at
   termination.  (Input) The structure pointed to by info_ptr depends
   upon action (see "Notes").


Notes:
If action is logout then the user's process is logged out.  The
info_ptr points to:
   dcl 1 logout_info    aligned,
         2 version      fixed bin,
         2 hold         bit(1) unaligned,
         2 brief        bit(1) unaligned,
         2 pad          bit(34) unaligned,


   Structure elements:
   version
      must be 0.
   hold
      must be "1"b if the terminal associated with this process is not
      to be hung up, so that another user may log in.
   brief
      must be "1"b if the logout message is to be suppressed.
   pad
      must be "0"b.


If action is new_proc, then the user's current process is logged out
and a new process is created.  The info_ptr points to:
   dcl 1 new_proc_info              aligned,
         2 version                  fixed bin,
         2 authorization_option     bit(1) unaligned,
         2 pad                      bit(35) unaligned,
         2 new_authorization        bit(72) aligned;


   Structure elements:
   version
      must be 1.
   authorization_option
      must be 1 if new_authorization is to be used.
   pad
      must be 0.
   new_authorization
      is the authorization of the new process.


If action is fatal_error, then the user's current process is terminated
due to an unrecoverable error.  A fatal error message is printed on the
terminal and a new process is created.  The info_ptr points to:
   dcl 1 fatal_error_info     aligned,
         2 version            fixed bin,
         2 status_code        fixed bin(35);


   Structure elements:
   version
      must be 0.
   status_code
      is a standard system status code (in error_table_) indicating the
      nature of the fatal error, the corresponding error message will
      be printed on the user's console.

If action is init_error, then the user's process is logged out and a
message indicating that his process could not be initialized is
printed.  The info_ptr points to:

   dcl 1 init_error_info     aligned,
         2 version           fixed bin,
         2 status_code       fixed bin(35);


   Structure elements:
   version
      must be 0.
   status_code
      is a standard Multics code indicating the nature of the error.
