06/25/87  login, l

Syntax:  l Person_id{.Project_id} {-control_args}


Function: gives you access to the system.  It is a request to the
answering service to start your identification procedure, and then
either create a process for you or connect the terminal to your
disconnected process.  The command line can be up to 300 characters
long.


Arguments:
Person_id
   is your registered personal identifier, which can be replaced by a
   registered "login alias" if you have one.  This argument must be
   supplied.
Project_id
   is the identification of your project.  If this argument is not
   supplied, the default project associated with the Person_id is used.
   (See -change_default_project.)


Control arguments (general):
-brief, -bf
   suppresses messages associated with a successful login except the
   ones indicating that you have incorrectly specified your password
   and the ones indicating all your login attempts with the same
   Person_id.  If the standard process overseer is being used, the
   message of the day is not printed.
-change_default_auth, -cda
   changes your registered default login authorization to the one
   specified by -authorization.  If you give a valid authorization, the
   default authorization is changed for subsequent logins and the
   message "default authorization changed" is printed.  If
   -change_default_auth is given without -authorization, an error
   message is printed.


-change_default_project, -cdp
   changes your default project to the Project_id specified in this
   login request line.  The default Project_id is changed for
   subsequent logins, and the message "default project changed" is
   printed at your terminal.  If -change_default_project is specified
   without a Project_id, an error message is printed.
-change_password, -cpw
   changes your password to a newly given one.  The login request asks
   for the old password before it requests the new one, twice, to
   verify the spelling.  If it is not typed the same both times, the
   login and the password change are refused.  If the old password is
   correct, the new one replaces the old for subsequent logins and the
   message "password changed" is printed at your terminal.  Do not type
   the new password as part of the control argument.  (See "Notes on
   passwords" below.)


-generate_password, -gpw
   changes your password to a new one, generated for you by the system.
   The login request asks for the old password first; then, a new
   password is generated and typed on your terminal.  You are asked to
   retype the new password, to verify having seen it.  If you type it
   correctly, it replaces the old for subsequent logins and the message
   "password changed" is printed.  If you mistype it, the login and
   password change are refused.
-long, -lg
   reverses the effect of -brief, or the brief attribute in the project
   definition table (see the MAM Project, AK51).


-modes STR, -mode STR, -md STR
   sets the I/O modes associated with your terminal to STR, where STR
   consists of modes acceptable to the tty_ I/O module (see the set_tty
   command).  STR is usually a list of modes separated by commas; it
   must not contain blanks.
-no_print_off, -npf
   tells the system that the terminal cannot stop printing while a
   password is being entered.  The system prints a mask field to
   overwrite the area in which the password will be typed.
-no_warning, -nw
   suppresses even urgent system warning messages and emergency
   messages from the operator, both at login and during your session.
   Give this argument when using a remote computer to simulate a
   terminal or when typing out long memoranda, when the process output
   should not be interrupted by even serious messages.


-print_off, -pf
   tells the system that the terminal can stop printing while a
   password is being entered.  No password mask is printed.
-terminal_id STR, -tid STR
   sets your terminal identification to STR, where STR may be
   from 1 to 4 characters long.  (By default, the terminal ID is
   obtained from the terminal answerback string.)
-terminal_type STR, -ttp STR
   sets your terminal type to STR, where STR is any terminal type name
   defined in the standard terminal type table.  This control argument
   overrides the default terminal type.
-warning
   reverses the effect of -no_warning, or the no_warning attribute in
   the project definition table (see the MAM Project, AK51).


Control arguments (process creation):
-arguments STR, -ag STR
   supplies arguments to the process; STR can be one or more arguments.
   If you use -arguments, put it last because everything following it
   on the command line is taken as arguments to the process.  The
   process can determine the number and value of each argument with the
   login_args active function.


-authorization STR, -auth STR
   sets the authorization of the process to that specified by STR; STR
   is a character string composed of level and category names for the
   desired authorization, separated by commas.  STR cannot contain any
   embedded blank or tab characters.  (The short names for each level
   and category always contain no blanks or tabs, and can be used
   whenever the corresponding long names contain blanks or tabs.)  STR
   must represent an authorization that is less than or equal to the
   maximum authorization of Person_id on the Project_id.  If
   -authorization is omitted, your registered default login
   authorization is used.  (See authorization.gi.)


-force
   logs you in if at all possible, provided you have the guaranteed
   login attribute.  Only system users who perform emergency repair
   functions have the necessary attribute.
-home_dir path, -hd path
   sets your home directory to the path specified if your project
   administrator allows it.
-no_save_on_disconnect, -nosave
   logs your process out instead of saving it if it is disconnected
   from its login terminal.  This control argument is used to override
   a default of -save_on_disconnect if that default has been set by
   your project administrator.
-no_preempt, -np
   does not log you in if you might preempt somebody in this user's
   load control group.


-no_start_up, -ns
   instructs the standard process overseer not to execute your
   start_up.ec segment if the project administrator allows it.
-outer_module path, -om path
   attaches your terminal via the outer module named path rather than
   your registered outer module if your project administrator allows
   it.
-process_overseer path, -po path
   sets your process overseer to the procedure given by path if your
   project administrator allows it.  If path ends in the characters
   ",direct", the specified procedure is called directly during process
   initialization rather than by the standard system-provided
   procedure.  This means that the program used by path must perform
   the tasks that would have been performed by the standard procedure.


-ring N, -rg N
   sets your initial ring to N if this ring number is greater than or
   equal to your registered initial ring and less than your registered
   maximum ring.
-save_on_disconnect, -save
   saves your process if it is disconnected from its login terminal
   because of a communications line hangup or FNP crash.  Your project
   administrator gives permission to use the process-saving facility
   and to enable it by default.  (See -no_save_on_disconnect and the
   save_on_disconnect and no_save_on_disconnect commands.)
-subsystem path, -ss path
   creates your process using the prelinked subsystem in the directory
   specified by path if your project administrator allows it.  To
   override a default subsystem specified by the project administrator,
   type -ss "".


Control arguments (operator login):
-operator, -op
   logs in the user as a system operator, connecting the terminal to
   the message coordinator.  The user must have the operator attribute
   to use this control argument.
-virtual_channel STR, -vchn STR
   connects the terminal to the message coordinator virtual channel
   STR, which has been preaccepted by the operator using the
   accept_vchn operator command.


Control arguments (disconnected processes):
-connect {N}
   connects the terminal to your disconnected process.  If more than
   one such process exists, the process number N must be indicated.
-create
   creates a new process without destroying any disconnected ones.
   This is permitted only if you are allowed to have multiple
   interactive processes.
-destroy {N} {-control_args}
   destroys your disconnected process.  If more than one such process
   exists, the process number N must be specified.
-list
   lists your disconnected process, its number, the time of the
   original login, and the ID of the channel and terminal that were
   last connected to the process.


-new_proc {N} {-control_arg}
   destroys your disconnected process and creates a new one.  If more
   than one such process exists, the process number N must be given.


List of control arguments for disconnected processes:
-hold, -hd
   prevents the breaking of the connection between the terminal and the
   answering service.  You can use it only with -destroy. (Default)
-immediate, -im
   bypasses termination of the existing process by the trm_ IPS signal
   (which causes running of finish and epilogue handlers in the
   existing process) and instead tells the hardcore to destroy the
   existing process immediately.  You can use it only with -destroy and
   -new_proc.
-no_hold, -nhd
   drops the connection.  You can use it only with -destroy.


Notes: Unless you already have one or more processes, login creates a
process for you.  The load control mechanism is consulted to determine
if the creation of your process overloads either the system or your
load control group.

If the mechanism allows it, a process is created for you and the
terminal is connected to it (i.e., the terminal is placed under that
process's control).  (See "Control arguments for process
creation" above.)


You might have a disconnected process because of a phone line hangup,
network failure, or an FNP crash.  Then, you can choose among the
following alternatives: connecting the terminal to the process;
destroying the disconnected process, with or without creating a new
one; or logging out without affecting the disconnected process (see
"Control arguments for disconnected processes" above and "Notes on
disconnected processes" below).

Several parameters of your process, as noted above, can be controlled
by your project administrator; for example, allowing you to override
attributes by specifying control arguments in the login line.


If the project administrator does not allow you to use -subsystem,
-outer_module, -home_dir, -process_overseer, -save_on_disconnect, or
-ring or does allow you to give one or more of these control arguments
and you specify them incorrectly, a message is printed and the login is
refused.


Notes on passwords: The login request asks you for a password and
ensures that the password does not appear on your terminal.  The
password is a string of one to eight characters, which can be any
character from the ASCII character set (including the backspace) except
space and semicolon.  The password used for interactive logins cannot
be "quit", "help", "HELP", or "?"  because these have special meaning
to the password processor.  Typing "quit" terminates the login attempt;
"help", "HELP", or "?"  produces an explanatory message and repeats the
request for the password.


Notes on disconnected processes:  If your project administrator allows
it, your process can be preserved when it becomes disconnected from its
terminal.  You can call back any time before the installation-defined
maximum inactive time and ask to be reconnected.  This feature is
controlled by -save and -nosave; your project administrator sets the
default.


If your project administrator allows you to have several interactive
processes simultaneously, you can have more than one disconnected
process.  Multiple disconnected processes are numbered consecutively
starting with 1, in the order of their login times.  Use these process
numbers as arguments when referring to one of a set of multiple
disconnected processes.  The number and login time of each is printed
by -list.  You can, however, anticipate the number and use it with a
control argument.  The time listed and sorted on is the time of the
original login from which the process is descended; this time is not
affected by new_proc or reconnection.
