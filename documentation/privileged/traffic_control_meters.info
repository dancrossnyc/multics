02/28/85  traffic_control_meters, tcm

Syntax as a command:  tcm {-control_args}


Function:  prints out the values of various traffic control meters.


Control arguments:
-counters, -ct
   prints out the number and frequency of certain paths through the
   traffic controller.
-gen
   prints out general traffic control information.
-queue, -qu
   prints out certain resource usage as a function of depth in the
   eligible queue.


-report_reset, -rr
   generates a full report and then performs the reset operation.
-reset, -rs
   resets the metering interval for the invoking process so that the
   interval begins at the last call with -reset specified.  If -reset
   has never been given in a process, it is equivalent to having been
   specified at system initialization time.


Access required:  This command requires access to phcs_ or
metering_gate_.


Notes:  If the traffic_control_meters command is given with no control
arguments, it prints a full report.

The following meters reflect activity of the traffic controller, and
some constants used therein.  They are printed if the -gen control
argument is specified.
Ave queue length
   is the average number of processes in the eligible and priority
   queues.  This is the average number of ready, waiting, or running
   processes.


Ave eligible
   is a recent average of the number of eligible processes.
Response time
   is the average time between a process' receiving an interactive
   wakeup and the awarding of eligibility to the process.  The response
   time seen by the user is larger than this meter.


The following meters pertain to the number and frequency of certain
paths through the traffic controller.  They are printed if the -ct
control argument is specified.
Interactions
   is a count of, and the average time between, terminal interactions.
Loadings
   is a count of, the average time between, and the number per
   interaction of process loadings.
Blocks
   is a count of, and the average time between, calls to "block" to
   block some process.
Wakeups
   is a count of, and the average time between, wakeup signals being
   sent.


Schedulings
   is a count of, the average time between, and the number per
   interaction of trips through the scheduler/rescheduler function that
   caused priorities to be changed.
Lost priority
   is the number of times the alarm clock went off indicating a
   priority process that had been running lost its eligibility because
   it had used up its eligible time; i.e., its eligible time exceeded
   the CPU quantum that the process remains in the queue.  The process
   reenters the traffic controller to be rescheduled.


Priority boosts
   is the number of times the alarm clock went off indicating a
   priority scheduling process on the ready list should be granted high
   priority; i.e., have its waiting time before rescheduling set to 0.
   The process is then resorted into the ready list with its new,
   higher priority.
Wait Page
   is a count of, the average time between, and the number per
   interaction of calls to force some process to a wait state in order
   to wait for page transfer.
Wait PTL
   is a count of, the average time between, and the number per
   interaction of calls to force some process to a wait state in order
   to wait for the page table lock.


Wait Other
   is a count of, the average time between, and the number per
   interaction of calls to force some process to a wait state in order
   to wait for events other than page control events.
Total Waits
   is a count of, the average time between, and the number per
   interaction of calls to force some process to a wait state.
Notify Page
   is the number of, and average time between, calls to notify
   processes waiting for page transfer events.
Notify PTL
   is the number of, and average time between, calls to notify
   processes waiting for page table unlockings.


Notify Other
   is the number of, and average time between, calls to notify
   processes waiting for all other events.
Total Notifies
   is the number of, and the average time between, notify calls (i.e.,
   returning a waiting process to the ready state).
Get Processor
   is the number of, and average time between, calls to get_processor.
   Get_processor is called at notify time to find a CPU on which to run
   the notified process.  An idle process or lower priority running
   process is preempted.
Pre-empts
   is a count of, average time between, and the number per interaction
   of process preemptions and timer runout faults.


Getwork
   is the number of, and average time between, calls to getwork.
   Getwork is the dispatcher portion of the scheduler; it finds a
   process to run on the executing CPU.
Retry getwork
   is the number of, and average time between, retries of the getwork
   function.
Extra notifies
   is the number of, and average time between, notify calls that found
   no process waiting on the notified event.


Last EN event
   is the last notified event for which no process was waiting.
Notify timeout
   is the number of times a notify was not received by a waiting
   process within notify_timeout_interval (a tuning parameter).  This
   is printed only if the count is nonzero.
Last NTO event
   is the last event on which a notify timeout occurred.


The following meters pertain to the eligible queue.  They are printed
if the -qu control argument is specified.
Depth
   is the depth of the process within the eligible queue.  A process
   deep in the eligible queue is run only if processes above it cannot
   run.
%PF
   is the percentage of page faults that occurred from processes at
   this depth.


TBPF
   is the average time between page faults at this depth.
%GTW
   is the percentage of getwork calls being made when a member of this
   priority relinquishes control.
TBS
   is the average time between getwork calls at this priority level.
%CPU
   is the percentage of CPU time consumed by members of this priority.
