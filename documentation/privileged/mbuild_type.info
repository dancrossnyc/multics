:Info: mbuild_type: mbt:  2019-08-09  mbuild_type, mbt

Syntax as a command:
   mbt OPERATION {NAME} {-control_args}


Syntax as an active function:
  [mbt OPERATION NAME {-control_args}]


Function: displays information about: segment types installed in the
Multics Libraries; and build paradigms, the procedures and policies for
building and installing a given type of segment.


Arguments:
OPERATION
   selects the operation to be performed.  See "List of operations"
   below.
NAME
   selects information to be displayed.


List of operations:
   For details about each operation, type: help mbt.OPERATION
paradigm, pdm
   displays information about a build paradigm; or summarizes known
   paradigms used in the Multics Libraries.
seg_type, seg
   summarizes known segment types found in the Multics Libraries; or
   displays information about building and installing a given segment.


Control arguments:
-control_args
   control function performed by each OPERATION.  For details, type:
     help mbt.OPERATION


:Info: mbt.paradigm: mbt.pdm:  2019-08-09  mbt paradigm operation

Syntax as a command:  mbt pdm {PARADIGM_NAME} {-control_args}


Syntax as an active function:
  [mbt pdm PARADIGM_NAME {-control_args}]


Function: displays information about build paradigms, the procedures
and policies for building a given type of segment, and installing it
into the Multics Libraries.


If invoked without args, displays a 3-line description of the known
build paradigms including: name, purpose and example segments using
that paradigm.

If invoked with a paradigm_name and no control_args, displays a longer
description of that paradigm.

As an active function, specific information about a given paradigm is
returned.


Arguments:
paradigm, pdm
   the operation being performed.
PARADIGM_NAME
   names a paradigm to be displayed.  This is optional when invoked as
   a command, but required when used as an active function.


Control arguments:
-all, -a
   displays all information for the paradigm.
-name, -nm
   displays the paradigm name.
-purpose
   displays the purpose of the paradigm.
-example
   displays an example segment that is built or installed using the
   paradigm.
-steps
   displays steps performed as part of this build paradigm.


:Info: mbt.seg_type: mbt.seg:  2019-06-10  mbt seg_type operation

Syntax as a command:  mbt seg {SEG_NAME} {-control_args}
		  mbt seg -for_paradigm paradigm_name


Syntax as an active function:  [mbt seg SEG_NAME {-control_args}]


Function:  displays information about the different types of segments
installed in the Multics Libraries.

If invoked without args, summarizes known segment types installed in
the Multics Libraries.  This includes a starname selecting a group of
segments, and characteristics of segments in the group.

If invoked with a seg_name and no control_args, displays full
information about building and/or installing that segment.

As an active function, returns selected information about build a given
segment.


Arguments:
seg_type, seg
   the operation being performed.
SEG_NAME
   names a segment whose build/install information is displayed.  This
   argument is optional when invoked as a command, but required when
   used as an active function.


Control arguments:
-for_paradigm paradigm_name, -fpdm paradigm_name
   selects all segment types built using the given paradigm.  This
   control argument may not be used as an active function.
-all, -a
   displays all information for the build type.
-name, -nm
   displays a starname that matches segments in the build type.
-description, -desc
   displays a title for segments matching the starname.
-type, -tp
   displays the <seg-type> value given by mbuild in its
   Seg(<seg-type) structures for segments having the build type..
-library, -lb
   displays library in which this type of file is installed.


-compiler
   displays compiler command name used in building the segment.
-option, -op
   displays default compiler option(s) used in building the segment.
-isuffix, -isfx
   displays suffix of any intermediate files generated by the compiler.
   For example, the reductions compiler: generates a .pl1 file; invokes
   pl1 to compile this file; and leaves the .pl1 file in working
   directory as a debugging aid.
-osuffix, -osfx
   displays suffix (if any) of object segment generated by the
   compiler.


-paradigm, -pdm
   displays name of the paradigm used in building the segment.
-steps
   displays steps performed as part of this build paradigm.


:hcom:
/****^  HISTORY COMMENTS:
  1) change(2019-08-17,GDixon), approve(2019-10-24,MCR10069),
     audit(2020-01-20,Swenson), install(2020-01-20,MR12.6g-0035):
     Initial documentation for mbuild_type command.  For details, see:
       MTB-1003  mbuild Subsystem
  2) change(2020-05-28,GDixon), approve(2021-02-22,MCR10088),
     audit(2021-05-27,Swenson), install(2021-05-27,MR12.6g-0056):
     Change formatting to use new Operations Format style supported by the
     verify_info command.
                                                   END HISTORY COMMENTS */
